{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { ACubismMotion } from './acubismmotion';\n/**\n * CubismMotionQueueManagerで再生している各モーションの管理クラス。\n */\nexport class CubismMotionQueueEntry {\n  /**\n   * コンストラクタ\n   */\n  constructor() {\n    this._autoDelete = void 0;\n    // 自動削除\n    this._motion = void 0;\n    // モーション\n    this._available = void 0;\n    // 有効化フラグ\n    this._finished = void 0;\n    // 終了フラグ\n    this._started = void 0;\n    // 開始フラグ\n    this._startTimeSeconds = void 0;\n    // モーション再生開始時刻[秒]\n    this._fadeInStartTimeSeconds = void 0;\n    // フェードイン開始時刻（ループの時は初回のみ）[秒]\n    this._endTimeSeconds = void 0;\n    // 終了予定時刻[秒]\n    this._stateTimeSeconds = void 0;\n    // 時刻の状態[秒]\n    this._stateWeight = void 0;\n    // 重みの状態\n    this._lastEventCheckSeconds = void 0;\n    // 最終のMotion側のチェックした時間\n    this._fadeOutSeconds = void 0;\n    // フェードアウト時間[秒]\n    this._isTriggeredFadeOut = void 0;\n    // フェードアウト開始フラグ\n    this._motionQueueEntryHandle = void 0;\n    this._autoDelete = false;\n    this._motion = null;\n    this._available = true;\n    this._finished = false;\n    this._started = false;\n    this._startTimeSeconds = -1.0;\n    this._fadeInStartTimeSeconds = 0.0;\n    this._endTimeSeconds = -1.0;\n    this._stateTimeSeconds = 0.0;\n    this._stateWeight = 0.0;\n    this._lastEventCheckSeconds = 0.0;\n    this._motionQueueEntryHandle = this;\n    this._fadeOutSeconds = 0.0;\n    this._isTriggeredFadeOut = false;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  release() {\n    if (this._autoDelete && this._motion) {\n      ACubismMotion.delete(this._motion); //\n    }\n  }\n\n  /**\n   * フェードアウト時間と開始判定の設定\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n   */\n  setFadeOut(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n  }\n\n  /**\n   * フェードアウトの開始\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n   * @param userTimeSeconds デルタ時間の積算値[秒]\n   */\n  startFadeOut(fadeOutSeconds, userTimeSeconds) {\n    const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n    if (this._endTimeSeconds < 0.0 || newEndTimeSeconds < this._endTimeSeconds) {\n      this._endTimeSeconds = newEndTimeSeconds;\n    }\n  }\n\n  /**\n   * モーションの終了の確認\n   *\n   * @return true モーションが終了した\n   * @return false 終了していない\n   */\n  isFinished() {\n    return this._finished;\n  }\n\n  /**\n   * モーションの開始の確認\n   * @return true モーションが開始した\n   * @return false 開始していない\n   */\n  isStarted() {\n    return this._started;\n  }\n\n  /**\n   * モーションの開始時刻の取得\n   * @return モーションの開始時刻[秒]\n   */\n  getStartTime() {\n    return this._startTimeSeconds;\n  }\n\n  /**\n   * フェードインの開始時刻の取得\n   * @return フェードインの開始時刻[秒]\n   */\n  getFadeInStartTime() {\n    return this._fadeInStartTimeSeconds;\n  }\n\n  /**\n   * フェードインの終了時刻の取得\n   * @return フェードインの終了時刻の取得\n   */\n  getEndTime() {\n    return this._endTimeSeconds;\n  }\n\n  /**\n   * モーションの開始時刻の設定\n   * @param startTime モーションの開始時刻\n   */\n  setStartTime(startTime) {\n    this._startTimeSeconds = startTime;\n  }\n\n  /**\n   * フェードインの開始時刻の設定\n   * @param startTime フェードインの開始時刻[秒]\n   */\n  setFadeInStartTime(startTime) {\n    this._fadeInStartTimeSeconds = startTime;\n  }\n\n  /**\n   * フェードインの終了時刻の設定\n   * @param endTime フェードインの終了時刻[秒]\n   */\n  setEndTime(endTime) {\n    this._endTimeSeconds = endTime;\n  }\n\n  /**\n   * モーションの終了の設定\n   * @param f trueならモーションの終了\n   */\n  setIsFinished(f) {\n    this._finished = f;\n  }\n\n  /**\n   * モーション開始の設定\n   * @param f trueならモーションの開始\n   */\n  setIsStarted(f) {\n    this._started = f;\n  }\n\n  /**\n   * モーションの有効性の確認\n   * @return true モーションは有効\n   * @return false モーションは無効\n   */\n  isAvailable() {\n    return this._available;\n  }\n\n  /**\n   * モーションの有効性の設定\n   * @param v trueならモーションは有効\n   */\n  setIsAvailable(v) {\n    this._available = v;\n  }\n\n  /**\n   * モーションの状態の設定\n   * @param timeSeconds 現在時刻[秒]\n   * @param weight モーション尾重み\n   */\n  setState(timeSeconds, weight) {\n    this._stateTimeSeconds = timeSeconds;\n    this._stateWeight = weight;\n  }\n\n  /**\n   * モーションの現在時刻の取得\n   * @return モーションの現在時刻[秒]\n   */\n  getStateTime() {\n    return this._stateTimeSeconds;\n  }\n\n  /**\n   * モーションの重みの取得\n   * @return モーションの重み\n   */\n  getStateWeight() {\n    return this._stateWeight;\n  }\n\n  /**\n   * 最後にイベントの発火をチェックした時間を取得\n   *\n   * @return 最後にイベントの発火をチェックした時間[秒]\n   */\n  getLastCheckEventSeconds() {\n    return this._lastEventCheckSeconds;\n  }\n\n  /**\n   * 最後にイベントをチェックした時間を設定\n   * @param checkSeconds 最後にイベントをチェックした時間[秒]\n   */\n  setLastCheckEventSeconds(checkSeconds) {\n    this._lastEventCheckSeconds = checkSeconds;\n  }\n\n  /**\n   * フェードアウト開始判定の取得\n   * @return フェードアウト開始するかどうか\n   */\n  isTriggeredFadeOut() {\n    return this._isTriggeredFadeOut;\n  }\n\n  /**\n   * フェードアウト時間の取得\n   * @return フェードアウト時間[秒]\n   */\n  getFadeOutSeconds() {\n    return this._fadeOutSeconds;\n  }\n\n  // インスタンスごとに一意の値を持つ識別番号\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismmotionqueueentry';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  const CubismMotionQueueEntry = _Live2DCubismFramework.CubismMotionQueueEntry = $.CubismMotionQueueEntry;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["ACubismMotion","CubismMotionQueueEntry","constructor","_autoDelete","_motion","_available","_finished","_started","_startTimeSeconds","_fadeInStartTimeSeconds","_endTimeSeconds","_stateTimeSeconds","_stateWeight","_lastEventCheckSeconds","_fadeOutSeconds","_isTriggeredFadeOut","_motionQueueEntryHandle","release","delete","setFadeOut","fadeOutSeconds","startFadeOut","userTimeSeconds","newEndTimeSeconds","isFinished","isStarted","getStartTime","getFadeInStartTime","getEndTime","setStartTime","startTime","setFadeInStartTime","setEndTime","endTime","setIsFinished","f","setIsStarted","isAvailable","setIsAvailable","v","setState","timeSeconds","weight","getStateTime","getStateWeight","getLastCheckEventSeconds","setLastCheckEventSeconds","checkSeconds","isTriggeredFadeOut","getFadeOutSeconds","$","Live2DCubismFramework","_Live2DCubismFramework"],"sources":["D:/Personal/PythonStuff/RR/RRWebsiteRenewed/my-app/src/Framework/src/motion/cubismmotionqueueentry.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { ACubismMotion } from './acubismmotion';\nimport { CubismMotionQueueEntryHandle } from './cubismmotionqueuemanager';\n\n/**\n * CubismMotionQueueManagerで再生している各モーションの管理クラス。\n */\nexport class CubismMotionQueueEntry {\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._autoDelete = false;\n    this._motion = null;\n    this._available = true;\n    this._finished = false;\n    this._started = false;\n    this._startTimeSeconds = -1.0;\n    this._fadeInStartTimeSeconds = 0.0;\n    this._endTimeSeconds = -1.0;\n    this._stateTimeSeconds = 0.0;\n    this._stateWeight = 0.0;\n    this._lastEventCheckSeconds = 0.0;\n    this._motionQueueEntryHandle = this;\n    this._fadeOutSeconds = 0.0;\n    this._isTriggeredFadeOut = false;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    if (this._autoDelete && this._motion) {\n      ACubismMotion.delete(this._motion); //\n    }\n  }\n\n  /**\n   * フェードアウト時間と開始判定の設定\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n   */\n  public setFadeOut(fadeOutSeconds: number): void {\n    this._fadeOutSeconds = fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n  }\n\n  /**\n   * フェードアウトの開始\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\n   * @param userTimeSeconds デルタ時間の積算値[秒]\n   */\n  public startFadeOut(fadeOutSeconds: number, userTimeSeconds: number): void {\n    const newEndTimeSeconds: number = userTimeSeconds + fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n\n    if (\n      this._endTimeSeconds < 0.0 ||\n      newEndTimeSeconds < this._endTimeSeconds\n    ) {\n      this._endTimeSeconds = newEndTimeSeconds;\n    }\n  }\n\n  /**\n   * モーションの終了の確認\n   *\n   * @return true モーションが終了した\n   * @return false 終了していない\n   */\n  public isFinished(): boolean {\n    return this._finished;\n  }\n\n  /**\n   * モーションの開始の確認\n   * @return true モーションが開始した\n   * @return false 開始していない\n   */\n  public isStarted(): boolean {\n    return this._started;\n  }\n\n  /**\n   * モーションの開始時刻の取得\n   * @return モーションの開始時刻[秒]\n   */\n  public getStartTime(): number {\n    return this._startTimeSeconds;\n  }\n\n  /**\n   * フェードインの開始時刻の取得\n   * @return フェードインの開始時刻[秒]\n   */\n  public getFadeInStartTime(): number {\n    return this._fadeInStartTimeSeconds;\n  }\n\n  /**\n   * フェードインの終了時刻の取得\n   * @return フェードインの終了時刻の取得\n   */\n  public getEndTime(): number {\n    return this._endTimeSeconds;\n  }\n\n  /**\n   * モーションの開始時刻の設定\n   * @param startTime モーションの開始時刻\n   */\n  public setStartTime(startTime: number): void {\n    this._startTimeSeconds = startTime;\n  }\n\n  /**\n   * フェードインの開始時刻の設定\n   * @param startTime フェードインの開始時刻[秒]\n   */\n  public setFadeInStartTime(startTime: number): void {\n    this._fadeInStartTimeSeconds = startTime;\n  }\n\n  /**\n   * フェードインの終了時刻の設定\n   * @param endTime フェードインの終了時刻[秒]\n   */\n  public setEndTime(endTime: number): void {\n    this._endTimeSeconds = endTime;\n  }\n\n  /**\n   * モーションの終了の設定\n   * @param f trueならモーションの終了\n   */\n  public setIsFinished(f: boolean): void {\n    this._finished = f;\n  }\n\n  /**\n   * モーション開始の設定\n   * @param f trueならモーションの開始\n   */\n  public setIsStarted(f: boolean): void {\n    this._started = f;\n  }\n\n  /**\n   * モーションの有効性の確認\n   * @return true モーションは有効\n   * @return false モーションは無効\n   */\n  public isAvailable(): boolean {\n    return this._available;\n  }\n\n  /**\n   * モーションの有効性の設定\n   * @param v trueならモーションは有効\n   */\n  public setIsAvailable(v: boolean): void {\n    this._available = v;\n  }\n\n  /**\n   * モーションの状態の設定\n   * @param timeSeconds 現在時刻[秒]\n   * @param weight モーション尾重み\n   */\n  public setState(timeSeconds: number, weight: number): void {\n    this._stateTimeSeconds = timeSeconds;\n    this._stateWeight = weight;\n  }\n\n  /**\n   * モーションの現在時刻の取得\n   * @return モーションの現在時刻[秒]\n   */\n  public getStateTime(): number {\n    return this._stateTimeSeconds;\n  }\n\n  /**\n   * モーションの重みの取得\n   * @return モーションの重み\n   */\n  public getStateWeight(): number {\n    return this._stateWeight;\n  }\n\n  /**\n   * 最後にイベントの発火をチェックした時間を取得\n   *\n   * @return 最後にイベントの発火をチェックした時間[秒]\n   */\n  public getLastCheckEventSeconds(): number {\n    return this._lastEventCheckSeconds;\n  }\n\n  /**\n   * 最後にイベントをチェックした時間を設定\n   * @param checkSeconds 最後にイベントをチェックした時間[秒]\n   */\n  public setLastCheckEventSeconds(checkSeconds: number): void {\n    this._lastEventCheckSeconds = checkSeconds;\n  }\n\n  /**\n   * フェードアウト開始判定の取得\n   * @return フェードアウト開始するかどうか\n   */\n  public isTriggeredFadeOut(): boolean {\n    return this._isTriggeredFadeOut;\n  }\n\n  /**\n   * フェードアウト時間の取得\n   * @return フェードアウト時間[秒]\n   */\n  public getFadeOutSeconds(): number {\n    return this._fadeOutSeconds;\n  }\n\n  _autoDelete: boolean; // 自動削除\n  _motion: ACubismMotion; // モーション\n\n  _available: boolean; // 有効化フラグ\n  _finished: boolean; // 終了フラグ\n  _started: boolean; // 開始フラグ\n  _startTimeSeconds: number; // モーション再生開始時刻[秒]\n  _fadeInStartTimeSeconds: number; // フェードイン開始時刻（ループの時は初回のみ）[秒]\n  _endTimeSeconds: number; // 終了予定時刻[秒]\n  _stateTimeSeconds: number; // 時刻の状態[秒]\n  _stateWeight: number; // 重みの状態\n  _lastEventCheckSeconds: number; // 最終のMotion側のチェックした時間\n  private _fadeOutSeconds: number; // フェードアウト時間[秒]\n  private _isTriggeredFadeOut: boolean; // フェードアウト開始フラグ\n\n  _motionQueueEntryHandle: CubismMotionQueueEntryHandle; // インスタンスごとに一意の値を持つ識別番号\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismmotionqueueentry';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Live2DCubismFramework {\n  export const CubismMotionQueueEntry = $.CubismMotionQueueEntry;\n  export type CubismMotionQueueEntry = $.CubismMotionQueueEntry;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}