{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * 呼吸機能\n *\n * 呼吸機能を提供する。\n */\nexport class CubismBreath {\n  /**\n   * インスタンスの作成\n   */\n  static create() {\n    return new CubismBreath();\n  }\n\n  /**\n   * インスタンスの破棄\n   * @param instance 対象のCubismBreath\n   */\n  static delete(instance) {\n    if (instance != null) {\n      instance = null;\n    }\n  }\n\n  /**\n   * 呼吸のパラメータの紐づけ\n   * @param breathParameters 呼吸を紐づけたいパラメータのリスト\n   */\n  setParameters(breathParameters) {\n    this._breathParameters = breathParameters;\n  }\n\n  /**\n   * 呼吸に紐づいているパラメータの取得\n   * @return 呼吸に紐づいているパラメータのリスト\n   */\n  getParameters() {\n    return this._breathParameters;\n  }\n\n  /**\n   * モデルのパラメータの更新\n   * @param model 対象のモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   */\n  updateParameters(model, deltaTimeSeconds) {\n    this._currentTime += deltaTimeSeconds;\n    const t = this._currentTime * 2.0 * 3.14159;\n    for (let i = 0; i < this._breathParameters.getSize(); ++i) {\n      const data = this._breathParameters.at(i);\n      model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n    }\n  }\n\n  /**\n   * コンストラクタ\n   */\n  constructor() {\n    this._breathParameters = void 0;\n    // 呼吸にひもづいているパラメータのリスト\n    this._currentTime = void 0;\n    this._currentTime = 0.0;\n  }\n\n  // 積算時間[秒]\n}\n\n/**\n * 呼吸のパラメータ情報\n */\nexport class BreathParameterData {\n  /**\n   * コンストラクタ\n   * @param parameterId   呼吸をひもづけるパラメータID\n   * @param offset        呼吸を正弦波としたときの、波のオフセット\n   * @param peak          呼吸を正弦波としたときの、波の高さ\n   * @param cycle         呼吸を正弦波としたときの、波の周期\n   * @param weight        パラメータへの重み\n   */\n  constructor(parameterId, offset, peak, cycle, weight) {\n    this.parameterId = void 0;\n    // 呼吸をひもづけるパラメータID\\\n    this.offset = void 0;\n    // 呼吸を正弦波としたときの、波のオフセット\n    this.peak = void 0;\n    // 呼吸を正弦波としたときの、波の高さ\n    this.cycle = void 0;\n    // 呼吸を正弦波としたときの、波の周期\n    this.weight = void 0;\n    this.parameterId = parameterId == undefined ? null : parameterId;\n    this.offset = offset == undefined ? 0.0 : offset;\n    this.peak = peak == undefined ? 0.0 : peak;\n    this.cycle = cycle == undefined ? 0.0 : cycle;\n    this.weight = weight == undefined ? 0.0 : weight;\n  }\n\n  // パラメータへの重み\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismbreath';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  const BreathParameterData = _Live2DCubismFramework.BreathParameterData = $.BreathParameterData;\n  const CubismBreath = _Live2DCubismFramework.CubismBreath = $.CubismBreath;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["CubismBreath","create","delete","instance","setParameters","breathParameters","_breathParameters","getParameters","updateParameters","model","deltaTimeSeconds","_currentTime","t","i","getSize","data","at","addParameterValueById","parameterId","offset","peak","Math","sin","cycle","weight","constructor","BreathParameterData","undefined","$","Live2DCubismFramework","_Live2DCubismFramework"],"sources":["D:/Personal/PythonStuff/RR/RRWebsiteRenewed/my-app/src/Framework/src/effect/cubismbreath.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismIdHandle } from '../id/cubismid';\nimport { CubismModel } from '../model/cubismmodel';\nimport { csmVector } from '../type/csmvector';\n\n/**\n * 呼吸機能\n *\n * 呼吸機能を提供する。\n */\nexport class CubismBreath {\n  /**\n   * インスタンスの作成\n   */\n  public static create(): CubismBreath {\n    return new CubismBreath();\n  }\n\n  /**\n   * インスタンスの破棄\n   * @param instance 対象のCubismBreath\n   */\n  public static delete(instance: CubismBreath): void {\n    if (instance != null) {\n      instance = null;\n    }\n  }\n\n  /**\n   * 呼吸のパラメータの紐づけ\n   * @param breathParameters 呼吸を紐づけたいパラメータのリスト\n   */\n  public setParameters(breathParameters: csmVector<BreathParameterData>): void {\n    this._breathParameters = breathParameters;\n  }\n\n  /**\n   * 呼吸に紐づいているパラメータの取得\n   * @return 呼吸に紐づいているパラメータのリスト\n   */\n  public getParameters(): csmVector<BreathParameterData> {\n    return this._breathParameters;\n  }\n\n  /**\n   * モデルのパラメータの更新\n   * @param model 対象のモデル\n   * @param deltaTimeSeconds デルタ時間[秒]\n   */\n  public updateParameters(model: CubismModel, deltaTimeSeconds: number): void {\n    this._currentTime += deltaTimeSeconds;\n\n    const t: number = this._currentTime * 2.0 * 3.14159;\n\n    for (let i = 0; i < this._breathParameters.getSize(); ++i) {\n      const data: BreathParameterData = this._breathParameters.at(i);\n\n      model.addParameterValueById(\n        data.parameterId,\n        data.offset + data.peak * Math.sin(t / data.cycle),\n        data.weight\n      );\n    }\n  }\n\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._currentTime = 0.0;\n  }\n\n  _breathParameters: csmVector<BreathParameterData>; // 呼吸にひもづいているパラメータのリスト\n  _currentTime: number; // 積算時間[秒]\n}\n\n/**\n * 呼吸のパラメータ情報\n */\nexport class BreathParameterData {\n  /**\n   * コンストラクタ\n   * @param parameterId   呼吸をひもづけるパラメータID\n   * @param offset        呼吸を正弦波としたときの、波のオフセット\n   * @param peak          呼吸を正弦波としたときの、波の高さ\n   * @param cycle         呼吸を正弦波としたときの、波の周期\n   * @param weight        パラメータへの重み\n   */\n  constructor(\n    parameterId?: CubismIdHandle,\n    offset?: number,\n    peak?: number,\n    cycle?: number,\n    weight?: number\n  ) {\n    this.parameterId = parameterId == undefined ? null : parameterId;\n    this.offset = offset == undefined ? 0.0 : offset;\n    this.peak = peak == undefined ? 0.0 : peak;\n    this.cycle = cycle == undefined ? 0.0 : cycle;\n    this.weight = weight == undefined ? 0.0 : weight;\n  }\n\n  parameterId: CubismIdHandle; // 呼吸をひもづけるパラメータID\\\n  offset: number; // 呼吸を正弦波としたときの、波のオフセット\n  peak: number; // 呼吸を正弦波としたときの、波の高さ\n  cycle: number; // 呼吸を正弦波としたときの、波の周期\n  weight: number; // パラメータへの重み\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismbreath';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Live2DCubismFramework {\n  export const BreathParameterData = $.BreathParameterData;\n  export type BreathParameterData = $.BreathParameterData;\n  export const CubismBreath = $.CubismBreath;\n  export type CubismBreath = $.CubismBreath;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,YAAY,CAAC;EACxB;AACF;AACA;EACE,OAAcC,MAAMA,CAAA,EAAiB;IACnC,OAAO,IAAID,YAAY,CAAC,CAAC;EAC3B;;EAEA;AACF;AACA;AACA;EACE,OAAcE,MAAMA,CAACC,QAAsB,EAAQ;IACjD,IAAIA,QAAQ,IAAI,IAAI,EAAE;MACpBA,QAAQ,GAAG,IAAI;IACjB;EACF;;EAEA;AACF;AACA;AACA;EACSC,aAAaA,CAACC,gBAAgD,EAAQ;IAC3E,IAAI,CAACC,iBAAiB,GAAGD,gBAAgB;EAC3C;;EAEA;AACF;AACA;AACA;EACSE,aAAaA,CAAA,EAAmC;IACrD,OAAO,IAAI,CAACD,iBAAiB;EAC/B;;EAEA;AACF;AACA;AACA;AACA;EACSE,gBAAgBA,CAACC,KAAkB,EAAEC,gBAAwB,EAAQ;IAC1E,IAAI,CAACC,YAAY,IAAID,gBAAgB;IAErC,MAAME,CAAS,GAAG,IAAI,CAACD,YAAY,GAAG,GAAG,GAAG,OAAO;IAEnD,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACP,iBAAiB,CAACQ,OAAO,CAAC,CAAC,EAAE,EAAED,CAAC,EAAE;MACzD,MAAME,IAAyB,GAAG,IAAI,CAACT,iBAAiB,CAACU,EAAE,CAACH,CAAC,CAAC;MAE9DJ,KAAK,CAACQ,qBAAqB,CACzBF,IAAI,CAACG,WAAW,EAChBH,IAAI,CAACI,MAAM,GAAGJ,IAAI,CAACK,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACV,CAAC,GAAGG,IAAI,CAACQ,KAAK,CAAC,EAClDR,IAAI,CAACS,MACP,CAAC;IACH;EACF;;EAEA;AACF;AACA;EACSC,WAAWA,CAAA,EAAG;IAAA,KAIrBnB,iBAAiB;IAAkC;IAAA,KACnDK,YAAY;IAJV,IAAI,CAACA,YAAY,GAAG,GAAG;EACzB;;EAGsB;AACxB;;AAEA;AACA;AACA;AACA,OAAO,MAAMe,mBAAmB,CAAC;EAC/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACED,WAAWA,CACTP,WAA4B,EAC5BC,MAAe,EACfC,IAAa,EACbG,KAAc,EACdC,MAAe,EACf;IAAA,KAQFN,WAAW;IAAkB;IAAA,KAC7BC,MAAM;IAAU;IAAA,KAChBC,IAAI;IAAU;IAAA,KACdG,KAAK;IAAU;IAAA,KACfC,MAAM;IAXJ,IAAI,CAACN,WAAW,GAAGA,WAAW,IAAIS,SAAS,GAAG,IAAI,GAAGT,WAAW;IAChE,IAAI,CAACC,MAAM,GAAGA,MAAM,IAAIQ,SAAS,GAAG,GAAG,GAAGR,MAAM;IAChD,IAAI,CAACC,IAAI,GAAGA,IAAI,IAAIO,SAAS,GAAG,GAAG,GAAGP,IAAI;IAC1C,IAAI,CAACG,KAAK,GAAGA,KAAK,IAAII,SAAS,GAAG,GAAG,GAAGJ,KAAK;IAC7C,IAAI,CAACC,MAAM,GAAGA,MAAM,IAAIG,SAAS,GAAG,GAAG,GAAGH,MAAM;EAClD;;EAMgB;AAClB;;AAEA;AACA,OAAO,KAAKI,CAAC,MAAM,gBAAgB;AACnC;AACA,WAAAC,qBAAA;AAKC,WAAAC,sBAAA;EAJQ,MAAMJ,mBAAmB,GAAAI,sBAAA,CAAAJ,mBAAA,GAAGE,CAAC,CAACF,mBAAmB;EAEjD,MAAM1B,YAAY,GAAA8B,sBAAA,CAAA9B,YAAA,GAAG4B,CAAC,CAAC5B,YAAY;AAAC,GAH5B6B,qBAAqB,KAArBA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}