{"ast":null,"code":"/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\n\nimport { Live2DCubismFramework as acubismmotion } from './acubismmotion';\nimport { Live2DCubismFramework as cubismmotionqueuemanager } from './cubismmotionqueuemanager';\nvar CubismMotionQueueEntryHandle = cubismmotionqueuemanager.CubismMotionQueueEntryHandle;\nvar ACubismMotion = acubismmotion.ACubismMotion;\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  class CubismMotionQueueEntry {\n    /**\r\n     * コンストラクタ\r\n     */\n    constructor() {\n      this._autoDelete = void 0;\n      // 自動削除\n      this._motion = void 0;\n      // モーション\n      this._available = void 0;\n      // 有効化フラグ\n      this._finished = void 0;\n      // 終了フラグ\n      this._started = void 0;\n      // 開始フラグ\n      this._startTimeSeconds = void 0;\n      // モーション再生開始時刻[秒]\n      this._fadeInStartTimeSeconds = void 0;\n      // フェードイン開始時刻（ループの時は初回のみ）[秒]\n      this._endTimeSeconds = void 0;\n      // 終了予定時刻[秒]\n      this._stateTimeSeconds = void 0;\n      // 時刻の状態[秒]\n      this._stateWeight = void 0;\n      // 重みの状態\n      this._lastEventCheckSeconds = void 0;\n      // 最終のMotion側のチェックした時間\n      this._motionQueueEntryHandle = void 0;\n      this._autoDelete = false;\n      this._motion = null;\n      this._available = true;\n      this._finished = false;\n      this._started = false;\n      this._startTimeSeconds = -1.0;\n      this._fadeInStartTimeSeconds = 0.0;\n      this._endTimeSeconds = -1.0;\n      this._stateTimeSeconds = 0.0;\n      this._stateWeight = 0.0;\n      this._lastEventCheckSeconds = 0.0;\n      this._motionQueueEntryHandle = this;\n    }\n\n    /**\r\n     * デストラクタ相当の処理\r\n     */\n    release() {\n      if (this._autoDelete && this._motion) {\n        ACubismMotion.delete(this._motion); //\n      }\n    }\n\n    /**\r\n     * フェードアウトの開始\r\n     * @param fadeOutSeconds フェードアウトにかかる時間[秒]\r\n     * @param userTimeSeconds デルタ時間の積算値[秒]\r\n     */\n    startFadeout(fadeoutSeconds, userTimeSeconds) {\n      const newEndTimeSeconds = userTimeSeconds + fadeoutSeconds;\n      if (this._endTimeSeconds < 0.0 || newEndTimeSeconds < this._endTimeSeconds) {\n        this._endTimeSeconds = newEndTimeSeconds;\n      }\n    }\n\n    /**\r\n     * モーションの終了の確認\r\n     *\r\n     * @return true モーションが終了した\r\n     * @return false 終了していない\r\n     */\n    isFinished() {\n      return this._finished;\n    }\n\n    /**\r\n     * モーションの開始の確認\r\n     * @return true モーションが開始した\r\n     * @return false 開始していない\r\n     */\n    isStarted() {\n      return this._started;\n    }\n\n    /**\r\n     * モーションの開始時刻の取得\r\n     * @return モーションの開始時刻[秒]\r\n     */\n    getStartTime() {\n      return this._startTimeSeconds;\n    }\n\n    /**\r\n     * フェードインの開始時刻の取得\r\n     * @return フェードインの開始時刻[秒]\r\n     */\n    getFadeInStartTime() {\n      return this._fadeInStartTimeSeconds;\n    }\n\n    /**\r\n     * フェードインの終了時刻の取得\r\n     * @return フェードインの終了時刻の取得\r\n     */\n    getEndTime() {\n      return this._endTimeSeconds;\n    }\n\n    /**\r\n     * モーションの開始時刻の設定\r\n     * @param startTime モーションの開始時刻\r\n     */\n    setStartTime(startTime) {\n      this._startTimeSeconds = startTime;\n    }\n\n    /**\r\n     * フェードインの開始時刻の設定\r\n     * @param startTime フェードインの開始時刻[秒]\r\n     */\n    setFadeInStartTime(startTime) {\n      this._fadeInStartTimeSeconds = startTime;\n    }\n\n    /**\r\n     * フェードインの終了時刻の設定\r\n     * @param endTime フェードインの終了時刻[秒]\r\n     */\n    setEndTime(endTime) {\n      this._endTimeSeconds = endTime;\n    }\n\n    /**\r\n     * モーションの終了の設定\r\n     * @param f trueならモーションの終了\r\n     */\n    setIsFinished(f) {\n      this._finished = f;\n    }\n\n    /**\r\n     * モーション開始の設定\r\n     * @param f trueならモーションの開始\r\n     */\n    setIsStarted(f) {\n      this._started = f;\n    }\n\n    /**\r\n     * モーションの有効性の確認\r\n     * @return true モーションは有効\r\n     * @return false モーションは無効\r\n     */\n    isAvailable() {\n      return this._available;\n    }\n\n    /**\r\n     * モーションの有効性の設定\r\n     * @param v trueならモーションは有効\r\n     */\n    setIsAvailable(v) {\n      this._available = v;\n    }\n\n    /**\r\n     * モーションの状態の設定\r\n     * @param timeSeconds 現在時刻[秒]\r\n     * @param weight モーション尾重み\r\n     */\n    setState(timeSeconds, weight) {\n      this._stateTimeSeconds = timeSeconds;\n      this._stateWeight = weight;\n    }\n\n    /**\r\n     * モーションの現在時刻の取得\r\n     * @return モーションの現在時刻[秒]\r\n     */\n    getStateTime() {\n      return this._stateTimeSeconds;\n    }\n\n    /**\r\n     * モーションの重みの取得\r\n     * @return モーションの重み\r\n     */\n    getStateWeight() {\n      return this._stateWeight;\n    }\n\n    /**\r\n     * 最後にイベントの発火をチェックした時間を取得\r\n     *\r\n     * @return 最後にイベントの発火をチェックした時間[秒]\r\n     */\n    getLastCheckEventTime() {\n      return this._lastEventCheckSeconds;\n    }\n\n    /**\r\n     * 最後にイベントをチェックした時間を設定\r\n     * @param checkTime 最後にイベントをチェックした時間[秒]\r\n     */\n    setLastCheckEventTime(checkTime) {\n      this._lastEventCheckSeconds = checkTime;\n    }\n\n    // 每个实例具有唯一值的标识号\n  }\n  _Live2DCubismFramework.CubismMotionQueueEntry = CubismMotionQueueEntry;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["Live2DCubismFramework","acubismmotion","cubismmotionqueuemanager","CubismMotionQueueEntryHandle","ACubismMotion","_Live2DCubismFramework","CubismMotionQueueEntry","constructor","_autoDelete","_motion","_available","_finished","_started","_startTimeSeconds","_fadeInStartTimeSeconds","_endTimeSeconds","_stateTimeSeconds","_stateWeight","_lastEventCheckSeconds","_motionQueueEntryHandle","release","delete","startFadeout","fadeoutSeconds","userTimeSeconds","newEndTimeSeconds","isFinished","isStarted","getStartTime","getFadeInStartTime","getEndTime","setStartTime","startTime","setFadeInStartTime","setEndTime","endTime","setIsFinished","f","setIsStarted","isAvailable","setIsAvailable","v","setState","timeSeconds","weight","getStateTime","getStateWeight","getLastCheckEventTime","setLastCheckEventTime","checkTime"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/mylive2d/react-live2d/Samples/TypeScript/Demo/Framework/src/motion/cubismmotionqueueentry.ts"],"sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { Live2DCubismFramework as acubismmotion } from './acubismmotion';\r\nimport { Live2DCubismFramework as cubismmotionqueuemanager } from './cubismmotionqueuemanager';\r\nimport CubismMotionQueueEntryHandle = cubismmotionqueuemanager.CubismMotionQueueEntryHandle;\r\nimport ACubismMotion = acubismmotion.ACubismMotion;\r\n\r\nexport namespace Live2DCubismFramework {\r\n  /**\r\n   * CubismMotionQueueManagerで再生している各モーションの管理クラス。\r\n   */\r\n  export class CubismMotionQueueEntry {\r\n    /**\r\n     * コンストラクタ\r\n     */\r\n    public constructor() {\r\n      this._autoDelete = false;\r\n      this._motion = null;\r\n      this._available = true;\r\n      this._finished = false;\r\n      this._started = false;\r\n      this._startTimeSeconds = -1.0;\r\n      this._fadeInStartTimeSeconds = 0.0;\r\n      this._endTimeSeconds = -1.0;\r\n      this._stateTimeSeconds = 0.0;\r\n      this._stateWeight = 0.0;\r\n      this._lastEventCheckSeconds = 0.0;\r\n      this._motionQueueEntryHandle = this;\r\n    }\r\n\r\n    /**\r\n     * デストラクタ相当の処理\r\n     */\r\n    public release(): void {\r\n      if (this._autoDelete && this._motion) {\r\n        ACubismMotion.delete(this._motion); //\r\n      }\r\n    }\r\n\r\n    /**\r\n     * フェードアウトの開始\r\n     * @param fadeOutSeconds フェードアウトにかかる時間[秒]\r\n     * @param userTimeSeconds デルタ時間の積算値[秒]\r\n     */\r\n    public startFadeout(fadeoutSeconds: number, userTimeSeconds: number): void {\r\n      const newEndTimeSeconds: number = userTimeSeconds + fadeoutSeconds;\r\n\r\n      if (\r\n        this._endTimeSeconds < 0.0 ||\r\n        newEndTimeSeconds < this._endTimeSeconds\r\n      ) {\r\n        this._endTimeSeconds = newEndTimeSeconds;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * モーションの終了の確認\r\n     *\r\n     * @return true モーションが終了した\r\n     * @return false 終了していない\r\n     */\r\n    public isFinished(): boolean {\r\n      return this._finished;\r\n    }\r\n\r\n    /**\r\n     * モーションの開始の確認\r\n     * @return true モーションが開始した\r\n     * @return false 開始していない\r\n     */\r\n    public isStarted(): boolean {\r\n      return this._started;\r\n    }\r\n\r\n    /**\r\n     * モーションの開始時刻の取得\r\n     * @return モーションの開始時刻[秒]\r\n     */\r\n    public getStartTime(): number {\r\n      return this._startTimeSeconds;\r\n    }\r\n\r\n    /**\r\n     * フェードインの開始時刻の取得\r\n     * @return フェードインの開始時刻[秒]\r\n     */\r\n    public getFadeInStartTime(): number {\r\n      return this._fadeInStartTimeSeconds;\r\n    }\r\n\r\n    /**\r\n     * フェードインの終了時刻の取得\r\n     * @return フェードインの終了時刻の取得\r\n     */\r\n    public getEndTime(): number {\r\n      return this._endTimeSeconds;\r\n    }\r\n\r\n    /**\r\n     * モーションの開始時刻の設定\r\n     * @param startTime モーションの開始時刻\r\n     */\r\n    public setStartTime(startTime: number): void {\r\n      this._startTimeSeconds = startTime;\r\n    }\r\n\r\n    /**\r\n     * フェードインの開始時刻の設定\r\n     * @param startTime フェードインの開始時刻[秒]\r\n     */\r\n    public setFadeInStartTime(startTime: number): void {\r\n      this._fadeInStartTimeSeconds = startTime;\r\n    }\r\n\r\n    /**\r\n     * フェードインの終了時刻の設定\r\n     * @param endTime フェードインの終了時刻[秒]\r\n     */\r\n    public setEndTime(endTime: number): void {\r\n      this._endTimeSeconds = endTime;\r\n    }\r\n\r\n    /**\r\n     * モーションの終了の設定\r\n     * @param f trueならモーションの終了\r\n     */\r\n    public setIsFinished(f: boolean): void {\r\n      this._finished = f;\r\n    }\r\n\r\n    /**\r\n     * モーション開始の設定\r\n     * @param f trueならモーションの開始\r\n     */\r\n    public setIsStarted(f: boolean): void {\r\n      this._started = f;\r\n    }\r\n\r\n    /**\r\n     * モーションの有効性の確認\r\n     * @return true モーションは有効\r\n     * @return false モーションは無効\r\n     */\r\n    public isAvailable(): boolean {\r\n      return this._available;\r\n    }\r\n\r\n    /**\r\n     * モーションの有効性の設定\r\n     * @param v trueならモーションは有効\r\n     */\r\n    public setIsAvailable(v: boolean): void {\r\n      this._available = v;\r\n    }\r\n\r\n    /**\r\n     * モーションの状態の設定\r\n     * @param timeSeconds 現在時刻[秒]\r\n     * @param weight モーション尾重み\r\n     */\r\n    public setState(timeSeconds: number, weight: number): void {\r\n      this._stateTimeSeconds = timeSeconds;\r\n      this._stateWeight = weight;\r\n    }\r\n\r\n    /**\r\n     * モーションの現在時刻の取得\r\n     * @return モーションの現在時刻[秒]\r\n     */\r\n    public getStateTime(): number {\r\n      return this._stateTimeSeconds;\r\n    }\r\n\r\n    /**\r\n     * モーションの重みの取得\r\n     * @return モーションの重み\r\n     */\r\n    public getStateWeight(): number {\r\n      return this._stateWeight;\r\n    }\r\n\r\n    /**\r\n     * 最後にイベントの発火をチェックした時間を取得\r\n     *\r\n     * @return 最後にイベントの発火をチェックした時間[秒]\r\n     */\r\n    public getLastCheckEventTime(): number {\r\n      return this._lastEventCheckSeconds;\r\n    }\r\n\r\n    /**\r\n     * 最後にイベントをチェックした時間を設定\r\n     * @param checkTime 最後にイベントをチェックした時間[秒]\r\n     */\r\n    public setLastCheckEventTime(checkTime: number): void {\r\n      this._lastEventCheckSeconds = checkTime;\r\n    }\r\n\r\n    _autoDelete: boolean; // 自動削除\r\n    _motion: ACubismMotion; // モーション\r\n\r\n    _available: boolean; // 有効化フラグ\r\n    _finished: boolean; // 終了フラグ\r\n    _started: boolean; // 開始フラグ\r\n    _startTimeSeconds: number; // モーション再生開始時刻[秒]\r\n    _fadeInStartTimeSeconds: number; // フェードイン開始時刻（ループの時は初回のみ）[秒]\r\n    _endTimeSeconds: number; // 終了予定時刻[秒]\r\n    _stateTimeSeconds: number; // 時刻の状態[秒]\r\n    _stateWeight: number; // 重みの状態\r\n    _lastEventCheckSeconds: number; // 最終のMotion側のチェックした時間\r\n\r\n    _motionQueueEntryHandle: CubismMotionQueueEntryHandle; // 每个实例具有唯一值的标识号\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}