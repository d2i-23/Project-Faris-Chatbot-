{"ast":null,"code":"/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\n\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  class CubismVector2 {\n    /**\r\n     * コンストラクタ\r\n     */\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n      this.x = x == undefined ? 0.0 : x;\n      this.y = y == undefined ? 0.0 : y;\n    }\n\n    /**\r\n     * ベクトルの加算\r\n     *\r\n     * @param vector2 加算するベクトル値\r\n     * @return 加算結果 ベクトル値\r\n     */\n    add(vector2) {\n      const ret = new CubismVector2(0.0, 0.0);\n      ret.x = this.x + vector2.x;\n      ret.y = this.y + vector2.y;\n      return ret;\n    }\n\n    /**\r\n     * ベクトルの減算\r\n     *\r\n     * @param vector2 減算するベクトル値\r\n     * @return 減算結果 ベクトル値\r\n     */\n    substract(vector2) {\n      const ret = new CubismVector2(0.0, 0.0);\n      ret.x = this.x - vector2.x;\n      ret.y = this.y - vector2.y;\n      return ret;\n    }\n\n    /**\r\n     * ベクトルの乗算\r\n     *\r\n     * @param vector2 乗算するベクトル値\r\n     * @return 乗算結果 ベクトル値\r\n     */\n    multiply(vector2) {\n      const ret = new CubismVector2(0.0, 0.0);\n      ret.x = this.x * vector2.x;\n      ret.y = this.y * vector2.y;\n      return ret;\n    }\n\n    /**\r\n     * ベクトルの乗算(スカラー)\r\n     *\r\n     * @param scalar 乗算するスカラー値\r\n     * @return 乗算結果 ベクトル値\r\n     */\n    multiplyByScaler(scalar) {\n      return this.multiply(new CubismVector2(scalar, scalar));\n    }\n\n    /**\r\n     * ベクトルの除算\r\n     *\r\n     * @param vector2 除算するベクトル値\r\n     * @return 除算結果 ベクトル値\r\n     */\n    division(vector2) {\n      const ret = new CubismVector2(0.0, 0.0);\n      ret.x = this.x / vector2.x;\n      ret.y = this.y / vector2.y;\n      return ret;\n    }\n\n    /**\r\n     * ベクトルの除算(スカラー)\r\n     *\r\n     * @param scalar 除算するスカラー値\r\n     * @return 除算結果 ベクトル値\r\n     */\n    divisionByScalar(scalar) {\n      return this.division(new CubismVector2(scalar, scalar));\n    }\n\n    /**\r\n     * ベクトルの長さを取得する\r\n     *\r\n     * @return ベクトルの長さ\r\n     */\n    getLength() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    /**\r\n     * ベクトルの距離の取得\r\n     *\r\n     * @param a 点\r\n     * @return ベクトルの距離\r\n     */\n    getDistanceWith(a) {\n      return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n    }\n\n    /**\r\n     * ドット積の計算\r\n     *\r\n     * @param a 値\r\n     * @return 結果\r\n     */\n    dot(a) {\n      return this.x * a.x + this.y * a.y;\n    }\n\n    /**\r\n     * 正規化の適用\r\n     */\n    normalize() {\n      const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n      this.x = this.x / length;\n      this.y = this.y / length;\n    }\n\n    /**\r\n     * 等しさの確認（等しいか？）\r\n     *\r\n     * 値が等しいか？\r\n     *\r\n     * @param rhs 確認する値\r\n     * @return true 値は等しい\r\n     * @return false 値は等しくない\r\n     */\n    isEqual(rhs) {\n      return this.x == rhs.x && this.y == rhs.y;\n    }\n\n    /**\r\n     * 等しさの確認（等しくないか？）\r\n     *\r\n     * 値が等しくないか？\r\n     *\r\n     * @param rhs 確認する値\r\n     * @return true 値は等しくない\r\n     * @return false 値は等しい\r\n     */\n    isNotEqual(rhs) {\n      return !this.isEqual(rhs);\n    }\n  }\n  _Live2DCubismFramework.CubismVector2 = CubismVector2;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["Live2DCubismFramework","_Live2DCubismFramework","CubismVector2","constructor","x","y","undefined","add","vector2","ret","substract","multiply","multiplyByScaler","scalar","division","divisionByScalar","getLength","Math","sqrt","getDistanceWith","a","dot","normalize","length","pow","isEqual","rhs","isNotEqual"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/mylive2d/react-live2d/Samples/TypeScript/Demo/Framework/src/math/cubismvector2.ts"],"sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nexport namespace Live2DCubismFramework {\r\n  /**\r\n   * 2次元ベクトル型\r\n   *\r\n   * 2次元ベクトル型の機能を提供する。\r\n   */\r\n  export class CubismVector2 {\r\n    /**\r\n     * コンストラクタ\r\n     */\r\n    public constructor(public x?: number, public y?: number) {\r\n      this.x = x == undefined ? 0.0 : x;\r\n\r\n      this.y = y == undefined ? 0.0 : y;\r\n    }\r\n\r\n    /**\r\n     * ベクトルの加算\r\n     *\r\n     * @param vector2 加算するベクトル値\r\n     * @return 加算結果 ベクトル値\r\n     */\r\n    public add(vector2: CubismVector2): CubismVector2 {\r\n      const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\r\n      ret.x = this.x + vector2.x;\r\n      ret.y = this.y + vector2.y;\r\n      return ret;\r\n    }\r\n\r\n    /**\r\n     * ベクトルの減算\r\n     *\r\n     * @param vector2 減算するベクトル値\r\n     * @return 減算結果 ベクトル値\r\n     */\r\n    public substract(vector2: CubismVector2): CubismVector2 {\r\n      const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\r\n      ret.x = this.x - vector2.x;\r\n      ret.y = this.y - vector2.y;\r\n      return ret;\r\n    }\r\n\r\n    /**\r\n     * ベクトルの乗算\r\n     *\r\n     * @param vector2 乗算するベクトル値\r\n     * @return 乗算結果 ベクトル値\r\n     */\r\n    public multiply(vector2: CubismVector2): CubismVector2 {\r\n      const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\r\n      ret.x = this.x * vector2.x;\r\n      ret.y = this.y * vector2.y;\r\n      return ret;\r\n    }\r\n\r\n    /**\r\n     * ベクトルの乗算(スカラー)\r\n     *\r\n     * @param scalar 乗算するスカラー値\r\n     * @return 乗算結果 ベクトル値\r\n     */\r\n    public multiplyByScaler(scalar: number): CubismVector2 {\r\n      return this.multiply(new CubismVector2(scalar, scalar));\r\n    }\r\n\r\n    /**\r\n     * ベクトルの除算\r\n     *\r\n     * @param vector2 除算するベクトル値\r\n     * @return 除算結果 ベクトル値\r\n     */\r\n    public division(vector2: CubismVector2): CubismVector2 {\r\n      const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\r\n      ret.x = this.x / vector2.x;\r\n      ret.y = this.y / vector2.y;\r\n      return ret;\r\n    }\r\n\r\n    /**\r\n     * ベクトルの除算(スカラー)\r\n     *\r\n     * @param scalar 除算するスカラー値\r\n     * @return 除算結果 ベクトル値\r\n     */\r\n    public divisionByScalar(scalar: number): CubismVector2 {\r\n      return this.division(new CubismVector2(scalar, scalar));\r\n    }\r\n\r\n    /**\r\n     * ベクトルの長さを取得する\r\n     *\r\n     * @return ベクトルの長さ\r\n     */\r\n    public getLength(): number {\r\n      return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n\r\n    /**\r\n     * ベクトルの距離の取得\r\n     *\r\n     * @param a 点\r\n     * @return ベクトルの距離\r\n     */\r\n    public getDistanceWith(a: CubismVector2): number {\r\n      return Math.sqrt(\r\n        (this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y)\r\n      );\r\n    }\r\n\r\n    /**\r\n     * ドット積の計算\r\n     *\r\n     * @param a 値\r\n     * @return 結果\r\n     */\r\n    public dot(a: CubismVector2): number {\r\n      return this.x * a.x + this.y * a.y;\r\n    }\r\n\r\n    /**\r\n     * 正規化の適用\r\n     */\r\n    public normalize(): void {\r\n      const length: number = Math.pow(this.x * this.x + this.y * this.y, 0.5);\r\n\r\n      this.x = this.x / length;\r\n      this.y = this.y / length;\r\n    }\r\n\r\n    /**\r\n     * 等しさの確認（等しいか？）\r\n     *\r\n     * 値が等しいか？\r\n     *\r\n     * @param rhs 確認する値\r\n     * @return true 値は等しい\r\n     * @return false 値は等しくない\r\n     */\r\n    public isEqual(rhs: CubismVector2): boolean {\r\n      return this.x == rhs.x && this.y == rhs.y;\r\n    }\r\n\r\n    /**\r\n     * 等しさの確認（等しくないか？）\r\n     *\r\n     * 値が等しくないか？\r\n     *\r\n     * @param rhs 確認する値\r\n     * @return true 値は等しくない\r\n     * @return false 値は等しい\r\n     */\r\n    public isNotEqual(rhs: CubismVector2): boolean {\r\n      return !this.isEqual(rhs);\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}