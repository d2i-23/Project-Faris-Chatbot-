{"ast":null,"code":"/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\n\nimport { Live2DCubismFramework as csmmap } from '../type/csmmap';\nimport { Live2DCubismFramework as cubismmatrix44 } from './cubismmatrix44';\nvar csmMap = csmmap.csmMap;\nvar iterator = csmmap.iterator;\nvar CubismMatrix44 = cubismmatrix44.CubismMatrix44;\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  class CubismModelMatrix extends CubismMatrix44 {\n    /**\r\n     * コンストラクタ\r\n     *\r\n     * @param w 横幅\r\n     * @param h 縦幅\r\n     */\n    constructor(w, h) {\n      super();\n      this._width = void 0;\n      // 横幅\n      this._height = void 0;\n      this._width = w !== undefined ? w : 0.0;\n      this._height = h !== undefined ? h : 0.0;\n      this.setHeight(1.0);\n    }\n\n    /**\r\n     * 横幅を設定\r\n     *\r\n     * @param w 横幅\r\n     */\n    setWidth(w) {\n      const scaleX = w / this._width;\n      const scaleY = scaleX;\n      this.scale(scaleX * 2.6, scaleY * 2.6);\n    }\n\n    /**\r\n     * 縦幅を設定\r\n     * @param h 縦幅\r\n     */\n    setHeight(h) {\n      const scaleX = h / this._height;\n      const scaleY = scaleX;\n      this.scale(scaleX * 2.6, scaleY * 2.6);\n    }\n\n    /**\r\n     * 位置を設定\r\n     *\r\n     * @param x X軸の位置\r\n     * @param y Y軸の位置\r\n     */\n    setPosition(x, y) {\n      this.translate(x, y);\n    }\n\n    /**\r\n     * 中心位置を設定\r\n     *\r\n     * @param x X軸の中心位置\r\n     * @param y Y軸の中心位置\r\n     *\r\n     * @note widthかheightを設定したあとでないと、拡大率が正しく取得できないためずれる。\r\n     */\n    setCenterPosition(x, y) {\n      this.centerX(x);\n      this.centerY(y);\n    }\n\n    /**\r\n     * 上辺の位置を設定する\r\n     *\r\n     * @param y 上辺のY軸位置\r\n     */\n    top(y) {\n      this.setY(y);\n    }\n\n    /**\r\n     * 下辺の位置を設定する\r\n     *\r\n     * @param y 下辺のY軸位置\r\n     */\n    bottom(y) {\n      const h = this._height * this.getScaleY();\n      this.translateY(y - h);\n    }\n\n    /**\r\n     * 左辺の位置を設定\r\n     *\r\n     * @param x 左辺のX軸位置\r\n     */\n    left(x) {\n      this.setX(x);\n    }\n\n    /**\r\n     * 右辺の位置を設定\r\n     *\r\n     * @param x 右辺のX軸位置\r\n     */\n    right(x) {\n      const w = this._width * this.getScaleX();\n      this.translateX(x - w);\n    }\n\n    /**\r\n     * X軸の中心位置を設定\r\n     *\r\n     * @param x X軸の中心位置\r\n     */\n    centerX(x) {\n      const w = this._width * this.getScaleX();\n      this.translateX(x - w / 2.0);\n    }\n\n    /**\r\n     * X軸の位置を設定\r\n     *\r\n     * @param x X軸の位置\r\n     */\n    setX(x) {\n      this.translateX(x);\n    }\n\n    /**\r\n     * Y軸の中心位置を設定\r\n     *\r\n     * @param y Y軸の中心位置\r\n     */\n    centerY(y) {\n      const h = this._height * this.getScaleY();\n      this.translateY(y - h / 2.0);\n    }\n\n    /**\r\n     * Y軸の位置を設定する\r\n     *\r\n     * @param y Y軸の位置\r\n     */\n    setY(y) {\n      this.translateY(y);\n    }\n\n    /**\r\n     * レイアウト情報から位置を設定\r\n     *\r\n     * @param layout レイアウト情報\r\n     */\n    setupFromLayout(layout) {\n      const keyWidth = 'width';\n      const keyHeight = 'height';\n      const keyX = 'x';\n      const keyY = 'y';\n      const keyCenterX = 'center_x';\n      const keyCenterY = 'center_y';\n      const keyTop = 'top';\n      const keyBottom = 'bottom';\n      const keyLeft = 'left';\n      const keyRight = 'right';\n      for (const ite = layout.begin(); ite.notEqual(layout.end()); ite.preIncrement()) {\n        const key = ite.ptr().first;\n        const value = ite.ptr().second;\n        if (key == keyWidth) {\n          this.setWidth(value);\n        } else if (key == keyHeight) {\n          this.setHeight(value);\n        }\n      }\n      for (const ite = layout.begin(); ite.notEqual(layout.end()); ite.preIncrement()) {\n        const key = ite.ptr().first;\n        const value = ite.ptr().second;\n        if (key == keyX) {\n          this.setX(value);\n        } else if (key == keyY) {\n          this.setY(value);\n        } else if (key == keyCenterX) {\n          this.centerX(value);\n        } else if (key == keyCenterY) {\n          this.centerY(value);\n        } else if (key == keyTop) {\n          this.top(value);\n        } else if (key == keyBottom) {\n          this.bottom(value);\n        } else if (key == keyLeft) {\n          this.left(value);\n        } else if (key == keyRight) {\n          this.right(value);\n        }\n      }\n    }\n\n    // 縦幅\n  }\n  _Live2DCubismFramework.CubismModelMatrix = CubismModelMatrix;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["Live2DCubismFramework","csmmap","cubismmatrix44","csmMap","iterator","CubismMatrix44","_Live2DCubismFramework","CubismModelMatrix","constructor","w","h","_width","_height","undefined","setHeight","setWidth","scaleX","scaleY","scale","setPosition","x","y","translate","setCenterPosition","centerX","centerY","top","setY","bottom","getScaleY","translateY","left","setX","right","getScaleX","translateX","setupFromLayout","layout","keyWidth","keyHeight","keyX","keyY","keyCenterX","keyCenterY","keyTop","keyBottom","keyLeft","keyRight","ite","begin","notEqual","end","preIncrement","key","ptr","first","value","second"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/mylive2d/react-live2d/Samples/TypeScript/Demo/Framework/src/math/cubismmodelmatrix.ts"],"sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { Live2DCubismFramework as csmmap } from '../type/csmmap';\r\nimport { Live2DCubismFramework as cubismmatrix44 } from './cubismmatrix44';\r\nimport csmMap = csmmap.csmMap;\r\nimport iterator = csmmap.iterator;\r\nimport CubismMatrix44 = cubismmatrix44.CubismMatrix44;\r\n\r\nexport namespace Live2DCubismFramework {\r\n  /**\r\n   * モデル座標設定用の4x4行列\r\n   *\r\n   * モデル座標設定用の4x4行列クラス\r\n   */\r\n  export class CubismModelMatrix extends CubismMatrix44 {\r\n    /**\r\n     * コンストラクタ\r\n     *\r\n     * @param w 横幅\r\n     * @param h 縦幅\r\n     */\r\n    constructor(w?: number, h?: number) {\r\n      super();\r\n\r\n      this._width = w !== undefined ? w : 0.0;\r\n      this._height = h !== undefined ? h : 0.0;\r\n\r\n      this.setHeight(1.0);\r\n    }\r\n\r\n    /**\r\n     * 横幅を設定\r\n     *\r\n     * @param w 横幅\r\n     */\r\n    public setWidth(w: number): void {\r\n      const scaleX: number = w / this._width;\r\n      const scaleY: number = scaleX;\r\n      this.scale(scaleX*2.6, scaleY*2.6);\r\n    }\r\n\r\n    /**\r\n     * 縦幅を設定\r\n     * @param h 縦幅\r\n     */\r\n    public setHeight(h: number): void {\r\n      const scaleX: number = h / this._height;\r\n      const scaleY: number = scaleX;\r\n      this.scale(scaleX*2.6, scaleY*2.6);\r\n    }\r\n\r\n    /**\r\n     * 位置を設定\r\n     *\r\n     * @param x X軸の位置\r\n     * @param y Y軸の位置\r\n     */\r\n    public setPosition(x: number, y: number): void {\r\n      this.translate(x, y);\r\n    }\r\n\r\n    /**\r\n     * 中心位置を設定\r\n     *\r\n     * @param x X軸の中心位置\r\n     * @param y Y軸の中心位置\r\n     *\r\n     * @note widthかheightを設定したあとでないと、拡大率が正しく取得できないためずれる。\r\n     */\r\n    public setCenterPosition(x: number, y: number) {\r\n      this.centerX(x);\r\n      this.centerY(y);\r\n    }\r\n\r\n    /**\r\n     * 上辺の位置を設定する\r\n     *\r\n     * @param y 上辺のY軸位置\r\n     */\r\n    public top(y: number): void {\r\n      this.setY(y);\r\n    }\r\n\r\n    /**\r\n     * 下辺の位置を設定する\r\n     *\r\n     * @param y 下辺のY軸位置\r\n     */\r\n    public bottom(y: number) {\r\n      const h: number = this._height * this.getScaleY();\r\n\r\n      this.translateY(y - h);\r\n    }\r\n\r\n    /**\r\n     * 左辺の位置を設定\r\n     *\r\n     * @param x 左辺のX軸位置\r\n     */\r\n    public left(x: number): void {\r\n      this.setX(x);\r\n    }\r\n\r\n    /**\r\n     * 右辺の位置を設定\r\n     *\r\n     * @param x 右辺のX軸位置\r\n     */\r\n    public right(x: number): void {\r\n      const w = this._width * this.getScaleX();\r\n\r\n      this.translateX(x - w);\r\n    }\r\n\r\n    /**\r\n     * X軸の中心位置を設定\r\n     *\r\n     * @param x X軸の中心位置\r\n     */\r\n    public centerX(x: number): void {\r\n      const w = this._width * this.getScaleX();\r\n\r\n      this.translateX(x - w / 2.0);\r\n    }\r\n\r\n    /**\r\n     * X軸の位置を設定\r\n     *\r\n     * @param x X軸の位置\r\n     */\r\n    public setX(x: number): void {\r\n      this.translateX(x);\r\n    }\r\n\r\n    /**\r\n     * Y軸の中心位置を設定\r\n     *\r\n     * @param y Y軸の中心位置\r\n     */\r\n    public centerY(y: number): void {\r\n      const h: number = this._height * this.getScaleY();\r\n\r\n      this.translateY(y - h / 2.0);\r\n    }\r\n\r\n    /**\r\n     * Y軸の位置を設定する\r\n     *\r\n     * @param y Y軸の位置\r\n     */\r\n    public setY(y: number): void {\r\n      this.translateY(y);\r\n    }\r\n\r\n    /**\r\n     * レイアウト情報から位置を設定\r\n     *\r\n     * @param layout レイアウト情報\r\n     */\r\n    public setupFromLayout(layout: csmMap<string, number>): void {\r\n      const keyWidth = 'width';\r\n      const keyHeight = 'height';\r\n      const keyX = 'x';\r\n      const keyY = 'y';\r\n      const keyCenterX = 'center_x';\r\n      const keyCenterY = 'center_y';\r\n      const keyTop = 'top';\r\n      const keyBottom = 'bottom';\r\n      const keyLeft = 'left';\r\n      const keyRight = 'right';\r\n\r\n      for (\r\n        const ite: iterator<string, number> = layout.begin();\r\n        ite.notEqual(layout.end());\r\n        ite.preIncrement()\r\n      ) {\r\n        const key: string = ite.ptr().first;\r\n        const value: number = ite.ptr().second;\r\n\r\n        if (key == keyWidth) {\r\n          this.setWidth(value);\r\n        } else if (key == keyHeight) {\r\n          this.setHeight(value);\r\n        }\r\n      }\r\n\r\n      for (\r\n        const ite: iterator<string, number> = layout.begin();\r\n        ite.notEqual(layout.end());\r\n        ite.preIncrement()\r\n      ) {\r\n        const key: string = ite.ptr().first;\r\n        const value: number = ite.ptr().second;\r\n\r\n        if (key == keyX) {\r\n          this.setX(value);\r\n        } else if (key == keyY) {\r\n          this.setY(value);\r\n        } else if (key == keyCenterX) {\r\n          this.centerX(value);\r\n        } else if (key == keyCenterY) {\r\n          this.centerY(value);\r\n        } else if (key == keyTop) {\r\n          this.top(value);\r\n        } else if (key == keyBottom) {\r\n          this.bottom(value);\r\n        } else if (key == keyLeft) {\r\n          this.left(value);\r\n        } else if (key == keyRight) {\r\n          this.right(value);\r\n        }\r\n      }\r\n    }\r\n\r\n    private _width: number; // 横幅\r\n    private _height: number; // 縦幅\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}