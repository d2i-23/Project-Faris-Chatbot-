{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * プラットフォーム依存機能を抽象化する Cubism Platform Abstraction Layer.\n *\n * ファイル読み込みや時刻取得等のプラットフォームに依存する関数をまとめる。\n */\nexport class LAppPal {\n  /**\n   * ファイルをバイトデータとして読みこむ\n   *\n   * @param filePath 読み込み対象ファイルのパス\n   * @return\n   * {\n   *      buffer,   読み込んだバイトデータ\n   *      size        ファイルサイズ\n   * }\n   */\n  static loadFileAsBytes(filePath, callback) {\n    console.log(\"REREW\");\n    fetch(filePath).then(response => response.arrayBuffer()).then(arrayBuffer => callback(arrayBuffer, arrayBuffer.byteLength));\n  }\n\n  /**\n   * デルタ時間（前回フレームとの差分）を取得する\n   * @return デルタ時間[ms]\n   */\n  static getDeltaTime() {\n    return this.s_deltaTime;\n  }\n  static updateTime() {\n    this.s_currentFrame = Date.now();\n    this.s_deltaTime = (this.s_currentFrame - this.s_lastFrame) / 1000;\n    this.s_lastFrame = this.s_currentFrame;\n  }\n\n  /**\n   * メッセージを出力する\n   * @param message 文字列\n   */\n  static printMessage(message) {\n    console.log(message);\n  }\n}\nLAppPal.lastUpdate = Date.now();\nLAppPal.s_currentFrame = 0.0;\nLAppPal.s_lastFrame = 0.0;\nLAppPal.s_deltaTime = 0.0;","map":{"version":3,"names":["LAppPal","loadFileAsBytes","filePath","callback","console","log","fetch","then","response","arrayBuffer","byteLength","getDeltaTime","s_deltaTime","updateTime","s_currentFrame","Date","now","s_lastFrame","printMessage","message","lastUpdate"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/src/lapppal.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * プラットフォーム依存機能を抽象化する Cubism Platform Abstraction Layer.\n *\n * ファイル読み込みや時刻取得等のプラットフォームに依存する関数をまとめる。\n */\nexport class LAppPal {\n  /**\n   * ファイルをバイトデータとして読みこむ\n   *\n   * @param filePath 読み込み対象ファイルのパス\n   * @return\n   * {\n   *      buffer,   読み込んだバイトデータ\n   *      size        ファイルサイズ\n   * }\n   */\n  public static loadFileAsBytes(\n    filePath: string,\n    callback: (arrayBuffer: ArrayBuffer, size: number) => void\n  ): void {\n    console.log(\"REREW\")\n    fetch(filePath)\n      .then(response => response.arrayBuffer())\n      .then(arrayBuffer => callback(arrayBuffer, arrayBuffer.byteLength));\n  }\n\n  /**\n   * デルタ時間（前回フレームとの差分）を取得する\n   * @return デルタ時間[ms]\n   */\n  public static getDeltaTime(): number {\n    return this.s_deltaTime;\n  }\n\n  public static updateTime(): void {\n    this.s_currentFrame = Date.now();\n    this.s_deltaTime = (this.s_currentFrame - this.s_lastFrame) / 1000;\n    this.s_lastFrame = this.s_currentFrame;\n  }\n\n  /**\n   * メッセージを出力する\n   * @param message 文字列\n   */\n  public static printMessage(message: string): void {\n    console.log(message);\n  }\n\n  static lastUpdate = Date.now();\n\n  static s_currentFrame = 0.0;\n  static s_lastFrame = 0.0;\n  static s_deltaTime = 0.0;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,OAAO,CAAC;EACnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAcC,eAAeA,CAC3BC,QAAgB,EAChBC,QAA0D,EACpD;IACNC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpBC,KAAK,CAACJ,QAAQ,CAAC,CACZK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CACxCF,IAAI,CAACE,WAAW,IAAIN,QAAQ,CAACM,WAAW,EAAEA,WAAW,CAACC,UAAU,CAAC,CAAC;EACvE;;EAEA;AACF;AACA;AACA;EACE,OAAcC,YAAYA,CAAA,EAAW;IACnC,OAAO,IAAI,CAACC,WAAW;EACzB;EAEA,OAAcC,UAAUA,CAAA,EAAS;IAC/B,IAAI,CAACC,cAAc,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAChC,IAAI,CAACJ,WAAW,GAAG,CAAC,IAAI,CAACE,cAAc,GAAG,IAAI,CAACG,WAAW,IAAI,IAAI;IAClE,IAAI,CAACA,WAAW,GAAG,IAAI,CAACH,cAAc;EACxC;;EAEA;AACF;AACA;AACA;EACE,OAAcI,YAAYA,CAACC,OAAe,EAAQ;IAChDf,OAAO,CAACC,GAAG,CAACc,OAAO,CAAC;EACtB;AAOF;AAhDanB,OAAO,CA2CXoB,UAAU,GAAGL,IAAI,CAACC,GAAG,CAAC,CAAC;AA3CnBhB,OAAO,CA6CXc,cAAc,GAAG,GAAG;AA7ChBd,OAAO,CA8CXiB,WAAW,GAAG,GAAG;AA9CbjB,OAAO,CA+CXY,WAAW,GAAG,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}