{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismIdManager } from './id/cubismidmanager';\nimport { CubismRenderer } from './rendering/cubismrenderer';\nimport { CSM_ASSERT, CubismLogInfo, CubismLogWarning } from './utils/cubismdebug';\nimport { Value } from './utils/cubismjson';\nexport function strtod(s, endPtr) {\n  let index = 0;\n  for (let i = 1;; i++) {\n    const testC = s.slice(i - 1, i);\n\n    // 指数・マイナスの可能性があるのでスキップする\n    if (testC == 'e' || testC == '-' || testC == 'E') {\n      continue;\n    } // 文字列の範囲を広げていく\n\n    const test = s.substring(0, i);\n    const number = Number(test);\n    if (isNaN(number)) {\n      // 数値として認識できなくなったので終了\n      break;\n    } // 最後に数値としてできたindexを格納しておく\n\n    index = i;\n  }\n  let d = parseFloat(s); // パースした数値\n\n  if (isNaN(d)) {\n    // 数値として認識できなくなったので終了\n    d = NaN;\n  }\n  endPtr[0] = s.slice(index); // 後続の文字列\n  return d;\n}\n\n// ファイルスコープの変数を初期化\n\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option = null;\nlet s_cubismIdManager = null;\n\n/**\n * Framework内で使う定数の宣言\n */\nexport const Constant = Object.freeze({\n  vertexOffset: 0,\n  // メッシュ頂点のオフセット値\n  vertexStep: 2 // メッシュ頂点のステップ値\n});\n\nexport function csmDelete(address) {\n  if (!address) {\n    return;\n  }\n  address = void 0;\n}\n\n/**\n * Live2D Cubism SDK Original Workflow SDKのエントリポイント\n * 利用開始時はCubismFramework.initialize()を呼び、CubismFramework.dispose()で終了する。\n */\nexport class CubismFramework {\n  /**\n   * Cubism FrameworkのAPIを使用可能にする。\n   *  APIを実行する前に必ずこの関数を実行すること。\n   *  一度準備が完了して以降は、再び実行しても内部処理がスキップされます。\n   *\n   * @param    option      Optionクラスのインスタンス\n   *\n   * @return   準備処理が完了したらtrueが返ります。\n   */\n  static startUp() {\n    let option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    if (s_isStarted) {\n      CubismLogInfo('CubismFramework.startUp() is already done.');\n      return s_isStarted;\n    }\n    s_option = option;\n    if (s_option != null) {\n      CubismLogInfo('Does this ever happen?');\n      //Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n    }\n\n    s_isStarted = true;\n\n    // Live2D Cubism Coreバージョン情報を表示\n    if (s_isStarted) {\n      const version = 0; //Live2DCubismCore.Version.csmGetVersion();\n      const major = (version & 0xff000000) >> 24;\n      const minor = (version & 0x00ff0000) >> 16;\n      const patch = version & 0x0000ffff;\n      const versionNumber = version;\n      CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, ('00' + major).slice(-2), ('00' + minor).slice(-2), ('0000' + patch).slice(-4), versionNumber);\n    }\n    CubismLogInfo('CubismFramework.startUp() is complete.');\n    return s_isStarted;\n  }\n\n  /**\n   * StartUp()で初期化したCubismFrameworkの各パラメータをクリアします。\n   * Dispose()したCubismFrameworkを再利用する際に利用してください。\n   */\n  static cleanUp() {\n    s_isStarted = false;\n    s_isInitialized = false;\n    s_option = null;\n    s_cubismIdManager = null;\n  }\n\n  /**\n   * Cubism Framework内のリソースを初期化してモデルを表示可能な状態にします。<br>\n   *     再度Initialize()するには先にDispose()を実行する必要があります。\n   *\n   * @param memorySize 初期化時メモリ量 [byte(s)]\n   *    複数モデル表示時などにモデルが更新されない際に使用してください。\n   *    指定する際は必ず1024*1024*16 byte(16MB)以上の値を指定してください。\n   *    それ以外はすべて1024*1024*16 byteに丸めます。\n   */\n  static initialize() {\n    let memorySize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    CSM_ASSERT(s_isStarted);\n    if (!s_isStarted) {\n      CubismLogWarning('CubismFramework is not started.');\n      return;\n    }\n\n    // --- s_isInitializedによる連続初期化ガード ---\n    // 連続してリソース確保が行われないようにする。\n    // 再度Initialize()するには先にDispose()を実行する必要がある。\n    if (s_isInitialized) {\n      CubismLogWarning('CubismFramework.initialize() skipped, already initialized.');\n      return;\n    }\n\n    //---- static 初期化 ----\n    Value.staticInitializeNotForClientCall();\n    s_cubismIdManager = new CubismIdManager();\n\n    // --- HACK: 初期化時メモリ量の拡張(単位byte) ---\n    // 複数モデル表示時などにモデルが更新されない際に使用してください。\n    // 指定する際は必ず1024*1024*16 byte(16MB)以上の値を指定してください。\n    // それ以外はすべて1024*1024*16 byteに丸めます。\n    Live2DCubismCore.Memory.initializeAmountOfMemory(memorySize);\n    s_isInitialized = true;\n    CubismLogInfo('CubismFramework.initialize() is complete.');\n  }\n\n  /**\n   * Cubism Framework内の全てのリソースを解放します。\n   *      ただし、外部で確保されたリソースについては解放しません。\n   *      外部で適切に破棄する必要があります。\n   */\n  static dispose() {\n    CSM_ASSERT(s_isStarted);\n    if (!s_isStarted) {\n      CubismLogWarning('CubismFramework is not started.');\n      return;\n    }\n\n    // --- s_isInitializedによる未初期化解放ガード ---\n    // dispose()するには先にinitialize()を実行する必要がある。\n    if (!s_isInitialized) {\n      // false...リソース未確保の場合\n      CubismLogWarning('CubismFramework.dispose() skipped, not initialized.');\n      return;\n    }\n    Value.staticReleaseNotForClientCall();\n    s_cubismIdManager.release();\n    s_cubismIdManager = null;\n\n    // レンダラの静的リソース（シェーダプログラム他）を解放する\n    CubismRenderer.staticRelease();\n    s_isInitialized = false;\n    CubismLogInfo('CubismFramework.dispose() is complete.');\n  }\n\n  /**\n   * Cubism FrameworkのAPIを使用する準備が完了したかどうか\n   * @return APIを使用する準備が完了していればtrueが返ります。\n   */\n  static isStarted() {\n    return s_isStarted;\n  }\n\n  /**\n   * Cubism Frameworkのリソース初期化がすでに行われているかどうか\n   * @return リソース確保が完了していればtrueが返ります\n   */\n  static isInitialized() {\n    return s_isInitialized;\n  }\n\n  /**\n   * Core APIにバインドしたログ関数を実行する\n   *\n   * @praram message ログメッセージ\n   */\n  static coreLogFunction(message) {\n    // Return if logging not possible.\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n      return;\n    }\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\n  }\n\n  /**\n   * 現在のログ出力レベル設定の値を返す。\n   *\n   * @return  現在のログ出力レベル設定の値\n   */\n  static getLoggingLevel() {\n    if (s_option != null) {\n      return s_option.loggingLevel;\n    }\n    return LogLevel.LogLevel_Off;\n  }\n\n  /**\n   * IDマネージャのインスタンスを取得する\n   * @return CubismManagerクラスのインスタンス\n   */\n  static getIdManager() {\n    return s_cubismIdManager;\n  }\n\n  /**\n   * 静的クラスとして使用する\n   * インスタンス化させない\n   */\n  constructor() {}\n}\nexport class Option {\n  constructor() {\n    this.logFunction = void 0;\n    // ログ出力の関数オブジェクト\n    this.loggingLevel = void 0;\n  } // ログ出力レベルの設定\n}\n\n/**\n * ログ出力のレベル\n */\nexport let LogLevel = /*#__PURE__*/function (LogLevel) {\n  LogLevel[LogLevel[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n  LogLevel[LogLevel[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n  LogLevel[LogLevel[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n  LogLevel[LogLevel[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n  LogLevel[LogLevel[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n  LogLevel[LogLevel[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n  return LogLevel;\n}({}); // ログ出力無効\n\n// Namespace definition for compatibility.\nimport * as $ from './live2dcubismframework';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  const Constant = _Live2DCubismFramework.Constant = $.Constant;\n  const csmDelete = _Live2DCubismFramework.csmDelete = $.csmDelete;\n  const CubismFramework = _Live2DCubismFramework.CubismFramework = $.CubismFramework;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["CubismIdManager","CubismRenderer","CSM_ASSERT","CubismLogInfo","CubismLogWarning","Value","strtod","s","endPtr","index","i","testC","slice","test","substring","number","Number","isNaN","d","parseFloat","NaN","s_isStarted","s_isInitialized","s_option","s_cubismIdManager","Constant","Object","freeze","vertexOffset","vertexStep","csmDelete","address","CubismFramework","startUp","option","arguments","length","undefined","version","major","minor","patch","versionNumber","cleanUp","initialize","memorySize","staticInitializeNotForClientCall","Live2DCubismCore","Memory","initializeAmountOfMemory","dispose","staticReleaseNotForClientCall","release","staticRelease","isStarted","isInitialized","coreLogFunction","message","Logging","csmGetLogFunction","getLoggingLevel","loggingLevel","LogLevel","LogLevel_Off","getIdManager","constructor","Option","logFunction","$","Live2DCubismFramework","_Live2DCubismFramework"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/Framework/src/live2dcubismframework.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n\n\nimport { CubismIdManager } from './id/cubismidmanager';\nimport { CubismRenderer } from './rendering/cubismrenderer';\nimport {\n  CSM_ASSERT,\n  CubismLogInfo,\n  CubismLogWarning,\n} from './utils/cubismdebug';\nimport { Value } from './utils/cubismjson';\n\nexport function strtod(s: string, endPtr: string[]): number {\n  let index = 0;\n  for (let i = 1; ; i++) {\n    const testC: string = s.slice(i - 1, i);\n\n    // 指数・マイナスの可能性があるのでスキップする\n    if (testC == 'e' || testC == '-' || testC == 'E') {\n      continue;\n    } // 文字列の範囲を広げていく\n\n    const test: string = s.substring(0, i);\n    const number = Number(test);\n    if (isNaN(number)) {\n      // 数値として認識できなくなったので終了\n      break;\n    } // 最後に数値としてできたindexを格納しておく\n\n    index = i;\n  }\n  let d = parseFloat(s); // パースした数値\n\n  if (isNaN(d)) {\n    // 数値として認識できなくなったので終了\n    d = NaN;\n  }\n\n  endPtr[0] = s.slice(index); // 後続の文字列\n  return d;\n}\n\n// ファイルスコープの変数を初期化\n\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option: Option = null;\nlet s_cubismIdManager: CubismIdManager = null;\n\n/**\n * Framework内で使う定数の宣言\n */\nexport const Constant = Object.freeze<Record<string, number>>({\n  vertexOffset: 0, // メッシュ頂点のオフセット値\n  vertexStep: 2, // メッシュ頂点のステップ値\n});\n\nexport function csmDelete<T>(address: T): void {\n  if (!address) {\n    return;\n  }\n\n  address = void 0;\n}\n\n/**\n * Live2D Cubism SDK Original Workflow SDKのエントリポイント\n * 利用開始時はCubismFramework.initialize()を呼び、CubismFramework.dispose()で終了する。\n */\nexport class CubismFramework {\n  /**\n   * Cubism FrameworkのAPIを使用可能にする。\n   *  APIを実行する前に必ずこの関数を実行すること。\n   *  一度準備が完了して以降は、再び実行しても内部処理がスキップされます。\n   *\n   * @param    option      Optionクラスのインスタンス\n   *\n   * @return   準備処理が完了したらtrueが返ります。\n   */\n  public static startUp(option: Option = null): boolean {\n    if (s_isStarted) {\n      CubismLogInfo('CubismFramework.startUp() is already done.');\n      return s_isStarted;\n    }\n\n    s_option = option;\n\n    if (s_option != null) {\n      CubismLogInfo('Does this ever happen?')\n      //Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n    }\n\n    s_isStarted = true;\n\n    // Live2D Cubism Coreバージョン情報を表示\n    if (s_isStarted) {\n      const version: number = 0;//Live2DCubismCore.Version.csmGetVersion();\n      const major: number = (version & 0xff000000) >> 24;\n      const minor: number = (version & 0x00ff0000) >> 16;\n      const patch: number = version & 0x0000ffff;\n      const versionNumber: number = version;\n\n      CubismLogInfo(\n        `Live2D Cubism Core version: {0}.{1}.{2} ({3})`,\n        ('00' + major).slice(-2),\n        ('00' + minor).slice(-2),\n        ('0000' + patch).slice(-4),\n        versionNumber\n      );\n    }\n\n    CubismLogInfo('CubismFramework.startUp() is complete.');\n\n    return s_isStarted;\n  }\n\n  /**\n   * StartUp()で初期化したCubismFrameworkの各パラメータをクリアします。\n   * Dispose()したCubismFrameworkを再利用する際に利用してください。\n   */\n  public static cleanUp(): void {\n    s_isStarted = false;\n    s_isInitialized = false;\n    s_option = null;\n    s_cubismIdManager = null;\n  }\n\n  /**\n   * Cubism Framework内のリソースを初期化してモデルを表示可能な状態にします。<br>\n   *     再度Initialize()するには先にDispose()を実行する必要があります。\n   *\n   * @param memorySize 初期化時メモリ量 [byte(s)]\n   *    複数モデル表示時などにモデルが更新されない際に使用してください。\n   *    指定する際は必ず1024*1024*16 byte(16MB)以上の値を指定してください。\n   *    それ以外はすべて1024*1024*16 byteに丸めます。\n   */\n  public static initialize(memorySize = 0): void {\n    CSM_ASSERT(s_isStarted);\n    if (!s_isStarted) {\n      CubismLogWarning('CubismFramework is not started.');\n      return;\n    }\n\n    // --- s_isInitializedによる連続初期化ガード ---\n    // 連続してリソース確保が行われないようにする。\n    // 再度Initialize()するには先にDispose()を実行する必要がある。\n    if (s_isInitialized) {\n      CubismLogWarning(\n        'CubismFramework.initialize() skipped, already initialized.'\n      );\n      return;\n    }\n\n    //---- static 初期化 ----\n    Value.staticInitializeNotForClientCall();\n\n    s_cubismIdManager = new CubismIdManager();\n\n    // --- HACK: 初期化時メモリ量の拡張(単位byte) ---\n    // 複数モデル表示時などにモデルが更新されない際に使用してください。\n    // 指定する際は必ず1024*1024*16 byte(16MB)以上の値を指定してください。\n    // それ以外はすべて1024*1024*16 byteに丸めます。\n    Live2DCubismCore.Memory.initializeAmountOfMemory(memorySize);\n\n    s_isInitialized = true;\n\n    CubismLogInfo('CubismFramework.initialize() is complete.');\n  }\n\n  /**\n   * Cubism Framework内の全てのリソースを解放します。\n   *      ただし、外部で確保されたリソースについては解放しません。\n   *      外部で適切に破棄する必要があります。\n   */\n  public static dispose(): void {\n    CSM_ASSERT(s_isStarted);\n    if (!s_isStarted) {\n      CubismLogWarning('CubismFramework is not started.');\n      return;\n    }\n\n    // --- s_isInitializedによる未初期化解放ガード ---\n    // dispose()するには先にinitialize()を実行する必要がある。\n    if (!s_isInitialized) {\n      // false...リソース未確保の場合\n      CubismLogWarning('CubismFramework.dispose() skipped, not initialized.');\n      return;\n    }\n\n    Value.staticReleaseNotForClientCall();\n\n    s_cubismIdManager.release();\n    s_cubismIdManager = null;\n\n    // レンダラの静的リソース（シェーダプログラム他）を解放する\n    CubismRenderer.staticRelease();\n\n    s_isInitialized = false;\n\n    CubismLogInfo('CubismFramework.dispose() is complete.');\n  }\n\n  /**\n   * Cubism FrameworkのAPIを使用する準備が完了したかどうか\n   * @return APIを使用する準備が完了していればtrueが返ります。\n   */\n  public static isStarted(): boolean {\n    return s_isStarted;\n  }\n\n  /**\n   * Cubism Frameworkのリソース初期化がすでに行われているかどうか\n   * @return リソース確保が完了していればtrueが返ります\n   */\n  public static isInitialized(): boolean {\n    return s_isInitialized;\n  }\n\n  /**\n   * Core APIにバインドしたログ関数を実行する\n   *\n   * @praram message ログメッセージ\n   */\n  public static coreLogFunction(message: string): void {\n    // Return if logging not possible.\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n      return;\n    }\n\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\n  }\n\n  /**\n   * 現在のログ出力レベル設定の値を返す。\n   *\n   * @return  現在のログ出力レベル設定の値\n   */\n  public static getLoggingLevel(): LogLevel {\n    if (s_option != null) {\n      return s_option.loggingLevel;\n    }\n    return LogLevel.LogLevel_Off;\n  }\n\n  /**\n   * IDマネージャのインスタンスを取得する\n   * @return CubismManagerクラスのインスタンス\n   */\n  public static getIdManager(): CubismIdManager {\n    return s_cubismIdManager;\n  }\n\n  /**\n   * 静的クラスとして使用する\n   * インスタンス化させない\n   */\n  private constructor() {}\n}\n\nexport class Option {\n  logFunction: Live2DCubismCore.csmLogFunction; // ログ出力の関数オブジェクト\n  loggingLevel: LogLevel; // ログ出力レベルの設定\n}\n\n/**\n * ログ出力のレベル\n */\nexport enum LogLevel {\n  LogLevel_Verbose = 0, // 詳細ログ\n  LogLevel_Debug, // デバッグログ\n  LogLevel_Info, // Infoログ\n  LogLevel_Warning, // 警告ログ\n  LogLevel_Error, // エラーログ\n  LogLevel_Off, // ログ出力無効\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './live2dcubismframework';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Live2DCubismFramework {\n  export const Constant = $.Constant;\n  export const csmDelete = $.csmDelete;\n  export const CubismFramework = $.CubismFramework;\n  export type CubismFramework = $.CubismFramework;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}