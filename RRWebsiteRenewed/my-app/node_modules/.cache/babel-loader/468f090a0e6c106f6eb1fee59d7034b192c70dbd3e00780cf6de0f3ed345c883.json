{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismmatrix44 } from '../Framework/src/math/cubismmatrix44';\nimport { Live2DCubismFramework as csmvector } from '../Framework/src/type/csmvector';\nimport { Live2DCubismFramework as acubismmotion } from '../Framework/src/motion/acubismmotion';\nvar Csm_csmVector = csmvector.csmVector;\nvar Csm_CubismMatrix44 = cubismmatrix44.CubismMatrix44;\nvar ACubismMotion = acubismmotion.ACubismMotion;\nimport { LAppModel } from './lappmodel';\nimport { LAppPal } from './lapppal';\nimport { canvas } from './lappdelegate';\nimport * as LAppDefine from './lappdefine';\nexport let s_instance = null;\nlet timer = null;\n\n/**\n * サンプルアプリケーションにおいてCubismModelを管理するクラス\n * モデル生成と破棄、タップイベントの処理、モデル切り替えを行う。\n * 管理样本应用程序中的CubismModel的类\n * 进行模型生成和废弃、抽头事件的处理、模型切换。\n */\nexport class LAppLive2DManager {\n  /**\n   * クラスのインスタンス（シングルトン）を返す。\n   * インスタンスが生成されていない場合は内部でインスタンスを生成する。\n   *\n   * @return クラスのインスタンス\n   */\n  static getInstance() {\n    if (s_instance == null) {\n      s_instance = new LAppLive2DManager();\n    }\n    return s_instance;\n  }\n\n  /**\n   * クラスのインスタンス（シングルトン）を解放する。\n   */\n  static releaseInstance() {\n    if (s_instance != null) {\n      s_instance = void 0;\n    }\n    s_instance = null;\n  }\n\n  /**\n   * 現在のシーンで保持しているモデルを返す。\n   *\n   * @param no モデルリストのインデックス値\n   * @return モデルのインスタンスを返す。インデックス値が範囲外の場合はNULLを返す。\n   */\n  getModel(no) {\n    if (no < this._models.getSize()) {\n      return this._models.at(no);\n    }\n    return null;\n  }\n\n  /**\n   * 現在のシーンで保持しているすべてのモデルを解放する\n   */\n  releaseAllModel() {\n    for (let i = 0; i < this._models.getSize(); i++) {\n      this._models.at(i).release();\n      this._models.set(i, null);\n    }\n    this._models.clear();\n  }\n\n  /**\n   * 画面をドラッグした時の処理\n   *\n   * @param x 画面のX座標\n   * @param y 画面のY座標\n   */\n  onDrag(x, y) {\n    for (let i = 0; i < this._models.getSize(); i++) {\n      const model = this.getModel(i);\n      if (model) {\n        model.setDragging(x, y);\n      }\n    }\n  }\n\n  /**\n   * 画面をタップした時の処理\n   *\n   * @param x 画面のX座標\n   * @param y 画面のY座標\n   */\n  onTap(x, y) {\n    if (LAppDefine.DebugLogEnable) {\n      LAppPal.printMessage(`[APP]tap point: {x: ${x.toFixed(2)} y: ${y.toFixed(2)}}`);\n    }\n    for (let i = 0; i < this._models.getSize(); i++) {\n      if (this._models.at(i).hitTest(LAppDefine.HitAreaNameHead, x, y)) {\n        if (LAppDefine.DebugLogEnable) {\n          LAppPal.printMessage(`[APP]hit area: [${LAppDefine.HitAreaNameHead}]`);\n          this.talkPrint(LAppDefine.HitHeadList[Math.floor(Math.random() * LAppDefine.HitHeadList.length)]);\n        }\n        this._models.at(i).setRandomExpression();\n      } else if (this._models.at(i).hitTest(LAppDefine.HitAreaNameBody, x, y)) {\n        if (LAppDefine.DebugLogEnable) {\n          LAppPal.printMessage(`[APP]hit area: [${LAppDefine.HitAreaNameBody}]`);\n          this.talkPrint(LAppDefine.HitBodyList[Math.floor(Math.random() * LAppDefine.HitBodyList.length)]);\n        }\n        this._models.at(i).startRandomMotion(LAppDefine.MotionGroupTapBody, LAppDefine.PriorityNormal, this._finishedMotion);\n      } else {\n        this._models.at(i).startRandomMotion(LAppDefine.MotionGroupDefault, LAppDefine.PriorityNormal, this._finishedMotion);\n      }\n    }\n  }\n\n  // 页面属性变化\n  talkPrint(print) {\n    clearTimeout(timer);\n    let printNow = document.getElementById('live2d-print');\n    printNow.innerHTML = print;\n    printNow.style.display = 'block';\n    timer = setTimeout(() => {\n      printNow.innerHTML = '';\n      printNow.style.display = 'none';\n    }, 2000);\n  }\n\n  /**\n   * 画面を更新するときの処理\n   * モデルの更新処理及び描画処理を行う\n   */\n  onUpdate() {\n    let projection = new Csm_CubismMatrix44();\n    const {\n      width,\n      height\n    } = canvas;\n    projection.scale(1.0, width / height);\n    if (this._viewMatrix != null) {\n      projection.multiplyByMatrix(this._viewMatrix);\n    }\n    const saveProjection = projection.clone();\n    const modelCount = this._models.getSize();\n    for (let i = 0; i < modelCount; ++i) {\n      const model = this.getModel(i);\n      projection = saveProjection.clone();\n      model.update();\n      model.draw(projection); // 参照渡しなのでprojectionは変質する。\n    }\n  }\n\n  /**\n   * 次のシーンに切りかえる\n   * サンプルアプリケーションではモデルセットの切り替えを行う。\n   */\n  nextScene() {\n    const no = (this._sceneIndex + 1) % LAppDefine.ModelDir.length;\n    this.changeScene(no);\n  }\n\n  /**\n   * シーンを切り替える\n   * サンプルアプリケーションではモデルセットの切り替えを行う。\n   * 转换镜头\n   * 在样本应用程序中切换模型集。\n   */\n  changeScene(index) {\n    this._sceneIndex = index;\n    if (LAppDefine.DebugLogEnable) {\n      LAppPal.printMessage(`[APP]model index: ${this._sceneIndex}`);\n    }\n\n    // ModelDir[]に保持したディレクトリ名から\n    // model3.jsonのパスを決定する。\n    // ディレクトリ名とmodel3.jsonの名前を一致させておくこと。\n\n    const model = LAppDefine.ModelDir[index];\n    const modelPath = LAppDefine.ResourcesPath + model + '/';\n    let modelJsonName = LAppDefine.ModelDir[index];\n    modelJsonName += '.model3.json';\n    this.releaseAllModel();\n    this._models.pushBack(new LAppModel());\n    this._models.at(0).loadAssets(modelPath, modelJsonName);\n  }\n\n  /**\n   * コンストラクタ\n   */\n  constructor() {\n    this._viewMatrix = void 0;\n    // モデル描画に用いるview行列\n    this._models = void 0;\n    // モデルインスタンスのコンテナ\n    this._sceneIndex = void 0;\n    // 表示するシーンのインデックス値\n    // モーション再生終了のコールバック関数\n    this._finishedMotion = self => {\n      LAppPal.printMessage('Motion Finished:');\n    };\n    this._viewMatrix = new Csm_CubismMatrix44();\n    this._models = new Csm_csmVector();\n    this._sceneIndex = 0;\n    this.changeScene(this._sceneIndex);\n  }\n}","map":{"version":3,"names":["Live2DCubismFramework","cubismmatrix44","csmvector","acubismmotion","Csm_csmVector","csmVector","Csm_CubismMatrix44","CubismMatrix44","ACubismMotion","LAppModel","LAppPal","canvas","LAppDefine","s_instance","timer","LAppLive2DManager","getInstance","releaseInstance","getModel","no","_models","getSize","at","releaseAllModel","i","release","set","clear","onDrag","x","y","model","setDragging","onTap","DebugLogEnable","printMessage","toFixed","hitTest","HitAreaNameHead","talkPrint","HitHeadList","Math","floor","random","length","setRandomExpression","HitAreaNameBody","HitBodyList","startRandomMotion","MotionGroupTapBody","PriorityNormal","_finishedMotion","MotionGroupDefault","print","clearTimeout","printNow","document","getElementById","innerHTML","style","display","setTimeout","onUpdate","projection","width","height","scale","_viewMatrix","multiplyByMatrix","saveProjection","clone","modelCount","update","draw","nextScene","_sceneIndex","ModelDir","changeScene","index","modelPath","ResourcesPath","modelJsonName","pushBack","loadAssets","constructor","self"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/src/lapplive2dmanager.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as cubismmatrix44 } from '../Framework/src/math/cubismmatrix44';\nimport { Live2DCubismFramework as csmvector } from '../Framework/src/type/csmvector';\nimport { Live2DCubismFramework as acubismmotion } from '../Framework/src/motion/acubismmotion';\nimport Csm_csmVector = csmvector.csmVector;\nimport Csm_CubismMatrix44 = cubismmatrix44.CubismMatrix44;\nimport ACubismMotion = acubismmotion.ACubismMotion;\n\nimport { LAppModel } from './lappmodel';\nimport { LAppPal } from './lapppal';\nimport { canvas } from './lappdelegate';\nimport * as LAppDefine from './lappdefine';\n\nexport let s_instance: LAppLive2DManager = null;\n\nlet timer = null;\n\n/**\n * サンプルアプリケーションにおいてCubismModelを管理するクラス\n * モデル生成と破棄、タップイベントの処理、モデル切り替えを行う。\n * 管理样本应用程序中的CubismModel的类\n * 进行模型生成和废弃、抽头事件的处理、模型切换。\n */\nexport class LAppLive2DManager {\n  /**\n   * クラスのインスタンス（シングルトン）を返す。\n   * インスタンスが生成されていない場合は内部でインスタンスを生成する。\n   *\n   * @return クラスのインスタンス\n   */\n  public static getInstance(): LAppLive2DManager {\n    if (s_instance == null) {\n      s_instance = new LAppLive2DManager();\n    }\n\n    return s_instance;\n  }\n\n  /**\n   * クラスのインスタンス（シングルトン）を解放する。\n   */\n  public static releaseInstance(): void {\n    if (s_instance != null) {\n      s_instance = void 0;\n    }\n\n    s_instance = null;\n  }\n\n  /**\n   * 現在のシーンで保持しているモデルを返す。\n   *\n   * @param no モデルリストのインデックス値\n   * @return モデルのインスタンスを返す。インデックス値が範囲外の場合はNULLを返す。\n   */\n  public getModel(no: number): LAppModel {\n    if (no < this._models.getSize()) {\n      return this._models.at(no);\n    }\n\n    return null;\n  }\n\n  /**\n   * 現在のシーンで保持しているすべてのモデルを解放する\n   */\n  public releaseAllModel(): void {\n    for (let i = 0; i < this._models.getSize(); i++) {\n      this._models.at(i).release();\n      this._models.set(i, null);\n    }\n\n    this._models.clear();\n  }\n\n  /**\n   * 画面をドラッグした時の処理\n   *\n   * @param x 画面のX座標\n   * @param y 画面のY座標\n   */\n  public onDrag(x: number, y: number): void {\n    for (let i = 0; i < this._models.getSize(); i++) {\n      const model: LAppModel = this.getModel(i);\n\n      if (model) {\n        model.setDragging(x, y);\n      }\n    }\n  }\n\n  /**\n   * 画面をタップした時の処理\n   *\n   * @param x 画面のX座標\n   * @param y 画面のY座標\n   */\n  public onTap(x: number, y: number): void {\n    if (LAppDefine.DebugLogEnable) {\n      LAppPal.printMessage(\n        `[APP]tap point: {x: ${x.toFixed(2)} y: ${y.toFixed(2)}}`\n      );\n    }\n\n    for (let i = 0; i < this._models.getSize(); i++) {\n      if (this._models.at(i).hitTest(LAppDefine.HitAreaNameHead, x, y)) {\n        if (LAppDefine.DebugLogEnable) {\n          LAppPal.printMessage(\n            `[APP]hit area: [${LAppDefine.HitAreaNameHead}]`\n          );\n          this.talkPrint(LAppDefine.HitHeadList[Math.floor(Math.random()*LAppDefine.HitHeadList.length)])\n        }\n        this._models.at(i).setRandomExpression();\n      } else if (this._models.at(i).hitTest(LAppDefine.HitAreaNameBody, x, y)) {\n        if (LAppDefine.DebugLogEnable) {\n          LAppPal.printMessage(\n            `[APP]hit area: [${LAppDefine.HitAreaNameBody}]`\n          );\n          this.talkPrint(LAppDefine.HitBodyList[Math.floor(Math.random()*LAppDefine.HitBodyList.length)])\n        }\n        this._models\n          .at(i)\n          .startRandomMotion(\n            LAppDefine.MotionGroupTapBody,\n            LAppDefine.PriorityNormal,\n            this._finishedMotion\n          );\n      } else {\n        this._models\n          .at(i)\n          .startRandomMotion(\n            LAppDefine.MotionGroupDefault,\n            LAppDefine.PriorityNormal,\n            this._finishedMotion\n          );\n\n      }\n    }\n  }\n\n  // 页面属性变化\n  public talkPrint(print:string): void {\n    clearTimeout(timer);\n    let printNow = document.getElementById('live2d-print');\n    printNow.innerHTML = print;\n    printNow.style.display = 'block';\n    timer = setTimeout(() => {\n      printNow.innerHTML = '';\n      printNow.style.display = 'none';\n    }, 2000);\n  }\n\n  /**\n   * 画面を更新するときの処理\n   * モデルの更新処理及び描画処理を行う\n   */\n  public onUpdate(): void {\n    let projection: Csm_CubismMatrix44 = new Csm_CubismMatrix44();\n\n    const { width, height } = canvas;\n    projection.scale(1.0, width / height);\n\n    if (this._viewMatrix != null) {\n      projection.multiplyByMatrix(this._viewMatrix);\n    }\n\n    const saveProjection: Csm_CubismMatrix44 = projection.clone();\n    const modelCount: number = this._models.getSize();\n\n    for (let i = 0; i < modelCount; ++i) {\n      const model: LAppModel = this.getModel(i);\n      projection = saveProjection.clone();\n\n      model.update();\n      model.draw(projection); // 参照渡しなのでprojectionは変質する。\n    }\n  }\n\n  /**\n   * 次のシーンに切りかえる\n   * サンプルアプリケーションではモデルセットの切り替えを行う。\n   */\n  public nextScene(): void {\n    const no: number = (this._sceneIndex + 1) % LAppDefine.ModelDir.length;\n    this.changeScene(no);\n  }\n\n  /**\n   * シーンを切り替える\n   * サンプルアプリケーションではモデルセットの切り替えを行う。\n   * 转换镜头\n   * 在样本应用程序中切换模型集。\n   */\n  public changeScene(index: number): void {\n    this._sceneIndex = index;\n    if (LAppDefine.DebugLogEnable) {\n      LAppPal.printMessage(`[APP]model index: ${this._sceneIndex}`);\n    }\n\n    // ModelDir[]に保持したディレクトリ名から\n    // model3.jsonのパスを決定する。\n    // ディレクトリ名とmodel3.jsonの名前を一致させておくこと。\n\n    const model: string = LAppDefine.ModelDir[index];\n    const modelPath: string = LAppDefine.ResourcesPath + model + '/';\n    let modelJsonName: string = LAppDefine.ModelDir[index];\n    modelJsonName += '.model3.json';\n\n    this.releaseAllModel();\n    this._models.pushBack(new LAppModel());\n    this._models.at(0).loadAssets(modelPath, modelJsonName);\n  }\n\n  /**\n   * コンストラクタ\n   */\n  constructor() {\n    this._viewMatrix = new Csm_CubismMatrix44();\n    this._models = new Csm_csmVector<LAppModel>();\n    this._sceneIndex = 0;\n    this.changeScene(this._sceneIndex);\n  }\n\n  _viewMatrix: Csm_CubismMatrix44; // モデル描画に用いるview行列\n  _models: Csm_csmVector<LAppModel>; // モデルインスタンスのコンテナ\n  _sceneIndex: number; // 表示するシーンのインデックス値\n  // モーション再生終了のコールバック関数\n  _finishedMotion = (self: ACubismMotion): void => {\n    LAppPal.printMessage('Motion Finished:');\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}