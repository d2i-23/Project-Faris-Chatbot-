{"ast":null,"code":"/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\n\nimport { Live2DCubismFramework as cubismmotionqueuemanager } from './cubismmotionqueuemanager';\nimport { Live2DCubismFramework as acubismmotion } from './acubismmotion';\nimport { Live2DCubismFramework as cubismmodel } from '../model/cubismmodel';\nvar CubismMotionQueueEntryHandle = cubismmotionqueuemanager.CubismMotionQueueEntryHandle;\nvar CubismModel = cubismmodel.CubismModel;\nvar ACubismMotion = acubismmotion.ACubismMotion;\nvar CubismMotionQueueManager = cubismmotionqueuemanager.CubismMotionQueueManager;\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  class CubismMotionManager extends CubismMotionQueueManager {\n    /**\r\n     * コンストラクタ\r\n     */\n    constructor() {\n      super();\n      this._currentPriority = void 0;\n      // 現在再生中のモーションの優先度\n      this._reservePriority = void 0;\n      this._currentPriority = 0;\n      this._reservePriority = 0;\n    }\n\n    /**\r\n     * 再生中のモーションの優先度の取得\r\n     * @return  モーションの優先度\r\n     */\n    getCurrentPriority() {\n      return this._currentPriority;\n    }\n\n    /**\r\n     * 予約中のモーションの優先度を取得する。\r\n     * @return  モーションの優先度\r\n     */\n    getReservePriority() {\n      return this._reservePriority;\n    }\n\n    /**\r\n     * 予約中のモーションの優先度を設定する。\r\n     * @param   val     優先度\r\n     */\n    setReservePriority(val) {\n      this._reservePriority = val;\n    }\n\n    /**\r\n     * 设定优先级后开始动作。\r\n     *\r\n     * @param motion          动作\r\n     * @param autoDelete      再生が狩猟したモーションのインスタンスを削除するならtrue\r\n     * @param priority        優先度\r\n     * @return                返回开始的动作的识别号码。用于判定个别动作是否结束的IsFinished（）参数。无法开始时为“-1”\r\n     */\n    startMotionPriority(motion, autoDelete, priority) {\n      if (priority == this._reservePriority) {\n        this._reservePriority = 0; // 予約を解除\n      }\n\n      this._currentPriority = priority; // 再生中モーションの優先度を設定\n\n      return super.startMotion(motion, autoDelete, this._userTimeSeconds);\n    }\n\n    /**\r\n     * モーションを更新して、モデルにパラメータ値を反映する。\r\n     *\r\n     * @param model   対象のモデル\r\n     * @param deltaTimeSeconds    デルタ時間[秒]\r\n     * @return  true    更新されている\r\n     * @return  false   更新されていない\r\n     */\n    updateMotion(model, deltaTimeSeconds) {\n      this._userTimeSeconds += deltaTimeSeconds;\n      const updated = super.doUpdateMotion(model, this._userTimeSeconds);\n      if (this.isFinished()) {\n        this._currentPriority = 0; // 再生中のモーションの優先度を解除\n      }\n\n      return updated;\n    }\n\n    /**\r\n     * モーションを予約する。\r\n     *\r\n     * @param   priority    優先度\r\n     * @return  true    予約できた\r\n     * @return  false   予約できなかった\r\n     */\n    reserveMotion(priority) {\n      if (priority <= this._reservePriority || priority <= this._currentPriority) {\n        return false;\n      }\n      this._reservePriority = priority;\n      return true;\n    }\n\n    // 再生予定のモーションの優先度。再生中は0になる。モーションファイルを別スレッドで読み込むときの機能。\n  }\n  _Live2DCubismFramework.CubismMotionManager = CubismMotionManager;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["Live2DCubismFramework","cubismmotionqueuemanager","acubismmotion","cubismmodel","CubismMotionQueueEntryHandle","CubismModel","ACubismMotion","CubismMotionQueueManager","_Live2DCubismFramework","CubismMotionManager","constructor","_currentPriority","_reservePriority","getCurrentPriority","getReservePriority","setReservePriority","val","startMotionPriority","motion","autoDelete","priority","startMotion","_userTimeSeconds","updateMotion","model","deltaTimeSeconds","updated","doUpdateMotion","isFinished","reserveMotion"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/mylive2d/react-live2d/Samples/TypeScript/Demo/Framework/src/motion/cubismmotionmanager.ts"],"sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { Live2DCubismFramework as cubismmotionqueuemanager } from './cubismmotionqueuemanager';\r\nimport { Live2DCubismFramework as acubismmotion } from './acubismmotion';\r\nimport { Live2DCubismFramework as cubismmodel } from '../model/cubismmodel';\r\nimport CubismMotionQueueEntryHandle = cubismmotionqueuemanager.CubismMotionQueueEntryHandle;\r\nimport CubismModel = cubismmodel.CubismModel;\r\nimport ACubismMotion = acubismmotion.ACubismMotion;\r\nimport CubismMotionQueueManager = cubismmotionqueuemanager.CubismMotionQueueManager;\r\n\r\nexport namespace Live2DCubismFramework {\r\n  /**\r\n   * モーションの管理\r\n   *\r\n   * モーションの管理を行うクラス\r\n   */\r\n  export class CubismMotionManager extends CubismMotionQueueManager {\r\n    /**\r\n     * コンストラクタ\r\n     */\r\n    public constructor() {\r\n      super();\r\n      this._currentPriority = 0;\r\n      this._reservePriority = 0;\r\n    }\r\n\r\n    /**\r\n     * 再生中のモーションの優先度の取得\r\n     * @return  モーションの優先度\r\n     */\r\n    public getCurrentPriority(): number {\r\n      return this._currentPriority;\r\n    }\r\n\r\n    /**\r\n     * 予約中のモーションの優先度を取得する。\r\n     * @return  モーションの優先度\r\n     */\r\n    public getReservePriority(): number {\r\n      return this._reservePriority;\r\n    }\r\n\r\n    /**\r\n     * 予約中のモーションの優先度を設定する。\r\n     * @param   val     優先度\r\n     */\r\n    public setReservePriority(val: number): void {\r\n      this._reservePriority = val;\r\n    }\r\n\r\n    /**\r\n     * 设定优先级后开始动作。\r\n     *\r\n     * @param motion          动作\r\n     * @param autoDelete      再生が狩猟したモーションのインスタンスを削除するならtrue\r\n     * @param priority        優先度\r\n     * @return                返回开始的动作的识别号码。用于判定个别动作是否结束的IsFinished（）参数。无法开始时为“-1”\r\n     */\r\n    public startMotionPriority(\r\n      motion: ACubismMotion,\r\n      autoDelete: boolean,\r\n      priority: number\r\n    ): CubismMotionQueueEntryHandle {\r\n      if (priority == this._reservePriority) {\r\n        this._reservePriority = 0; // 予約を解除\r\n      }\r\n\r\n      this._currentPriority = priority; // 再生中モーションの優先度を設定\r\n\r\n      return super.startMotion(motion, autoDelete, this._userTimeSeconds);\r\n    }\r\n\r\n    /**\r\n     * モーションを更新して、モデルにパラメータ値を反映する。\r\n     *\r\n     * @param model   対象のモデル\r\n     * @param deltaTimeSeconds    デルタ時間[秒]\r\n     * @return  true    更新されている\r\n     * @return  false   更新されていない\r\n     */\r\n    public updateMotion(model: CubismModel, deltaTimeSeconds: number): boolean {\r\n      this._userTimeSeconds += deltaTimeSeconds;\r\n\r\n      const updated: boolean = super.doUpdateMotion(\r\n        model,\r\n        this._userTimeSeconds\r\n      );\r\n\r\n      if (this.isFinished()) {\r\n        this._currentPriority = 0; // 再生中のモーションの優先度を解除\r\n      }\r\n\r\n      return updated;\r\n    }\r\n\r\n    /**\r\n     * モーションを予約する。\r\n     *\r\n     * @param   priority    優先度\r\n     * @return  true    予約できた\r\n     * @return  false   予約できなかった\r\n     */\r\n    public reserveMotion(priority: number): boolean {\r\n      if (\r\n        priority <= this._reservePriority ||\r\n        priority <= this._currentPriority\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      this._reservePriority = priority;\r\n\r\n      return true;\r\n    }\r\n\r\n    _currentPriority: number; // 現在再生中のモーションの優先度\r\n    _reservePriority: number; // 再生予定のモーションの優先度。再生中は0になる。モーションファイルを別スレッドで読み込むときの機能。\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,qBAAqB,IAAIC,wBAAwB,QAAQ,4BAA4B;AAC9F,SAASD,qBAAqB,IAAIE,aAAa,QAAQ,iBAAiB;AACxE,SAASF,qBAAqB,IAAIG,WAAW,QAAQ,sBAAsB;AAAC,IACrEC,4BAA4B,GAAGH,wBAAwB,CAACG,4BAA4B;AAAA,IACpFC,WAAW,GAAGF,WAAW,CAACE,WAAW;AAAA,IACrCC,aAAa,GAAGJ,aAAa,CAACI,aAAa;AAAA,IAC3CC,wBAAwB,GAAGN,wBAAwB,CAACM,wBAAwB;AAEnF,WAAAP,qBAAA;AA4GC,WAAAQ,sBAAA;EAtGQ,MAAMC,mBAAmB,SAASF,wBAAwB,CAAC;IAChE;AACJ;AACA;IACWG,WAAWA,CAAA,EAAG;MACnB,KAAK,CAAC,CAAC;MAAC,KA8FVC,gBAAgB;MAAU;MAAA,KAC1BC,gBAAgB;MA9Fd,IAAI,CAACD,gBAAgB,GAAG,CAAC;MACzB,IAAI,CAACC,gBAAgB,GAAG,CAAC;IAC3B;;IAEA;AACJ;AACA;AACA;IACWC,kBAAkBA,CAAA,EAAW;MAClC,OAAO,IAAI,CAACF,gBAAgB;IAC9B;;IAEA;AACJ;AACA;AACA;IACWG,kBAAkBA,CAAA,EAAW;MAClC,OAAO,IAAI,CAACF,gBAAgB;IAC9B;;IAEA;AACJ;AACA;AACA;IACWG,kBAAkBA,CAACC,GAAW,EAAQ;MAC3C,IAAI,CAACJ,gBAAgB,GAAGI,GAAG;IAC7B;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACWC,mBAAmBA,CACxBC,MAAqB,EACrBC,UAAmB,EACnBC,QAAgB,EACc;MAC9B,IAAIA,QAAQ,IAAI,IAAI,CAACR,gBAAgB,EAAE;QACrC,IAAI,CAACA,gBAAgB,GAAG,CAAC,CAAC,CAAC;MAC7B;;MAEA,IAAI,CAACD,gBAAgB,GAAGS,QAAQ,CAAC,CAAC;;MAElC,OAAO,KAAK,CAACC,WAAW,CAACH,MAAM,EAAEC,UAAU,EAAE,IAAI,CAACG,gBAAgB,CAAC;IACrE;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACWC,YAAYA,CAACC,KAAkB,EAAEC,gBAAwB,EAAW;MACzE,IAAI,CAACH,gBAAgB,IAAIG,gBAAgB;MAEzC,MAAMC,OAAgB,GAAG,KAAK,CAACC,cAAc,CAC3CH,KAAK,EACL,IAAI,CAACF,gBACP,CAAC;MAED,IAAI,IAAI,CAACM,UAAU,CAAC,CAAC,EAAE;QACrB,IAAI,CAACjB,gBAAgB,GAAG,CAAC,CAAC,CAAC;MAC7B;;MAEA,OAAOe,OAAO;IAChB;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;IACWG,aAAaA,CAACT,QAAgB,EAAW;MAC9C,IACEA,QAAQ,IAAI,IAAI,CAACR,gBAAgB,IACjCQ,QAAQ,IAAI,IAAI,CAACT,gBAAgB,EACjC;QACA,OAAO,KAAK;MACd;MAEA,IAAI,CAACC,gBAAgB,GAAGQ,QAAQ;MAEhC,OAAO,IAAI;IACb;;IAG0B;EAC5B;EAACZ,sBAAA,CAAAC,mBAAA,GAAAA,mBAAA;AAAA,GA3GcT,qBAAqB,KAArBA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}