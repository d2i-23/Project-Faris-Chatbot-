{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismMatrix44 } from './cubismmatrix44';\n\n/**\n * カメラの位置変更に使うと便利な4x4行列\n *\n * カメラの位置変更に使うと便利な4x4行列のクラス。\n */\nexport class CubismViewMatrix extends CubismMatrix44 {\n  /**\n   * コンストラクタ\n   */\n  constructor() {\n    super();\n    this._screenLeft = void 0;\n    // デバイスに対応する論理座標上の範囲（左辺X軸位置）\n    this._screenRight = void 0;\n    // デバイスに対応する論理座標上の範囲（右辺X軸位置）\n    this._screenTop = void 0;\n    // デバイスに対応する論理座標上の範囲（上辺Y軸位置）\n    this._screenBottom = void 0;\n    // デバイスに対応する論理座標上の範囲（下辺Y軸位置）\n    this._maxLeft = void 0;\n    // 論理座標上の移動可能範囲（左辺X軸位置）\n    this._maxRight = void 0;\n    // 論理座標上の移動可能範囲（右辺X軸位置）\n    this._maxTop = void 0;\n    // 論理座標上の移動可能範囲（上辺Y軸位置）\n    this._maxBottom = void 0;\n    // 論理座標上の移動可能範囲（下辺Y軸位置）\n    this._maxScale = void 0;\n    // 拡大率の最大値\n    this._minScale = void 0;\n    this._screenLeft = 0.0;\n    this._screenRight = 0.0;\n    this._screenTop = 0.0;\n    this._screenBottom = 0.0;\n    this._maxLeft = 0.0;\n    this._maxRight = 0.0;\n    this._maxTop = 0.0;\n    this._maxBottom = 0.0;\n    this._maxScale = 0.0;\n    this._minScale = 0.0;\n  }\n\n  /**\n   * 移動を調整\n   *\n   * @param x X軸の移動量\n   * @param y Y軸の移動量\n   */\n  adjustTranslate(x, y) {\n    if (this._tr[0] * this._maxLeft + (this._tr[12] + x) > this._screenLeft) {\n      x = this._screenLeft - this._tr[0] * this._maxLeft - this._tr[12];\n    }\n    if (this._tr[0] * this._maxRight + (this._tr[12] + x) < this._screenRight) {\n      x = this._screenRight - this._tr[0] * this._maxRight - this._tr[12];\n    }\n    if (this._tr[5] * this._maxTop + (this._tr[13] + y) < this._screenTop) {\n      y = this._screenTop - this._tr[5] * this._maxTop - this._tr[13];\n    }\n    if (this._tr[5] * this._maxBottom + (this._tr[13] + y) > this._screenBottom) {\n      y = this._screenBottom - this._tr[5] * this._maxBottom - this._tr[13];\n    }\n    const tr1 = new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, x, y, 0.0, 1.0]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n\n  /**\n   * 拡大率を調整\n   *\n   * @param cx 拡大を行うX軸の中心位置\n   * @param cy 拡大を行うY軸の中心位置\n   * @param scale 拡大率\n   */\n  adjustScale(cx, cy, scale) {\n    const maxScale = this.getMaxScale();\n    const minScale = this.getMinScale();\n    const targetScale = scale * this._tr[0];\n    if (targetScale < minScale) {\n      if (this._tr[0] > 0.0) {\n        scale = minScale / this._tr[0];\n      }\n    } else if (targetScale > maxScale) {\n      if (this._tr[0] > 0.0) {\n        scale = maxScale / this._tr[0];\n      }\n    }\n    const tr1 = new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, cx, cy, 0.0, 1.0]);\n    const tr2 = new Float32Array([scale, 0.0, 0.0, 0.0, 0.0, scale, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);\n    const tr3 = new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -cx, -cy, 0.0, 1.0]);\n    CubismMatrix44.multiply(tr3, this._tr, this._tr);\n    CubismMatrix44.multiply(tr2, this._tr, this._tr);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n\n  /**\n   * デバイスに対応する論理座養生の範囲の設定\n   *\n   * @param left      左辺のX軸の位置\n   * @param right     右辺のX軸の位置\n   * @param bottom    下辺のY軸の位置\n   * @param top       上辺のY軸の位置\n   */\n  setScreenRect(left, right, bottom, top) {\n    this._screenLeft = left;\n    this._screenRight = right;\n    this._screenBottom = bottom;\n    this._screenTop = top;\n  }\n\n  /**\n   * デバイスに対応する論理座標上の移動可能範囲の設定\n   * @param left      左辺のX軸の位置\n   * @param right     右辺のX軸の位置\n   * @param bottom    下辺のY軸の位置\n   * @param top       上辺のY軸の位置\n   */\n  setMaxScreenRect(left, right, bottom, top) {\n    this._maxLeft = left;\n    this._maxRight = right;\n    this._maxTop = top;\n    this._maxBottom = bottom;\n  }\n\n  /**\n   * 最大拡大率の設定\n   * @param maxScale 最大拡大率\n   */\n  setMaxScale(maxScale) {\n    this._maxScale = maxScale;\n  }\n\n  /**\n   * 最小拡大率の設定\n   * @param minScale 最小拡大率\n   */\n  setMinScale(minScale) {\n    this._minScale = minScale;\n  }\n\n  /**\n   * 最大拡大率の取得\n   * @return 最大拡大率\n   */\n  getMaxScale() {\n    return this._maxScale;\n  }\n\n  /**\n   * 最小拡大率の取得\n   * @return 最小拡大率\n   */\n  getMinScale() {\n    return this._minScale;\n  }\n\n  /**\n   * 拡大率が最大になっているかを確認する\n   *\n   * @return true 拡大率は最大\n   * @return false 拡大率は最大ではない\n   */\n  isMaxScale() {\n    return this.getScaleX() >= this._maxScale;\n  }\n\n  /**\n   * 拡大率が最小になっているかを確認する\n   *\n   * @return true 拡大率は最小\n   * @return false 拡大率は最小ではない\n   */\n  isMinScale() {\n    return this.getScaleX() <= this._minScale;\n  }\n\n  /**\n   * デバイスに対応する論理座標の左辺のＸ軸位置を取得する\n   * @return デバイスに対応する論理座標の左辺のX軸位置\n   */\n  getScreenLeft() {\n    return this._screenLeft;\n  }\n\n  /**\n   * デバイスに対応する論理座標の右辺のＸ軸位置を取得する\n   * @return デバイスに対応する論理座標の右辺のX軸位置\n   */\n  getScreenRight() {\n    return this._screenRight;\n  }\n\n  /**\n   * デバイスに対応する論理座標の下辺のY軸位置を取得する\n   * @return デバイスに対応する論理座標の下辺のY軸位置\n   */\n  getScreenBottom() {\n    return this._screenBottom;\n  }\n\n  /**\n   * デバイスに対応する論理座標の上辺のY軸位置を取得する\n   * @return デバイスに対応する論理座標の上辺のY軸位置\n   */\n  getScreenTop() {\n    return this._screenTop;\n  }\n\n  /**\n   * 左辺のX軸位置の最大値の取得\n   * @return 左辺のX軸位置の最大値\n   */\n  getMaxLeft() {\n    return this._maxLeft;\n  }\n\n  /**\n   * 右辺のX軸位置の最大値の取得\n   * @return 右辺のX軸位置の最大値\n   */\n  getMaxRight() {\n    return this._maxRight;\n  }\n\n  /**\n   * 下辺のY軸位置の最大値の取得\n   * @return 下辺のY軸位置の最大値\n   */\n  getMaxBottom() {\n    return this._maxBottom;\n  }\n\n  /**\n   * 上辺のY軸位置の最大値の取得\n   * @return 上辺のY軸位置の最大値\n   */\n  getMaxTop() {\n    return this._maxTop;\n  }\n\n  // 拡大率の最小値\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismviewmatrix';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  const CubismViewMatrix = _Live2DCubismFramework.CubismViewMatrix = $.CubismViewMatrix;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["CubismMatrix44","CubismViewMatrix","constructor","_screenLeft","_screenRight","_screenTop","_screenBottom","_maxLeft","_maxRight","_maxTop","_maxBottom","_maxScale","_minScale","adjustTranslate","x","y","_tr","tr1","Float32Array","multiply","adjustScale","cx","cy","scale","maxScale","getMaxScale","minScale","getMinScale","targetScale","tr2","tr3","setScreenRect","left","right","bottom","top","setMaxScreenRect","setMaxScale","setMinScale","isMaxScale","getScaleX","isMinScale","getScreenLeft","getScreenRight","getScreenBottom","getScreenTop","getMaxLeft","getMaxRight","getMaxBottom","getMaxTop","$","Live2DCubismFramework","_Live2DCubismFramework"],"sources":["D:/Personal/PythonStuff/RR/RRWebsiteRenewed/my-app/src/Framework/src/math/cubismviewmatrix.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismMatrix44 } from './cubismmatrix44';\n\n/**\n * カメラの位置変更に使うと便利な4x4行列\n *\n * カメラの位置変更に使うと便利な4x4行列のクラス。\n */\nexport class CubismViewMatrix extends CubismMatrix44 {\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    super();\n    this._screenLeft = 0.0;\n    this._screenRight = 0.0;\n    this._screenTop = 0.0;\n    this._screenBottom = 0.0;\n    this._maxLeft = 0.0;\n    this._maxRight = 0.0;\n    this._maxTop = 0.0;\n    this._maxBottom = 0.0;\n    this._maxScale = 0.0;\n    this._minScale = 0.0;\n  }\n\n  /**\n   * 移動を調整\n   *\n   * @param x X軸の移動量\n   * @param y Y軸の移動量\n   */\n  public adjustTranslate(x: number, y: number): void {\n    if (this._tr[0] * this._maxLeft + (this._tr[12] + x) > this._screenLeft) {\n      x = this._screenLeft - this._tr[0] * this._maxLeft - this._tr[12];\n    }\n\n    if (this._tr[0] * this._maxRight + (this._tr[12] + x) < this._screenRight) {\n      x = this._screenRight - this._tr[0] * this._maxRight - this._tr[12];\n    }\n\n    if (this._tr[5] * this._maxTop + (this._tr[13] + y) < this._screenTop) {\n      y = this._screenTop - this._tr[5] * this._maxTop - this._tr[13];\n    }\n\n    if (\n      this._tr[5] * this._maxBottom + (this._tr[13] + y) >\n      this._screenBottom\n    ) {\n      y = this._screenBottom - this._tr[5] * this._maxBottom - this._tr[13];\n    }\n\n    const tr1: Float32Array = new Float32Array([\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      x,\n      y,\n      0.0,\n      1.0,\n    ]);\n\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n\n  /**\n   * 拡大率を調整\n   *\n   * @param cx 拡大を行うX軸の中心位置\n   * @param cy 拡大を行うY軸の中心位置\n   * @param scale 拡大率\n   */\n  public adjustScale(cx: number, cy: number, scale: number): void {\n    const maxScale: number = this.getMaxScale();\n    const minScale: number = this.getMinScale();\n\n    const targetScale = scale * this._tr[0];\n\n    if (targetScale < minScale) {\n      if (this._tr[0] > 0.0) {\n        scale = minScale / this._tr[0];\n      }\n    } else if (targetScale > maxScale) {\n      if (this._tr[0] > 0.0) {\n        scale = maxScale / this._tr[0];\n      }\n    }\n\n    const tr1: Float32Array = new Float32Array([\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      cx,\n      cy,\n      0.0,\n      1.0,\n    ]);\n\n    const tr2: Float32Array = new Float32Array([\n      scale,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      scale,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n    ]);\n\n    const tr3: Float32Array = new Float32Array([\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      -cx,\n      -cy,\n      0.0,\n      1.0,\n    ]);\n\n    CubismMatrix44.multiply(tr3, this._tr, this._tr);\n    CubismMatrix44.multiply(tr2, this._tr, this._tr);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n\n  /**\n   * デバイスに対応する論理座養生の範囲の設定\n   *\n   * @param left      左辺のX軸の位置\n   * @param right     右辺のX軸の位置\n   * @param bottom    下辺のY軸の位置\n   * @param top       上辺のY軸の位置\n   */\n  public setScreenRect(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number\n  ): void {\n    this._screenLeft = left;\n    this._screenRight = right;\n    this._screenBottom = bottom;\n    this._screenTop = top;\n  }\n\n  /**\n   * デバイスに対応する論理座標上の移動可能範囲の設定\n   * @param left      左辺のX軸の位置\n   * @param right     右辺のX軸の位置\n   * @param bottom    下辺のY軸の位置\n   * @param top       上辺のY軸の位置\n   */\n  public setMaxScreenRect(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number\n  ): void {\n    this._maxLeft = left;\n    this._maxRight = right;\n    this._maxTop = top;\n    this._maxBottom = bottom;\n  }\n\n  /**\n   * 最大拡大率の設定\n   * @param maxScale 最大拡大率\n   */\n  public setMaxScale(maxScale: number): void {\n    this._maxScale = maxScale;\n  }\n\n  /**\n   * 最小拡大率の設定\n   * @param minScale 最小拡大率\n   */\n  public setMinScale(minScale: number): void {\n    this._minScale = minScale;\n  }\n\n  /**\n   * 最大拡大率の取得\n   * @return 最大拡大率\n   */\n  public getMaxScale(): number {\n    return this._maxScale;\n  }\n\n  /**\n   * 最小拡大率の取得\n   * @return 最小拡大率\n   */\n  public getMinScale(): number {\n    return this._minScale;\n  }\n\n  /**\n   * 拡大率が最大になっているかを確認する\n   *\n   * @return true 拡大率は最大\n   * @return false 拡大率は最大ではない\n   */\n  public isMaxScale(): boolean {\n    return this.getScaleX() >= this._maxScale;\n  }\n\n  /**\n   * 拡大率が最小になっているかを確認する\n   *\n   * @return true 拡大率は最小\n   * @return false 拡大率は最小ではない\n   */\n  public isMinScale(): boolean {\n    return this.getScaleX() <= this._minScale;\n  }\n\n  /**\n   * デバイスに対応する論理座標の左辺のＸ軸位置を取得する\n   * @return デバイスに対応する論理座標の左辺のX軸位置\n   */\n  public getScreenLeft(): number {\n    return this._screenLeft;\n  }\n\n  /**\n   * デバイスに対応する論理座標の右辺のＸ軸位置を取得する\n   * @return デバイスに対応する論理座標の右辺のX軸位置\n   */\n  public getScreenRight(): number {\n    return this._screenRight;\n  }\n\n  /**\n   * デバイスに対応する論理座標の下辺のY軸位置を取得する\n   * @return デバイスに対応する論理座標の下辺のY軸位置\n   */\n  public getScreenBottom(): number {\n    return this._screenBottom;\n  }\n\n  /**\n   * デバイスに対応する論理座標の上辺のY軸位置を取得する\n   * @return デバイスに対応する論理座標の上辺のY軸位置\n   */\n  public getScreenTop(): number {\n    return this._screenTop;\n  }\n\n  /**\n   * 左辺のX軸位置の最大値の取得\n   * @return 左辺のX軸位置の最大値\n   */\n  public getMaxLeft(): number {\n    return this._maxLeft;\n  }\n\n  /**\n   * 右辺のX軸位置の最大値の取得\n   * @return 右辺のX軸位置の最大値\n   */\n  public getMaxRight(): number {\n    return this._maxRight;\n  }\n\n  /**\n   * 下辺のY軸位置の最大値の取得\n   * @return 下辺のY軸位置の最大値\n   */\n  public getMaxBottom(): number {\n    return this._maxBottom;\n  }\n\n  /**\n   * 上辺のY軸位置の最大値の取得\n   * @return 上辺のY軸位置の最大値\n   */\n  public getMaxTop(): number {\n    return this._maxTop;\n  }\n\n  private _screenLeft: number; // デバイスに対応する論理座標上の範囲（左辺X軸位置）\n  private _screenRight: number; // デバイスに対応する論理座標上の範囲（右辺X軸位置）\n  private _screenTop: number; // デバイスに対応する論理座標上の範囲（上辺Y軸位置）\n  private _screenBottom: number; // デバイスに対応する論理座標上の範囲（下辺Y軸位置）\n  private _maxLeft: number; // 論理座標上の移動可能範囲（左辺X軸位置）\n  private _maxRight: number; // 論理座標上の移動可能範囲（右辺X軸位置）\n  private _maxTop: number; // 論理座標上の移動可能範囲（上辺Y軸位置）\n  private _maxBottom: number; // 論理座標上の移動可能範囲（下辺Y軸位置）\n  private _maxScale: number; // 拡大率の最大値\n  private _minScale: number; // 拡大率の最小値\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismviewmatrix';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Live2DCubismFramework {\n  export const CubismViewMatrix = $.CubismViewMatrix;\n  export type CubismViewMatrix = $.CubismViewMatrix;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}