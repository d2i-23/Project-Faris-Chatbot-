{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { Live2DCubismFramework as live2dcubismframework, Option as Csm_Option } from '../Framework/src/live2dcubismframework';\nvar Csm_CubismFramework = live2dcubismframework.CubismFramework;\nimport { LAppView } from './lappview';\nimport { LAppPal } from './lapppal';\nimport { LAppTextureManager } from './lapptexturemanager';\nimport { LAppLive2DManager } from './lapplive2dmanager';\nimport * as LAppDefine from './lappdefine';\nexport let canvas = null;\nexport let s_instance = null;\nexport let gl = null;\nexport let frameBuffer = null;\n\n/**\n * アプリケーションクラス。\n * Cubism SDKの管理を行う。\n */\nexport class LAppDelegate {\n  /**\n   * クラスのインスタンス（シングルトン）を返す。\n   * インスタンスが生成されていない場合は内部でインスタンスを生成する。\n   *\n   * @return クラスのインスタンス\n   */\n  static getInstance() {\n    if (s_instance == null) {\n      s_instance = new LAppDelegate();\n    }\n    return s_instance;\n  }\n\n  /**\n   * クラスのインスタンス（シングルトン）を解放する。\n   */\n  static releaseInstance() {\n    console.log(\"释放实例\");\n    if (s_instance != null) {\n      s_instance.release();\n    }\n    s_instance = null;\n  }\n\n  /**\n   * APPに必要な物を初期化する。\n   */\n  initialize() {\n    // キャンバスの作成\n    // canvas = document.createElement('canvas');\n    // canvas.width = LAppDefine.RenderTargetWidth;\n    // canvas.height = LAppDefine.RenderTargetHeight;\n\n    //  取消框架原有的canvas画布尺寸，独立设置尺寸\n    //  根据id获取页面里的canvas\n    canvas = document.getElementById(\"live2d\");\n\n    //添加全局鼠标移动事件监控\n    document.addEventListener(\"mousemove\", function (e) {\n      if (!LAppDelegate.getInstance()._view) {\n        LAppPal.printMessage(\"view notfound\");\n        return;\n      } else {}\n\n      // 如果不存在live2d,不进行操作\n      if (document.getElementById(\"live2d\")) {\n        //这里id的值与上方的 cavans 变量保持一致\n        let rect = document.getElementById(\"live2d\").getBoundingClientRect();\n        let posX = e.clientX - rect.left;\n        let posY = e.clientY - rect.top;\n        // console.log(\"onMouseMoved: gate文件中posY值为： 【\"+posY+\"】  canvas的top距离为：\"+rect.top);\n        LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\n      }\n    }, false);\n\n    //在这里加上鼠标离开浏览器后，一切归位\n    document.addEventListener(\"mouseout\", function (e) {\n      //鼠标离开document后，将其位置置为（0，0）  \n      let live2DManager = LAppLive2DManager.getInstance();\n      live2DManager.onDrag(0.0, 0.0);\n    }, false);\n\n    //添加鼠标点击事件\n    //监听cavas的鼠标点击事件,如果你希望在鼠标点击页面元素后\n    //看板娘不在看向鼠标，直到你再次移动鼠标，把监听事件对象从canvas换成document\n    canvas.addEventListener(\"click\", function (e) {\n      if (!LAppDelegate.getInstance()._view) {\n        LAppPal.printMessage(\"view notfound\");\n        return;\n      }\n      let rect = canvas.getBoundingClientRect();\n      let posX = e.clientX - rect.left;\n      let posY = e.clientY - rect.top;\n      // console.log(\"onMouseMoved: gate文件中posY值为： 【\"+posY+\"】  canvas的top距离为：\"+rect.top);\n      //其实就是照抄上面的，把下面两行代码加上\n      LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\n      LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\n    }, false);\n\n    // glコンテキストを初期化\n    // @ts-ignore\n    gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    if (!gl) {\n      alert('Cannot initialize WebGL. This browser does not support.');\n      gl = null;\n      document.body.innerHTML = 'This browser does not support the <code>&lt;canvas&gt;</code> element.';\n\n      // gl初期化失敗\n      return false;\n    }\n\n    // キャンバスを DOM に追加\n    // document.body.appendChild(canvas);\n\n    if (!frameBuffer) {\n      frameBuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n    }\n\n    // 透過設定\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    const supportTouch = ('ontouchend' in canvas);\n    if (supportTouch) {\n      // タッチ関連コールバック関数登録\n      canvas.ontouchstart = onTouchBegan;\n      canvas.ontouchmove = onTouchMoved;\n      canvas.ontouchend = onTouchEnded;\n      canvas.ontouchcancel = onTouchCancel;\n    } else {\n      // マウス関連コールバック関数登録\n      // canvas.onmousedown = onClickBegan;\n      // canvas.onmousemove = onMouseMoved;\n      // canvas.onmouseup = onClickEnded;\n    }\n\n    // AppViewの初期化\n    this._view.initialize();\n\n    // Cubism SDKの初期化\n    this.initializeCubism();\n    return true;\n  }\n\n  /**\n   * 解放する。\n   */\n  release() {\n    this._textureManager.release();\n    this._textureManager = null;\n    this._view.release();\n    this._view = null;\n\n    // リソースを解放\n    LAppLive2DManager.releaseInstance();\n\n    // Cubism SDKの解放\n    Csm_CubismFramework.dispose();\n  }\n\n  /**\n   * 実行処理。\n   */\n  run() {\n    // メインループ\n    const loop = () => {\n      // インスタンスの有無の確認\n      // 确定有无实例\n      if (s_instance == null) {\n        return;\n      }\n\n      // 時間更新\n      LAppPal.updateTime();\n\n      // 画面の初期化\n      gl.clearColor(0.0, 0.0, 0.0, 0.0);\n\n      // 深度テストを有効化\n      gl.enable(gl.DEPTH_TEST);\n\n      // 近くにある物体は、遠くにある物体を覆い隠す\n      gl.depthFunc(gl.LEQUAL);\n\n      // カラーバッファや深度バッファをクリアする\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n      gl.clearDepth(1.0);\n\n      // 透過設定\n      gl.enable(gl.BLEND);\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n      // 描画更新\n      this._view.render();\n\n      // ループのために再帰呼び出し\n      requestAnimationFrame(loop);\n    };\n    loop();\n  }\n\n  /**\n   * シェーダーを登録する。\n   */\n  createShader() {\n    // バーテックスシェーダーのコンパイル\n    const vertexShaderId = gl.createShader(gl.VERTEX_SHADER);\n    if (vertexShaderId == null) {\n      LAppPal.printMessage('failed to create vertexShader');\n      return null;\n    }\n    const vertexShader = 'precision mediump float;' + 'attribute vec3 position;' + 'attribute vec2 uv;' + 'varying vec2 vuv;' + 'void main(void)' + '{' + '   gl_Position = vec4(position, 1.0);' + '   vuv = uv;' + '}';\n    gl.shaderSource(vertexShaderId, vertexShader);\n    gl.compileShader(vertexShaderId);\n\n    // フラグメントシェーダのコンパイル\n    const fragmentShaderId = gl.createShader(gl.FRAGMENT_SHADER);\n    if (fragmentShaderId == null) {\n      LAppPal.printMessage('failed to create fragmentShader');\n      return null;\n    }\n    const fragmentShader = 'precision mediump float;' + 'varying vec2 vuv;' + 'uniform sampler2D texture;' + 'void main(void)' + '{' + '   gl_FragColor = texture2D(texture, vuv);' + '}';\n    gl.shaderSource(fragmentShaderId, fragmentShader);\n    gl.compileShader(fragmentShaderId);\n\n    // プログラムオブジェクトの作成\n    const programId = gl.createProgram();\n    gl.attachShader(programId, vertexShaderId);\n    gl.attachShader(programId, fragmentShaderId);\n    gl.deleteShader(vertexShaderId);\n    gl.deleteShader(fragmentShaderId);\n\n    // リンク\n    gl.linkProgram(programId);\n    gl.useProgram(programId);\n    return programId;\n  }\n\n  /**\n   * View情報を取得する。\n   */\n  getView() {\n    return this._view;\n  }\n  getTextureManager() {\n    return this._textureManager;\n  }\n\n  /**\n   * コンストラクタ\n   */\n  constructor() {\n    this._cubismOption = void 0;\n    // Cubism SDK Option\n    this._view = void 0;\n    // View情報\n    this._captured = void 0;\n    // クリックしているか\n    this._mouseX = void 0;\n    // マウスX座標\n    this._mouseY = void 0;\n    // マウスY座標\n    this._isEnd = void 0;\n    // APP終了しているか\n    this._textureManager = void 0;\n    this._captured = false;\n    this._mouseX = 0.0;\n    this._mouseY = 0.0;\n    this._isEnd = false;\n    this._cubismOption = new Csm_Option();\n    this._view = new LAppView();\n    this._textureManager = new LAppTextureManager();\n  }\n\n  /**\n   * Cubism SDKの初期化\n   */\n  initializeCubism() {\n    // setup cubism\n    this._cubismOption.logFunction = LAppPal.printMessage;\n    this._cubismOption.loggingLevel = LAppDefine.CubismLoggingLevel;\n    Csm_CubismFramework.startUp(this._cubismOption);\n\n    // initialize cubism\n    Csm_CubismFramework.initialize();\n\n    // load model\n    LAppLive2DManager.getInstance();\n    LAppPal.updateTime();\n    this._view.initializeSprite();\n  }\n\n  // テクスチャマネージャー\n}\n\n/**\n * クリックしたときに呼ばれる。\n */\nfunction onClickBegan(e) {\n  if (!LAppDelegate.getInstance()._view) {\n    LAppPal.printMessage('view notfound');\n    return;\n  }\n  LAppDelegate.getInstance()._captured = true;\n  const posX = e.pageX;\n  const posY = e.pageY;\n  LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\n}\n\n/**\n * マウスポインタが動いたら呼ばれる。\n */\nfunction onMouseMoved(e) {\n  if (!LAppDelegate.getInstance()._captured) {\n    return;\n  }\n  if (!LAppDelegate.getInstance()._view) {\n    LAppPal.printMessage('view notfound');\n    return;\n  }\n  const rect = e.target.getBoundingClientRect();\n  const posX = e.clientX - rect.left;\n  const posY = e.clientY - rect.top;\n  LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\n}\n\n/**\n * クリックが終了したら呼ばれる。\n */\nfunction onClickEnded(e) {\n  LAppDelegate.getInstance()._captured = false;\n  if (!LAppDelegate.getInstance()._view) {\n    LAppPal.printMessage('view notfound');\n    return;\n  }\n  const rect = e.target.getBoundingClientRect();\n  const posX = e.clientX - rect.left;\n  const posY = e.clientY - rect.top;\n  LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\n}\n\n/**\n * タッチしたときに呼ばれる。\n */\nfunction onTouchBegan(e) {\n  if (!LAppDelegate.getInstance()._view) {\n    LAppPal.printMessage('view notfound');\n    return;\n  }\n  LAppDelegate.getInstance()._captured = true;\n  const posX = e.changedTouches[0].pageX;\n  const posY = e.changedTouches[0].pageY;\n  LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\n}\n\n/**\n * スワイプすると呼ばれる。\n */\nfunction onTouchMoved(e) {\n  if (!LAppDelegate.getInstance()._captured) {\n    return;\n  }\n  if (!LAppDelegate.getInstance()._view) {\n    LAppPal.printMessage('view notfound');\n    return;\n  }\n  const rect = e.target.getBoundingClientRect();\n  const posX = e.changedTouches[0].clientX - rect.left;\n  const posY = e.changedTouches[0].clientY - rect.top;\n  LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\n}\n\n/**\n * タッチが終了したら呼ばれる。\n */\nfunction onTouchEnded(e) {\n  LAppDelegate.getInstance()._captured = false;\n  if (!LAppDelegate.getInstance()._view) {\n    LAppPal.printMessage('view notfound');\n    return;\n  }\n  const rect = e.target.getBoundingClientRect();\n  const posX = e.changedTouches[0].clientX - rect.left;\n  const posY = e.changedTouches[0].clientY - rect.top;\n  LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\n}\n\n/**\n * タッチがキャンセルされると呼ばれる。\n */\nfunction onTouchCancel(e) {\n  LAppDelegate.getInstance()._captured = false;\n  if (!LAppDelegate.getInstance()._view) {\n    LAppPal.printMessage('view notfound');\n    return;\n  }\n  const rect = e.target.getBoundingClientRect();\n  const posX = e.changedTouches[0].clientX - rect.left;\n  const posY = e.changedTouches[0].clientY - rect.top;\n  LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\n}","map":{"version":3,"names":["Live2DCubismFramework","live2dcubismframework","Option","Csm_Option","Csm_CubismFramework","CubismFramework","LAppView","LAppPal","LAppTextureManager","LAppLive2DManager","LAppDefine","canvas","s_instance","gl","frameBuffer","LAppDelegate","getInstance","releaseInstance","console","log","release","initialize","document","getElementById","addEventListener","e","_view","printMessage","rect","getBoundingClientRect","posX","clientX","left","posY","clientY","top","onTouchesMoved","live2DManager","onDrag","onTouchesBegan","onTouchesEnded","getContext","alert","body","innerHTML","getParameter","FRAMEBUFFER_BINDING","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","supportTouch","ontouchstart","onTouchBegan","ontouchmove","onTouchMoved","ontouchend","onTouchEnded","ontouchcancel","onTouchCancel","initializeCubism","_textureManager","dispose","run","loop","updateTime","clearColor","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","clearDepth","render","requestAnimationFrame","createShader","vertexShaderId","VERTEX_SHADER","vertexShader","shaderSource","compileShader","fragmentShaderId","FRAGMENT_SHADER","fragmentShader","programId","createProgram","attachShader","deleteShader","linkProgram","useProgram","getView","getTextureManager","constructor","_cubismOption","_captured","_mouseX","_mouseY","_isEnd","logFunction","loggingLevel","CubismLoggingLevel","startUp","initializeSprite","onClickBegan","pageX","pageY","onMouseMoved","target","onClickEnded","changedTouches"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/Samples/TypeScript/Demo/src/lappdelegate.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport {\n  Live2DCubismFramework as live2dcubismframework,\n  Option as Csm_Option\n} from '../Framework/src/live2dcubismframework';\nimport Csm_CubismFramework = live2dcubismframework.CubismFramework;\nimport { LAppView } from './lappview';\nimport { LAppPal } from './lapppal';\nimport { LAppTextureManager } from './lapptexturemanager';\nimport { LAppLive2DManager } from './lapplive2dmanager';\nimport * as LAppDefine from './lappdefine';\n\nexport let canvas: HTMLCanvasElement = null;\nexport let s_instance: LAppDelegate = null;\nexport let gl: WebGLRenderingContext = null;\nexport let frameBuffer: WebGLFramebuffer = null;\n\n/**\n * アプリケーションクラス。\n * Cubism SDKの管理を行う。\n */\nexport class LAppDelegate {\n  /**\n   * クラスのインスタンス（シングルトン）を返す。\n   * インスタンスが生成されていない場合は内部でインスタンスを生成する。\n   *\n   * @return クラスのインスタンス\n   */\n  public static getInstance(): LAppDelegate {\n    if (s_instance == null) {\n      s_instance = new LAppDelegate();\n    }\n\n    return s_instance;\n  }\n\n  /**\n   * クラスのインスタンス（シングルトン）を解放する。\n   */\n  public static releaseInstance(): void {\n    console.log(\"释放实例\")\n    if (s_instance != null) {\n      s_instance.release();\n    }\n\n    s_instance = null;\n  }\n\n  /**\n   * APPに必要な物を初期化する。\n   */\n  public initialize(): boolean {\n    // キャンバスの作成\n    // canvas = document.createElement('canvas');\n    // canvas.width = LAppDefine.RenderTargetWidth;\n    // canvas.height = LAppDefine.RenderTargetHeight;\n\n    //  取消框架原有的canvas画布尺寸，独立设置尺寸\n    //  根据id获取页面里的canvas\n    canvas = <HTMLCanvasElement>document.getElementById(\"live2d\");\n\n    //添加全局鼠标移动事件监控\n    document.addEventListener(\"mousemove\", function (e) {\n\n      if (!LAppDelegate.getInstance()._view) {\n        LAppPal.printMessage(\"view notfound\");\n        return;\n      } else {\n\n      }\n\n      // 如果不存在live2d,不进行操作\n      if(document.getElementById(\"live2d\")){\n        //这里id的值与上方的 cavans 变量保持一致\n        let rect = document.getElementById(\"live2d\").getBoundingClientRect();\n        let posX: number = e.clientX - rect.left;\n        let posY: number = e.clientY - rect.top;\n        // console.log(\"onMouseMoved: gate文件中posY值为： 【\"+posY+\"】  canvas的top距离为：\"+rect.top);\n        LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\n      }\n\n    }, false);\n\n    //在这里加上鼠标离开浏览器后，一切归位\n    document.addEventListener(\"mouseout\", function (e) {\n      //鼠标离开document后，将其位置置为（0，0）  \n      let live2DManager: LAppLive2DManager = LAppLive2DManager.getInstance();\n      live2DManager.onDrag(0.0, 0.0);\n    }, false);\n\n    //添加鼠标点击事件\n    //监听cavas的鼠标点击事件,如果你希望在鼠标点击页面元素后\n    //看板娘不在看向鼠标，直到你再次移动鼠标，把监听事件对象从canvas换成document\n    canvas.addEventListener(\"click\", function (e) {\n      if (!LAppDelegate.getInstance()._view) {\n        LAppPal.printMessage(\"view notfound\");\n        return;\n      }\n      let rect = canvas.getBoundingClientRect();\n      let posX: number = e.clientX - rect.left;\n      let posY: number = e.clientY - rect.top;\n      // console.log(\"onMouseMoved: gate文件中posY值为： 【\"+posY+\"】  canvas的top距离为：\"+rect.top);\n      //其实就是照抄上面的，把下面两行代码加上\n      LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\n      LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\n    }, false);\n\n    // glコンテキストを初期化\n    // @ts-ignore\n    gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n\n    if (!gl) {\n      alert('Cannot initialize WebGL. This browser does not support.');\n      gl = null;\n\n      document.body.innerHTML =\n        'This browser does not support the <code>&lt;canvas&gt;</code> element.';\n\n      // gl初期化失敗\n      return false;\n    }\n\n    // キャンバスを DOM に追加\n    // document.body.appendChild(canvas);\n\n    if (!frameBuffer) {\n      frameBuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n    }\n\n    // 透過設定\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    const supportTouch: boolean = 'ontouchend' in canvas;\n\n    if (supportTouch) {\n      // タッチ関連コールバック関数登録\n      canvas.ontouchstart = onTouchBegan;\n      canvas.ontouchmove = onTouchMoved;\n      canvas.ontouchend = onTouchEnded;\n      canvas.ontouchcancel = onTouchCancel;\n    } else {\n      // マウス関連コールバック関数登録\n      // canvas.onmousedown = onClickBegan;\n      // canvas.onmousemove = onMouseMoved;\n      // canvas.onmouseup = onClickEnded;\n    }\n\n    // AppViewの初期化\n    this._view.initialize();\n\n    // Cubism SDKの初期化\n    this.initializeCubism();\n\n    return true;\n  }\n\n  /**\n   * 解放する。\n   */\n  public release(): void {\n    this._textureManager.release();\n    this._textureManager = null;\n\n    this._view.release();\n    this._view = null;\n\n    // リソースを解放\n    LAppLive2DManager.releaseInstance();\n\n    // Cubism SDKの解放\n    Csm_CubismFramework.dispose();\n  }\n\n  /**\n   * 実行処理。\n   */\n  public run(): void {\n    // メインループ\n    const loop = (): void => {\n      // インスタンスの有無の確認\n      // 确定有无实例\n      if (s_instance == null) {\n        return;\n      }\n\n      // 時間更新\n      LAppPal.updateTime();\n\n      // 画面の初期化\n      gl.clearColor(0.0, 0.0, 0.0, 0.0);\n\n      // 深度テストを有効化\n      gl.enable(gl.DEPTH_TEST);\n\n      // 近くにある物体は、遠くにある物体を覆い隠す\n      gl.depthFunc(gl.LEQUAL);\n\n      // カラーバッファや深度バッファをクリアする\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n      gl.clearDepth(1.0);\n\n      // 透過設定\n      gl.enable(gl.BLEND);\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n      // 描画更新\n      this._view.render();\n\n      // ループのために再帰呼び出し\n      requestAnimationFrame(loop);\n    };\n    loop();\n  }\n\n  /**\n   * シェーダーを登録する。\n   */\n  public createShader(): WebGLProgram {\n    // バーテックスシェーダーのコンパイル\n    const vertexShaderId = gl.createShader(gl.VERTEX_SHADER);\n\n    if (vertexShaderId == null) {\n      LAppPal.printMessage('failed to create vertexShader');\n      return null;\n    }\n\n    const vertexShader: string =\n      'precision mediump float;' +\n      'attribute vec3 position;' +\n      'attribute vec2 uv;' +\n      'varying vec2 vuv;' +\n      'void main(void)' +\n      '{' +\n      '   gl_Position = vec4(position, 1.0);' +\n      '   vuv = uv;' +\n      '}';\n\n    gl.shaderSource(vertexShaderId, vertexShader);\n    gl.compileShader(vertexShaderId);\n\n    // フラグメントシェーダのコンパイル\n    const fragmentShaderId = gl.createShader(gl.FRAGMENT_SHADER);\n\n    if (fragmentShaderId == null) {\n      LAppPal.printMessage('failed to create fragmentShader');\n      return null;\n    }\n\n    const fragmentShader: string =\n      'precision mediump float;' +\n      'varying vec2 vuv;' +\n      'uniform sampler2D texture;' +\n      'void main(void)' +\n      '{' +\n      '   gl_FragColor = texture2D(texture, vuv);' +\n      '}';\n\n    gl.shaderSource(fragmentShaderId, fragmentShader);\n    gl.compileShader(fragmentShaderId);\n\n    // プログラムオブジェクトの作成\n    const programId = gl.createProgram();\n    gl.attachShader(programId, vertexShaderId);\n    gl.attachShader(programId, fragmentShaderId);\n\n    gl.deleteShader(vertexShaderId);\n    gl.deleteShader(fragmentShaderId);\n\n    // リンク\n    gl.linkProgram(programId);\n\n    gl.useProgram(programId);\n\n    return programId;\n  }\n\n  /**\n   * View情報を取得する。\n   */\n  public getView(): LAppView {\n    return this._view;\n  }\n\n  public getTextureManager(): LAppTextureManager {\n    return this._textureManager;\n  }\n\n  /**\n   * コンストラクタ\n   */\n  constructor() {\n    this._captured = false;\n    this._mouseX = 0.0;\n    this._mouseY = 0.0;\n    this._isEnd = false;\n\n    this._cubismOption = new Csm_Option();\n    this._view = new LAppView();\n    this._textureManager = new LAppTextureManager();\n  }\n\n  /**\n   * Cubism SDKの初期化\n   */\n  public initializeCubism(): void {\n    // setup cubism\n    this._cubismOption.logFunction = LAppPal.printMessage;\n    this._cubismOption.loggingLevel = LAppDefine.CubismLoggingLevel;\n    Csm_CubismFramework.startUp(this._cubismOption);\n\n    // initialize cubism\n    Csm_CubismFramework.initialize();\n\n    // load model\n    LAppLive2DManager.getInstance();\n\n    LAppPal.updateTime();\n\n    this._view.initializeSprite();\n  }\n\n  _cubismOption: Csm_Option; // Cubism SDK Option\n  _view: LAppView; // View情報\n  _captured: boolean; // クリックしているか\n  _mouseX: number; // マウスX座標\n  _mouseY: number; // マウスY座標\n  _isEnd: boolean; // APP終了しているか\n  _textureManager: LAppTextureManager; // テクスチャマネージャー\n}\n\n/**\n * クリックしたときに呼ばれる。\n */\nfunction onClickBegan(e: MouseEvent): void {\n  if (!LAppDelegate.getInstance()._view) {\n    LAppPal.printMessage('view notfound');\n    return;\n  }\n  LAppDelegate.getInstance()._captured = true;\n\n  const posX: number = e.pageX;\n  const posY: number = e.pageY;\n\n  LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\n}\n\n/**\n * マウスポインタが動いたら呼ばれる。\n */\nfunction onMouseMoved(e: MouseEvent): void {\n  if (!LAppDelegate.getInstance()._captured) {\n    return;\n  }\n\n  if (!LAppDelegate.getInstance()._view) {\n    LAppPal.printMessage('view notfound');\n    return;\n  }\n\n  const rect = (e.target as Element).getBoundingClientRect();\n  const posX: number = e.clientX - rect.left;\n  const posY: number = e.clientY - rect.top;\n\n  LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\n}\n\n/**\n * クリックが終了したら呼ばれる。\n */\nfunction onClickEnded(e: MouseEvent): void {\n  LAppDelegate.getInstance()._captured = false;\n  if (!LAppDelegate.getInstance()._view) {\n    LAppPal.printMessage('view notfound');\n    return;\n  }\n\n  const rect = (e.target as Element).getBoundingClientRect();\n  const posX: number = e.clientX - rect.left;\n  const posY: number = e.clientY - rect.top;\n\n  LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\n}\n\n/**\n * タッチしたときに呼ばれる。\n */\nfunction onTouchBegan(e: TouchEvent): void {\n  if (!LAppDelegate.getInstance()._view) {\n    LAppPal.printMessage('view notfound');\n    return;\n  }\n\n  LAppDelegate.getInstance()._captured = true;\n\n  const posX = e.changedTouches[0].pageX;\n  const posY = e.changedTouches[0].pageY;\n\n  LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\n}\n\n/**\n * スワイプすると呼ばれる。\n */\nfunction onTouchMoved(e: TouchEvent): void {\n  if (!LAppDelegate.getInstance()._captured) {\n    return;\n  }\n\n  if (!LAppDelegate.getInstance()._view) {\n    LAppPal.printMessage('view notfound');\n    return;\n  }\n\n  const rect = (e.target as Element).getBoundingClientRect();\n\n  const posX = e.changedTouches[0].clientX - rect.left;\n  const posY = e.changedTouches[0].clientY - rect.top;\n\n  LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\n}\n\n/**\n * タッチが終了したら呼ばれる。\n */\nfunction onTouchEnded(e: TouchEvent): void {\n  LAppDelegate.getInstance()._captured = false;\n\n  if (!LAppDelegate.getInstance()._view) {\n    LAppPal.printMessage('view notfound');\n    return;\n  }\n\n  const rect = (e.target as Element).getBoundingClientRect();\n\n  const posX = e.changedTouches[0].clientX - rect.left;\n  const posY = e.changedTouches[0].clientY - rect.top;\n\n  LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\n}\n\n/**\n * タッチがキャンセルされると呼ばれる。\n */\nfunction onTouchCancel(e: TouchEvent): void {\n  LAppDelegate.getInstance()._captured = false;\n\n  if (!LAppDelegate.getInstance()._view) {\n    LAppPal.printMessage('view notfound');\n    return;\n  }\n\n  const rect = (e.target as Element).getBoundingClientRect();\n\n  const posX = e.changedTouches[0].clientX - rect.left;\n  const posY = e.changedTouches[0].clientY - rect.top;\n\n  LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}