{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * 4x4の行列\n *\n * 4x4行列の便利クラス。\n */\nexport class CubismMatrix44 {\n  /**\n   * コンストラクタ\n   */\n  constructor() {\n    this._tr = void 0;\n    this._tr = new Float32Array(16); // 4 * 4のサイズ\n    this.loadIdentity();\n  }\n\n  /**\n   * 受け取った２つの行列の乗算を行う。\n   *\n   * @param a 行列a\n   * @param b 行列b\n   * @return 乗算結果の行列\n   */\n  static multiply(a, b, dst) {\n    const c = new Float32Array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]);\n    const n = 4;\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0; j < n; ++j) {\n        for (let k = 0; k < n; ++k) {\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n        }\n      }\n    }\n    for (let i = 0; i < 16; ++i) {\n      dst[i] = c[i];\n    }\n  }\n\n  /**\n   * 単位行列に初期化する\n   */\n  loadIdentity() {\n    const c = new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);\n    this.setMatrix(c);\n  }\n\n  /**\n   * 行列を設定\n   *\n   * @param tr 16個の浮動小数点数で表される4x4の行列\n   */\n  setMatrix(tr) {\n    for (let i = 0; i < 16; ++i) {\n      this._tr[i] = tr[i];\n    }\n  }\n\n  /**\n   * 行列を浮動小数点数の配列で取得\n   *\n   * @return 16個の浮動小数点数で表される4x4の行列\n   */\n  getArray() {\n    return this._tr;\n  }\n\n  /**\n   * X軸の拡大率を取得\n   * @return X軸の拡大率\n   */\n  getScaleX() {\n    return this._tr[0];\n  }\n\n  /**\n   * Y軸の拡大率を取得する\n   *\n   * @return Y軸の拡大率\n   */\n  getScaleY() {\n    return this._tr[5];\n  }\n\n  /**\n   * X軸の移動量を取得\n   * @return X軸の移動量\n   */\n  getTranslateX() {\n    return this._tr[12];\n  }\n\n  /**\n   * Y軸の移動量を取得\n   * @return Y軸の移動量\n   */\n  getTranslateY() {\n    return this._tr[13];\n  }\n\n  /**\n   * X軸の値を現在の行列で計算\n   *\n   * @param src X軸の値\n   * @return 現在の行列で計算されたX軸の値\n   */\n  transformX(src) {\n    return this._tr[0] * src + this._tr[12];\n  }\n\n  /**\n   * Y軸の値を現在の行列で計算\n   *\n   * @param src Y軸の値\n   * @return 現在の行列で計算されたY軸の値\n   */\n  transformY(src) {\n    return this._tr[5] * src + this._tr[13];\n  }\n\n  /**\n   * X軸の値を現在の行列で逆計算\n   */\n  invertTransformX(src) {\n    return (src - this._tr[12]) / this._tr[0];\n  }\n\n  /**\n   * Y軸の値を現在の行列で逆計算\n   */\n  invertTransformY(src) {\n    return (src - this._tr[13]) / this._tr[5];\n  }\n\n  /**\n   * 現在の行列の位置を起点にして移動\n   *\n   * 現在の行列の位置を起点にして相対的に移動する。\n   *\n   * @param x X軸の移動量\n   * @param y Y軸の移動量\n   */\n  translateRelative(x, y) {\n    const tr1 = new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, x, y, 0.0, 1.0]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n\n  /**\n   * 現在の行列の位置を移動\n   *\n   * 現在の行列の位置を指定した位置へ移動する\n   *\n   * @param x X軸の移動量\n   * @param y y軸の移動量\n   */\n  translate(x, y) {\n    this._tr[12] = x;\n    this._tr[13] = y;\n  }\n\n  /**\n   * 現在の行列のX軸の位置を指定した位置へ移動する\n   *\n   * @param x X軸の移動量\n   */\n  translateX(x) {\n    this._tr[12] = x;\n  }\n\n  /**\n   * 現在の行列のY軸の位置を指定した位置へ移動する\n   *\n   * @param y Y軸の移動量\n   */\n  translateY(y) {\n    this._tr[13] = y;\n  }\n\n  /**\n   * 現在の行列の拡大率を相対的に設定する\n   *\n   * @param x X軸の拡大率\n   * @param y Y軸の拡大率\n   */\n  scaleRelative(x, y) {\n    const tr1 = new Float32Array([x, 0.0, 0.0, 0.0, 0.0, y, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n\n  /**\n   * 現在の行列の拡大率を指定した倍率に設定する\n   *\n   * @param x X軸の拡大率\n   * @param y Y軸の拡大率\n   */\n  scale(x, y) {\n    this._tr[0] = x;\n    this._tr[5] = y;\n  }\n\n  /**\n   * 現在の行列に行列を乗算\n   *\n   * @param m 行列\n   */\n  multiplyByMatrix(m) {\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n  }\n\n  /**\n   * オブジェクトのコピーを生成する\n   */\n  clone() {\n    const cloneMatrix = new CubismMatrix44();\n    for (let i = 0; i < this._tr.length; i++) {\n      cloneMatrix._tr[i] = this._tr[i];\n    }\n    return cloneMatrix;\n  }\n\n  // 4x4行列データ\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismmatrix44';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  const CubismMatrix44 = _Live2DCubismFramework.CubismMatrix44 = $.CubismMatrix44;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["CubismMatrix44","constructor","_tr","Float32Array","loadIdentity","multiply","a","b","dst","c","n","i","j","k","setMatrix","tr","getArray","getScaleX","getScaleY","getTranslateX","getTranslateY","transformX","src","transformY","invertTransformX","invertTransformY","translateRelative","x","y","tr1","translate","translateX","translateY","scaleRelative","scale","multiplyByMatrix","m","clone","cloneMatrix","length","$","Live2DCubismFramework","_Live2DCubismFramework"],"sources":["D:/Personal/PythonStuff/RR/RRWebsiteRenewed/my-app/src/Framework/src/math/cubismmatrix44.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * 4x4の行列\n *\n * 4x4行列の便利クラス。\n */\nexport class CubismMatrix44 {\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._tr = new Float32Array(16); // 4 * 4のサイズ\n    this.loadIdentity();\n  }\n\n  /**\n   * 受け取った２つの行列の乗算を行う。\n   *\n   * @param a 行列a\n   * @param b 行列b\n   * @return 乗算結果の行列\n   */\n  public static multiply(\n    a: Float32Array,\n    b: Float32Array,\n    dst: Float32Array\n  ): void {\n    const c: Float32Array = new Float32Array([\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n      0.0,\n    ]);\n\n    const n = 4;\n\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0; j < n; ++j) {\n        for (let k = 0; k < n; ++k) {\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n        }\n      }\n    }\n\n    for (let i = 0; i < 16; ++i) {\n      dst[i] = c[i];\n    }\n  }\n\n  /**\n   * 単位行列に初期化する\n   */\n  public loadIdentity(): void {\n    const c: Float32Array = new Float32Array([\n      1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0,\n      1.0,\n    ]);\n\n    this.setMatrix(c);\n  }\n\n  /**\n   * 行列を設定\n   *\n   * @param tr 16個の浮動小数点数で表される4x4の行列\n   */\n  public setMatrix(tr: Float32Array): void {\n    for (let i = 0; i < 16; ++i) {\n      this._tr[i] = tr[i];\n    }\n  }\n\n  /**\n   * 行列を浮動小数点数の配列で取得\n   *\n   * @return 16個の浮動小数点数で表される4x4の行列\n   */\n  public getArray(): Float32Array {\n    return this._tr;\n  }\n\n  /**\n   * X軸の拡大率を取得\n   * @return X軸の拡大率\n   */\n  public getScaleX(): number {\n    return this._tr[0];\n  }\n\n  /**\n   * Y軸の拡大率を取得する\n   *\n   * @return Y軸の拡大率\n   */\n  public getScaleY(): number {\n    return this._tr[5];\n  }\n\n  /**\n   * X軸の移動量を取得\n   * @return X軸の移動量\n   */\n  public getTranslateX(): number {\n    return this._tr[12];\n  }\n\n  /**\n   * Y軸の移動量を取得\n   * @return Y軸の移動量\n   */\n  public getTranslateY(): number {\n    return this._tr[13];\n  }\n\n  /**\n   * X軸の値を現在の行列で計算\n   *\n   * @param src X軸の値\n   * @return 現在の行列で計算されたX軸の値\n   */\n  public transformX(src: number): number {\n    return this._tr[0] * src + this._tr[12];\n  }\n\n  /**\n   * Y軸の値を現在の行列で計算\n   *\n   * @param src Y軸の値\n   * @return 現在の行列で計算されたY軸の値\n   */\n  public transformY(src: number): number {\n    return this._tr[5] * src + this._tr[13];\n  }\n\n  /**\n   * X軸の値を現在の行列で逆計算\n   */\n  public invertTransformX(src: number): number {\n    return (src - this._tr[12]) / this._tr[0];\n  }\n\n  /**\n   * Y軸の値を現在の行列で逆計算\n   */\n  public invertTransformY(src: number): number {\n    return (src - this._tr[13]) / this._tr[5];\n  }\n\n  /**\n   * 現在の行列の位置を起点にして移動\n   *\n   * 現在の行列の位置を起点にして相対的に移動する。\n   *\n   * @param x X軸の移動量\n   * @param y Y軸の移動量\n   */\n  public translateRelative(x: number, y: number): void {\n    const tr1: Float32Array = new Float32Array([\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      x,\n      y,\n      0.0,\n      1.0,\n    ]);\n\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n\n  /**\n   * 現在の行列の位置を移動\n   *\n   * 現在の行列の位置を指定した位置へ移動する\n   *\n   * @param x X軸の移動量\n   * @param y y軸の移動量\n   */\n  public translate(x: number, y: number): void {\n    this._tr[12] = x;\n    this._tr[13] = y;\n  }\n\n  /**\n   * 現在の行列のX軸の位置を指定した位置へ移動する\n   *\n   * @param x X軸の移動量\n   */\n  public translateX(x: number): void {\n    this._tr[12] = x;\n  }\n\n  /**\n   * 現在の行列のY軸の位置を指定した位置へ移動する\n   *\n   * @param y Y軸の移動量\n   */\n  public translateY(y: number): void {\n    this._tr[13] = y;\n  }\n\n  /**\n   * 現在の行列の拡大率を相対的に設定する\n   *\n   * @param x X軸の拡大率\n   * @param y Y軸の拡大率\n   */\n  public scaleRelative(x: number, y: number): void {\n    const tr1: Float32Array = new Float32Array([\n      x,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      y,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      1.0,\n    ]);\n\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n\n  /**\n   * 現在の行列の拡大率を指定した倍率に設定する\n   *\n   * @param x X軸の拡大率\n   * @param y Y軸の拡大率\n   */\n  public scale(x: number, y: number): void {\n    this._tr[0] = x;\n    this._tr[5] = y;\n  }\n\n  /**\n   * 現在の行列に行列を乗算\n   *\n   * @param m 行列\n   */\n  public multiplyByMatrix(m: CubismMatrix44): void {\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n  }\n\n  /**\n   * オブジェクトのコピーを生成する\n   */\n  public clone(): CubismMatrix44 {\n    const cloneMatrix: CubismMatrix44 = new CubismMatrix44();\n\n    for (let i = 0; i < this._tr.length; i++) {\n      cloneMatrix._tr[i] = this._tr[i];\n    }\n\n    return cloneMatrix;\n  }\n\n  protected _tr: Float32Array; // 4x4行列データ\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismmatrix44';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Live2DCubismFramework {\n  export const CubismMatrix44 = $.CubismMatrix44;\n  export type CubismMatrix44 = $.CubismMatrix44;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}