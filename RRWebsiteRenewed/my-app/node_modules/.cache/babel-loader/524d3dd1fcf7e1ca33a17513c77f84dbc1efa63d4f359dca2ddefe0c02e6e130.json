{"ast":null,"code":"/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\n\n/**\r\n * プラットフォーム依存機能を抽象化する Cubism Platform Abstraction Layer.\r\n *\r\n * ファイル読み込みや時刻取得等のプラットフォームに依存する関数をまとめる。\r\n */\nexport class LAppPal {\n  /**\r\n   * ファイルをバイトデータとして読みこむ\r\n   *\r\n   * @param filePath 読み込み対象ファイルのパス\r\n   * @return\r\n   * {\r\n   *      buffer,   読み込んだバイトデータ\r\n   *      size        ファイルサイズ\r\n   * }\r\n   */\n  static loadFileAsBytes(filePath, callback) {\n    fetch(filePath).then(response => response.arrayBuffer()).then(arrayBuffer => callback(arrayBuffer, arrayBuffer.byteLength));\n  }\n\n  /**\r\n   * デルタ時間（前回フレームとの差分）を取得する\r\n   * @return デルタ時間[ms]\r\n   */\n  static getDeltaTime() {\n    return this.s_deltaTime;\n  }\n  static updateTime() {\n    this.s_currentFrame = Date.now();\n    this.s_deltaTime = (this.s_currentFrame - this.s_lastFrame) / 1000;\n    this.s_lastFrame = this.s_currentFrame;\n  }\n\n  /**\r\n   * メッセージを出力する\r\n   * @param message 文字列\r\n   */\n  static printMessage(message) {\n    console.log(message);\n  }\n}\nLAppPal.lastUpdate = Date.now();\nLAppPal.s_currentFrame = 0.0;\nLAppPal.s_lastFrame = 0.0;\nLAppPal.s_deltaTime = 0.0;","map":{"version":3,"names":["LAppPal","loadFileAsBytes","filePath","callback","fetch","then","response","arrayBuffer","byteLength","getDeltaTime","s_deltaTime","updateTime","s_currentFrame","Date","now","s_lastFrame","printMessage","message","console","log","lastUpdate"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/mylive2d/react-live2d/Samples/TypeScript/Demo/dist/lapppal.ts"],"sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\n/**\r\n * プラットフォーム依存機能を抽象化する Cubism Platform Abstraction Layer.\r\n *\r\n * ファイル読み込みや時刻取得等のプラットフォームに依存する関数をまとめる。\r\n */\r\nexport class LAppPal {\r\n  /**\r\n   * ファイルをバイトデータとして読みこむ\r\n   *\r\n   * @param filePath 読み込み対象ファイルのパス\r\n   * @return\r\n   * {\r\n   *      buffer,   読み込んだバイトデータ\r\n   *      size        ファイルサイズ\r\n   * }\r\n   */\r\n  public static loadFileAsBytes(\r\n    filePath: string,\r\n    callback: (arrayBuffer: ArrayBuffer, size: number) => void\r\n  ): void {\r\n    fetch(filePath)\r\n      .then(response => response.arrayBuffer())\r\n      .then(arrayBuffer => callback(arrayBuffer, arrayBuffer.byteLength));\r\n  }\r\n\r\n  /**\r\n   * デルタ時間（前回フレームとの差分）を取得する\r\n   * @return デルタ時間[ms]\r\n   */\r\n  public static getDeltaTime(): number {\r\n    return this.s_deltaTime;\r\n  }\r\n\r\n  public static updateTime(): void {\r\n    this.s_currentFrame = Date.now();\r\n    this.s_deltaTime = (this.s_currentFrame - this.s_lastFrame) / 1000;\r\n    this.s_lastFrame = this.s_currentFrame;\r\n  }\r\n\r\n  /**\r\n   * メッセージを出力する\r\n   * @param message 文字列\r\n   */\r\n  public static printMessage(message: string): void {\r\n    console.log(message);\r\n  }\r\n\r\n  static lastUpdate = Date.now();\r\n\r\n  static s_currentFrame = 0.0;\r\n  static s_lastFrame = 0.0;\r\n  static s_deltaTime = 0.0;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,OAAO,CAAC;EACnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAcC,eAAeA,CAC3BC,QAAgB,EAChBC,QAA0D,EACpD;IACNC,KAAK,CAACF,QAAQ,CAAC,CACZG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CACxCF,IAAI,CAACE,WAAW,IAAIJ,QAAQ,CAACI,WAAW,EAAEA,WAAW,CAACC,UAAU,CAAC,CAAC;EACvE;;EAEA;AACF;AACA;AACA;EACE,OAAcC,YAAYA,CAAA,EAAW;IACnC,OAAO,IAAI,CAACC,WAAW;EACzB;EAEA,OAAcC,UAAUA,CAAA,EAAS;IAC/B,IAAI,CAACC,cAAc,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAChC,IAAI,CAACJ,WAAW,GAAG,CAAC,IAAI,CAACE,cAAc,GAAG,IAAI,CAACG,WAAW,IAAI,IAAI;IAClE,IAAI,CAACA,WAAW,GAAG,IAAI,CAACH,cAAc;EACxC;;EAEA;AACF;AACA;AACA;EACE,OAAcI,YAAYA,CAACC,OAAe,EAAQ;IAChDC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACtB;AAOF;AA/CajB,OAAO,CA0CXoB,UAAU,GAAGP,IAAI,CAACC,GAAG,CAAC,CAAC;AA1CnBd,OAAO,CA4CXY,cAAc,GAAG,GAAG;AA5ChBZ,OAAO,CA6CXe,WAAW,GAAG,GAAG;AA7Cbf,OAAO,CA8CXU,WAAW,GAAG,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}