{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cleyc\\\\OneDrive\\\\Documents\\\\RR\\\\RRWebsiteRenewed\\\\my-app\\\\src\\\\js\\\\Animation.js\",\n  _s = $RefreshSig$();\nimport '../css/Animation.css';\nimport React, { useEffect, useRef } from 'react';\nimport { Live2DCubismFramework } from \"./Framework/live2dcubismframework\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Animation(props) {\n  _s();\n  const canvasRef = useRef(null);\n  Live2DCubismFramework.CubismFramework.CubismFramework.startup();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const builder = new Live2DCubismFramework.CubismUserModel();\n    async function loadModel() {\n      const modelJsonPath = './Resources/Mao/Mao.model3.json'; // Path to your Live2D model's JSON file\n      const idleAnimationName = 'Idle'; // Name of the idle animation\n\n      // Load model data\n      await builder.loadModel(modelJsonPath);\n\n      // Create model instance\n      const model = builder.buildModel();\n\n      // Load idle animation\n      await model.motionManager.loadMotion(modelJsonPath, idleAnimationName);\n\n      // Start idle animation\n      model.motionManager.startMotion(idleAnimationName);\n\n      // Set up rendering context\n      const options = {\n        canvas: canvas,\n        alpha: true,\n        antialias: true\n      };\n      const gl = canvas.getContext('webgl', options) || canvas.getContext('experimental-webgl', options);\n\n      // Initialize and start rendering\n      model.initialize(gl);\n      function renderLoop() {\n        model.update();\n        model.draw();\n        requestAnimationFrame(renderLoop);\n      }\n      renderLoop();\n    }\n    loadModel();\n    return () => {\n      // Clean up resources\n      builder.release();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n}\n_s(Animation, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Animation;\nexport default Animation;\n\n//<ReactLive2d></ReactLive2d>\nvar _c;\n$RefreshReg$(_c, \"Animation\");","map":{"version":3,"names":["React","useEffect","useRef","Live2DCubismFramework","jsxDEV","_jsxDEV","Animation","props","_s","canvasRef","CubismFramework","startup","canvas","current","builder","CubismUserModel","loadModel","modelJsonPath","idleAnimationName","model","buildModel","motionManager","loadMotion","startMotion","options","alpha","antialias","gl","getContext","initialize","renderLoop","update","draw","requestAnimationFrame","release","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/js/Animation.js"],"sourcesContent":["import '../css/Animation.css'\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Live2DCubismFramework } from \"./Framework/live2dcubismframework\";\r\n\r\n\r\n\r\nfunction Animation(props){\r\n    const canvasRef = useRef(null);\r\n    Live2DCubismFramework.CubismFramework.CubismFramework.startup();\r\n\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const builder = new Live2DCubismFramework.CubismUserModel();\r\n\r\n        async function loadModel() {\r\n        const modelJsonPath = './Resources/Mao/Mao.model3.json'; // Path to your Live2D model's JSON file\r\n        const idleAnimationName = 'Idle'; // Name of the idle animation\r\n\r\n        // Load model data\r\n        await builder.loadModel(modelJsonPath);\r\n\r\n        // Create model instance\r\n        const model = builder.buildModel();\r\n\r\n        // Load idle animation\r\n        await model.motionManager.loadMotion(modelJsonPath, idleAnimationName);\r\n\r\n        // Start idle animation\r\n        model.motionManager.startMotion(idleAnimationName);\r\n\r\n        // Set up rendering context\r\n        const options = {\r\n            canvas: canvas,\r\n            alpha: true,\r\n            antialias: true,\r\n        };\r\n\r\n        const gl = canvas.getContext('webgl', options) || canvas.getContext('experimental-webgl', options);\r\n\r\n        // Initialize and start rendering\r\n        model.initialize(gl);\r\n        function renderLoop() {\r\n            model.update();\r\n            model.draw();\r\n            requestAnimationFrame(renderLoop);\r\n        }\r\n        renderLoop();\r\n        }\r\n\r\n        loadModel();\r\n\r\n        return () => {\r\n        // Clean up resources\r\n        builder.release();\r\n        };\r\n    }, []);\r\n\r\n    return <canvas ref={canvasRef} />;\r\n  \r\n}  \r\nexport default Animation\r\n\r\n//<ReactLive2d></ReactLive2d>"],"mappings":";;AAAA,OAAO,sBAAsB;AAC7B,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,qBAAqB,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1E,SAASC,SAASA,CAACC,KAAK,EAAC;EAAAC,EAAA;EACrB,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9BC,qBAAqB,CAACO,eAAe,CAACA,eAAe,CAACC,OAAO,CAAC,CAAC;EAG/DV,SAAS,CAAC,MAAM;IACZ,MAAMW,MAAM,GAAGH,SAAS,CAACI,OAAO;IAChC,MAAMC,OAAO,GAAG,IAAIX,qBAAqB,CAACY,eAAe,CAAC,CAAC;IAE3D,eAAeC,SAASA,CAAA,EAAG;MAC3B,MAAMC,aAAa,GAAG,iCAAiC,CAAC,CAAC;MACzD,MAAMC,iBAAiB,GAAG,MAAM,CAAC,CAAC;;MAElC;MACA,MAAMJ,OAAO,CAACE,SAAS,CAACC,aAAa,CAAC;;MAEtC;MACA,MAAME,KAAK,GAAGL,OAAO,CAACM,UAAU,CAAC,CAAC;;MAElC;MACA,MAAMD,KAAK,CAACE,aAAa,CAACC,UAAU,CAACL,aAAa,EAAEC,iBAAiB,CAAC;;MAEtE;MACAC,KAAK,CAACE,aAAa,CAACE,WAAW,CAACL,iBAAiB,CAAC;;MAElD;MACA,MAAMM,OAAO,GAAG;QACZZ,MAAM,EAAEA,MAAM;QACda,KAAK,EAAE,IAAI;QACXC,SAAS,EAAE;MACf,CAAC;MAED,MAAMC,EAAE,GAAGf,MAAM,CAACgB,UAAU,CAAC,OAAO,EAAEJ,OAAO,CAAC,IAAIZ,MAAM,CAACgB,UAAU,CAAC,oBAAoB,EAAEJ,OAAO,CAAC;;MAElG;MACAL,KAAK,CAACU,UAAU,CAACF,EAAE,CAAC;MACpB,SAASG,UAAUA,CAAA,EAAG;QAClBX,KAAK,CAACY,MAAM,CAAC,CAAC;QACdZ,KAAK,CAACa,IAAI,CAAC,CAAC;QACZC,qBAAqB,CAACH,UAAU,CAAC;MACrC;MACAA,UAAU,CAAC,CAAC;IACZ;IAEAd,SAAS,CAAC,CAAC;IAEX,OAAO,MAAM;MACb;MACAF,OAAO,CAACoB,OAAO,CAAC,CAAC;IACjB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO7B,OAAA;IAAQ8B,GAAG,EAAE1B;EAAU;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAErC;AAAC/B,EAAA,CAtDQF,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAuDlB,eAAeA,SAAS;;AAExB;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}