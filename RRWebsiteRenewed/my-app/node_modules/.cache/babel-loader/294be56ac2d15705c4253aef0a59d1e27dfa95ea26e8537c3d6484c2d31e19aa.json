{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CSM_LOG_LEVEL, CSM_LOG_LEVEL_DEBUG, CSM_LOG_LEVEL_ERROR, CSM_LOG_LEVEL_INFO, CSM_LOG_LEVEL_VERBOSE, CSM_LOG_LEVEL_WARNING } from '../cubismframeworkconfig';\nimport { CubismFramework, LogLevel } from '../live2dcubismframework';\nexport const CubismLogPrint = (level, fmt, args) => {\n  CubismDebug.print(level, '[CSM]' + fmt, args);\n};\n_c = CubismLogPrint;\nexport const CubismLogPrintIn = (level, fmt, args) => {\n  CubismLogPrint(level, fmt + '\\n', args);\n};\n_c2 = CubismLogPrintIn;\nexport const CSM_ASSERT = expr => {\n  console.assert(expr);\n};\n_c3 = CSM_ASSERT;\nexport let CubismLogVerbose;\nexport let CubismLogDebug;\nexport let CubismLogInfo;\nexport let CubismLogWarning;\nexport let CubismLogError;\nif (CSM_LOG_LEVEL <= CSM_LOG_LEVEL_VERBOSE) {\n  CubismLogVerbose = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Verbose, '[V]' + fmt, args);\n  };\n  CubismLogDebug = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n  };\n  CubismLogInfo = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n  CubismLogWarning = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n  CubismLogError = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_DEBUG) {\n  CubismLogDebug = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n  };\n  CubismLogInfo = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n  CubismLogWarning = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n  CubismLogError = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_INFO) {\n  CubismLogInfo = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n  CubismLogWarning = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n  CubismLogError = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_WARNING) {\n  CubismLogWarning = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n  CubismLogError = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_ERROR) {\n  CubismLogError = (fmt, ...args) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n}\n\n/**\n * デバッグ用のユーティリティクラス。\n * ログの出力、バイトのダンプなど\n */\nexport class CubismDebug {\n  /**\n   * ログを出力する。第一引数にログレベルを設定する。\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n   *\n   * @param logLevel ログレベルの設定\n   * @param format 書式付き文字列\n   * @param args 可変長引数\n   */\n  static print(logLevel, format, args) {\n    // オプションで設定されたログ出力レベルを下回る場合はログに出さない\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n    const logPrint = CubismFramework.coreLogFunction;\n    if (!logPrint) return;\n    const buffer = format.replace(/\\{(\\d+)\\}/g, (m, k) => {\n      return args[k];\n    });\n    logPrint(buffer);\n  }\n\n  /**\n   * データから指定した長さだけダンプ出力する。\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n   *\n   * @param logLevel ログレベルの設定\n   * @param data ダンプするデータ\n   * @param length ダンプする長さ\n   */\n  static dumpBytes(logLevel, data, length) {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0) this.print(logLevel, '\\n');else if (i % 8 == 0 && i > 0) this.print(logLevel, '  ');\n      this.print(logLevel, '{0} ', [data[i] & 0xff]);\n    }\n    this.print(logLevel, '\\n');\n  }\n\n  /**\n   * private コンストラクタ\n   */\n  constructor() {}\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismdebug';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  const CubismDebug = _Live2DCubismFramework.CubismDebug = $.CubismDebug;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CubismLogPrint\");\n$RefreshReg$(_c2, \"CubismLogPrintIn\");\n$RefreshReg$(_c3, \"CSM_ASSERT\");","map":{"version":3,"names":["CSM_LOG_LEVEL","CSM_LOG_LEVEL_DEBUG","CSM_LOG_LEVEL_ERROR","CSM_LOG_LEVEL_INFO","CSM_LOG_LEVEL_VERBOSE","CSM_LOG_LEVEL_WARNING","CubismFramework","LogLevel","CubismLogPrint","level","fmt","args","CubismDebug","print","_c","CubismLogPrintIn","_c2","CSM_ASSERT","expr","console","assert","_c3","CubismLogVerbose","CubismLogDebug","CubismLogInfo","CubismLogWarning","CubismLogError","LogLevel_Verbose","LogLevel_Debug","LogLevel_Info","LogLevel_Warning","LogLevel_Error","logLevel","format","getLoggingLevel","logPrint","coreLogFunction","buffer","replace","m","k","dumpBytes","data","length","i","constructor","$","Live2DCubismFramework","_Live2DCubismFramework","$RefreshReg$"],"sources":["D:/Personal/PythonStuff/RR/RRWebsiteRenewed/my-app/src/Framework/src/utils/cubismdebug.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport {\n  CSM_LOG_LEVEL,\n  CSM_LOG_LEVEL_DEBUG,\n  CSM_LOG_LEVEL_ERROR,\n  CSM_LOG_LEVEL_INFO,\n  CSM_LOG_LEVEL_VERBOSE,\n  CSM_LOG_LEVEL_WARNING,\n} from '../cubismframeworkconfig';\nimport { CubismFramework, LogLevel } from '../live2dcubismframework';\n\nexport const CubismLogPrint = (level: LogLevel, fmt: string, args: any[]) => {\n  CubismDebug.print(level, '[CSM]' + fmt, args);\n};\n\nexport const CubismLogPrintIn = (level: LogLevel, fmt: string, args: any[]) => {\n  CubismLogPrint(level, fmt + '\\n', args);\n};\n\nexport const CSM_ASSERT = (expr: any) => {\n  console.assert(expr);\n};\n\nexport let CubismLogVerbose: (fmt: string, ...args: any[]) => void;\nexport let CubismLogDebug: (fmt: string, ...args: any[]) => void;\nexport let CubismLogInfo: (fmt: string, ...args: any[]) => void;\nexport let CubismLogWarning: (fmt: string, ...args: any[]) => void;\nexport let CubismLogError: (fmt: string, ...args: any[]) => void;\n\nif (CSM_LOG_LEVEL <= CSM_LOG_LEVEL_VERBOSE) {\n  CubismLogVerbose = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Verbose, '[V]' + fmt, args);\n  };\n\n  CubismLogDebug = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n  };\n\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_DEBUG) {\n  CubismLogDebug = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n  };\n\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_INFO) {\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_WARNING) {\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_ERROR) {\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n}\n\n/**\n * デバッグ用のユーティリティクラス。\n * ログの出力、バイトのダンプなど\n */\nexport class CubismDebug {\n  /**\n   * ログを出力する。第一引数にログレベルを設定する。\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n   *\n   * @param logLevel ログレベルの設定\n   * @param format 書式付き文字列\n   * @param args 可変長引数\n   */\n  public static print(logLevel: LogLevel, format: string, args?: any[]): void {\n    // オプションで設定されたログ出力レベルを下回る場合はログに出さない\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n\n    const logPrint: Live2DCubismCore.csmLogFunction =\n      CubismFramework.coreLogFunction;\n\n    if (!logPrint) return;\n\n    const buffer: string = format.replace(/\\{(\\d+)\\}/g, (m, k) => {\n      return args[k];\n    });\n    logPrint(buffer);\n  }\n\n  /**\n   * データから指定した長さだけダンプ出力する。\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n   *\n   * @param logLevel ログレベルの設定\n   * @param data ダンプするデータ\n   * @param length ダンプする長さ\n   */\n  public static dumpBytes(\n    logLevel: LogLevel,\n    data: Uint8Array,\n    length: number\n  ): void {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0) this.print(logLevel, '\\n');\n      else if (i % 8 == 0 && i > 0) this.print(logLevel, '  ');\n      this.print(logLevel, '{0} ', [data[i] & 0xff]);\n    }\n\n    this.print(logLevel, '\\n');\n  }\n\n  /**\n   * private コンストラクタ\n   */\n  private constructor() {}\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismdebug';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Live2DCubismFramework {\n  export const CubismDebug = $.CubismDebug;\n  export type CubismDebug = $.CubismDebug;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}