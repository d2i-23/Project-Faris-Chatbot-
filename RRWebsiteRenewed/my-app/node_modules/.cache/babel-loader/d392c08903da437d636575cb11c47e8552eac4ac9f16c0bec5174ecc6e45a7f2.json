{"ast":null,"code":"/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\n\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nimport { Live2DCubismFramework as csmstring } from '../type/csmstring';\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nvar csmVector = csmvector.csmVector;\nvar csmString = csmstring.csmString;\nvar CubismIdHandle = cubismid.CubismIdHandle;\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  let CubismMotionCurveTarget = /*#__PURE__*/function (CubismMotionCurveTarget) {\n    CubismMotionCurveTarget[CubismMotionCurveTarget[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n    CubismMotionCurveTarget[CubismMotionCurveTarget[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n    CubismMotionCurveTarget[CubismMotionCurveTarget[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n    return CubismMotionCurveTarget;\n  }({});\n  _Live2DCubismFramework.CubismMotionCurveTarget = CubismMotionCurveTarget;\n  let CubismMotionSegmentType = /*#__PURE__*/function (CubismMotionSegmentType) {\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n    CubismMotionSegmentType[CubismMotionSegmentType[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n    return CubismMotionSegmentType;\n  }({});\n  _Live2DCubismFramework.CubismMotionSegmentType = CubismMotionSegmentType;\n  class CubismMotionPoint {\n    constructor() {\n      this.time = 0.0;\n      // 時間[秒]\n      this.value = 0.0;\n    } // 値\n  }\n  _Live2DCubismFramework.CubismMotionPoint = CubismMotionPoint;\n  /**\r\n   * モーションカーブのセグメントの評価関数\r\n   *\r\n   * @param   points      モーションカーブの制御点リスト\r\n   * @param   time        評価する時間[秒]\r\n   */\n  /**\r\n   * @brief モーションカーブのセグメント\r\n   *\r\n   * モーションカーブのセグメント。\r\n   */\n  class CubismMotionSegment {\n    /**\r\n     * @brief コンストラクタ\r\n     *\r\n     * コンストラクタ。\r\n     */\n    constructor() {\n      this.evaluate = void 0;\n      // 使用する評価関数\n      this.basePointIndex = void 0;\n      // 最初のセグメントへのインデックス\n      this.segmentType = void 0;\n      this.evaluate = null;\n      this.basePointIndex = 0;\n      this.segmentType = 0;\n    }\n\n    // セグメントの種類\n  }\n  _Live2DCubismFramework.CubismMotionSegment = CubismMotionSegment;\n  class CubismMotionCurve {\n    constructor() {\n      this.type = void 0;\n      // カーブの種類\n      this.id = void 0;\n      // カーブのID\n      this.segmentCount = void 0;\n      // セグメントの個数\n      this.baseSegmentIndex = void 0;\n      // 最初のセグメントのインデックス\n      this.fadeInTime = void 0;\n      // フェードインにかかる時間[秒]\n      this.fadeOutTime = void 0;\n      this.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n      this.segmentCount = 0;\n      this.baseSegmentIndex = 0;\n      this.fadeInTime = 0.0;\n      this.fadeOutTime = 0.0;\n    }\n\n    // フェードアウトにかかる時間[秒]\n  }\n  _Live2DCubismFramework.CubismMotionCurve = CubismMotionCurve;\n  class CubismMotionEvent {\n    constructor() {\n      this.fireTime = 0.0;\n      this.value = void 0;\n    }\n  }\n  _Live2DCubismFramework.CubismMotionEvent = CubismMotionEvent;\n  class CubismMotionData {\n    constructor() {\n      this.duration = void 0;\n      // モーションの長さ[秒]\n      this.loop = void 0;\n      // ループするかどうか\n      this.curveCount = void 0;\n      // カーブの個数\n      this.eventCount = void 0;\n      // UserDataの個数\n      this.fps = void 0;\n      // フレームレート\n      this.curves = void 0;\n      // カーブのリスト\n      this.segments = void 0;\n      // セグメントのリスト\n      this.points = void 0;\n      // ポイントのリスト\n      this.events = void 0;\n      this.duration = 0.0;\n      this.loop = false;\n      this.curveCount = 0;\n      this.eventCount = 0;\n      this.fps = 0.0;\n      this.curves = new csmVector();\n      this.segments = new csmVector();\n      this.points = new csmVector();\n      this.events = new csmVector();\n    }\n\n    // イベントのリスト\n  }\n  _Live2DCubismFramework.CubismMotionData = CubismMotionData;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["Live2DCubismFramework","cubismid","csmstring","csmvector","csmVector","csmString","CubismIdHandle","_Live2DCubismFramework","CubismMotionCurveTarget","CubismMotionSegmentType","CubismMotionPoint","constructor","time","value","CubismMotionSegment","evaluate","basePointIndex","segmentType","CubismMotionCurve","type","id","segmentCount","baseSegmentIndex","fadeInTime","fadeOutTime","CubismMotionCurveTarget_Model","CubismMotionEvent","fireTime","CubismMotionData","duration","loop","curveCount","eventCount","fps","curves","segments","points","events"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/mylive2d/react-live2d/Samples/TypeScript/Demo/Framework/src/motion/cubismmotioninternal.ts"],"sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\r\nimport { Live2DCubismFramework as csmstring } from '../type/csmstring';\r\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\r\nimport csmVector = csmvector.csmVector;\r\nimport csmString = csmstring.csmString;\r\nimport CubismIdHandle = cubismid.CubismIdHandle;\r\n\r\nexport namespace Live2DCubismFramework {\r\n  /**\r\n   * @brief モーションカーブの種類\r\n   *\r\n   * モーションカーブの種類。\r\n   */\r\n  export enum CubismMotionCurveTarget {\r\n    CubismMotionCurveTarget_Model, // モデルに対して\r\n    CubismMotionCurveTarget_Parameter, // パラメータに対して\r\n    CubismMotionCurveTarget_PartOpacity // パーツの不透明度に対して\r\n  }\r\n\r\n  /**\r\n   * @brief モーションカーブのセグメントの種類\r\n   *\r\n   * モーションカーブのセグメントの種類。\r\n   */\r\n  export enum CubismMotionSegmentType {\r\n    CubismMotionSegmentType_Linear = 0, // リニア\r\n    CubismMotionSegmentType_Bezier = 1, // ベジェ曲線\r\n    CubismMotionSegmentType_Stepped = 2, // ステップ\r\n    CubismMotionSegmentType_InverseStepped = 3 // インバースステップ\r\n  }\r\n\r\n  /**\r\n   * @brief モーションカーブの制御点\r\n   *\r\n   * モーションカーブの制御点。\r\n   */\r\n  export class CubismMotionPoint {\r\n    time = 0.0; // 時間[秒]\r\n    value = 0.0; // 値\r\n  }\r\n\r\n  /**\r\n   * モーションカーブのセグメントの評価関数\r\n   *\r\n   * @param   points      モーションカーブの制御点リスト\r\n   * @param   time        評価する時間[秒]\r\n   */\r\n  export interface csmMotionSegmentEvaluationFunction {\r\n    (points: CubismMotionPoint[], time: number): number;\r\n  }\r\n\r\n  /**\r\n   * @brief モーションカーブのセグメント\r\n   *\r\n   * モーションカーブのセグメント。\r\n   */\r\n  export class CubismMotionSegment {\r\n    /**\r\n     * @brief コンストラクタ\r\n     *\r\n     * コンストラクタ。\r\n     */\r\n    public constructor() {\r\n      this.evaluate = null;\r\n      this.basePointIndex = 0;\r\n      this.segmentType = 0;\r\n    }\r\n\r\n    evaluate: csmMotionSegmentEvaluationFunction; // 使用する評価関数\r\n    basePointIndex: number; // 最初のセグメントへのインデックス\r\n    segmentType: number; // セグメントの種類\r\n  }\r\n\r\n  /**\r\n   * @brief モーションカーブ\r\n   *\r\n   * モーションカーブ。\r\n   */\r\n  export class CubismMotionCurve {\r\n    public constructor() {\r\n      this.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\r\n      this.segmentCount = 0;\r\n      this.baseSegmentIndex = 0;\r\n      this.fadeInTime = 0.0;\r\n      this.fadeOutTime = 0.0;\r\n    }\r\n\r\n    type: CubismMotionCurveTarget; // カーブの種類\r\n    id: CubismIdHandle; // カーブのID\r\n    segmentCount: number; // セグメントの個数\r\n    baseSegmentIndex: number; // 最初のセグメントのインデックス\r\n    fadeInTime: number; // フェードインにかかる時間[秒]\r\n    fadeOutTime: number; // フェードアウトにかかる時間[秒]\r\n  }\r\n\r\n  /**\r\n   * イベント。\r\n   */\r\n  export class CubismMotionEvent {\r\n    fireTime = 0.0;\r\n    value: csmString;\r\n  }\r\n\r\n  /**\r\n   * @brief モーションデータ\r\n   *\r\n   * モーションデータ。\r\n   */\r\n  export class CubismMotionData {\r\n    public constructor() {\r\n      this.duration = 0.0;\r\n      this.loop = false;\r\n      this.curveCount = 0;\r\n      this.eventCount = 0;\r\n      this.fps = 0.0;\r\n\r\n      this.curves = new csmVector<CubismMotionCurve>();\r\n      this.segments = new csmVector<CubismMotionSegment>();\r\n      this.points = new csmVector<CubismMotionPoint>();\r\n      this.events = new csmVector<CubismMotionEvent>();\r\n    }\r\n\r\n    duration: number; // モーションの長さ[秒]\r\n    loop: boolean; // ループするかどうか\r\n    curveCount: number; // カーブの個数\r\n    eventCount: number; // UserDataの個数\r\n    fps: number; // フレームレート\r\n    curves: csmVector<CubismMotionCurve>; // カーブのリスト\r\n    segments: csmVector<CubismMotionSegment>; // セグメントのリスト\r\n    points: csmVector<CubismMotionPoint>; // ポイントのリスト\r\n    events: csmVector<CubismMotionEvent>; // イベントのリスト\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}