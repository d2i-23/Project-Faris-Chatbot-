{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { csmVector } from '../type/csmvector';\nimport { CubismId } from './cubismid';\n\n/**\n * ID名の管理\n *\n * ID名を管理する。\n */\nexport class CubismIdManager {\n  /**\n   * コンストラクタ\n   */\n  constructor() {\n    this._ids = void 0;\n    this._ids = new csmVector();\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  release() {\n    for (let i = 0; i < this._ids.getSize(); ++i) {\n      this._ids.set(i, void 0);\n    }\n    this._ids = null;\n  }\n\n  /**\n   * ID名をリストから登録\n   *\n   * @param ids ID名リスト\n   * @param count IDの個数\n   */\n  registerIds(ids) {\n    for (let i = 0; i < ids.length; i++) {\n      this.registerId(ids[i]);\n    }\n  }\n\n  /**\n   * ID名を登録\n   *\n   * @param id ID名\n   */\n  registerId(id) {\n    let result = null;\n    if ('string' == typeof id) {\n      if ((result = this.findId(id)) != null) {\n        return result;\n      }\n      result = new CubismId(id);\n      this._ids.pushBack(result);\n    } else {\n      return this.registerId(id.s);\n    }\n    return result;\n  }\n\n  /**\n   * ID名からIDを取得する\n   *\n   * @param id ID名\n   */\n  getId(id) {\n    return this.registerId(id);\n  }\n\n  /**\n   * ID名からIDの確認\n   *\n   * @return true 存在する\n   * @return false 存在しない\n   */\n  isExist(id) {\n    if ('string' == typeof id) {\n      return this.findId(id) != null;\n    }\n    return this.isExist(id.s);\n  }\n\n  /**\n   * ID名からIDを検索する。\n   *\n   * @param id ID名\n   * @return 登録されているID。なければNULL。\n   */\n  findId(id) {\n    for (let i = 0; i < this._ids.getSize(); ++i) {\n      if (this._ids.at(i).getString().isEqual(id)) {\n        return this._ids.at(i);\n      }\n    }\n    return null;\n  }\n\n  // 登録されているIDのリスト\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismidmanager';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  const CubismIdManager = _Live2DCubismFramework.CubismIdManager = $.CubismIdManager;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["csmVector","CubismId","CubismIdManager","constructor","_ids","release","i","getSize","set","registerIds","ids","length","registerId","id","result","findId","pushBack","s","getId","isExist","at","getString","isEqual","$","Live2DCubismFramework","_Live2DCubismFramework"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/Samples/TypeScript/Demo/Framework/src/id/cubismidmanager.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { csmString } from '../type/csmstring';\nimport { csmVector } from '../type/csmvector';\nimport { CubismId } from './cubismid';\n\n/**\n * ID名の管理\n *\n * ID名を管理する。\n */\nexport class CubismIdManager {\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    this._ids = new csmVector<CubismId>();\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    for (let i = 0; i < this._ids.getSize(); ++i) {\n      this._ids.set(i, void 0);\n    }\n    this._ids = null;\n  }\n\n  /**\n   * ID名をリストから登録\n   *\n   * @param ids ID名リスト\n   * @param count IDの個数\n   */\n  public registerIds(ids: string[] | csmString[]): void {\n    for (let i = 0; i < ids.length; i++) {\n      this.registerId(ids[i]);\n    }\n  }\n\n  /**\n   * ID名を登録\n   *\n   * @param id ID名\n   */\n  public registerId(id: string | csmString): CubismId {\n    let result: CubismId = null;\n\n    if ('string' == typeof id) {\n      if ((result = this.findId(id)) != null) {\n        return result;\n      }\n\n      result = new CubismId(id);\n      this._ids.pushBack(result);\n    } else {\n      return this.registerId(id.s);\n    }\n\n    return result;\n  }\n\n  /**\n   * ID名からIDを取得する\n   *\n   * @param id ID名\n   */\n  public getId(id: csmString | string): CubismId {\n    return this.registerId(id);\n  }\n\n  /**\n   * ID名からIDの確認\n   *\n   * @return true 存在する\n   * @return false 存在しない\n   */\n  public isExist(id: csmString | string): boolean {\n    if ('string' == typeof id) {\n      return this.findId(id) != null;\n    }\n    return this.isExist(id.s);\n  }\n\n  /**\n   * ID名からIDを検索する。\n   *\n   * @param id ID名\n   * @return 登録されているID。なければNULL。\n   */\n  private findId(id: string): CubismId {\n    for (let i = 0; i < this._ids.getSize(); ++i) {\n      if (this._ids.at(i).getString().isEqual(id)) {\n        return this._ids.at(i);\n      }\n    }\n\n    return null;\n  }\n\n  private _ids: csmVector<CubismId>; // 登録されているIDのリスト\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismidmanager';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Live2DCubismFramework {\n  export const CubismIdManager = $.CubismIdManager;\n  export type CubismIdManager = $.CubismIdManager;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,QAAQ,QAAQ,YAAY;;AAErC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,CAAC;EAC3B;AACF;AACA;EACSC,WAAWA,CAAA,EAAG;IAAA,KAsFbC,IAAI;IArFV,IAAI,CAACA,IAAI,GAAG,IAAIJ,SAAS,CAAW,CAAC;EACvC;;EAEA;AACF;AACA;EACSK,OAAOA,CAAA,EAAS;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,EAAE,EAAED,CAAC,EAAE;MAC5C,IAAI,CAACF,IAAI,CAACI,GAAG,CAACF,CAAC,EAAE,KAAK,CAAC,CAAC;IAC1B;IACA,IAAI,CAACF,IAAI,GAAG,IAAI;EAClB;;EAEA;AACF;AACA;AACA;AACA;AACA;EACSK,WAAWA,CAACC,GAA2B,EAAQ;IACpD,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGI,GAAG,CAACC,MAAM,EAAEL,CAAC,EAAE,EAAE;MACnC,IAAI,CAACM,UAAU,CAACF,GAAG,CAACJ,CAAC,CAAC,CAAC;IACzB;EACF;;EAEA;AACF;AACA;AACA;AACA;EACSM,UAAUA,CAACC,EAAsB,EAAY;IAClD,IAAIC,MAAgB,GAAG,IAAI;IAE3B,IAAI,QAAQ,IAAI,OAAOD,EAAE,EAAE;MACzB,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,MAAM,CAACF,EAAE,CAAC,KAAK,IAAI,EAAE;QACtC,OAAOC,MAAM;MACf;MAEAA,MAAM,GAAG,IAAIb,QAAQ,CAACY,EAAE,CAAC;MACzB,IAAI,CAACT,IAAI,CAACY,QAAQ,CAACF,MAAM,CAAC;IAC5B,CAAC,MAAM;MACL,OAAO,IAAI,CAACF,UAAU,CAACC,EAAE,CAACI,CAAC,CAAC;IAC9B;IAEA,OAAOH,MAAM;EACf;;EAEA;AACF;AACA;AACA;AACA;EACSI,KAAKA,CAACL,EAAsB,EAAY;IAC7C,OAAO,IAAI,CAACD,UAAU,CAACC,EAAE,CAAC;EAC5B;;EAEA;AACF;AACA;AACA;AACA;AACA;EACSM,OAAOA,CAACN,EAAsB,EAAW;IAC9C,IAAI,QAAQ,IAAI,OAAOA,EAAE,EAAE;MACzB,OAAO,IAAI,CAACE,MAAM,CAACF,EAAE,CAAC,IAAI,IAAI;IAChC;IACA,OAAO,IAAI,CAACM,OAAO,CAACN,EAAE,CAACI,CAAC,CAAC;EAC3B;;EAEA;AACF;AACA;AACA;AACA;AACA;EACUF,MAAMA,CAACF,EAAU,EAAY;IACnC,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,EAAE,EAAED,CAAC,EAAE;MAC5C,IAAI,IAAI,CAACF,IAAI,CAACgB,EAAE,CAACd,CAAC,CAAC,CAACe,SAAS,CAAC,CAAC,CAACC,OAAO,CAACT,EAAE,CAAC,EAAE;QAC3C,OAAO,IAAI,CAACT,IAAI,CAACgB,EAAE,CAACd,CAAC,CAAC;MACxB;IACF;IAEA,OAAO,IAAI;EACb;;EAEmC;AACrC;;AAEA;AACA,OAAO,KAAKiB,CAAC,MAAM,mBAAmB;AACtC;AACA,WAAAC,qBAAA;AAGC,WAAAC,sBAAA;EAFQ,MAAMvB,eAAe,GAAAuB,sBAAA,CAAAvB,eAAA,GAAGqB,CAAC,CAACrB,eAAe;AAAC,GADlCsB,qBAAqB,KAArBA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}