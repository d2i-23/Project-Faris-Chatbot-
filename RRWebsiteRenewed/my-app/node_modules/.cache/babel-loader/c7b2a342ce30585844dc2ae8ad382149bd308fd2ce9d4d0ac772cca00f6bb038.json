{"ast":null,"code":"/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\n\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\nimport { Live2DCubismFramework as cubismmodel } from '../model/cubismmodel';\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nvar CubismIdHandle = cubismid.CubismIdHandle;\nvar CubismModel = cubismmodel.CubismModel;\nvar csmVector = csmvector.csmVector;\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  class CubismBreath {\n    /**\r\n     * インスタンスの作成\r\n     */\n    static create() {\n      return new CubismBreath();\n    }\n\n    /**\r\n     * インスタンスの破棄\r\n     * @param instance 対象のCubismBreath\r\n     */\n    static delete(instance) {\n      if (instance != null) {\n        instance = null;\n      }\n    }\n\n    /**\r\n     * 呼吸のパラメータの紐づけ\r\n     * @param breathParameters 呼吸を紐づけたいパラメータのリスト\r\n     */\n    setParameters(breathParameters) {\n      this._breathParameters = breathParameters;\n    }\n\n    /**\r\n     * 呼吸に紐づいているパラメータの取得\r\n     * @return 呼吸に紐づいているパラメータのリスト\r\n     */\n    getParameters() {\n      return this._breathParameters;\n    }\n\n    /**\r\n     * モデルのパラメータの更新\r\n     * @param model 対象のモデル\r\n     * @param deltaTimeSeconds デルタ時間[秒]\r\n     */\n    updateParameters(model, deltaTimeSeconds) {\n      this._currentTime += deltaTimeSeconds;\n      const t = this._currentTime * 2.0 * 3.14159;\n      for (let i = 0; i < this._breathParameters.getSize(); ++i) {\n        const data = this._breathParameters.at(i);\n        model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n      }\n    }\n\n    /**\r\n     * コンストラクタ\r\n     */\n    constructor() {\n      this._breathParameters = void 0;\n      // 呼吸にひもづいているパラメータのリスト\n      this._currentTime = void 0;\n      this._currentTime = 0.0;\n    }\n\n    // 積算時間[秒]\n  }\n  _Live2DCubismFramework.CubismBreath = CubismBreath;\n  class BreathParameterData {\n    /**\r\n     * コンストラクタ\r\n     * @param parameterId   呼吸をひもづけるパラメータID\r\n     * @param offset        呼吸を正弦波としたときの、波のオフセット\r\n     * @param peak          呼吸を正弦波としたときの、波の高さ\r\n     * @param cycle         呼吸を正弦波としたときの、波の周期\r\n     * @param weight        パラメータへの重み\r\n     */\n    constructor(parameterId, offset, peak, cycle, weight) {\n      this.parameterId = void 0;\n      // 呼吸をひもづけるパラメータID\\\n      this.offset = void 0;\n      // 呼吸を正弦波としたときの、波のオフセット\n      this.peak = void 0;\n      // 呼吸を正弦波としたときの、波の高さ\n      this.cycle = void 0;\n      // 呼吸を正弦波としたときの、波の周期\n      this.weight = void 0;\n      this.parameterId = parameterId == undefined ? null : parameterId;\n      this.offset = offset == undefined ? 0.0 : offset;\n      this.peak = peak == undefined ? 0.0 : peak;\n      this.cycle = cycle == undefined ? 0.0 : cycle;\n      this.weight = weight == undefined ? 0.0 : weight;\n    }\n\n    // パラメータへの重み\n  }\n  _Live2DCubismFramework.BreathParameterData = BreathParameterData;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["Live2DCubismFramework","csmvector","cubismmodel","cubismid","CubismIdHandle","CubismModel","csmVector","_Live2DCubismFramework","CubismBreath","create","delete","instance","setParameters","breathParameters","_breathParameters","getParameters","updateParameters","model","deltaTimeSeconds","_currentTime","t","i","getSize","data","at","addParameterValueById","parameterId","offset","peak","Math","sin","cycle","weight","constructor","BreathParameterData","undefined"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/mylive2d/react-live2d/Samples/TypeScript/Demo/Framework/src/effect/cubismbreath.ts"],"sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { Live2DCubismFramework as csmvector } from '../type/csmvector';\r\nimport { Live2DCubismFramework as cubismmodel } from '../model/cubismmodel';\r\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\r\nimport CubismIdHandle = cubismid.CubismIdHandle;\r\nimport CubismModel = cubismmodel.CubismModel;\r\nimport csmVector = csmvector.csmVector;\r\n\r\nexport namespace Live2DCubismFramework {\r\n  /**\r\n   * 呼吸機能\r\n   *\r\n   * 呼吸機能を提供する。\r\n   */\r\n  export class CubismBreath {\r\n    /**\r\n     * インスタンスの作成\r\n     */\r\n    public static create(): CubismBreath {\r\n      return new CubismBreath();\r\n    }\r\n\r\n    /**\r\n     * インスタンスの破棄\r\n     * @param instance 対象のCubismBreath\r\n     */\r\n    public static delete(instance: CubismBreath): void {\r\n      if (instance != null) {\r\n        instance = null;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 呼吸のパラメータの紐づけ\r\n     * @param breathParameters 呼吸を紐づけたいパラメータのリスト\r\n     */\r\n    public setParameters(\r\n      breathParameters: csmVector<BreathParameterData>\r\n    ): void {\r\n      this._breathParameters = breathParameters;\r\n    }\r\n\r\n    /**\r\n     * 呼吸に紐づいているパラメータの取得\r\n     * @return 呼吸に紐づいているパラメータのリスト\r\n     */\r\n    public getParameters(): csmVector<BreathParameterData> {\r\n      return this._breathParameters;\r\n    }\r\n\r\n    /**\r\n     * モデルのパラメータの更新\r\n     * @param model 対象のモデル\r\n     * @param deltaTimeSeconds デルタ時間[秒]\r\n     */\r\n    public updateParameters(\r\n      model: CubismModel,\r\n      deltaTimeSeconds: number\r\n    ): void {\r\n      this._currentTime += deltaTimeSeconds;\r\n\r\n      const t: number = this._currentTime * 2.0 * 3.14159;\r\n\r\n      for (let i = 0; i < this._breathParameters.getSize(); ++i) {\r\n        const data: BreathParameterData = this._breathParameters.at(i);\r\n\r\n        model.addParameterValueById(\r\n          data.parameterId,\r\n          data.offset + data.peak * Math.sin(t / data.cycle),\r\n          data.weight\r\n        );\r\n      }\r\n    }\r\n\r\n    /**\r\n     * コンストラクタ\r\n     */\r\n    public constructor() {\r\n      this._currentTime = 0.0;\r\n    }\r\n\r\n    _breathParameters: csmVector<BreathParameterData>; // 呼吸にひもづいているパラメータのリスト\r\n    _currentTime: number; // 積算時間[秒]\r\n  }\r\n\r\n  /**\r\n   * 呼吸のパラメータ情報\r\n   */\r\n  export class BreathParameterData {\r\n    /**\r\n     * コンストラクタ\r\n     * @param parameterId   呼吸をひもづけるパラメータID\r\n     * @param offset        呼吸を正弦波としたときの、波のオフセット\r\n     * @param peak          呼吸を正弦波としたときの、波の高さ\r\n     * @param cycle         呼吸を正弦波としたときの、波の周期\r\n     * @param weight        パラメータへの重み\r\n     */\r\n    constructor(\r\n      parameterId?: CubismIdHandle,\r\n      offset?: number,\r\n      peak?: number,\r\n      cycle?: number,\r\n      weight?: number\r\n    ) {\r\n      this.parameterId = parameterId == undefined ? null : parameterId;\r\n      this.offset = offset == undefined ? 0.0 : offset;\r\n      this.peak = peak == undefined ? 0.0 : peak;\r\n      this.cycle = cycle == undefined ? 0.0 : cycle;\r\n      this.weight = weight == undefined ? 0.0 : weight;\r\n    }\r\n\r\n    parameterId: CubismIdHandle; // 呼吸をひもづけるパラメータID\\\r\n    offset: number; // 呼吸を正弦波としたときの、波のオフセット\r\n    peak: number; // 呼吸を正弦波としたときの、波の高さ\r\n    cycle: number; // 呼吸を正弦波としたときの、波の周期\r\n    weight: number; // パラメータへの重み\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}