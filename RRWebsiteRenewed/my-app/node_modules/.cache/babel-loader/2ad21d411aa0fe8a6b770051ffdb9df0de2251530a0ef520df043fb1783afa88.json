{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismMotionQueueManager } from './cubismmotionqueuemanager';\n\n/**\n * モーションの管理\n *\n * モーションの管理を行うクラス\n */\nexport class CubismMotionManager extends CubismMotionQueueManager {\n  /**\n   * コンストラクタ\n   */\n  constructor() {\n    super();\n    this._currentPriority = void 0;\n    // 現在再生中のモーションの優先度\n    this._reservePriority = void 0;\n    this._currentPriority = 0;\n    this._reservePriority = 0;\n  }\n\n  /**\n   * 再生中のモーションの優先度の取得\n   * @return  モーションの優先度\n   */\n  getCurrentPriority() {\n    return this._currentPriority;\n  }\n\n  /**\n   * 予約中のモーションの優先度を取得する。\n   * @return  モーションの優先度\n   */\n  getReservePriority() {\n    return this._reservePriority;\n  }\n\n  /**\n   * 予約中のモーションの優先度を設定する。\n   * @param   val     優先度\n   */\n  setReservePriority(val) {\n    this._reservePriority = val;\n  }\n\n  /**\n   * 優先度を設定してモーションを開始する。\n   *\n   * @param motion          モーション\n   * @param autoDelete      再生が狩猟したモーションのインスタンスを削除するならtrue\n   * @param priority        優先度\n   * @return                開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するIsFinished()の引数で使用する。開始できない時は「-1」\n   */\n  startMotionPriority(motion, autoDelete, priority) {\n    if (priority == this._reservePriority) {\n      this._reservePriority = 0; // 予約を解除\n    }\n\n    this._currentPriority = priority; // 再生中モーションの優先度を設定\n\n    return super.startMotion(motion, autoDelete, this._userTimeSeconds);\n  }\n\n  /**\n   * モーションを更新して、モデルにパラメータ値を反映する。\n   *\n   * @param model   対象のモデル\n   * @param deltaTimeSeconds    デルタ時間[秒]\n   * @return  true    更新されている\n   * @return  false   更新されていない\n   */\n  updateMotion(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    const updated = super.doUpdateMotion(model, this._userTimeSeconds);\n    if (this.isFinished()) {\n      this._currentPriority = 0; // 再生中のモーションの優先度を解除\n    }\n\n    return updated;\n  }\n\n  /**\n   * モーションを予約する。\n   *\n   * @param   priority    優先度\n   * @return  true    予約できた\n   * @return  false   予約できなかった\n   */\n  reserveMotion(priority) {\n    if (priority <= this._reservePriority || priority <= this._currentPriority) {\n      return false;\n    }\n    this._reservePriority = priority;\n    return true;\n  }\n\n  // 再生予定のモーションの優先度。再生中は0になる。モーションファイルを別スレッドで読み込むときの機能。\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismmotionmanager';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  const CubismMotionManager = _Live2DCubismFramework.CubismMotionManager = $.CubismMotionManager;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["CubismMotionQueueManager","CubismMotionManager","constructor","_currentPriority","_reservePriority","getCurrentPriority","getReservePriority","setReservePriority","val","startMotionPriority","motion","autoDelete","priority","startMotion","_userTimeSeconds","updateMotion","model","deltaTimeSeconds","updated","doUpdateMotion","isFinished","reserveMotion","$","Live2DCubismFramework","_Live2DCubismFramework"],"sources":["D:/Personal/PythonStuff/RR/RRWebsiteRenewed/my-app/src/Framework/src/motion/cubismmotionmanager.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismModel } from '../model/cubismmodel';\nimport { ACubismMotion } from './acubismmotion';\nimport {\n  CubismMotionQueueEntryHandle,\n  CubismMotionQueueManager,\n} from './cubismmotionqueuemanager';\n\n/**\n * モーションの管理\n *\n * モーションの管理を行うクラス\n */\nexport class CubismMotionManager extends CubismMotionQueueManager {\n  /**\n   * コンストラクタ\n   */\n  public constructor() {\n    super();\n    this._currentPriority = 0;\n    this._reservePriority = 0;\n  }\n\n  /**\n   * 再生中のモーションの優先度の取得\n   * @return  モーションの優先度\n   */\n  public getCurrentPriority(): number {\n    return this._currentPriority;\n  }\n\n  /**\n   * 予約中のモーションの優先度を取得する。\n   * @return  モーションの優先度\n   */\n  public getReservePriority(): number {\n    return this._reservePriority;\n  }\n\n  /**\n   * 予約中のモーションの優先度を設定する。\n   * @param   val     優先度\n   */\n  public setReservePriority(val: number): void {\n    this._reservePriority = val;\n  }\n\n  /**\n   * 優先度を設定してモーションを開始する。\n   *\n   * @param motion          モーション\n   * @param autoDelete      再生が狩猟したモーションのインスタンスを削除するならtrue\n   * @param priority        優先度\n   * @return                開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するIsFinished()の引数で使用する。開始できない時は「-1」\n   */\n  public startMotionPriority(\n    motion: ACubismMotion,\n    autoDelete: boolean,\n    priority: number\n  ): CubismMotionQueueEntryHandle {\n    if (priority == this._reservePriority) {\n      this._reservePriority = 0; // 予約を解除\n    }\n\n    this._currentPriority = priority; // 再生中モーションの優先度を設定\n\n    return super.startMotion(motion, autoDelete, this._userTimeSeconds);\n  }\n\n  /**\n   * モーションを更新して、モデルにパラメータ値を反映する。\n   *\n   * @param model   対象のモデル\n   * @param deltaTimeSeconds    デルタ時間[秒]\n   * @return  true    更新されている\n   * @return  false   更新されていない\n   */\n  public updateMotion(model: CubismModel, deltaTimeSeconds: number): boolean {\n    this._userTimeSeconds += deltaTimeSeconds;\n\n    const updated: boolean = super.doUpdateMotion(model, this._userTimeSeconds);\n\n    if (this.isFinished()) {\n      this._currentPriority = 0; // 再生中のモーションの優先度を解除\n    }\n\n    return updated;\n  }\n\n  /**\n   * モーションを予約する。\n   *\n   * @param   priority    優先度\n   * @return  true    予約できた\n   * @return  false   予約できなかった\n   */\n  public reserveMotion(priority: number): boolean {\n    if (\n      priority <= this._reservePriority ||\n      priority <= this._currentPriority\n    ) {\n      return false;\n    }\n\n    this._reservePriority = priority;\n\n    return true;\n  }\n\n  _currentPriority: number; // 現在再生中のモーションの優先度\n  _reservePriority: number; // 再生予定のモーションの優先度。再生中は0になる。モーションファイルを別スレッドで読み込むときの機能。\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismmotionmanager';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Live2DCubismFramework {\n  export const CubismMotionManager = $.CubismMotionManager;\n  export type CubismMotionManager = $.CubismMotionManager;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAEEA,wBAAwB,QACnB,4BAA4B;;AAEnC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,mBAAmB,SAASD,wBAAwB,CAAC;EAChE;AACF;AACA;EACSE,WAAWA,CAAA,EAAG;IACnB,KAAK,CAAC,CAAC;IAAC,KA2FVC,gBAAgB;IAAU;IAAA,KAC1BC,gBAAgB;IA3Fd,IAAI,CAACD,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAACC,gBAAgB,GAAG,CAAC;EAC3B;;EAEA;AACF;AACA;AACA;EACSC,kBAAkBA,CAAA,EAAW;IAClC,OAAO,IAAI,CAACF,gBAAgB;EAC9B;;EAEA;AACF;AACA;AACA;EACSG,kBAAkBA,CAAA,EAAW;IAClC,OAAO,IAAI,CAACF,gBAAgB;EAC9B;;EAEA;AACF;AACA;AACA;EACSG,kBAAkBA,CAACC,GAAW,EAAQ;IAC3C,IAAI,CAACJ,gBAAgB,GAAGI,GAAG;EAC7B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACSC,mBAAmBA,CACxBC,MAAqB,EACrBC,UAAmB,EACnBC,QAAgB,EACc;IAC9B,IAAIA,QAAQ,IAAI,IAAI,CAACR,gBAAgB,EAAE;MACrC,IAAI,CAACA,gBAAgB,GAAG,CAAC,CAAC,CAAC;IAC7B;;IAEA,IAAI,CAACD,gBAAgB,GAAGS,QAAQ,CAAC,CAAC;;IAElC,OAAO,KAAK,CAACC,WAAW,CAACH,MAAM,EAAEC,UAAU,EAAE,IAAI,CAACG,gBAAgB,CAAC;EACrE;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACSC,YAAYA,CAACC,KAAkB,EAAEC,gBAAwB,EAAW;IACzE,IAAI,CAACH,gBAAgB,IAAIG,gBAAgB;IAEzC,MAAMC,OAAgB,GAAG,KAAK,CAACC,cAAc,CAACH,KAAK,EAAE,IAAI,CAACF,gBAAgB,CAAC;IAE3E,IAAI,IAAI,CAACM,UAAU,CAAC,CAAC,EAAE;MACrB,IAAI,CAACjB,gBAAgB,GAAG,CAAC,CAAC,CAAC;IAC7B;;IAEA,OAAOe,OAAO;EAChB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACSG,aAAaA,CAACT,QAAgB,EAAW;IAC9C,IACEA,QAAQ,IAAI,IAAI,CAACR,gBAAgB,IACjCQ,QAAQ,IAAI,IAAI,CAACT,gBAAgB,EACjC;MACA,OAAO,KAAK;IACd;IAEA,IAAI,CAACC,gBAAgB,GAAGQ,QAAQ;IAEhC,OAAO,IAAI;EACb;;EAG0B;AAC5B;;AAEA;AACA,OAAO,KAAKU,CAAC,MAAM,uBAAuB;AAC1C;AAAA,WACiBC,qBAAqB;AAAA,WAAAC,sBAAA;EAC7B,MAAMvB,mBAAmB,GAAAuB,sBAAA,CAAAvB,mBAAA,GAAGqB,CAAC,CAACrB,mBAAmB;AAAC,GAD1CsB,qBAAqB,KAArBA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}