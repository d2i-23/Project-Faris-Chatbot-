{"ast":null,"code":"/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\n\nimport { Live2DCubismFramework as cubismjson } from '../utils/cubismjson';\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\nimport { Live2DCubismFramework as cubismframework } from '../live2dcubismframework';\nvar CubismFramework = cubismframework.CubismFramework;\nvar CubismIdHandle = cubismid.CubismIdHandle;\nvar CubismJson = cubismjson.CubismJson;\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  const Meta = 'Meta';\n  const UserDataCount = 'UserDataCount';\n  const TotalUserDataSize = 'TotalUserDataSize';\n  const UserData = 'UserData';\n  const Target = 'Target';\n  const Id = 'Id';\n  const Value = 'Value';\n  class CubismModelUserDataJson {\n    /**\r\n     * コンストラクタ\r\n     * @param buffer    userdata3.jsonが読み込まれているバッファ\r\n     * @param size      バッファのサイズ\r\n     */\n    constructor(buffer, size) {\n      this._json = void 0;\n      this._json = CubismJson.create(buffer, size);\n    }\n\n    /**\r\n     * デストラクタ相当の処理\r\n     */\n    release() {\n      CubismJson.delete(this._json);\n    }\n\n    /**\r\n     * ユーザーデータ個数の取得\r\n     * @return ユーザーデータの個数\r\n     */\n    getUserDataCount() {\n      return this._json.getRoot().getValueByString(Meta).getValueByString(UserDataCount).toInt();\n    }\n\n    /**\r\n     * ユーザーデータ総文字列数の取得\r\n     *\r\n     * @return ユーザーデータ総文字列数\r\n     */\n    getTotalUserDataSize() {\n      return this._json.getRoot().getValueByString(Meta).getValueByString(TotalUserDataSize).toInt();\n    }\n\n    /**\r\n     * ユーザーデータのタイプの取得\r\n     *\r\n     * @return ユーザーデータのタイプ\r\n     */\n    getUserDataTargetType(i) {\n      return this._json.getRoot().getValueByString(UserData).getValueByIndex(i).getValueByString(Target).getRawString();\n    }\n\n    /**\r\n     * ユーザーデータのターゲットIDの取得\r\n     *\r\n     * @param i インデックス\r\n     * @return ユーザーデータターゲットID\r\n     */\n    getUserDataId(i) {\n      return CubismFramework.getIdManager().getId(this._json.getRoot().getValueByString(UserData).getValueByIndex(i).getValueByString(Id).getRawString());\n    }\n\n    /**\r\n     * ユーザーデータの文字列の取得\r\n     *\r\n     * @param i インデックス\r\n     * @return ユーザーデータ\r\n     */\n    getUserDataValue(i) {\n      return this._json.getRoot().getValueByString(UserData).getValueByIndex(i).getValueByString(Value).getRawString();\n    }\n  }\n  _Live2DCubismFramework.CubismModelUserDataJson = CubismModelUserDataJson;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["Live2DCubismFramework","cubismjson","cubismid","cubismframework","CubismFramework","CubismIdHandle","CubismJson","_Live2DCubismFramework","Meta","UserDataCount","TotalUserDataSize","UserData","Target","Id","Value","CubismModelUserDataJson","constructor","buffer","size","_json","create","release","delete","getUserDataCount","getRoot","getValueByString","toInt","getTotalUserDataSize","getUserDataTargetType","i","getValueByIndex","getRawString","getUserDataId","getIdManager","getId","getUserDataValue"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/mylive2d/react-live2d/Samples/TypeScript/Demo/Framework/src/model/cubismmodeluserdatajson.ts"],"sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { Live2DCubismFramework as cubismjson } from '../utils/cubismjson';\r\nimport { Live2DCubismFramework as cubismid } from '../id/cubismid';\r\nimport { Live2DCubismFramework as cubismframework } from '../live2dcubismframework';\r\nimport CubismFramework = cubismframework.CubismFramework;\r\nimport CubismIdHandle = cubismid.CubismIdHandle;\r\nimport CubismJson = cubismjson.CubismJson;\r\n\r\nexport namespace Live2DCubismFramework {\r\n  const Meta = 'Meta';\r\n  const UserDataCount = 'UserDataCount';\r\n  const TotalUserDataSize = 'TotalUserDataSize';\r\n  const UserData = 'UserData';\r\n  const Target = 'Target';\r\n  const Id = 'Id';\r\n  const Value = 'Value';\r\n\r\n  export class CubismModelUserDataJson {\r\n    /**\r\n     * コンストラクタ\r\n     * @param buffer    userdata3.jsonが読み込まれているバッファ\r\n     * @param size      バッファのサイズ\r\n     */\r\n    public constructor(buffer: ArrayBuffer, size: number) {\r\n      this._json = CubismJson.create(buffer, size);\r\n    }\r\n\r\n    /**\r\n     * デストラクタ相当の処理\r\n     */\r\n    public release(): void {\r\n      CubismJson.delete(this._json);\r\n    }\r\n\r\n    /**\r\n     * ユーザーデータ個数の取得\r\n     * @return ユーザーデータの個数\r\n     */\r\n    public getUserDataCount(): number {\r\n      return this._json\r\n        .getRoot()\r\n        .getValueByString(Meta)\r\n        .getValueByString(UserDataCount)\r\n        .toInt();\r\n    }\r\n\r\n    /**\r\n     * ユーザーデータ総文字列数の取得\r\n     *\r\n     * @return ユーザーデータ総文字列数\r\n     */\r\n    public getTotalUserDataSize(): number {\r\n      return this._json\r\n        .getRoot()\r\n        .getValueByString(Meta)\r\n        .getValueByString(TotalUserDataSize)\r\n        .toInt();\r\n    }\r\n\r\n    /**\r\n     * ユーザーデータのタイプの取得\r\n     *\r\n     * @return ユーザーデータのタイプ\r\n     */\r\n    public getUserDataTargetType(i: number): string {\r\n      return this._json\r\n        .getRoot()\r\n        .getValueByString(UserData)\r\n        .getValueByIndex(i)\r\n        .getValueByString(Target)\r\n        .getRawString();\r\n    }\r\n\r\n    /**\r\n     * ユーザーデータのターゲットIDの取得\r\n     *\r\n     * @param i インデックス\r\n     * @return ユーザーデータターゲットID\r\n     */\r\n    public getUserDataId(i: number): CubismIdHandle {\r\n      return CubismFramework.getIdManager().getId(\r\n        this._json\r\n          .getRoot()\r\n          .getValueByString(UserData)\r\n          .getValueByIndex(i)\r\n          .getValueByString(Id)\r\n          .getRawString()\r\n      );\r\n    }\r\n\r\n    /**\r\n     * ユーザーデータの文字列の取得\r\n     *\r\n     * @param i インデックス\r\n     * @return ユーザーデータ\r\n     */\r\n    public getUserDataValue(i: number): string {\r\n      return this._json\r\n        .getRoot()\r\n        .getValueByString(UserData)\r\n        .getValueByIndex(i)\r\n        .getValueByString(Value)\r\n        .getRawString();\r\n    }\r\n\r\n    private _json: CubismJson;\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,qBAAqB,IAAIC,UAAU,QAAQ,qBAAqB;AACzE,SAASD,qBAAqB,IAAIE,QAAQ,QAAQ,gBAAgB;AAClE,SAASF,qBAAqB,IAAIG,eAAe,QAAQ,0BAA0B;AAAC,IAC7EC,eAAe,GAAGD,eAAe,CAACC,eAAe;AAAA,IACjDC,cAAc,GAAGH,QAAQ,CAACG,cAAc;AAAA,IACxCC,UAAU,GAAGL,UAAU,CAACK,UAAU;AAEzC,WAAAN,qBAAA;AAmGC,WAAAO,sBAAA;EAlGC,MAAMC,IAAI,GAAG,MAAM;EACnB,MAAMC,aAAa,GAAG,eAAe;EACrC,MAAMC,iBAAiB,GAAG,mBAAmB;EAC7C,MAAMC,QAAQ,GAAG,UAAU;EAC3B,MAAMC,MAAM,GAAG,QAAQ;EACvB,MAAMC,EAAE,GAAG,IAAI;EACf,MAAMC,KAAK,GAAG,OAAO;EAEd,MAAMC,uBAAuB,CAAC;IACnC;AACJ;AACA;AACA;AACA;IACWC,WAAWA,CAACC,MAAmB,EAAEC,IAAY,EAAE;MAAA,KAkF9CC,KAAK;MAjFX,IAAI,CAACA,KAAK,GAAGb,UAAU,CAACc,MAAM,CAACH,MAAM,EAAEC,IAAI,CAAC;IAC9C;;IAEA;AACJ;AACA;IACWG,OAAOA,CAAA,EAAS;MACrBf,UAAU,CAACgB,MAAM,CAAC,IAAI,CAACH,KAAK,CAAC;IAC/B;;IAEA;AACJ;AACA;AACA;IACWI,gBAAgBA,CAAA,EAAW;MAChC,OAAO,IAAI,CAACJ,KAAK,CACdK,OAAO,CAAC,CAAC,CACTC,gBAAgB,CAACjB,IAAI,CAAC,CACtBiB,gBAAgB,CAAChB,aAAa,CAAC,CAC/BiB,KAAK,CAAC,CAAC;IACZ;;IAEA;AACJ;AACA;AACA;AACA;IACWC,oBAAoBA,CAAA,EAAW;MACpC,OAAO,IAAI,CAACR,KAAK,CACdK,OAAO,CAAC,CAAC,CACTC,gBAAgB,CAACjB,IAAI,CAAC,CACtBiB,gBAAgB,CAACf,iBAAiB,CAAC,CACnCgB,KAAK,CAAC,CAAC;IACZ;;IAEA;AACJ;AACA;AACA;AACA;IACWE,qBAAqBA,CAACC,CAAS,EAAU;MAC9C,OAAO,IAAI,CAACV,KAAK,CACdK,OAAO,CAAC,CAAC,CACTC,gBAAgB,CAACd,QAAQ,CAAC,CAC1BmB,eAAe,CAACD,CAAC,CAAC,CAClBJ,gBAAgB,CAACb,MAAM,CAAC,CACxBmB,YAAY,CAAC,CAAC;IACnB;;IAEA;AACJ;AACA;AACA;AACA;AACA;IACWC,aAAaA,CAACH,CAAS,EAAkB;MAC9C,OAAOzB,eAAe,CAAC6B,YAAY,CAAC,CAAC,CAACC,KAAK,CACzC,IAAI,CAACf,KAAK,CACPK,OAAO,CAAC,CAAC,CACTC,gBAAgB,CAACd,QAAQ,CAAC,CAC1BmB,eAAe,CAACD,CAAC,CAAC,CAClBJ,gBAAgB,CAACZ,EAAE,CAAC,CACpBkB,YAAY,CAAC,CAClB,CAAC;IACH;;IAEA;AACJ;AACA;AACA;AACA;AACA;IACWI,gBAAgBA,CAACN,CAAS,EAAU;MACzC,OAAO,IAAI,CAACV,KAAK,CACdK,OAAO,CAAC,CAAC,CACTC,gBAAgB,CAACd,QAAQ,CAAC,CAC1BmB,eAAe,CAACD,CAAC,CAAC,CAClBJ,gBAAgB,CAACX,KAAK,CAAC,CACvBiB,YAAY,CAAC,CAAC;IACnB;EAGF;EAACxB,sBAAA,CAAAQ,uBAAA,GAAAA,uBAAA;AAAA,GAlGcf,qBAAqB,KAArBA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}