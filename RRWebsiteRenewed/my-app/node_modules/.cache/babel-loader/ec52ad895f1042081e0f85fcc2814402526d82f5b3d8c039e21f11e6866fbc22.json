{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismFramework } from '../live2dcubismframework';\nimport { csmString } from '../type/csmstring';\nimport { CubismJson } from '../utils/cubismjson';\n\n// JSON keys\nconst Meta = 'Meta';\nconst Duration = 'Duration';\nconst Loop = 'Loop';\nconst AreBeziersRestricted = 'AreBeziersRestricted';\nconst CurveCount = 'CurveCount';\nconst Fps = 'Fps';\nconst TotalSegmentCount = 'TotalSegmentCount';\nconst TotalPointCount = 'TotalPointCount';\nconst Curves = 'Curves';\nconst Target = 'Target';\nconst Id = 'Id';\nconst FadeInTime = 'FadeInTime';\nconst FadeOutTime = 'FadeOutTime';\nconst Segments = 'Segments';\nconst UserData = 'UserData';\nconst UserDataCount = 'UserDataCount';\nconst TotalUserDataSize = 'TotalUserDataSize';\nconst Time = 'Time';\nconst Value = 'Value';\n\n/**\n * motion3.jsonのコンテナ。\n */\nexport class CubismMotionJson {\n  /**\n   * コンストラクタ\n   * @param buffer motion3.jsonが読み込まれているバッファ\n   * @param size バッファのサイズ\n   */\n  constructor(buffer, size) {\n    this._json = void 0;\n    this._json = CubismJson.create(buffer, size);\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  release() {\n    CubismJson.delete(this._json);\n  }\n\n  /**\n   * モーションの長さを取得する\n   * @return モーションの長さ[秒]\n   */\n  getMotionDuration() {\n    return this._json.getRoot().getValueByString(Meta).getValueByString(Duration).toFloat();\n  }\n\n  /**\n   * モーションのループ情報の取得\n   * @return true ループする\n   * @return false ループしない\n   */\n  isMotionLoop() {\n    return this._json.getRoot().getValueByString(Meta).getValueByString(Loop).toBoolean();\n  }\n  getEvaluationOptionFlag(flagType) {\n    if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n      return this._json.getRoot().getValueByString(Meta).getValueByString(AreBeziersRestricted).toBoolean();\n    }\n    return false;\n  }\n\n  /**\n   * モーションカーブの個数の取得\n   * @return モーションカーブの個数\n   */\n  getMotionCurveCount() {\n    return this._json.getRoot().getValueByString(Meta).getValueByString(CurveCount).toInt();\n  }\n\n  /**\n   * モーションのフレームレートの取得\n   * @return フレームレート[FPS]\n   */\n  getMotionFps() {\n    return this._json.getRoot().getValueByString(Meta).getValueByString(Fps).toFloat();\n  }\n\n  /**\n   * モーションのセグメントの総合計の取得\n   * @return モーションのセグメントの取得\n   */\n  getMotionTotalSegmentCount() {\n    return this._json.getRoot().getValueByString(Meta).getValueByString(TotalSegmentCount).toInt();\n  }\n\n  /**\n   * モーションのカーブの制御店の総合計の取得\n   * @return モーションのカーブの制御点の総合計\n   */\n  getMotionTotalPointCount() {\n    return this._json.getRoot().getValueByString(Meta).getValueByString(TotalPointCount).toInt();\n  }\n\n  /**\n   * モーションのフェードイン時間の存在\n   * @return true 存在する\n   * @return false 存在しない\n   */\n  isExistMotionFadeInTime() {\n    return !this._json.getRoot().getValueByString(Meta).getValueByString(FadeInTime).isNull();\n  }\n\n  /**\n   * モーションのフェードアウト時間の存在\n   * @return true 存在する\n   * @return false 存在しない\n   */\n  isExistMotionFadeOutTime() {\n    return !this._json.getRoot().getValueByString(Meta).getValueByString(FadeOutTime).isNull();\n  }\n\n  /**\n   * モーションのフェードイン時間の取得\n   * @return フェードイン時間[秒]\n   */\n  getMotionFadeInTime() {\n    return this._json.getRoot().getValueByString(Meta).getValueByString(FadeInTime).toFloat();\n  }\n\n  /**\n   * モーションのフェードアウト時間の取得\n   * @return フェードアウト時間[秒]\n   */\n  getMotionFadeOutTime() {\n    return this._json.getRoot().getValueByString(Meta).getValueByString(FadeOutTime).toFloat();\n  }\n\n  /**\n   * モーションのカーブの種類の取得\n   * @param curveIndex カーブのインデックス\n   * @return カーブの種類\n   */\n  getMotionCurveTarget(curveIndex) {\n    return this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(Target).getRawString();\n  }\n\n  /**\n   * モーションのカーブのIDの取得\n   * @param curveIndex カーブのインデックス\n   * @return カーブのID\n   */\n  getMotionCurveId(curveIndex) {\n    return CubismFramework.getIdManager().getId(this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(Id).getRawString());\n  }\n\n  /**\n   * モーションのカーブのフェードイン時間の存在\n   * @param curveIndex カーブのインデックス\n   * @return true 存在する\n   * @return false 存在しない\n   */\n  isExistMotionCurveFadeInTime(curveIndex) {\n    return !this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(FadeInTime).isNull();\n  }\n\n  /**\n   * モーションのカーブのフェードアウト時間の存在\n   * @param curveIndex カーブのインデックス\n   * @return true 存在する\n   * @return false 存在しない\n   */\n  isExistMotionCurveFadeOutTime(curveIndex) {\n    return !this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(FadeOutTime).isNull();\n  }\n\n  /**\n   * モーションのカーブのフェードイン時間の取得\n   * @param curveIndex カーブのインデックス\n   * @return フェードイン時間[秒]\n   */\n  getMotionCurveFadeInTime(curveIndex) {\n    return this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(FadeInTime).toFloat();\n  }\n\n  /**\n   * モーションのカーブのフェードアウト時間の取得\n   * @param curveIndex カーブのインデックス\n   * @return フェードアウト時間[秒]\n   */\n  getMotionCurveFadeOutTime(curveIndex) {\n    return this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(FadeOutTime).toFloat();\n  }\n\n  /**\n   * モーションのカーブのセグメントの個数を取得する\n   * @param curveIndex カーブのインデックス\n   * @return モーションのカーブのセグメントの個数\n   */\n  getMotionCurveSegmentCount(curveIndex) {\n    return this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(Segments).getVector().getSize();\n  }\n\n  /**\n   * モーションのカーブのセグメントの値の取得\n   * @param curveIndex カーブのインデックス\n   * @param segmentIndex セグメントのインデックス\n   * @return セグメントの値\n   */\n  getMotionCurveSegment(curveIndex, segmentIndex) {\n    return this._json.getRoot().getValueByString(Curves).getValueByIndex(curveIndex).getValueByString(Segments).getValueByIndex(segmentIndex).toFloat();\n  }\n\n  /**\n   * イベントの個数の取得\n   * @return イベントの個数\n   */\n  getEventCount() {\n    return this._json.getRoot().getValueByString(Meta).getValueByString(UserDataCount).toInt();\n  }\n\n  /**\n   *  イベントの総文字数の取得\n   * @return イベントの総文字数\n   */\n  getTotalEventValueSize() {\n    return this._json.getRoot().getValueByString(Meta).getValueByString(TotalUserDataSize).toInt();\n  }\n\n  /**\n   * イベントの時間の取得\n   * @param userDataIndex イベントのインデックス\n   * @return イベントの時間[秒]\n   */\n  getEventTime(userDataIndex) {\n    return this._json.getRoot().getValueByString(UserData).getValueByIndex(userDataIndex).getValueByString(Time).toFloat();\n  }\n\n  /**\n   * イベントの取得\n   * @param userDataIndex イベントのインデックス\n   * @return イベントの文字列\n   */\n  getEventValue(userDataIndex) {\n    return new csmString(this._json.getRoot().getValueByString(UserData).getValueByIndex(userDataIndex).getValueByString(Value).getRawString());\n  }\n\n  // motion3.jsonのデータ\n}\n\n/**\n * @brief ベジェカーブの解釈方法のフラグタイプ\n */\nexport let EvaluationOptionFlag = /*#__PURE__*/function (EvaluationOptionFlag) {\n  EvaluationOptionFlag[EvaluationOptionFlag[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n  return EvaluationOptionFlag;\n}({}); ///< ベジェハンドルの規制状態\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismmotionjson';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  const CubismMotionJson = _Live2DCubismFramework.CubismMotionJson = $.CubismMotionJson;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["CubismFramework","csmString","CubismJson","Meta","Duration","Loop","AreBeziersRestricted","CurveCount","Fps","TotalSegmentCount","TotalPointCount","Curves","Target","Id","FadeInTime","FadeOutTime","Segments","UserData","UserDataCount","TotalUserDataSize","Time","Value","CubismMotionJson","constructor","buffer","size","_json","create","release","delete","getMotionDuration","getRoot","getValueByString","toFloat","isMotionLoop","toBoolean","getEvaluationOptionFlag","flagType","EvaluationOptionFlag","EvaluationOptionFlag_AreBeziersRistricted","getMotionCurveCount","toInt","getMotionFps","getMotionTotalSegmentCount","getMotionTotalPointCount","isExistMotionFadeInTime","isNull","isExistMotionFadeOutTime","getMotionFadeInTime","getMotionFadeOutTime","getMotionCurveTarget","curveIndex","getValueByIndex","getRawString","getMotionCurveId","getIdManager","getId","isExistMotionCurveFadeInTime","isExistMotionCurveFadeOutTime","getMotionCurveFadeInTime","getMotionCurveFadeOutTime","getMotionCurveSegmentCount","getVector","getSize","getMotionCurveSegment","segmentIndex","getEventCount","getTotalEventValueSize","getEventTime","userDataIndex","getEventValue","$","Live2DCubismFramework","_Live2DCubismFramework"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/Framework/src/motion/cubismmotionjson.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismIdHandle } from '../id/cubismid';\nimport { CubismFramework } from '../live2dcubismframework';\nimport { csmString } from '../type/csmstring';\nimport { CubismJson, JsonMap } from '../utils/cubismjson';\n\n// JSON keys\nconst Meta = 'Meta';\nconst Duration = 'Duration';\nconst Loop = 'Loop';\nconst AreBeziersRestricted = 'AreBeziersRestricted';\nconst CurveCount = 'CurveCount';\nconst Fps = 'Fps';\nconst TotalSegmentCount = 'TotalSegmentCount';\nconst TotalPointCount = 'TotalPointCount';\nconst Curves = 'Curves';\nconst Target = 'Target';\nconst Id = 'Id';\nconst FadeInTime = 'FadeInTime';\nconst FadeOutTime = 'FadeOutTime';\nconst Segments = 'Segments';\nconst UserData = 'UserData';\nconst UserDataCount = 'UserDataCount';\nconst TotalUserDataSize = 'TotalUserDataSize';\nconst Time = 'Time';\nconst Value = 'Value';\n\n/**\n * motion3.jsonのコンテナ。\n */\nexport class CubismMotionJson {\n  /**\n   * コンストラクタ\n   * @param buffer motion3.jsonが読み込まれているバッファ\n   * @param size バッファのサイズ\n   */\n  public constructor(buffer: ArrayBuffer, size: number) {\n    this._json = CubismJson.create(buffer, size);\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    CubismJson.delete(this._json);\n  }\n\n  /**\n   * モーションの長さを取得する\n   * @return モーションの長さ[秒]\n   */\n  public getMotionDuration(): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Meta)\n      .getValueByString(Duration)\n      .toFloat();\n  }\n\n  /**\n   * モーションのループ情報の取得\n   * @return true ループする\n   * @return false ループしない\n   */\n  public isMotionLoop(): boolean {\n    return this._json\n      .getRoot()\n      .getValueByString(Meta)\n      .getValueByString(Loop)\n      .toBoolean();\n  }\n\n  public getEvaluationOptionFlag(flagType: number): boolean {\n    if (\n      EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType\n    ) {\n      return this._json\n        .getRoot()\n        .getValueByString(Meta)\n        .getValueByString(AreBeziersRestricted)\n        .toBoolean();\n    }\n\n    return false;\n  }\n\n  /**\n   * モーションカーブの個数の取得\n   * @return モーションカーブの個数\n   */\n  public getMotionCurveCount(): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Meta)\n      .getValueByString(CurveCount)\n      .toInt();\n  }\n\n  /**\n   * モーションのフレームレートの取得\n   * @return フレームレート[FPS]\n   */\n  public getMotionFps(): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Meta)\n      .getValueByString(Fps)\n      .toFloat();\n  }\n\n  /**\n   * モーションのセグメントの総合計の取得\n   * @return モーションのセグメントの取得\n   */\n  public getMotionTotalSegmentCount(): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Meta)\n      .getValueByString(TotalSegmentCount)\n      .toInt();\n  }\n\n  /**\n   * モーションのカーブの制御店の総合計の取得\n   * @return モーションのカーブの制御点の総合計\n   */\n  public getMotionTotalPointCount(): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Meta)\n      .getValueByString(TotalPointCount)\n      .toInt();\n  }\n\n  /**\n   * モーションのフェードイン時間の存在\n   * @return true 存在する\n   * @return false 存在しない\n   */\n  public isExistMotionFadeInTime(): boolean {\n    return !this._json\n      .getRoot()\n      .getValueByString(Meta)\n      .getValueByString(FadeInTime)\n      .isNull();\n  }\n\n  /**\n   * モーションのフェードアウト時間の存在\n   * @return true 存在する\n   * @return false 存在しない\n   */\n  public isExistMotionFadeOutTime(): boolean {\n    return !this._json\n      .getRoot()\n      .getValueByString(Meta)\n      .getValueByString(FadeOutTime)\n      .isNull();\n  }\n\n  /**\n   * モーションのフェードイン時間の取得\n   * @return フェードイン時間[秒]\n   */\n  public getMotionFadeInTime(): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Meta)\n      .getValueByString(FadeInTime)\n      .toFloat();\n  }\n\n  /**\n   * モーションのフェードアウト時間の取得\n   * @return フェードアウト時間[秒]\n   */\n  public getMotionFadeOutTime(): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Meta)\n      .getValueByString(FadeOutTime)\n      .toFloat();\n  }\n\n  /**\n   * モーションのカーブの種類の取得\n   * @param curveIndex カーブのインデックス\n   * @return カーブの種類\n   */\n  public getMotionCurveTarget(curveIndex: number): string {\n    return this._json\n      .getRoot()\n      .getValueByString(Curves)\n      .getValueByIndex(curveIndex)\n      .getValueByString(Target)\n      .getRawString();\n  }\n\n  /**\n   * モーションのカーブのIDの取得\n   * @param curveIndex カーブのインデックス\n   * @return カーブのID\n   */\n  public getMotionCurveId(curveIndex: number): CubismIdHandle {\n    return CubismFramework.getIdManager().getId(\n      this._json\n        .getRoot()\n        .getValueByString(Curves)\n        .getValueByIndex(curveIndex)\n        .getValueByString(Id)\n        .getRawString()\n    );\n  }\n\n  /**\n   * モーションのカーブのフェードイン時間の存在\n   * @param curveIndex カーブのインデックス\n   * @return true 存在する\n   * @return false 存在しない\n   */\n  public isExistMotionCurveFadeInTime(curveIndex: number): boolean {\n    return !this._json\n      .getRoot()\n      .getValueByString(Curves)\n      .getValueByIndex(curveIndex)\n      .getValueByString(FadeInTime)\n      .isNull();\n  }\n\n  /**\n   * モーションのカーブのフェードアウト時間の存在\n   * @param curveIndex カーブのインデックス\n   * @return true 存在する\n   * @return false 存在しない\n   */\n  public isExistMotionCurveFadeOutTime(curveIndex: number): boolean {\n    return !this._json\n      .getRoot()\n      .getValueByString(Curves)\n      .getValueByIndex(curveIndex)\n      .getValueByString(FadeOutTime)\n      .isNull();\n  }\n\n  /**\n   * モーションのカーブのフェードイン時間の取得\n   * @param curveIndex カーブのインデックス\n   * @return フェードイン時間[秒]\n   */\n  public getMotionCurveFadeInTime(curveIndex: number): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Curves)\n      .getValueByIndex(curveIndex)\n      .getValueByString(FadeInTime)\n      .toFloat();\n  }\n\n  /**\n   * モーションのカーブのフェードアウト時間の取得\n   * @param curveIndex カーブのインデックス\n   * @return フェードアウト時間[秒]\n   */\n  public getMotionCurveFadeOutTime(curveIndex: number): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Curves)\n      .getValueByIndex(curveIndex)\n      .getValueByString(FadeOutTime)\n      .toFloat();\n  }\n\n  /**\n   * モーションのカーブのセグメントの個数を取得する\n   * @param curveIndex カーブのインデックス\n   * @return モーションのカーブのセグメントの個数\n   */\n  public getMotionCurveSegmentCount(curveIndex: number): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Curves)\n      .getValueByIndex(curveIndex)\n      .getValueByString(Segments)\n      .getVector()\n      .getSize();\n  }\n\n  /**\n   * モーションのカーブのセグメントの値の取得\n   * @param curveIndex カーブのインデックス\n   * @param segmentIndex セグメントのインデックス\n   * @return セグメントの値\n   */\n  public getMotionCurveSegment(\n    curveIndex: number,\n    segmentIndex: number\n  ): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Curves)\n      .getValueByIndex(curveIndex)\n      .getValueByString(Segments)\n      .getValueByIndex(segmentIndex)\n      .toFloat();\n  }\n\n  /**\n   * イベントの個数の取得\n   * @return イベントの個数\n   */\n  public getEventCount(): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Meta)\n      .getValueByString(UserDataCount)\n      .toInt();\n  }\n\n  /**\n   *  イベントの総文字数の取得\n   * @return イベントの総文字数\n   */\n  public getTotalEventValueSize(): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Meta)\n      .getValueByString(TotalUserDataSize)\n      .toInt();\n  }\n\n  /**\n   * イベントの時間の取得\n   * @param userDataIndex イベントのインデックス\n   * @return イベントの時間[秒]\n   */\n  public getEventTime(userDataIndex: number): number {\n    return this._json\n      .getRoot()\n      .getValueByString(UserData)\n      .getValueByIndex(userDataIndex)\n      .getValueByString(Time)\n      .toFloat();\n  }\n\n  /**\n   * イベントの取得\n   * @param userDataIndex イベントのインデックス\n   * @return イベントの文字列\n   */\n  public getEventValue(userDataIndex: number): csmString {\n    return new csmString(\n      this._json\n        .getRoot()\n        .getValueByString(UserData)\n        .getValueByIndex(userDataIndex)\n        .getValueByString(Value)\n        .getRawString()\n    );\n  }\n\n  _json: CubismJson; // motion3.jsonのデータ\n}\n\n/**\n * @brief ベジェカーブの解釈方法のフラグタイプ\n */\nexport enum EvaluationOptionFlag {\n  EvaluationOptionFlag_AreBeziersRistricted = 0, ///< ベジェハンドルの規制状態\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismmotionjson';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Live2DCubismFramework {\n  export const CubismMotionJson = $.CubismMotionJson;\n  export type CubismMotionJson = $.CubismMotionJson;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}