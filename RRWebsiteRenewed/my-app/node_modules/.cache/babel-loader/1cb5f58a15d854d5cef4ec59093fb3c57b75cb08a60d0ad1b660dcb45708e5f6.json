{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CSM_LOG_LEVEL, CSM_LOG_LEVEL_DEBUG, CSM_LOG_LEVEL_ERROR, CSM_LOG_LEVEL_INFO, CSM_LOG_LEVEL_VERBOSE, CSM_LOG_LEVEL_WARNING } from '../cubismframeworkconfig';\nimport { CubismFramework, LogLevel } from '../live2dcubismframework';\nexport const CubismLogPrint = (level, fmt, args) => {\n  CubismDebug.print(level, '[CSM]' + fmt, args);\n};\n_c = CubismLogPrint;\nexport const CubismLogPrintIn = (level, fmt, args) => {\n  CubismLogPrint(level, fmt + '\\n', args);\n};\n_c2 = CubismLogPrintIn;\nexport const CSM_ASSERT = expr => {\n  console.assert(expr);\n};\n_c3 = CSM_ASSERT;\nexport let CubismLogVerbose;\nexport let CubismLogDebug;\nexport let CubismLogInfo;\nexport let CubismLogWarning;\nexport let CubismLogError;\nif (CSM_LOG_LEVEL <= CSM_LOG_LEVEL_VERBOSE) {\n  CubismLogVerbose = function (fmt) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Verbose, '[V]' + fmt, args);\n  };\n  CubismLogDebug = function (fmt) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n  };\n  CubismLogInfo = function (fmt) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n  CubismLogWarning = function (fmt) {\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n  CubismLogError = function (fmt) {\n    for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n      args[_key5 - 1] = arguments[_key5];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_DEBUG) {\n  CubismLogDebug = function (fmt) {\n    for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n      args[_key6 - 1] = arguments[_key6];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n  };\n  CubismLogInfo = function (fmt) {\n    for (var _len7 = arguments.length, args = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n      args[_key7 - 1] = arguments[_key7];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n  CubismLogWarning = function (fmt) {\n    for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n      args[_key8 - 1] = arguments[_key8];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n  CubismLogError = function (fmt) {\n    for (var _len9 = arguments.length, args = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {\n      args[_key9 - 1] = arguments[_key9];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_INFO) {\n  CubismLogInfo = function (fmt) {\n    for (var _len10 = arguments.length, args = new Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {\n      args[_key10 - 1] = arguments[_key10];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n  CubismLogWarning = function (fmt) {\n    for (var _len11 = arguments.length, args = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n      args[_key11 - 1] = arguments[_key11];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n  CubismLogError = function (fmt) {\n    for (var _len12 = arguments.length, args = new Array(_len12 > 1 ? _len12 - 1 : 0), _key12 = 1; _key12 < _len12; _key12++) {\n      args[_key12 - 1] = arguments[_key12];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_WARNING) {\n  CubismLogWarning = function (fmt) {\n    for (var _len13 = arguments.length, args = new Array(_len13 > 1 ? _len13 - 1 : 0), _key13 = 1; _key13 < _len13; _key13++) {\n      args[_key13 - 1] = arguments[_key13];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n  CubismLogError = function (fmt) {\n    for (var _len14 = arguments.length, args = new Array(_len14 > 1 ? _len14 - 1 : 0), _key14 = 1; _key14 < _len14; _key14++) {\n      args[_key14 - 1] = arguments[_key14];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_ERROR) {\n  CubismLogError = function (fmt) {\n    for (var _len15 = arguments.length, args = new Array(_len15 > 1 ? _len15 - 1 : 0), _key15 = 1; _key15 < _len15; _key15++) {\n      args[_key15 - 1] = arguments[_key15];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n}\n\n/**\n * デバッグ用のユーティリティクラス。\n * ログの出力、バイトのダンプなど\n */\nexport class CubismDebug {\n  /**\n   * ログを出力する。第一引数にログレベルを設定する。\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n   *\n   * @param logLevel ログレベルの設定\n   * @param format 書式付き文字列\n   * @param args 可変長引数\n   */\n  static print(logLevel, format, args) {\n    // オプションで設定されたログ出力レベルを下回る場合はログに出さない\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n    const logPrint = CubismFramework.coreLogFunction;\n    if (!logPrint) return;\n    const buffer = format.replace(/\\{(\\d+)\\}/g, (m, k) => {\n      return args[k];\n    });\n    logPrint(buffer);\n  }\n\n  /**\n   * データから指定した長さだけダンプ出力する。\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n   *\n   * @param logLevel ログレベルの設定\n   * @param data ダンプするデータ\n   * @param length ダンプする長さ\n   */\n  static dumpBytes(logLevel, data, length) {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0) this.print(logLevel, '\\n');else if (i % 8 == 0 && i > 0) this.print(logLevel, '  ');\n      this.print(logLevel, '{0} ', [data[i] & 0xff]);\n    }\n    this.print(logLevel, '\\n');\n  }\n\n  /**\n   * private コンストラクタ\n   */\n  constructor() {}\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismdebug';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  const CubismDebug = _Live2DCubismFramework.CubismDebug = $.CubismDebug;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CubismLogPrint\");\n$RefreshReg$(_c2, \"CubismLogPrintIn\");\n$RefreshReg$(_c3, \"CSM_ASSERT\");","map":{"version":3,"names":["CSM_LOG_LEVEL","CSM_LOG_LEVEL_DEBUG","CSM_LOG_LEVEL_ERROR","CSM_LOG_LEVEL_INFO","CSM_LOG_LEVEL_VERBOSE","CSM_LOG_LEVEL_WARNING","CubismFramework","LogLevel","CubismLogPrint","level","fmt","args","CubismDebug","print","_c","CubismLogPrintIn","_c2","CSM_ASSERT","expr","console","assert","_c3","CubismLogVerbose","CubismLogDebug","CubismLogInfo","CubismLogWarning","CubismLogError","_len","arguments","length","Array","_key","LogLevel_Verbose","_len2","_key2","LogLevel_Debug","_len3","_key3","LogLevel_Info","_len4","_key4","LogLevel_Warning","_len5","_key5","LogLevel_Error","_len6","_key6","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","_len11","_key11","_len12","_key12","_len13","_key13","_len14","_key14","_len15","_key15","logLevel","format","getLoggingLevel","logPrint","coreLogFunction","buffer","replace","m","k","dumpBytes","data","i","constructor","$","Live2DCubismFramework","_Live2DCubismFramework","$RefreshReg$"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/Samples/TypeScript/Demo/Framework/src/utils/cubismdebug.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport {\n  CSM_LOG_LEVEL,\n  CSM_LOG_LEVEL_DEBUG,\n  CSM_LOG_LEVEL_ERROR,\n  CSM_LOG_LEVEL_INFO,\n  CSM_LOG_LEVEL_VERBOSE,\n  CSM_LOG_LEVEL_WARNING,\n} from '../cubismframeworkconfig';\nimport { CubismFramework, LogLevel } from '../live2dcubismframework';\n\nexport const CubismLogPrint = (level: LogLevel, fmt: string, args: any[]) => {\n  CubismDebug.print(level, '[CSM]' + fmt, args);\n};\n\nexport const CubismLogPrintIn = (level: LogLevel, fmt: string, args: any[]) => {\n  CubismLogPrint(level, fmt + '\\n', args);\n};\n\nexport const CSM_ASSERT = (expr: any) => {\n  console.assert(expr);\n};\n\nexport let CubismLogVerbose: (fmt: string, ...args: any[]) => void;\nexport let CubismLogDebug: (fmt: string, ...args: any[]) => void;\nexport let CubismLogInfo: (fmt: string, ...args: any[]) => void;\nexport let CubismLogWarning: (fmt: string, ...args: any[]) => void;\nexport let CubismLogError: (fmt: string, ...args: any[]) => void;\n\nif (CSM_LOG_LEVEL <= CSM_LOG_LEVEL_VERBOSE) {\n  CubismLogVerbose = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Verbose, '[V]' + fmt, args);\n  };\n\n  CubismLogDebug = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n  };\n\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_DEBUG) {\n  CubismLogDebug = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n  };\n\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_INFO) {\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_WARNING) {\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_ERROR) {\n  CubismLogError = (fmt: string, ...args: any[]) => {\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n}\n\n/**\n * デバッグ用のユーティリティクラス。\n * ログの出力、バイトのダンプなど\n */\nexport class CubismDebug {\n  /**\n   * ログを出力する。第一引数にログレベルを設定する。\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n   *\n   * @param logLevel ログレベルの設定\n   * @param format 書式付き文字列\n   * @param args 可変長引数\n   */\n  public static print(logLevel: LogLevel, format: string, args?: any[]): void {\n    // オプションで設定されたログ出力レベルを下回る場合はログに出さない\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n\n    const logPrint: Live2DCubismCore.csmLogFunction =\n      CubismFramework.coreLogFunction;\n\n    if (!logPrint) return;\n\n    const buffer: string = format.replace(/\\{(\\d+)\\}/g, (m, k) => {\n      return args[k];\n    });\n    logPrint(buffer);\n  }\n\n  /**\n   * データから指定した長さだけダンプ出力する。\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\n   *\n   * @param logLevel ログレベルの設定\n   * @param data ダンプするデータ\n   * @param length ダンプする長さ\n   */\n  public static dumpBytes(\n    logLevel: LogLevel,\n    data: Uint8Array,\n    length: number\n  ): void {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0) this.print(logLevel, '\\n');\n      else if (i % 8 == 0 && i > 0) this.print(logLevel, '  ');\n      this.print(logLevel, '{0} ', [data[i] & 0xff]);\n    }\n\n    this.print(logLevel, '\\n');\n  }\n\n  /**\n   * private コンストラクタ\n   */\n  private constructor() {}\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismdebug';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Live2DCubismFramework {\n  export const CubismDebug = $.CubismDebug;\n  export type CubismDebug = $.CubismDebug;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}