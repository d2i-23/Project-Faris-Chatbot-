{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CSM_ASSERT, CubismLogError } from '../utils/cubismdebug';\nimport { CubismModel } from './cubismmodel';\n\n/**\n * Mocデータの管理\n *\n * Mocデータの管理を行うクラス。\n */\nexport class CubismMoc {\n  /**\n   * Mocデータの作成\n   */\n  static create(mocBytes, shouldCheckMocConsistency) {\n    let cubismMoc = null;\n    if (shouldCheckMocConsistency) {\n      // .moc3の整合性を確認\n      const consistency = this.hasMocConsistency(mocBytes);\n      if (!consistency) {\n        // 整合性が確認できなければ処理しない\n        CubismLogError(`Inconsistent MOC3.`);\n        return cubismMoc;\n      }\n    }\n    const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n    if (moc) {\n      cubismMoc = new CubismMoc(moc);\n      cubismMoc._mocVersion = Live2DCubismCore.Version.csmGetMocVersion(moc, mocBytes);\n    }\n    return cubismMoc;\n  }\n\n  /**\n   * Mocデータを削除\n   *\n   * Mocデータを削除する\n   */\n  static delete(moc) {\n    moc._moc._release();\n    moc._moc = null;\n    moc = null;\n  }\n\n  /**\n   * モデルを作成する\n   *\n   * @return Mocデータから作成されたモデル\n   */\n  createModel() {\n    let cubismModel = null;\n    const model = Live2DCubismCore.Model.fromMoc(this._moc);\n    if (model) {\n      cubismModel = new CubismModel(model);\n      cubismModel.initialize();\n      ++this._modelCount;\n    }\n    return cubismModel;\n  }\n\n  /**\n   * モデルを削除する\n   */\n  deleteModel(model) {\n    if (model != null) {\n      model.release();\n      model = null;\n      --this._modelCount;\n    }\n  }\n\n  /**\n   * コンストラクタ\n   */\n  constructor(moc) {\n    this._moc = void 0;\n    // Mocデータ\n    this._modelCount = void 0;\n    // Mocデータから作られたモデルの個数\n    this._mocVersion = void 0;\n    this._moc = moc;\n    this._modelCount = 0;\n    this._mocVersion = 0;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  release() {\n    CSM_ASSERT(this._modelCount == 0);\n    this._moc._release();\n    this._moc = null;\n  }\n\n  /**\n   * 最新の.moc3 Versionを取得\n   */\n  getLatestMocVersion() {\n    return Live2DCubismCore.Version.csmGetLatestMocVersion();\n  }\n\n  /**\n   * 読み込んだモデルの.moc3 Versionを取得\n   */\n  getMocVersion() {\n    return this._mocVersion;\n  }\n\n  /**\n   * .moc3 の整合性を検証する\n   */\n  static hasMocConsistency(mocBytes) {\n    const isConsistent = Live2DCubismCore.Moc.prototype.hasMocConsistency(mocBytes);\n    return isConsistent === 1 ? true : false;\n  }\n\n  // 読み込んだモデルの.moc3 Version\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismmoc';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  const CubismMoc = _Live2DCubismFramework.CubismMoc = $.CubismMoc;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["CSM_ASSERT","CubismLogError","CubismModel","CubismMoc","create","mocBytes","shouldCheckMocConsistency","cubismMoc","consistency","hasMocConsistency","moc","Live2DCubismCore","Moc","fromArrayBuffer","_mocVersion","Version","csmGetMocVersion","delete","_moc","_release","createModel","cubismModel","model","Model","fromMoc","initialize","_modelCount","deleteModel","release","constructor","getLatestMocVersion","csmGetLatestMocVersion","getMocVersion","isConsistent","prototype","$","Live2DCubismFramework","_Live2DCubismFramework"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/Samples/TypeScript/Demo/Framework/src/model/cubismmoc.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CSM_ASSERT, CubismLogError } from '../utils/cubismdebug';\nimport { CubismModel } from './cubismmodel';\n\n/**\n * Mocデータの管理\n *\n * Mocデータの管理を行うクラス。\n */\nexport class CubismMoc {\n  /**\n   * Mocデータの作成\n   */\n  public static create(\n    mocBytes: ArrayBuffer,\n    shouldCheckMocConsistency: boolean\n  ): CubismMoc {\n    let cubismMoc: CubismMoc = null;\n\n    if (shouldCheckMocConsistency) {\n      // .moc3の整合性を確認\n      const consistency = this.hasMocConsistency(mocBytes);\n\n      if (!consistency) {\n        // 整合性が確認できなければ処理しない\n        CubismLogError(`Inconsistent MOC3.`);\n        return cubismMoc;\n      }\n    }\n\n    const moc: Live2DCubismCore.Moc =\n      Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n\n    if (moc) {\n      cubismMoc = new CubismMoc(moc);\n      cubismMoc._mocVersion = Live2DCubismCore.Version.csmGetMocVersion(\n        moc,\n        mocBytes\n      );\n    }\n\n    return cubismMoc;\n  }\n\n  /**\n   * Mocデータを削除\n   *\n   * Mocデータを削除する\n   */\n  public static delete(moc: CubismMoc): void {\n    moc._moc._release();\n    moc._moc = null;\n    moc = null;\n  }\n\n  /**\n   * モデルを作成する\n   *\n   * @return Mocデータから作成されたモデル\n   */\n  createModel(): CubismModel {\n    let cubismModel: CubismModel = null;\n\n    const model: Live2DCubismCore.Model = Live2DCubismCore.Model.fromMoc(\n      this._moc\n    );\n\n    if (model) {\n      cubismModel = new CubismModel(model);\n      cubismModel.initialize();\n\n      ++this._modelCount;\n    }\n\n    return cubismModel;\n  }\n\n  /**\n   * モデルを削除する\n   */\n  deleteModel(model: CubismModel): void {\n    if (model != null) {\n      model.release();\n      model = null;\n      --this._modelCount;\n    }\n  }\n\n  /**\n   * コンストラクタ\n   */\n  private constructor(moc: Live2DCubismCore.Moc) {\n    this._moc = moc;\n    this._modelCount = 0;\n    this._mocVersion = 0;\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    CSM_ASSERT(this._modelCount == 0);\n\n    this._moc._release();\n    this._moc = null;\n  }\n\n  /**\n   * 最新の.moc3 Versionを取得\n   */\n  public getLatestMocVersion(): number {\n    return Live2DCubismCore.Version.csmGetLatestMocVersion();\n  }\n\n  /**\n   * 読み込んだモデルの.moc3 Versionを取得\n   */\n  public getMocVersion(): number {\n    return this._mocVersion;\n  }\n\n  /**\n   * .moc3 の整合性を検証する\n   */\n  public static hasMocConsistency(mocBytes: ArrayBuffer): boolean {\n    const isConsistent =\n      Live2DCubismCore.Moc.prototype.hasMocConsistency(mocBytes);\n    return isConsistent === 1 ? true : false;\n  }\n\n  _moc: Live2DCubismCore.Moc; // Mocデータ\n  _modelCount: number; // Mocデータから作られたモデルの個数\n  _mocVersion: number; // 読み込んだモデルの.moc3 Version\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismmoc';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Live2DCubismFramework {\n  export const CubismMoc = $.CubismMoc;\n  export type CubismMoc = $.CubismMoc;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}