{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * 2次元ベクトル型\n *\n * 2次元ベクトル型の機能を提供する。\n */\nexport class CubismVector2 {\n  /**\n   * コンストラクタ\n   */\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.x = x == undefined ? 0.0 : x;\n    this.y = y == undefined ? 0.0 : y;\n  }\n\n  /**\n   * ベクトルの加算\n   *\n   * @param vector2 加算するベクトル値\n   * @return 加算結果 ベクトル値\n   */\n  add(vector2) {\n    const ret = new CubismVector2(0.0, 0.0);\n    ret.x = this.x + vector2.x;\n    ret.y = this.y + vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの減算\n   *\n   * @param vector2 減算するベクトル値\n   * @return 減算結果 ベクトル値\n   */\n  substract(vector2) {\n    const ret = new CubismVector2(0.0, 0.0);\n    ret.x = this.x - vector2.x;\n    ret.y = this.y - vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの乗算\n   *\n   * @param vector2 乗算するベクトル値\n   * @return 乗算結果 ベクトル値\n   */\n  multiply(vector2) {\n    const ret = new CubismVector2(0.0, 0.0);\n    ret.x = this.x * vector2.x;\n    ret.y = this.y * vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの乗算(スカラー)\n   *\n   * @param scalar 乗算するスカラー値\n   * @return 乗算結果 ベクトル値\n   */\n  multiplyByScaler(scalar) {\n    return this.multiply(new CubismVector2(scalar, scalar));\n  }\n\n  /**\n   * ベクトルの除算\n   *\n   * @param vector2 除算するベクトル値\n   * @return 除算結果 ベクトル値\n   */\n  division(vector2) {\n    const ret = new CubismVector2(0.0, 0.0);\n    ret.x = this.x / vector2.x;\n    ret.y = this.y / vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの除算(スカラー)\n   *\n   * @param scalar 除算するスカラー値\n   * @return 除算結果 ベクトル値\n   */\n  divisionByScalar(scalar) {\n    return this.division(new CubismVector2(scalar, scalar));\n  }\n\n  /**\n   * ベクトルの長さを取得する\n   *\n   * @return ベクトルの長さ\n   */\n  getLength() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  /**\n   * ベクトルの距離の取得\n   *\n   * @param a 点\n   * @return ベクトルの距離\n   */\n  getDistanceWith(a) {\n    return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n  }\n\n  /**\n   * ドット積の計算\n   *\n   * @param a 値\n   * @return 結果\n   */\n  dot(a) {\n    return this.x * a.x + this.y * a.y;\n  }\n\n  /**\n   * 正規化の適用\n   */\n  normalize() {\n    const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n    this.x = this.x / length;\n    this.y = this.y / length;\n  }\n\n  /**\n   * 等しさの確認（等しいか？）\n   *\n   * 値が等しいか？\n   *\n   * @param rhs 確認する値\n   * @return true 値は等しい\n   * @return false 値は等しくない\n   */\n  isEqual(rhs) {\n    return this.x == rhs.x && this.y == rhs.y;\n  }\n\n  /**\n   * 等しさの確認（等しくないか？）\n   *\n   * 値が等しくないか？\n   *\n   * @param rhs 確認する値\n   * @return true 値は等しくない\n   * @return false 値は等しい\n   */\n  isNotEqual(rhs) {\n    return !this.isEqual(rhs);\n  }\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismvector2';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  const CubismVector2 = _Live2DCubismFramework.CubismVector2 = $.CubismVector2;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["CubismVector2","constructor","x","y","undefined","add","vector2","ret","substract","multiply","multiplyByScaler","scalar","division","divisionByScalar","getLength","Math","sqrt","getDistanceWith","a","dot","normalize","length","pow","isEqual","rhs","isNotEqual","$","Live2DCubismFramework","_Live2DCubismFramework"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/Framework/src/math/cubismvector2.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\n/**\n * 2次元ベクトル型\n *\n * 2次元ベクトル型の機能を提供する。\n */\nexport class CubismVector2 {\n  /**\n   * コンストラクタ\n   */\n  public constructor(public x?: number, public y?: number) {\n    this.x = x == undefined ? 0.0 : x;\n\n    this.y = y == undefined ? 0.0 : y;\n  }\n\n  /**\n   * ベクトルの加算\n   *\n   * @param vector2 加算するベクトル値\n   * @return 加算結果 ベクトル値\n   */\n  public add(vector2: CubismVector2): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n    ret.x = this.x + vector2.x;\n    ret.y = this.y + vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの減算\n   *\n   * @param vector2 減算するベクトル値\n   * @return 減算結果 ベクトル値\n   */\n  public substract(vector2: CubismVector2): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n    ret.x = this.x - vector2.x;\n    ret.y = this.y - vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの乗算\n   *\n   * @param vector2 乗算するベクトル値\n   * @return 乗算結果 ベクトル値\n   */\n  public multiply(vector2: CubismVector2): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n    ret.x = this.x * vector2.x;\n    ret.y = this.y * vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの乗算(スカラー)\n   *\n   * @param scalar 乗算するスカラー値\n   * @return 乗算結果 ベクトル値\n   */\n  public multiplyByScaler(scalar: number): CubismVector2 {\n    return this.multiply(new CubismVector2(scalar, scalar));\n  }\n\n  /**\n   * ベクトルの除算\n   *\n   * @param vector2 除算するベクトル値\n   * @return 除算結果 ベクトル値\n   */\n  public division(vector2: CubismVector2): CubismVector2 {\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\n    ret.x = this.x / vector2.x;\n    ret.y = this.y / vector2.y;\n    return ret;\n  }\n\n  /**\n   * ベクトルの除算(スカラー)\n   *\n   * @param scalar 除算するスカラー値\n   * @return 除算結果 ベクトル値\n   */\n  public divisionByScalar(scalar: number): CubismVector2 {\n    return this.division(new CubismVector2(scalar, scalar));\n  }\n\n  /**\n   * ベクトルの長さを取得する\n   *\n   * @return ベクトルの長さ\n   */\n  public getLength(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  /**\n   * ベクトルの距離の取得\n   *\n   * @param a 点\n   * @return ベクトルの距離\n   */\n  public getDistanceWith(a: CubismVector2): number {\n    return Math.sqrt(\n      (this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y)\n    );\n  }\n\n  /**\n   * ドット積の計算\n   *\n   * @param a 値\n   * @return 結果\n   */\n  public dot(a: CubismVector2): number {\n    return this.x * a.x + this.y * a.y;\n  }\n\n  /**\n   * 正規化の適用\n   */\n  public normalize(): void {\n    const length: number = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n\n    this.x = this.x / length;\n    this.y = this.y / length;\n  }\n\n  /**\n   * 等しさの確認（等しいか？）\n   *\n   * 値が等しいか？\n   *\n   * @param rhs 確認する値\n   * @return true 値は等しい\n   * @return false 値は等しくない\n   */\n  public isEqual(rhs: CubismVector2): boolean {\n    return this.x == rhs.x && this.y == rhs.y;\n  }\n\n  /**\n   * 等しさの確認（等しくないか？）\n   *\n   * 値が等しくないか？\n   *\n   * @param rhs 確認する値\n   * @return true 値は等しくない\n   * @return false 値は等しい\n   */\n  public isNotEqual(rhs: CubismVector2): boolean {\n    return !this.isEqual(rhs);\n  }\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismvector2';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Live2DCubismFramework {\n  export const CubismVector2 = $.CubismVector2;\n  export type CubismVector2 = $.CubismVector2;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}