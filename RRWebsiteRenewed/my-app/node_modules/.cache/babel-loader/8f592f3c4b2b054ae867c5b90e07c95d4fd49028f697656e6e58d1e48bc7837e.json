{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"react\"));else if (typeof define === 'function' && define.amd) define([\"react\"], factory);else if (typeof exports === 'object') exports[\"live2d\"] = factory(require(\"react\"));else root[\"live2d\"] = factory(root[\"React\"]);\n})(window, function (__WEBPACK_EXTERNAL_MODULE_react__) {\n  return (/******/function (modules) {\n      // webpackBootstrap\n      /******/ // The module cache\n      /******/\n      var installedModules = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __webpack_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/if (installedModules[moduleId]) {\n          /******/return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = installedModules[moduleId] = {\n          /******/i: moduleId,\n          /******/l: false,\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/\n        module.l = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /******/\n      /******/ // expose the modules object (__webpack_modules__)\n      /******/\n      __webpack_require__.m = modules;\n      /******/\n      /******/ // expose the module cache\n      /******/\n      __webpack_require__.c = installedModules;\n      /******/\n      /******/ // define getter function for harmony exports\n      /******/\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/if (!__webpack_require__.o(exports, name)) {\n          /******/Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n      };\n      /******/\n      /******/ // define __esModule on exports\n      /******/\n      __webpack_require__.r = function (exports) {\n        /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n      /******/ // create a fake namespace object\n      /******/ // mode & 1: value is a module id, require it\n      /******/ // mode & 2: merge all properties of value into the ns\n      /******/ // mode & 4: return value when already ns object\n      /******/ // mode & 8|1: behave like require\n      /******/\n      __webpack_require__.t = function (value, mode) {\n        /******/if (mode & 1) value = __webpack_require__(value);\n        /******/\n        if (mode & 8) return value;\n        /******/\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n        var ns = Object.create(null);\n        /******/\n        __webpack_require__.r(ns);\n        /******/\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n        if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n        return ns;\n        /******/\n      };\n      /******/\n      /******/ // getDefaultExport function for compatibility with non-harmony modules\n      /******/\n      __webpack_require__.n = function (module) {\n        /******/var getter = module && module.__esModule ? /******/function getDefault() {\n          return module['default'];\n        } : /******/function getModuleExports() {\n          return module;\n        };\n        /******/\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n        return getter;\n        /******/\n      };\n      /******/\n      /******/ // Object.prototype.hasOwnProperty.call\n      /******/\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n      /******/ // __webpack_public_path__\n      /******/\n      __webpack_require__.p = \"\";\n      /******/\n      /******/\n      /******/ // Load entry module and return exports\n      /******/\n      return __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n      /******/\n    }\n    /************************************************************************/\n    /******/({\n      /***/\"./Framework/src/cubismdefaultparameterid.ts\":\n      /*!***************************************************!*\\\n        !*** ./Framework/src/cubismdefaultparameterid.ts ***!\n        \\***************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    Live2DCubismFramework.HitAreaPrefix = 'HitArea';\\r\\n    Live2DCubismFramework.HitAreaHead = 'Head';\\r\\n    Live2DCubismFramework.HitAreaBody = 'Body';\\r\\n    Live2DCubismFramework.PartsIdCore = 'Parts01Core';\\r\\n    Live2DCubismFramework.PartsArmPrefix = 'Parts01Arm_';\\r\\n    Live2DCubismFramework.PartsArmLPrefix = 'Parts01ArmL_';\\r\\n    Live2DCubismFramework.PartsArmRPrefix = 'Parts01ArmR_';\\r\\n    Live2DCubismFramework.ParamAngleX = 'ParamAngleX';\\r\\n    Live2DCubismFramework.ParamAngleY = 'ParamAngleY';\\r\\n    Live2DCubismFramework.ParamAngleZ = 'ParamAngleZ';\\r\\n    Live2DCubismFramework.ParamEyeLOpen = 'ParamEyeLOpen';\\r\\n    Live2DCubismFramework.ParamEyeLSmile = 'ParamEyeLSmile';\\r\\n    Live2DCubismFramework.ParamEyeROpen = 'ParamEyeROpen';\\r\\n    Live2DCubismFramework.ParamEyeRSmile = 'ParamEyeRSmile';\\r\\n    Live2DCubismFramework.ParamEyeBallX = 'ParamEyeBallX';\\r\\n    Live2DCubismFramework.ParamEyeBallY = 'ParamEyeBallY';\\r\\n    Live2DCubismFramework.ParamEyeBallForm = 'ParamEyeBallForm';\\r\\n    Live2DCubismFramework.ParamBrowLY = 'ParamBrowLY';\\r\\n    Live2DCubismFramework.ParamBrowRY = 'ParamBrowRY';\\r\\n    Live2DCubismFramework.ParamBrowLX = 'ParamBrowLX';\\r\\n    Live2DCubismFramework.ParamBrowRX = 'ParamBrowRX';\\r\\n    Live2DCubismFramework.ParamBrowLAngle = 'ParamBrowLAngle';\\r\\n    Live2DCubismFramework.ParamBrowRAngle = 'ParamBrowRAngle';\\r\\n    Live2DCubismFramework.ParamBrowLForm = 'ParamBrowLForm';\\r\\n    Live2DCubismFramework.ParamBrowRForm = 'ParamBrowRForm';\\r\\n    Live2DCubismFramework.ParamMouthForm = 'ParamMouthForm';\\r\\n    Live2DCubismFramework.ParamMouthOpenY = 'ParamMouthOpenY';\\r\\n    Live2DCubismFramework.ParamCheek = 'ParamCheek';\\r\\n    Live2DCubismFramework.ParamBodyAngleX = 'ParamBodyAngleX';\\r\\n    Live2DCubismFramework.ParamBodyAngleY = 'ParamBodyAngleY';\\r\\n    Live2DCubismFramework.ParamBodyAngleZ = 'ParamBodyAngleZ';\\r\\n    Live2DCubismFramework.ParamBreath = 'ParamBreath';\\r\\n    Live2DCubismFramework.ParamArmLA = 'ParamArmLA';\\r\\n    Live2DCubismFramework.ParamArmRA = 'ParamArmRA';\\r\\n    Live2DCubismFramework.ParamArmLB = 'ParamArmLB';\\r\\n    Live2DCubismFramework.ParamArmRB = 'ParamArmRB';\\r\\n    Live2DCubismFramework.ParamHandL = 'ParamHandL';\\r\\n    Live2DCubismFramework.ParamHandR = 'ParamHandR';\\r\\n    Live2DCubismFramework.ParamHairFront = 'ParamHairFront';\\r\\n    Live2DCubismFramework.ParamHairSide = 'ParamHairSide';\\r\\n    Live2DCubismFramework.ParamHairBack = 'ParamHairBack';\\r\\n    Live2DCubismFramework.ParamHairFluffy = 'ParamHairFluffy';\\r\\n    Live2DCubismFramework.ParamShoulderY = 'ParamShoulderY';\\r\\n    Live2DCubismFramework.ParamBustX = 'ParamBustX';\\r\\n    Live2DCubismFramework.ParamBustY = 'ParamBustY';\\r\\n    Live2DCubismFramework.ParamBaseX = 'ParamBaseX';\\r\\n    Live2DCubismFramework.ParamBaseY = 'ParamBaseY';\\r\\n    Live2DCubismFramework.ParamNONE = 'NONE:';\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL2N1YmlzbWRlZmF1bHRwYXJhbWV0ZXJpZC50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvY3ViaXNtZGVmYXVsdHBhcmFtZXRlcmlkLnRzPzEyODciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuLyoqXG4gKiBAYnJpZWYg44OR44Op44Oh44O844K/SUTjga7jg4fjg5Xjgqnjg6vjg4jlgKTjgpLkv53mjIHjgZnjgovlrprmlbA8YnI+XG4gKiAgICAgICAgIOODh+ODleOCqeODq+ODiOWApOOBruS7leanmOOBr+S7peS4i+OBruODnuODi+ODpeOCouODq+OBq+WfuuOBpeOBjzxicj5cbiAqICAgICAgICAgaHR0cHM6Ly9kb2NzLmxpdmUyZC5jb20vY3ViaXNtLWVkaXRvci1tYW51YWwvc3RhbmRhcmQtcGFyYW1ldG9yLWxpc3QvXG4gKi9cbmV4cG9ydCBuYW1lc3BhY2UgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIHtcbiAgLy8g44OR44O844OESURcbiAgZXhwb3J0IGNvbnN0IEhpdEFyZWFQcmVmaXggPSAnSGl0QXJlYSc7XG4gIGV4cG9ydCBjb25zdCBIaXRBcmVhSGVhZCA9ICdIZWFkJztcbiAgZXhwb3J0IGNvbnN0IEhpdEFyZWFCb2R5ID0gJ0JvZHknO1xuICBleHBvcnQgY29uc3QgUGFydHNJZENvcmUgPSAnUGFydHMwMUNvcmUnO1xuICBleHBvcnQgY29uc3QgUGFydHNBcm1QcmVmaXggPSAnUGFydHMwMUFybV8nO1xuICBleHBvcnQgY29uc3QgUGFydHNBcm1MUHJlZml4ID0gJ1BhcnRzMDFBcm1MXyc7XG4gIGV4cG9ydCBjb25zdCBQYXJ0c0FybVJQcmVmaXggPSAnUGFydHMwMUFybVJfJztcblxuICAvLyDjg5Hjg6njg6Hjg7zjgr9JRFxuICBleHBvcnQgY29uc3QgUGFyYW1BbmdsZVggPSAnUGFyYW1BbmdsZVgnO1xuICBleHBvcnQgY29uc3QgUGFyYW1BbmdsZVkgPSAnUGFyYW1BbmdsZVknO1xuICBleHBvcnQgY29uc3QgUGFyYW1BbmdsZVogPSAnUGFyYW1BbmdsZVonO1xuICBleHBvcnQgY29uc3QgUGFyYW1FeWVMT3BlbiA9ICdQYXJhbUV5ZUxPcGVuJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtRXllTFNtaWxlID0gJ1BhcmFtRXllTFNtaWxlJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtRXllUk9wZW4gPSAnUGFyYW1FeWVST3Blbic7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUV5ZVJTbWlsZSA9ICdQYXJhbUV5ZVJTbWlsZSc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUV5ZUJhbGxYID0gJ1BhcmFtRXllQmFsbFgnO1xuICBleHBvcnQgY29uc3QgUGFyYW1FeWVCYWxsWSA9ICdQYXJhbUV5ZUJhbGxZJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtRXllQmFsbEZvcm0gPSAnUGFyYW1FeWVCYWxsRm9ybSc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUJyb3dMWSA9ICdQYXJhbUJyb3dMWSc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUJyb3dSWSA9ICdQYXJhbUJyb3dSWSc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUJyb3dMWCA9ICdQYXJhbUJyb3dMWCc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUJyb3dSWCA9ICdQYXJhbUJyb3dSWCc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUJyb3dMQW5nbGUgPSAnUGFyYW1Ccm93TEFuZ2xlJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtQnJvd1JBbmdsZSA9ICdQYXJhbUJyb3dSQW5nbGUnO1xuICBleHBvcnQgY29uc3QgUGFyYW1Ccm93TEZvcm0gPSAnUGFyYW1Ccm93TEZvcm0nO1xuICBleHBvcnQgY29uc3QgUGFyYW1Ccm93UkZvcm0gPSAnUGFyYW1Ccm93UkZvcm0nO1xuICBleHBvcnQgY29uc3QgUGFyYW1Nb3V0aEZvcm0gPSAnUGFyYW1Nb3V0aEZvcm0nO1xuICBleHBvcnQgY29uc3QgUGFyYW1Nb3V0aE9wZW5ZID0gJ1BhcmFtTW91dGhPcGVuWSc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUNoZWVrID0gJ1BhcmFtQ2hlZWsnO1xuICBleHBvcnQgY29uc3QgUGFyYW1Cb2R5QW5nbGVYID0gJ1BhcmFtQm9keUFuZ2xlWCc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUJvZHlBbmdsZVkgPSAnUGFyYW1Cb2R5QW5nbGVZJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtQm9keUFuZ2xlWiA9ICdQYXJhbUJvZHlBbmdsZVonO1xuICBleHBvcnQgY29uc3QgUGFyYW1CcmVhdGggPSAnUGFyYW1CcmVhdGgnO1xuICBleHBvcnQgY29uc3QgUGFyYW1Bcm1MQSA9ICdQYXJhbUFybUxBJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtQXJtUkEgPSAnUGFyYW1Bcm1SQSc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUFybUxCID0gJ1BhcmFtQXJtTEInO1xuICBleHBvcnQgY29uc3QgUGFyYW1Bcm1SQiA9ICdQYXJhbUFybVJCJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtSGFuZEwgPSAnUGFyYW1IYW5kTCc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUhhbmRSID0gJ1BhcmFtSGFuZFInO1xuICBleHBvcnQgY29uc3QgUGFyYW1IYWlyRnJvbnQgPSAnUGFyYW1IYWlyRnJvbnQnO1xuICBleHBvcnQgY29uc3QgUGFyYW1IYWlyU2lkZSA9ICdQYXJhbUhhaXJTaWRlJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtSGFpckJhY2sgPSAnUGFyYW1IYWlyQmFjayc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUhhaXJGbHVmZnkgPSAnUGFyYW1IYWlyRmx1ZmZ5JztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtU2hvdWxkZXJZID0gJ1BhcmFtU2hvdWxkZXJZJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtQnVzdFggPSAnUGFyYW1CdXN0WCc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUJ1c3RZID0gJ1BhcmFtQnVzdFknO1xuICBleHBvcnQgY29uc3QgUGFyYW1CYXNlWCA9ICdQYXJhbUJhc2VYJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtQmFzZVkgPSAnUGFyYW1CYXNlWSc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbU5PTkUgPSAnTk9ORTonO1xufVxuIl0sIm1hcHBpbmdzIjoiOztBQVlBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./Framework/src/cubismdefaultparameterid.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/cubismframeworkconfig.ts\":\n      /*!************************************************!*\\\n        !*** ./Framework/src/cubismframeworkconfig.ts ***!\n        \\************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nexports.CSM_LOG_LEVEL_VERBOSE = 0;\\r\\nexports.CSM_LOG_LEVEL_DEBUG = 1;\\r\\nexports.CSM_LOG_LEVEL_INFO = 2;\\r\\nexports.CSM_LOG_LEVEL_WARNING = 3;\\r\\nexports.CSM_LOG_LEVEL_ERROR = 4;\\r\\nexports.CSM_LOG_LEVEL_OFF = 5;\\r\\nexports.CSM_LOG_LEVEL = exports.CSM_LOG_LEVEL_VERBOSE;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL2N1YmlzbWZyYW1ld29ya2NvbmZpZy50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvY3ViaXNtZnJhbWV3b3JrY29uZmlnLnRzP2U4MGYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIOODreOCsOWHuuWKm+mWouaVsOOBruioreWumlxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLy0tLS0tLS0tLS0g44Ot44Kw5Ye65Yqb44Os44OZ44OrIOmBuOaKnumgheebriDlrprnvqkgLS0tLS0tLS0tLVxuLy8g6Kmz57Sw44Ot44Kw5Ye65Yqb6Kit5a6aXG5leHBvcnQgY29uc3QgQ1NNX0xPR19MRVZFTF9WRVJCT1NFID0gMDtcbi8vIOODh+ODkOODg+OCsOODreOCsOWHuuWKm+ioreWumlxuZXhwb3J0IGNvbnN0IENTTV9MT0dfTEVWRUxfREVCVUcgPSAxO1xuLy8gSW5mb+ODreOCsOWHuuWKm+ioreWumlxuZXhwb3J0IGNvbnN0IENTTV9MT0dfTEVWRUxfSU5GTyA9IDI7XG4vLyDorablkYrjg63jgrDlh7rlipvoqK3lrppcbmV4cG9ydCBjb25zdCBDU01fTE9HX0xFVkVMX1dBUk5JTkcgPSAzO1xuLy8g44Ko44Op44O844Ot44Kw5Ye65Yqb6Kit5a6aXG5leHBvcnQgY29uc3QgQ1NNX0xPR19MRVZFTF9FUlJPUiA9IDQ7XG4vLyDjg63jgrDlh7rlipvjgqrjg5XoqK3lrppcbmV4cG9ydCBjb25zdCBDU01fTE9HX0xFVkVMX09GRiA9IDU7XG5cbi8qKlxuICog44Ot44Kw5Ye65Yqb44Os44OZ44Or6Kit5a6a44CCXG4gKlxuICog5by35Yi255qE44Gr44Ot44Kw5Ye65Yqb44Os44OZ44Or44KS5aSJ44GI44KL5pmC44Gr5a6a576p44KS5pyJ5Yq544Gr44GZ44KL44CCXG4gKiBDU01fTE9HX0xFVkVMX1ZFUkJPU0Ug772eIENTTV9MT0dfTEVWRUxfT0ZGIOOCkumBuOaKnuOBmeOCi+OAglxuICovXG5leHBvcnQgY29uc3QgQ1NNX0xPR19MRVZFTDogbnVtYmVyID0gQ1NNX0xPR19MRVZFTF9WRVJCT1NFO1xuIl0sIm1hcHBpbmdzIjoiOztBQWFBO0FBRUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQVFBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Framework/src/cubismframeworkconfig.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/cubismmodelsettingjson.ts\":\n      /*!*************************************************!*\\\n        !*** ./Framework/src/cubismmodelsettingjson.ts ***!\n        \\*************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ./live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar icubismmodelsetting_1 = __webpack_require__(/*! ./icubismmodelsetting */ \\\"./Framework/src/icubismmodelsetting.ts\\\");\\r\\nvar cubismjson_1 = __webpack_require__(/*! ./utils/cubismjson */ \\\"./Framework/src/utils/cubismjson.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ./type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismJson = cubismjson_1.Live2DCubismFramework.CubismJson;\\r\\nvar ICubismModelSetting = icubismmodelsetting_1.Live2DCubismFramework.ICubismModelSetting;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var Version = 'Version';\\r\\n    var FileReferences = 'FileReferences';\\r\\n    var Groups = 'Groups';\\r\\n    var Layout = 'Layout';\\r\\n    var HitAreas = 'HitAreas';\\r\\n    var Moc = 'Moc';\\r\\n    var Textures = 'Textures';\\r\\n    var Physics = 'Physics';\\r\\n    var Pose = 'Pose';\\r\\n    var Expressions = 'Expressions';\\r\\n    var Motions = 'Motions';\\r\\n    var UserData = 'UserData';\\r\\n    var Name = 'Name';\\r\\n    var FilePath = 'File';\\r\\n    var Id = 'Id';\\r\\n    var Ids = 'Ids';\\r\\n    var Target = 'Target';\\r\\n    var Idle = 'Idle';\\r\\n    var TapBody = 'TapBody';\\r\\n    var PinchIn = 'PinchIn';\\r\\n    var PinchOut = 'PinchOut';\\r\\n    var Shake = 'Shake';\\r\\n    var FlickHead = 'FlickHead';\\r\\n    var Parameter = 'Parameter';\\r\\n    var SoundPath = 'Sound';\\r\\n    var FadeInTime = 'FadeInTime';\\r\\n    var FadeOutTime = 'FadeOutTime';\\r\\n    var CenterX = 'CenterX';\\r\\n    var CenterY = 'CenterY';\\r\\n    var X = 'X';\\r\\n    var Y = 'Y';\\r\\n    var Width = 'Width';\\r\\n    var Height = 'Height';\\r\\n    var LipSync = 'LipSync';\\r\\n    var EyeBlink = 'EyeBlink';\\r\\n    var InitParameter = 'init_param';\\r\\n    var InitPartsVisible = 'init_parts_visible';\\r\\n    var Val = 'val';\\r\\n    var FrequestNode;\\r\\n    (function (FrequestNode) {\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_Groups\\\"] = 0] = \\\"FrequestNode_Groups\\\";\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_Moc\\\"] = 1] = \\\"FrequestNode_Moc\\\";\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_Motions\\\"] = 2] = \\\"FrequestNode_Motions\\\";\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_Expressions\\\"] = 3] = \\\"FrequestNode_Expressions\\\";\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_Textures\\\"] = 4] = \\\"FrequestNode_Textures\\\";\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_Physics\\\"] = 5] = \\\"FrequestNode_Physics\\\";\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_Pose\\\"] = 6] = \\\"FrequestNode_Pose\\\";\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_HitAreas\\\"] = 7] = \\\"FrequestNode_HitAreas\\\";\\r\\n    })(FrequestNode || (FrequestNode = {}));\\r\\n    var CubismModelSettingJson = (function (_super) {\\r\\n        __extends(CubismModelSettingJson, _super);\\r\\n        function CubismModelSettingJson(buffer, size) {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._json = CubismJson.create(buffer, size);\\r\\n            if (_this._json) {\\r\\n                _this._jsonValue = new csmVector();\\r\\n                _this._jsonValue.pushBack(_this._json.getRoot().getValueByString(Groups));\\r\\n                _this._jsonValue.pushBack(_this._json\\r\\n                    .getRoot()\\r\\n                    .getValueByString(FileReferences)\\r\\n                    .getValueByString(Moc));\\r\\n                _this._jsonValue.pushBack(_this._json\\r\\n                    .getRoot()\\r\\n                    .getValueByString(FileReferences)\\r\\n                    .getValueByString(Motions));\\r\\n                _this._jsonValue.pushBack(_this._json\\r\\n                    .getRoot()\\r\\n                    .getValueByString(FileReferences)\\r\\n                    .getValueByString(Expressions));\\r\\n                _this._jsonValue.pushBack(_this._json\\r\\n                    .getRoot()\\r\\n                    .getValueByString(FileReferences)\\r\\n                    .getValueByString(Textures));\\r\\n                _this._jsonValue.pushBack(_this._json\\r\\n                    .getRoot()\\r\\n                    .getValueByString(FileReferences)\\r\\n                    .getValueByString(Physics));\\r\\n                _this._jsonValue.pushBack(_this._json\\r\\n                    .getRoot()\\r\\n                    .getValueByString(FileReferences)\\r\\n                    .getValueByString(Pose));\\r\\n                _this._jsonValue.pushBack(_this._json.getRoot().getValueByString(HitAreas));\\r\\n            }\\r\\n            return _this;\\r\\n        }\\r\\n        CubismModelSettingJson.prototype.release = function () {\\r\\n            CubismJson.delete(this._json);\\r\\n            this._jsonValue = null;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.GetJson = function () {\\r\\n            return this._json;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getModelFileName = function () {\\r\\n            if (!this.isExistModelFile()) {\\r\\n                return '';\\r\\n            }\\r\\n            return this._jsonValue.at(FrequestNode.FrequestNode_Moc).getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getTextureCount = function () {\\r\\n            if (!this.isExistTextureFiles()) {\\r\\n                return 0;\\r\\n            }\\r\\n            return this._jsonValue.at(FrequestNode.FrequestNode_Textures).getSize();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getTextureDirectory = function () {\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Textures)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getTextureFileName = function (index) {\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Textures)\\r\\n                .getValueByIndex(index)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getHitAreasCount = function () {\\r\\n            if (!this.isExistHitAreas()) {\\r\\n                return 0;\\r\\n            }\\r\\n            return this._jsonValue.at(FrequestNode.FrequestNode_HitAreas).getSize();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getHitAreaId = function (index) {\\r\\n            return CubismFramework.getIdManager().getId(this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_HitAreas)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(Id)\\r\\n                .getRawString());\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getHitAreaName = function (index) {\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_HitAreas)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(Name)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getPhysicsFileName = function () {\\r\\n            if (!this.isExistPhysicsFile()) {\\r\\n                return '';\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Physics)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getPoseFileName = function () {\\r\\n            if (!this.isExistPoseFile()) {\\r\\n                return '';\\r\\n            }\\r\\n            return this._jsonValue.at(FrequestNode.FrequestNode_Pose).getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getExpressionCount = function () {\\r\\n            if (!this.isExistExpressionFile()) {\\r\\n                return 0;\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Expressions)\\r\\n                .getSize();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getExpressionName = function (index) {\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Expressions)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(Name)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getExpressionFileName = function (index) {\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Expressions)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(FilePath)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getMotionGroupCount = function () {\\r\\n            if (!this.isExistMotionGroups()) {\\r\\n                return 0;\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getKeys()\\r\\n                .getSize();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getMotionGroupName = function (index) {\\r\\n            if (!this.isExistMotionGroups()) {\\r\\n                return null;\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getKeys()\\r\\n                .at(index);\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getMotionCount = function (groupName) {\\r\\n            if (!this.isExistMotionGroupName(groupName)) {\\r\\n                return 0;\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getSize();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getMotionFileName = function (groupName, index) {\\r\\n            if (!this.isExistMotionGroupName(groupName)) {\\r\\n                return '';\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(FilePath)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getMotionSoundFileName = function (groupName, index) {\\r\\n            if (!this.isExistMotionSoundFile(groupName, index)) {\\r\\n                return '';\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(SoundPath)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getMotionFadeInTimeValue = function (groupName, index) {\\r\\n            if (!this.isExistMotionFadeIn(groupName, index)) {\\r\\n                return -1.0;\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(FadeInTime)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getMotionFadeOutTimeValue = function (groupName, index) {\\r\\n            if (!this.isExistMotionFadeOut(groupName, index)) {\\r\\n                return -1.0;\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(FadeOutTime)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getUserDataFile = function () {\\r\\n            if (!this.isExistUserDataFile()) {\\r\\n                return '';\\r\\n            }\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(FileReferences)\\r\\n                .getValueByString(UserData)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getLayoutMap = function (outLayoutMap) {\\r\\n            var map = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Layout)\\r\\n                .getMap();\\r\\n            if (map == null) {\\r\\n                return false;\\r\\n            }\\r\\n            var ret = false;\\r\\n            for (var ite = map.begin(); ite.notEqual(map.end()); ite.preIncrement()) {\\r\\n                outLayoutMap.setValue(ite.ptr().first, ite.ptr().second.toFloat());\\r\\n                ret = true;\\r\\n            }\\r\\n            return ret;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getEyeBlinkParameterCount = function () {\\r\\n            if (!this.isExistEyeBlinkParameters()) {\\r\\n                return 0;\\r\\n            }\\r\\n            var num = 0;\\r\\n            for (var i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\\r\\n                var refI = this._jsonValue\\r\\n                    .at(FrequestNode.FrequestNode_Groups)\\r\\n                    .getValueByIndex(i);\\r\\n                if (refI.isNull() || refI.isError()) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (refI.getValueByString(Name).getRawString() == EyeBlink) {\\r\\n                    num = refI\\r\\n                        .getValueByString(Ids)\\r\\n                        .getVector()\\r\\n                        .getSize();\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n            return num;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getEyeBlinkParameterId = function (index) {\\r\\n            if (!this.isExistEyeBlinkParameters()) {\\r\\n                return null;\\r\\n            }\\r\\n            for (var i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\\r\\n                var refI = this._jsonValue\\r\\n                    .at(FrequestNode.FrequestNode_Groups)\\r\\n                    .getValueByIndex(i);\\r\\n                if (refI.isNull() || refI.isError()) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (refI.getValueByString(Name).getRawString() == EyeBlink) {\\r\\n                    return CubismFramework.getIdManager().getId(refI\\r\\n                        .getValueByString(Ids)\\r\\n                        .getValueByIndex(index)\\r\\n                        .getRawString());\\r\\n                }\\r\\n            }\\r\\n            return null;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getLipSyncParameterCount = function () {\\r\\n            if (!this.isExistLipSyncParameters()) {\\r\\n                return 0;\\r\\n            }\\r\\n            var num = 0;\\r\\n            for (var i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\\r\\n                var refI = this._jsonValue\\r\\n                    .at(FrequestNode.FrequestNode_Groups)\\r\\n                    .getValueByIndex(i);\\r\\n                if (refI.isNull() || refI.isError()) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (refI.getValueByString(Name).getRawString() == LipSync) {\\r\\n                    num = refI\\r\\n                        .getValueByString(Ids)\\r\\n                        .getVector()\\r\\n                        .getSize();\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n            return num;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getLipSyncParameterId = function (index) {\\r\\n            if (!this.isExistLipSyncParameters()) {\\r\\n                return null;\\r\\n            }\\r\\n            for (var i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\\r\\n                var refI = this._jsonValue\\r\\n                    .at(FrequestNode.FrequestNode_Groups)\\r\\n                    .getValueByIndex(i);\\r\\n                if (refI.isNull() || refI.isError()) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (refI.getValueByString(Name).getRawString() == LipSync) {\\r\\n                    return CubismFramework.getIdManager().getId(refI\\r\\n                        .getValueByString(Ids)\\r\\n                        .getValueByIndex(index)\\r\\n                        .getRawString());\\r\\n                }\\r\\n            }\\r\\n            return null;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistModelFile = function () {\\r\\n            var node = this._jsonValue.at(FrequestNode.FrequestNode_Moc);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistTextureFiles = function () {\\r\\n            var node = this._jsonValue.at(FrequestNode.FrequestNode_Textures);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistHitAreas = function () {\\r\\n            var node = this._jsonValue.at(FrequestNode.FrequestNode_HitAreas);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistPhysicsFile = function () {\\r\\n            var node = this._jsonValue.at(FrequestNode.FrequestNode_Physics);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistPoseFile = function () {\\r\\n            var node = this._jsonValue.at(FrequestNode.FrequestNode_Pose);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistExpressionFile = function () {\\r\\n            var node = this._jsonValue.at(FrequestNode.FrequestNode_Expressions);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistMotionGroups = function () {\\r\\n            var node = this._jsonValue.at(FrequestNode.FrequestNode_Motions);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistMotionGroupName = function (groupName) {\\r\\n            var node = this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistMotionSoundFile = function (groupName, index) {\\r\\n            var node = this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(SoundPath);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistMotionFadeIn = function (groupName, index) {\\r\\n            var node = this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(FadeInTime);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistMotionFadeOut = function (groupName, index) {\\r\\n            var node = this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(FadeOutTime);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistUserDataFile = function () {\\r\\n            var node = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(FileReferences)\\r\\n                .getValueByString(UserData);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistEyeBlinkParameters = function () {\\r\\n            if (this._jsonValue.at(FrequestNode.FrequestNode_Groups).isNull() ||\\r\\n                this._jsonValue.at(FrequestNode.FrequestNode_Groups).isError()) {\\r\\n                return false;\\r\\n            }\\r\\n            for (var i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); ++i) {\\r\\n                if (this._jsonValue\\r\\n                    .at(FrequestNode.FrequestNode_Groups)\\r\\n                    .getValueByIndex(i)\\r\\n                    .getValueByString(Name)\\r\\n                    .getRawString() == EyeBlink) {\\r\\n                    return true;\\r\\n                }\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistLipSyncParameters = function () {\\r\\n            if (this._jsonValue.at(FrequestNode.FrequestNode_Groups).isNull() ||\\r\\n                this._jsonValue.at(FrequestNode.FrequestNode_Groups).isError()) {\\r\\n                return false;\\r\\n            }\\r\\n            for (var i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); ++i) {\\r\\n                if (this._jsonValue\\r\\n                    .at(FrequestNode.FrequestNode_Groups)\\r\\n                    .getValueByIndex(i)\\r\\n                    .getValueByString(Name)\\r\\n                    .getRawString() == LipSync) {\\r\\n                    return true;\\r\\n                }\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        return CubismModelSettingJson;\\r\\n    }(ICubismModelSetting));\\r\\n    Live2DCubismFramework.CubismModelSettingJson = CubismModelSettingJson;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/cubismmodelsettingjson.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/effect/cubismbreath.ts\":\n      /*!**********************************************!*\\\n        !*** ./Framework/src/effect/cubismbreath.ts ***!\n        \\**********************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismBreath = (function () {\\r\\n        function CubismBreath() {\\r\\n            this._currentTime = 0.0;\\r\\n        }\\r\\n        CubismBreath.create = function () {\\r\\n            return new CubismBreath();\\r\\n        };\\r\\n        CubismBreath.delete = function (instance) {\\r\\n            if (instance != null) {\\r\\n                instance = null;\\r\\n            }\\r\\n        };\\r\\n        CubismBreath.prototype.setParameters = function (breathParameters) {\\r\\n            this._breathParameters = breathParameters;\\r\\n        };\\r\\n        CubismBreath.prototype.getParameters = function () {\\r\\n            return this._breathParameters;\\r\\n        };\\r\\n        CubismBreath.prototype.updateParameters = function (model, deltaTimeSeconds) {\\r\\n            this._currentTime += deltaTimeSeconds;\\r\\n            var t = this._currentTime * 2.0 * 3.14159;\\r\\n            for (var i = 0; i < this._breathParameters.getSize(); ++i) {\\r\\n                var data = this._breathParameters.at(i);\\r\\n                model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\\r\\n            }\\r\\n        };\\r\\n        return CubismBreath;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismBreath = CubismBreath;\\r\\n    var BreathParameterData = (function () {\\r\\n        function BreathParameterData(parameterId, offset, peak, cycle, weight) {\\r\\n            this.parameterId = parameterId == undefined ? null : parameterId;\\r\\n            this.offset = offset == undefined ? 0.0 : offset;\\r\\n            this.peak = peak == undefined ? 0.0 : peak;\\r\\n            this.cycle = cycle == undefined ? 0.0 : cycle;\\r\\n            this.weight = weight == undefined ? 0.0 : weight;\\r\\n        }\\r\\n        return BreathParameterData;\\r\\n    }());\\r\\n    Live2DCubismFramework.BreathParameterData = BreathParameterData;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL2VmZmVjdC9jdWJpc21icmVhdGgudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saXZlMmQvLi9GcmFtZXdvcmsvc3JjL2VmZmVjdC9jdWJpc21icmVhdGgudHM/YWRiZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IHRoZSBMaXZlMkQgT3BlbiBTb2Z0d2FyZSBsaWNlbnNlXG4gKiB0aGF0IGNhbiBiZSBmb3VuZCBhdCBodHRwczovL3d3dy5saXZlMmQuY29tL2V1bGEvbGl2ZTJkLW9wZW4tc29mdHdhcmUtbGljZW5zZS1hZ3JlZW1lbnRfZW4uaHRtbC5cbiAqL1xuXG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3NtdmVjdG9yIH0gZnJvbSAnLi4vdHlwZS9jc212ZWN0b3InO1xuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbW1vZGVsIH0gZnJvbSAnLi4vbW9kZWwvY3ViaXNtbW9kZWwnO1xuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbWlkIH0gZnJvbSAnLi4vaWQvY3ViaXNtaWQnO1xuaW1wb3J0IEN1YmlzbUlkSGFuZGxlID0gY3ViaXNtaWQuQ3ViaXNtSWRIYW5kbGU7XG5pbXBvcnQgQ3ViaXNtTW9kZWwgPSBjdWJpc21tb2RlbC5DdWJpc21Nb2RlbDtcbmltcG9ydCBjc21WZWN0b3IgPSBjc212ZWN0b3IuY3NtVmVjdG9yO1xuXG5leHBvcnQgbmFtZXNwYWNlIExpdmUyREN1YmlzbUZyYW1ld29yayB7XG4gIC8qKlxuICAgKiDlkbzlkLjmqZ/og71cbiAgICpcbiAgICog5ZG85ZC45qmf6IO944KS5o+Q5L6b44GZ44KL44CCXG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtQnJlYXRoIHtcbiAgICAvKipcbiAgICAgKiDjgqTjg7Pjgrnjgr/jg7Pjgrnjga7kvZzmiJBcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZSgpOiBDdWJpc21CcmVhdGgge1xuICAgICAgcmV0dXJuIG5ldyBDdWJpc21CcmVhdGgoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjgqTjg7Pjgrnjgr/jg7Pjgrnjga7noLTmo4RcbiAgICAgKiBAcGFyYW0gaW5zdGFuY2Ug5a++6LGh44GuQ3ViaXNtQnJlYXRoXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBkZWxldGUoaW5zdGFuY2U6IEN1YmlzbUJyZWF0aCk6IHZvaWQge1xuICAgICAgaWYgKGluc3RhbmNlICE9IG51bGwpIHtcbiAgICAgICAgaW5zdGFuY2UgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOWRvOWQuOOBruODkeODqeODoeODvOOCv+OBrue0kOOBpeOBkVxuICAgICAqIEBwYXJhbSBicmVhdGhQYXJhbWV0ZXJzIOWRvOWQuOOCkue0kOOBpeOBkeOBn+OBhOODkeODqeODoeODvOOCv+OBruODquOCueODiFxuICAgICAqL1xuICAgIHB1YmxpYyBzZXRQYXJhbWV0ZXJzKFxuICAgICAgYnJlYXRoUGFyYW1ldGVyczogY3NtVmVjdG9yPEJyZWF0aFBhcmFtZXRlckRhdGE+XG4gICAgKTogdm9pZCB7XG4gICAgICB0aGlzLl9icmVhdGhQYXJhbWV0ZXJzID0gYnJlYXRoUGFyYW1ldGVycztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlkbzlkLjjgavntJDjgaXjgYTjgabjgYTjgovjg5Hjg6njg6Hjg7zjgr/jga7lj5blvpdcbiAgICAgKiBAcmV0dXJuIOWRvOWQuOOBq+e0kOOBpeOBhOOBpuOBhOOCi+ODkeODqeODoeODvOOCv+OBruODquOCueODiFxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRQYXJhbWV0ZXJzKCk6IGNzbVZlY3RvcjxCcmVhdGhQYXJhbWV0ZXJEYXRhPiB7XG4gICAgICByZXR1cm4gdGhpcy5fYnJlYXRoUGFyYW1ldGVycztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg4fjg6vjga7jg5Hjg6njg6Hjg7zjgr/jga7mm7TmlrBcbiAgICAgKiBAcGFyYW0gbW9kZWwg5a++6LGh44Gu44Oi44OH44OrXG4gICAgICogQHBhcmFtIGRlbHRhVGltZVNlY29uZHMg44OH44Or44K/5pmC6ZaTW+enkl1cbiAgICAgKi9cbiAgICBwdWJsaWMgdXBkYXRlUGFyYW1ldGVycyhcbiAgICAgIG1vZGVsOiBDdWJpc21Nb2RlbCxcbiAgICAgIGRlbHRhVGltZVNlY29uZHM6IG51bWJlclxuICAgICk6IHZvaWQge1xuICAgICAgdGhpcy5fY3VycmVudFRpbWUgKz0gZGVsdGFUaW1lU2Vjb25kcztcblxuICAgICAgY29uc3QgdDogbnVtYmVyID0gdGhpcy5fY3VycmVudFRpbWUgKiAyLjAgKiAzLjE0MTU5O1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX2JyZWF0aFBhcmFtZXRlcnMuZ2V0U2l6ZSgpOyArK2kpIHtcbiAgICAgICAgY29uc3QgZGF0YTogQnJlYXRoUGFyYW1ldGVyRGF0YSA9IHRoaXMuX2JyZWF0aFBhcmFtZXRlcnMuYXQoaSk7XG5cbiAgICAgICAgbW9kZWwuYWRkUGFyYW1ldGVyVmFsdWVCeUlkKFxuICAgICAgICAgIGRhdGEucGFyYW1ldGVySWQsXG4gICAgICAgICAgZGF0YS5vZmZzZXQgKyBkYXRhLnBlYWsgKiBNYXRoLnNpbih0IC8gZGF0YS5jeWNsZSksXG4gICAgICAgICAgZGF0YS53ZWlnaHRcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICAgKi9cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgICB0aGlzLl9jdXJyZW50VGltZSA9IDAuMDtcbiAgICB9XG5cbiAgICBfYnJlYXRoUGFyYW1ldGVyczogY3NtVmVjdG9yPEJyZWF0aFBhcmFtZXRlckRhdGE+OyAvLyDlkbzlkLjjgavjgbLjgoLjgaXjgYTjgabjgYTjgovjg5Hjg6njg6Hjg7zjgr/jga7jg6rjgrnjg4hcbiAgICBfY3VycmVudFRpbWU6IG51bWJlcjsgLy8g56mN566X5pmC6ZaTW+enkl1cbiAgfVxuXG4gIC8qKlxuICAgKiDlkbzlkLjjga7jg5Hjg6njg6Hjg7zjgr/mg4XloLFcbiAgICovXG4gIGV4cG9ydCBjbGFzcyBCcmVhdGhQYXJhbWV0ZXJEYXRhIHtcbiAgICAvKipcbiAgICAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICAgKiBAcGFyYW0gcGFyYW1ldGVySWQgICDlkbzlkLjjgpLjgbLjgoLjgaXjgZHjgovjg5Hjg6njg6Hjg7zjgr9JRFxuICAgICAqIEBwYXJhbSBvZmZzZXQgICAgICAgIOWRvOWQuOOCkuato+W8puazouOBqOOBl+OBn+OBqOOBjeOBruOAgeazouOBruOCquODleOCu+ODg+ODiFxuICAgICAqIEBwYXJhbSBwZWFrICAgICAgICAgIOWRvOWQuOOCkuato+W8puazouOBqOOBl+OBn+OBqOOBjeOBruOAgeazouOBrumrmOOBlVxuICAgICAqIEBwYXJhbSBjeWNsZSAgICAgICAgIOWRvOWQuOOCkuato+W8puazouOBqOOBl+OBn+OBqOOBjeOBruOAgeazouOBruWRqOacn1xuICAgICAqIEBwYXJhbSB3ZWlnaHQgICAgICAgIOODkeODqeODoeODvOOCv+OBuOOBrumHjeOBv1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgcGFyYW1ldGVySWQ/OiBDdWJpc21JZEhhbmRsZSxcbiAgICAgIG9mZnNldD86IG51bWJlcixcbiAgICAgIHBlYWs/OiBudW1iZXIsXG4gICAgICBjeWNsZT86IG51bWJlcixcbiAgICAgIHdlaWdodD86IG51bWJlclxuICAgICkge1xuICAgICAgdGhpcy5wYXJhbWV0ZXJJZCA9IHBhcmFtZXRlcklkID09IHVuZGVmaW5lZCA/IG51bGwgOiBwYXJhbWV0ZXJJZDtcbiAgICAgIHRoaXMub2Zmc2V0ID0gb2Zmc2V0ID09IHVuZGVmaW5lZCA/IDAuMCA6IG9mZnNldDtcbiAgICAgIHRoaXMucGVhayA9IHBlYWsgPT0gdW5kZWZpbmVkID8gMC4wIDogcGVhaztcbiAgICAgIHRoaXMuY3ljbGUgPSBjeWNsZSA9PSB1bmRlZmluZWQgPyAwLjAgOiBjeWNsZTtcbiAgICAgIHRoaXMud2VpZ2h0ID0gd2VpZ2h0ID09IHVuZGVmaW5lZCA/IDAuMCA6IHdlaWdodDtcbiAgICB9XG5cbiAgICBwYXJhbWV0ZXJJZDogQ3ViaXNtSWRIYW5kbGU7IC8vIOWRvOWQuOOCkuOBsuOCguOBpeOBkeOCi+ODkeODqeODoeODvOOCv0lEXFxcbiAgICBvZmZzZXQ6IG51bWJlcjsgLy8g5ZG85ZC444KS5q2j5bym5rOi44Go44GX44Gf44Go44GN44Gu44CB5rOi44Gu44Kq44OV44K744OD44OIXG4gICAgcGVhazogbnVtYmVyOyAvLyDlkbzlkLjjgpLmraPlvKbms6LjgajjgZfjgZ/jgajjgY3jga7jgIHms6Ljga7pq5jjgZVcbiAgICBjeWNsZTogbnVtYmVyOyAvLyDlkbzlkLjjgpLmraPlvKbms6LjgajjgZfjgZ/jgajjgY3jga7jgIHms6Ljga7lkajmnJ9cbiAgICB3ZWlnaHQ6IG51bWJlcjsgLy8g44OR44Op44Oh44O844K/44G444Gu6YeN44G/XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFjQTtBQUFBO0FBTUE7QUErREE7QUFDQTtBQUNBO0FBN0RBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUdBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFPQTtBQUlBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFLQTtBQUNBO0FBV0E7QUFBQTtBQXJFQTtBQTBFQTtBQVNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFBQTtBQTVCQTtBQTZCQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./Framework/src/effect/cubismbreath.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/effect/cubismeyeblink.ts\":\n      /*!************************************************!*\\\n        !*** ./Framework/src/effect/cubismeyeblink.ts ***!\n        \\************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismEyeBlink = (function () {\\r\\n        function CubismEyeBlink(modelSetting) {\\r\\n            this._blinkingState = EyeState.EyeState_First;\\r\\n            this._nextBlinkingTime = 0.0;\\r\\n            this._stateStartTimeSeconds = 0.0;\\r\\n            this._blinkingIntervalSeconds = 4.0;\\r\\n            this._closingSeconds = 0.1;\\r\\n            this._closedSeconds = 0.05;\\r\\n            this._openingSeconds = 0.15;\\r\\n            this._userTimeSeconds = 0.0;\\r\\n            this._parameterIds = new csmVector();\\r\\n            if (modelSetting == null) {\\r\\n                return;\\r\\n            }\\r\\n            for (var i = 0; i < modelSetting.getEyeBlinkParameterCount(); ++i) {\\r\\n                this._parameterIds.pushBack(modelSetting.getEyeBlinkParameterId(i));\\r\\n            }\\r\\n        }\\r\\n        CubismEyeBlink.create = function (modelSetting) {\\r\\n            if (modelSetting === void 0) { modelSetting = null; }\\r\\n            return new CubismEyeBlink(modelSetting);\\r\\n        };\\r\\n        CubismEyeBlink.delete = function (eyeBlink) {\\r\\n            if (eyeBlink != null) {\\r\\n                eyeBlink = null;\\r\\n            }\\r\\n        };\\r\\n        CubismEyeBlink.prototype.setBlinkingInterval = function (blinkingInterval) {\\r\\n            this._blinkingIntervalSeconds = blinkingInterval;\\r\\n        };\\r\\n        CubismEyeBlink.prototype.setBlinkingSetting = function (closing, closed, opening) {\\r\\n            this._closingSeconds = closing;\\r\\n            this._closedSeconds = closed;\\r\\n            this._openingSeconds = opening;\\r\\n        };\\r\\n        CubismEyeBlink.prototype.setParameterIds = function (parameterIds) {\\r\\n            this._parameterIds = parameterIds;\\r\\n        };\\r\\n        CubismEyeBlink.prototype.getParameterIds = function () {\\r\\n            return this._parameterIds;\\r\\n        };\\r\\n        CubismEyeBlink.prototype.updateParameters = function (model, deltaTimeSeconds) {\\r\\n            this._userTimeSeconds += deltaTimeSeconds;\\r\\n            var parameterValue;\\r\\n            var t = 0.0;\\r\\n            switch (this._blinkingState) {\\r\\n                case EyeState.EyeState_Closing:\\r\\n                    t =\\r\\n                        (this._userTimeSeconds - this._stateStartTimeSeconds) /\\r\\n                            this._closingSeconds;\\r\\n                    if (t >= 1.0) {\\r\\n                        t = 1.0;\\r\\n                        this._blinkingState = EyeState.EyeState_Closed;\\r\\n                        this._stateStartTimeSeconds = this._userTimeSeconds;\\r\\n                    }\\r\\n                    parameterValue = 1.0 - t;\\r\\n                    break;\\r\\n                case EyeState.EyeState_Closed:\\r\\n                    t =\\r\\n                        (this._userTimeSeconds - this._stateStartTimeSeconds) /\\r\\n                            this._closedSeconds;\\r\\n                    if (t >= 1.0) {\\r\\n                        this._blinkingState = EyeState.EyeState_Opening;\\r\\n                        this._stateStartTimeSeconds = this._userTimeSeconds;\\r\\n                    }\\r\\n                    parameterValue = 0.0;\\r\\n                    break;\\r\\n                case EyeState.EyeState_Opening:\\r\\n                    t =\\r\\n                        (this._userTimeSeconds - this._stateStartTimeSeconds) /\\r\\n                            this._openingSeconds;\\r\\n                    if (t >= 1.0) {\\r\\n                        t = 1.0;\\r\\n                        this._blinkingState = EyeState.EyeState_Interval;\\r\\n                        this._nextBlinkingTime = this.determinNextBlinkingTiming();\\r\\n                    }\\r\\n                    parameterValue = t;\\r\\n                    break;\\r\\n                case EyeState.EyeState_Interval:\\r\\n                    if (this._nextBlinkingTime < this._userTimeSeconds) {\\r\\n                        this._blinkingState = EyeState.EyeState_Closing;\\r\\n                        this._stateStartTimeSeconds = this._userTimeSeconds;\\r\\n                    }\\r\\n                    parameterValue = 1.0;\\r\\n                    break;\\r\\n                case EyeState.EyeState_First:\\r\\n                default:\\r\\n                    this._blinkingState = EyeState.EyeState_Interval;\\r\\n                    this._nextBlinkingTime = this.determinNextBlinkingTiming();\\r\\n                    parameterValue = 1.0;\\r\\n                    break;\\r\\n            }\\r\\n            if (!CubismEyeBlink.CloseIfZero) {\\r\\n                parameterValue = -parameterValue;\\r\\n            }\\r\\n            for (var i = 0; i < this._parameterIds.getSize(); ++i) {\\r\\n                model.setParameterValueById(this._parameterIds.at(i), parameterValue);\\r\\n            }\\r\\n        };\\r\\n        CubismEyeBlink.prototype.determinNextBlinkingTiming = function () {\\r\\n            var r = Math.random();\\r\\n            return (this._userTimeSeconds + r * (2.0 * this._blinkingIntervalSeconds - 1.0));\\r\\n        };\\r\\n        CubismEyeBlink.CloseIfZero = true;\\r\\n        return CubismEyeBlink;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismEyeBlink = CubismEyeBlink;\\r\\n    var EyeState;\\r\\n    (function (EyeState) {\\r\\n        EyeState[EyeState[\\\"EyeState_First\\\"] = 0] = \\\"EyeState_First\\\";\\r\\n        EyeState[EyeState[\\\"EyeState_Interval\\\"] = 1] = \\\"EyeState_Interval\\\";\\r\\n        EyeState[EyeState[\\\"EyeState_Closing\\\"] = 2] = \\\"EyeState_Closing\\\";\\r\\n        EyeState[EyeState[\\\"EyeState_Closed\\\"] = 3] = \\\"EyeState_Closed\\\";\\r\\n        EyeState[EyeState[\\\"EyeState_Opening\\\"] = 4] = \\\"EyeState_Opening\\\";\\r\\n    })(EyeState = Live2DCubismFramework.EyeState || (Live2DCubismFramework.EyeState = {}));\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/effect/cubismeyeblink.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/effect/cubismpose.ts\":\n      /*!********************************************!*\\\n        !*** ./Framework/src/effect/cubismpose.ts ***!\n        \\********************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar cubismjson_1 = __webpack_require__(/*! ../utils/cubismjson */ \\\"./Framework/src/utils/cubismjson.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismJson = cubismjson_1.Live2DCubismFramework.CubismJson;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var Epsilon = 0.001;\\r\\n    var DefaultFadeInSeconds = 0.5;\\r\\n    var FadeIn = 'FadeInTime';\\r\\n    var Link = 'Link';\\r\\n    var Groups = 'Groups';\\r\\n    var Id = 'Id';\\r\\n    var CubismPose = (function () {\\r\\n        function CubismPose() {\\r\\n            this._fadeTimeSeconds = DefaultFadeInSeconds;\\r\\n            this._lastModel = null;\\r\\n            this._partGroups = new csmVector();\\r\\n            this._partGroupCounts = new csmVector();\\r\\n        }\\r\\n        CubismPose.create = function (pose3json, size) {\\r\\n            var ret = new CubismPose();\\r\\n            var json = CubismJson.create(pose3json, size);\\r\\n            var root = json.getRoot();\\r\\n            if (!root.getValueByString(FadeIn).isNull()) {\\r\\n                ret._fadeTimeSeconds = root\\r\\n                    .getValueByString(FadeIn)\\r\\n                    .toFloat(DefaultFadeInSeconds);\\r\\n                if (ret._fadeTimeSeconds <= 0.0) {\\r\\n                    ret._fadeTimeSeconds = DefaultFadeInSeconds;\\r\\n                }\\r\\n            }\\r\\n            var poseListInfo = root.getValueByString(Groups);\\r\\n            var poseCount = poseListInfo.getSize();\\r\\n            for (var poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\\r\\n                var idListInfo = poseListInfo.getValueByIndex(poseIndex);\\r\\n                var idCount = idListInfo.getSize();\\r\\n                var groupCount = 0;\\r\\n                for (var groupIndex = 0; groupIndex < idCount; ++groupIndex) {\\r\\n                    var partInfo = idListInfo.getValueByIndex(groupIndex);\\r\\n                    var partData = new PartData();\\r\\n                    var parameterId = CubismFramework.getIdManager().getId(partInfo.getValueByString(Id).getRawString());\\r\\n                    partData.partId = parameterId;\\r\\n                    if (!partInfo.getValueByString(Link).isNull()) {\\r\\n                        var linkListInfo = partInfo.getValueByString(Link);\\r\\n                        var linkCount = linkListInfo.getSize();\\r\\n                        for (var linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\\r\\n                            var linkPart = new PartData();\\r\\n                            var linkId = CubismFramework.getIdManager().getId(linkListInfo.getValueByIndex(linkIndex).getString());\\r\\n                            linkPart.partId = linkId;\\r\\n                            partData.link.pushBack(linkPart);\\r\\n                        }\\r\\n                    }\\r\\n                    ret._partGroups.pushBack(partData.clone());\\r\\n                    ++groupCount;\\r\\n                }\\r\\n                ret._partGroupCounts.pushBack(groupCount);\\r\\n            }\\r\\n            CubismJson.delete(json);\\r\\n            return ret;\\r\\n        };\\r\\n        CubismPose.delete = function (pose) {\\r\\n            if (pose != null) {\\r\\n                pose = null;\\r\\n            }\\r\\n        };\\r\\n        CubismPose.prototype.updateParameters = function (model, deltaTimeSeconds) {\\r\\n            if (model != this._lastModel) {\\r\\n                this.reset(model);\\r\\n            }\\r\\n            this._lastModel = model;\\r\\n            if (deltaTimeSeconds < 0.0) {\\r\\n                deltaTimeSeconds = 0.0;\\r\\n            }\\r\\n            var beginIndex = 0;\\r\\n            for (var i = 0; i < this._partGroupCounts.getSize(); i++) {\\r\\n                var partGroupCount = this._partGroupCounts.at(i);\\r\\n                this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\\r\\n                beginIndex += partGroupCount;\\r\\n            }\\r\\n            this.copyPartOpacities(model);\\r\\n        };\\r\\n        CubismPose.prototype.reset = function (model) {\\r\\n            var beginIndex = 0;\\r\\n            for (var i = 0; i < this._partGroupCounts.getSize(); ++i) {\\r\\n                var groupCount = this._partGroupCounts.at(i);\\r\\n                for (var j = beginIndex; j < beginIndex + groupCount; ++j) {\\r\\n                    this._partGroups.at(j).initialize(model);\\r\\n                    var partsIndex = this._partGroups.at(j).partIndex;\\r\\n                    var paramIndex = this._partGroups.at(j).parameterIndex;\\r\\n                    if (partsIndex < 0) {\\r\\n                        continue;\\r\\n                    }\\r\\n                    model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1.0 : 0.0);\\r\\n                    model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1.0 : 0.0);\\r\\n                    for (var k = 0; k < this._partGroups.at(j).link.getSize(); ++k) {\\r\\n                        this._partGroups\\r\\n                            .at(j)\\r\\n                            .link.at(k)\\r\\n                            .initialize(model);\\r\\n                    }\\r\\n                }\\r\\n                beginIndex += groupCount;\\r\\n            }\\r\\n        };\\r\\n        CubismPose.prototype.copyPartOpacities = function (model) {\\r\\n            for (var groupIndex = 0; groupIndex < this._partGroups.getSize(); ++groupIndex) {\\r\\n                var partData = this._partGroups.at(groupIndex);\\r\\n                if (partData.link.getSize() == 0) {\\r\\n                    continue;\\r\\n                }\\r\\n                var partIndex = this._partGroups.at(groupIndex).partIndex;\\r\\n                var opacity = model.getPartOpacityByIndex(partIndex);\\r\\n                for (var linkIndex = 0; linkIndex < partData.link.getSize(); ++linkIndex) {\\r\\n                    var linkPart = partData.link.at(linkIndex);\\r\\n                    var linkPartIndex = linkPart.partIndex;\\r\\n                    if (linkPartIndex < 0) {\\r\\n                        continue;\\r\\n                    }\\r\\n                    model.setPartOpacityByIndex(linkPartIndex, opacity);\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismPose.prototype.doFade = function (model, deltaTimeSeconds, beginIndex, partGroupCount) {\\r\\n            var visiblePartIndex = -1;\\r\\n            var newOpacity = 1.0;\\r\\n            var phi = 0.5;\\r\\n            var backOpacityThreshold = 0.15;\\r\\n            for (var i = beginIndex; i < beginIndex + partGroupCount; ++i) {\\r\\n                var partIndex = this._partGroups.at(i).partIndex;\\r\\n                var paramIndex = this._partGroups.at(i).parameterIndex;\\r\\n                if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\\r\\n                    if (visiblePartIndex >= 0) {\\r\\n                        break;\\r\\n                    }\\r\\n                    visiblePartIndex = i;\\r\\n                    newOpacity = model.getPartOpacityByIndex(partIndex);\\r\\n                    newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\\r\\n                    if (newOpacity > 1.0) {\\r\\n                        newOpacity = 1.0;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            if (visiblePartIndex < 0) {\\r\\n                visiblePartIndex = 0;\\r\\n                newOpacity = 1.0;\\r\\n            }\\r\\n            for (var i = beginIndex; i < beginIndex + partGroupCount; ++i) {\\r\\n                var partsIndex = this._partGroups.at(i).partIndex;\\r\\n                if (visiblePartIndex == i) {\\r\\n                    model.setPartOpacityByIndex(partsIndex, newOpacity);\\r\\n                }\\r\\n                else {\\r\\n                    var opacity = model.getPartOpacityByIndex(partsIndex);\\r\\n                    var a1 = void 0;\\r\\n                    if (newOpacity < phi) {\\r\\n                        a1 = (newOpacity * (phi - 1)) / phi + 1.0;\\r\\n                    }\\r\\n                    else {\\r\\n                        a1 = ((1 - newOpacity) * phi) / (1.0 - phi);\\r\\n                    }\\r\\n                    var backOpacity = (1.0 - a1) * (1.0 - newOpacity);\\r\\n                    if (backOpacity > backOpacityThreshold) {\\r\\n                        a1 = 1.0 - backOpacityThreshold / (1.0 - newOpacity);\\r\\n                    }\\r\\n                    if (opacity > a1) {\\r\\n                        opacity = a1;\\r\\n                    }\\r\\n                    model.setPartOpacityByIndex(partsIndex, opacity);\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        return CubismPose;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPose = CubismPose;\\r\\n    var PartData = (function () {\\r\\n        function PartData(v) {\\r\\n            this.parameterIndex = 0;\\r\\n            this.partIndex = 0;\\r\\n            this.link = new csmVector();\\r\\n            if (v != undefined) {\\r\\n                this.partId = v.partId;\\r\\n                for (var ite = v.link.begin(); ite.notEqual(v.link.end()); ite.preIncrement()) {\\r\\n                    this.link.pushBack(ite.ptr().clone());\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        PartData.prototype.assignment = function (v) {\\r\\n            this.partId = v.partId;\\r\\n            for (var ite = v.link.begin(); ite.notEqual(v.link.end()); ite.preIncrement()) {\\r\\n                this.link.pushBack(ite.ptr().clone());\\r\\n            }\\r\\n            return this;\\r\\n        };\\r\\n        PartData.prototype.initialize = function (model) {\\r\\n            this.parameterIndex = model.getParameterIndex(this.partId);\\r\\n            this.partIndex = model.getPartIndex(this.partId);\\r\\n            model.setParameterValueByIndex(this.parameterIndex, 1);\\r\\n        };\\r\\n        PartData.prototype.clone = function () {\\r\\n            var clonePartData = new PartData();\\r\\n            clonePartData.partId = this.partId;\\r\\n            clonePartData.parameterIndex = this.parameterIndex;\\r\\n            clonePartData.partIndex = this.partIndex;\\r\\n            clonePartData.link = new csmVector();\\r\\n            for (var ite = this.link.begin(); ite.notEqual(this.link.end()); ite.increment()) {\\r\\n                clonePartData.link.pushBack(ite.ptr().clone());\\r\\n            }\\r\\n            return clonePartData;\\r\\n        };\\r\\n        return PartData;\\r\\n    }());\\r\\n    Live2DCubismFramework.PartData = PartData;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/effect/cubismpose.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/icubismmodelsetting.ts\":\n      /*!**********************************************!*\\\n        !*** ./Framework/src/icubismmodelsetting.ts ***!\n        \\**********************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var ICubismModelSetting = (function () {\\r\\n        function ICubismModelSetting() {\\r\\n        }\\r\\n        return ICubismModelSetting;\\r\\n    }());\\r\\n    Live2DCubismFramework.ICubismModelSetting = ICubismModelSetting;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL2ljdWJpc21tb2RlbHNldHRpbmcudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saXZlMmQvLi9GcmFtZXdvcmsvc3JjL2ljdWJpc21tb2RlbHNldHRpbmcudHM/NjQxMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IHRoZSBMaXZlMkQgT3BlbiBTb2Z0d2FyZSBsaWNlbnNlXG4gKiB0aGF0IGNhbiBiZSBmb3VuZCBhdCBodHRwczovL3d3dy5saXZlMmQuY29tL2V1bGEvbGl2ZTJkLW9wZW4tc29mdHdhcmUtbGljZW5zZS1hZ3JlZW1lbnRfZW4uaHRtbC5cbiAqL1xuXG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3ViaXNtaWQgfSBmcm9tICcuL2lkL2N1YmlzbWlkJztcbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjc21tYXAgfSBmcm9tICcuL3R5cGUvY3NtbWFwJztcbmltcG9ydCBjc21NYXAgPSBjc21tYXAuY3NtTWFwO1xuaW1wb3J0IEN1YmlzbUlkSGFuZGxlID0gY3ViaXNtaWQuQ3ViaXNtSWRIYW5kbGU7XG5cbmV4cG9ydCBuYW1lc3BhY2UgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIHtcbiAgLyoqXG4gICAqIOODouODh+ODq+ioreWumuaDheWgseOCkuWPluOCiuaJseOBhumWouaVsOOCkuWuo+iogOOBl+OBn+e0lOeyi+S7ruaDs+OCr+ODqeOCueOAglxuICAgKlxuICAgKiDjgZPjga7jgq/jg6njgrnjgpLntpnmib/jgZnjgovjgZPjgajjgafjgIHjg6Ljg4fjg6voqK3lrprmg4XloLHjgpLlj5bjgormibHjgYbjgq/jg6njgrnjgavjgarjgovjgIJcbiAgICovXG4gIGV4cG9ydCBhYnN0cmFjdCBjbGFzcyBJQ3ViaXNtTW9kZWxTZXR0aW5nIHtcbiAgICAvKipcbiAgICAgKiBNb2Pjg5XjgqHjgqTjg6vjga7lkI3liY3jgpLlj5blvpfjgZnjgotcbiAgICAgKiBAcmV0dXJuIE1vY+ODleOCoeOCpOODq+OBruWQjeWJjVxuICAgICAqL1xuICAgIHB1YmxpYyBhYnN0cmFjdCBnZXRNb2RlbEZpbGVOYW1lKCk6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIOODouODh+ODq+OBjOS9v+eUqOOBmeOCi+ODhuOCr+OCueODgeODo+OBruaVsOOCkuWPluW+l+OBmeOCi1xuICAgICAqIOODhuOCr+OCueODgeODo+OBruaVsFxuICAgICAqL1xuICAgIHB1YmxpYyBhYnN0cmFjdCBnZXRUZXh0dXJlQ291bnQoKTogbnVtYmVyO1xuXG4gICAgLyoqXG4gICAgICog44OG44Kv44K544OB44Oj44GM6YWN572u44GV44KM44Gf44OH44Kj44Os44Kv44OI44Oq44Gu5ZCN5YmN44KS5Y+W5b6X44GZ44KLXG4gICAgICogQHJldHVybiDjg4bjgq/jgrnjg4Hjg6PjgYzphY3nva7jgZXjgozjgZ/jg4fjgqPjg6zjgq/jg4jjg6rjga7lkI3liY1cbiAgICAgKi9cbiAgICBwdWJsaWMgYWJzdHJhY3QgZ2V0VGV4dHVyZURpcmVjdG9yeSgpOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg4fjg6vjgYzkvb/nlKjjgZnjgovjg4bjgq/jgrnjg4Hjg6Pjga7lkI3liY3jgpLlj5blvpfjgZnjgotcbiAgICAgKiBAcGFyYW0gaW5kZXgg6YWN5YiX44Gu44Kk44Oz44OH44OD44Kv44K55YCkXG4gICAgICogQHJldHVybiDjg4bjgq/jgrnjg4Hjg6Pjga7lkI3liY1cbiAgICAgKi9cbiAgICBwdWJsaWMgYWJzdHJhY3QgZ2V0VGV4dHVyZUZpbGVOYW1lKGluZGV4OiBudW1iZXIpOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg4fjg6vjgavoqK3lrprjgZXjgozjgZ/lvZPjgZ/jgorliKTlrprjga7mlbDjgpLlj5blvpfjgZnjgotcbiAgICAgKiBAcmV0dXJuIOODouODh+ODq+OBq+ioreWumuOBleOCjOOBn+W9k+OBn+OCiuWIpOWumuOBruaVsFxuICAgICAqL1xuICAgIHB1YmxpYyBhYnN0cmFjdCBnZXRIaXRBcmVhc0NvdW50KCk6IG51bWJlcjtcblxuICAgIC8qKlxuICAgICAqIOW9k+OBn+OCiuWIpOWumuOBq+ioreWumuOBleOCjOOBn0lE44KS5Y+W5b6X44GZ44KLXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaW5kZXgg6YWN5YiX44GuaW5kZXhcbiAgICAgKiBAcmV0dXJuIOW9k+OBn+OCiuWIpOWumuOBq+ioreWumuOBleOCjOOBn0lEXG4gICAgICovXG4gICAgcHVibGljIGFic3RyYWN0IGdldEhpdEFyZWFJZChpbmRleDogbnVtYmVyKTogQ3ViaXNtSWRIYW5kbGU7XG5cbiAgICAvKipcbiAgICAgKiDlvZPjgZ/jgorliKTlrprjgavoqK3lrprjgZXjgozjgZ/lkI3liY3jgpLlj5blvpfjgZnjgotcbiAgICAgKiBAcGFyYW0gaW5kZXgg6YWN5YiX44Gu44Kk44Oz44OH44OD44Kv44K55YCkXG4gICAgICogQHJldHVybiDlvZPjgZ/jgorliKTlrprjgavoqK3lrprjgZXjgozjgZ/lkI3liY1cbiAgICAgKi9cbiAgICBwdWJsaWMgYWJzdHJhY3QgZ2V0SGl0QXJlYU5hbWUoaW5kZXg6IG51bWJlcik6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIOeJqeeQhua8lOeul+ioreWumuODleOCoeOCpOODq+OBruWQjeWJjeOCkuWPluW+l+OBmeOCi1xuICAgICAqIEByZXR1cm4g54mp55CG5ryU566X6Kit5a6a44OV44Kh44Kk44Or44Gu5ZCN5YmNXG4gICAgICovXG4gICAgcHVibGljIGFic3RyYWN0IGdldFBoeXNpY3NGaWxlTmFtZSgpOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiDjg5Hjg7zjg4TliIfjgormm7/jgYjoqK3lrprjg5XjgqHjgqTjg6vjga7lkI3liY3jgpLlj5blvpfjgZnjgotcbiAgICAgKiBAcmV0dXJuIOODkeODvOODhOWIh+OCiuabv+OBiOioreWumuODleOCoeOCpOODq+OBruWQjeWJjVxuICAgICAqL1xuICAgIHB1YmxpYyBhYnN0cmFjdCBnZXRQb3NlRmlsZU5hbWUoKTogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICog6KGo5oOF6Kit5a6a44OV44Kh44Kk44Or44Gu5pWw44KS5Y+W5b6X44GZ44KLXG4gICAgICogQHJldHVybiDooajmg4XoqK3lrprjg5XjgqHjgqTjg6vjga7mlbBcbiAgICAgKi9cbiAgICBwdWJsaWMgYWJzdHJhY3QgZ2V0RXhwcmVzc2lvbkNvdW50KCk6IG51bWJlcjtcblxuICAgIC8qKlxuICAgICAqIOihqOaDheioreWumuODleOCoeOCpOODq+OCkuitmOWIpeOBmeOCi+WQjeWJje+8iOWIpeWQje+8ieOCkuWPluW+l+OBmeOCi1xuICAgICAqIEBwYXJhbSBpbmRleCDphY3liJfjga7jgqTjg7Pjg4fjg4Pjgq/jgrnlgKRcbiAgICAgKiBAcmV0dXJuIOihqOaDheOBruWQjeWJjVxuICAgICAqL1xuICAgIHB1YmxpYyBhYnN0cmFjdCBnZXRFeHByZXNzaW9uTmFtZShpbmRleDogbnVtYmVyKTogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICog6KGo5oOF6Kit5a6a44OV44Kh44Kk44Or44Gu5ZCN5YmN44KS5Y+W5b6X44GZ44KLXG4gICAgICogQHBhcmFtIGluZGV4IOmFjeWIl+OBruOCpOODs+ODh+ODg+OCr+OCueWApFxuICAgICAqIEByZXR1cm4g6KGo5oOF6Kit5a6a44OV44Kh44Kk44Or44Gu5ZCN5YmNXG4gICAgICovXG4gICAgcHVibGljIGFic3RyYWN0IGdldEV4cHJlc3Npb25GaWxlTmFtZShpbmRleDogbnVtYmVyKTogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICog44Oi44O844K344On44Oz44Kw44Or44O844OX44Gu5pWw44KS5Y+W5b6X44GZ44KLXG4gICAgICogQHJldHVybiDjg6Ljg7zjgrfjg6fjg7PjgrDjg6vjg7zjg5fjga7mlbBcbiAgICAgKi9cbiAgICBwdWJsaWMgYWJzdHJhY3QgZ2V0TW90aW9uR3JvdXBDb3VudCgpOiBudW1iZXI7XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg7zjgrfjg6fjg7PjgrDjg6vjg7zjg5fjga7lkI3liY3jgpLlj5blvpfjgZnjgotcbiAgICAgKiBAcGFyYW0gaW5kZXgg6YWN5YiX44Gu44Kk44Oz44OH44OD44Kv44K55YCkXG4gICAgICogQHJldHVybiDjg6Ljg7zjgrfjg6fjg7PjgrDjg6vjg7zjg5fjga7lkI3liY1cbiAgICAgKi9cbiAgICBwdWJsaWMgYWJzdHJhY3QgZ2V0TW90aW9uR3JvdXBOYW1lKGluZGV4OiBudW1iZXIpOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg7zjgrfjg6fjg7PjgrDjg6vjg7zjg5fjgavlkKvjgb7jgozjgovjg6Ljg7zjgrfjg6fjg7Pjga7mlbDjgpLlj5blvpfjgZnjgotcbiAgICAgKiBAcGFyYW0gZ3JvdXBOYW1lIOODouODvOOCt+ODp+ODs+OCsOODq+ODvOODl+OBruWQjeWJjVxuICAgICAqIEByZXR1cm4g44Oi44O844K344On44Oz44Kw44Or44O844OX44Gu5pWwXG4gICAgICovXG4gICAgcHVibGljIGFic3RyYWN0IGdldE1vdGlvbkNvdW50KGdyb3VwTmFtZTogc3RyaW5nKTogbnVtYmVyO1xuXG4gICAgLyoqXG4gICAgICog44Kw44Or44O844OX5ZCN44Go44Kk44Oz44OH44OD44Kv44K55YCk44GL44KJ44Oi44O844K344On44Oz44OV44Kh44Kk44Or5ZCN44KS5Y+W5b6X44GZ44KLXG4gICAgICogQHBhcmFtIGdyb3VwTmFtZSDjg6Ljg7zjgrfjg6fjg7PjgrDjg6vjg7zjg5fjga7lkI3liY1cbiAgICAgKiBAcGFyYW0gaW5kZXggICAgIOmFjeWIl+OBruOCpOODs+ODh+ODg+OCr+OCueWApFxuICAgICAqIEByZXR1cm4g44Oi44O844K344On44Oz44OV44Kh44Kk44Or44Gu5ZCN5YmNXG4gICAgICovXG4gICAgcHVibGljIGFic3RyYWN0IGdldE1vdGlvbkZpbGVOYW1lKGdyb3VwTmFtZTogc3RyaW5nLCBpbmRleDogbnVtYmVyKTogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICog44Oi44O844K344On44Oz44Gr5a++5b+c44GZ44KL44K144Km44Oz44OJ44OV44Kh44Kk44Or44Gu5ZCN5YmN44KS5Y+W5b6X44GZ44KLXG4gICAgICogQHBhcmFtIGdyb3VwTmFtZSDjg6Ljg7zjgrfjg6fjg7PjgrDjg6vjg7zjg5fjga7lkI3liY1cbiAgICAgKiBAcGFyYW0gaW5kZXgg6YWN5YiX44Gu44Kk44Oz44OH44OD44Kv44K55YCkXG4gICAgICogQHJldHVybiDjgrXjgqbjg7Pjg4njg5XjgqHjgqTjg6vjga7lkI3liY1cbiAgICAgKi9cbiAgICBwdWJsaWMgYWJzdHJhY3QgZ2V0TW90aW9uU291bmRGaWxlTmFtZShcbiAgICAgIGdyb3VwTmFtZTogc3RyaW5nLFxuICAgICAgaW5kZXg6IG51bWJlclxuICAgICk6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIOODouODvOOCt+ODp+ODs+mWi+Wni+aZguOBruODleOCp+ODvOODieOCpOODs+WHpueQhuaZgumWk+OCkuWPluW+l+OBmeOCi1xuICAgICAqIEBwYXJhbSBncm91cE5hbWUg44Oi44O844K344On44Oz44Kw44Or44O844OX44Gu5ZCN5YmNXG4gICAgICogQHBhcmFtIGluZGV4IOmFjeWIl+OBruOCpOODs+ODh+ODg+OCr+OCueWApFxuICAgICAqIEByZXR1cm4g44OV44Kn44O844OJ44Kk44Oz5Yem55CG5pmC6ZaTW+enkl1cbiAgICAgKi9cbiAgICBwdWJsaWMgYWJzdHJhY3QgZ2V0TW90aW9uRmFkZUluVGltZVZhbHVlKFxuICAgICAgZ3JvdXBOYW1lOiBzdHJpbmcsXG4gICAgICBpbmRleDogbnVtYmVyXG4gICAgKTogbnVtYmVyO1xuXG4gICAgLyoqXG4gICAgICog44Oi44O844K344On44Oz57WC5LqG5pmC44Gu44OV44Kn44O844OJ44Ki44Km44OI5Yem55CG5pmC6ZaT44KS5Y+W5b6X44GZ44KLXG4gICAgICogQHBhcmFtIGdyb3VwTmFtZSDjg6Ljg7zjgrfjg6fjg7PjgrDjg6vjg7zjg5fjga7lkI3liY1cbiAgICAgKiBAcGFyYW0gaW5kZXgg6YWN5YiX44Gu44Kk44Oz44OH44OD44Kv44K55YCkXG4gICAgICogQHJldHVybiDjg5Xjgqfjg7zjg4njgqLjgqbjg4jlh6bnkIbmmYLplpNb56eSXVxuICAgICAqL1xuICAgIHB1YmxpYyBhYnN0cmFjdCBnZXRNb3Rpb25GYWRlT3V0VGltZVZhbHVlKFxuICAgICAgZ3JvdXBOYW1lOiBzdHJpbmcsXG4gICAgICBpbmRleDogbnVtYmVyXG4gICAgKTogbnVtYmVyO1xuXG4gICAgLyoqXG4gICAgICog44Om44O844K244O844OH44O844K/44Gu44OV44Kh44Kk44Or5ZCN44KS5Y+W5b6X44GZ44KLXG4gICAgICogQHJldHVybiDjg6bjg7zjgrbjg7zjg4fjg7zjgr/jga7jg5XjgqHjgqTjg6vlkI1cbiAgICAgKi9cbiAgICBwdWJsaWMgYWJzdHJhY3QgZ2V0VXNlckRhdGFGaWxlKCk6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIOODrOOCpOOCouOCpuODiOaDheWgseOCkuWPluW+l+OBmeOCi1xuICAgICAqIEBwYXJhbSBvdXRMYXlvdXRNYXAgY3NtTWFw44Kv44Op44K544Gu44Kk44Oz44K544K/44Oz44K5XG4gICAgICogQHJldHVybiB0cnVlIOODrOOCpOOCouOCpuODiOaDheWgseOBjOWtmOWcqOOBmeOCi1xuICAgICAqIEByZXR1cm4gZmFsc2Ug44Os44Kk44Ki44Km44OI5oOF5aCx44GM5a2Y5Zyo44GX44Gq44GEXG4gICAgICovXG4gICAgcHVibGljIGFic3RyYWN0IGdldExheW91dE1hcChvdXRMYXlvdXRNYXA6IGNzbU1hcDxzdHJpbmcsIG51bWJlcj4pOiBib29sZWFuO1xuXG4gICAgLyoqXG4gICAgICog55uu44OR44OB44Gr6Zai6YCj5LuY44GR44KJ44KM44Gf44OR44Op44Oh44O844K/44Gu5pWw44KS5Y+W5b6X44GZ44KLXG4gICAgICogQHJldHVybiDnm67jg5Hjg4HjgavplqLpgKPku5jjgZHjgonjgozjgZ/jg5Hjg6njg6Hjg7zjgr/jga7mlbBcbiAgICAgKi9cbiAgICBwdWJsaWMgYWJzdHJhY3QgZ2V0RXllQmxpbmtQYXJhbWV0ZXJDb3VudCgpOiBudW1iZXI7XG5cbiAgICAvKipcbiAgICAgKiDnm67jg5Hjg4HjgavplqLpgKPku5jjgZHjgonjgozjgZ/jg5Hjg6njg6Hjg7zjgr/jga5JROOCkuWPluW+l+OBmeOCi1xuICAgICAqIEBwYXJhbSBpbmRleCDphY3liJfjga7jgqTjg7Pjg4fjg4Pjgq/jgrnlgKRcbiAgICAgKiBAcmV0dXJuIOODkeODqeODoeODvOOCv0lEXG4gICAgICovXG4gICAgcHVibGljIGFic3RyYWN0IGdldEV5ZUJsaW5rUGFyYW1ldGVySWQoaW5kZXg6IG51bWJlcik6IEN1YmlzbUlkSGFuZGxlO1xuXG4gICAgLyoqXG4gICAgICog44Oq44OD44OX44K344Oz44Kv44Gr6Zai6YCj5LuY44GR44KJ44KM44Gf44OR44Op44Oh44O844K/44Gu5pWw44KS5Y+W5b6X44GZ44KLXG4gICAgICogQHJldHVybiDjg6rjg4Pjg5fjgrfjg7Pjgq/jgavplqLpgKPku5jjgZHjgonjgozjgZ/jg5Hjg6njg6Hjg7zjgr/jga7mlbBcbiAgICAgKi9cbiAgICBwdWJsaWMgYWJzdHJhY3QgZ2V0TGlwU3luY1BhcmFtZXRlckNvdW50KCk6IG51bWJlcjtcblxuICAgIC8qKlxuICAgICAqIOODquODg+ODl+OCt+ODs+OCr+OBq+mWoumAo+S7mOOBkeOCieOCjOOBn+ODkeODqeODoeODvOOCv+OBruaVsOOCkuWPluW+l+OBmeOCi1xuICAgICAqIEBwYXJhbSBpbmRleCDphY3liJfjga7jgqTjg7Pjg4fjg4Pjgq/jgrnlgKRcbiAgICAgKiBAcmV0dXJuIOODkeODqeODoeODvOOCv0lEXG4gICAgICovXG4gICAgcHVibGljIGFic3RyYWN0IGdldExpcFN5bmNQYXJhbWV0ZXJJZChpbmRleDogbnVtYmVyKTogQ3ViaXNtSWRIYW5kbGU7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFZQTtBQUFBO0FBTUE7QUFBQTtBQW1MQTtBQUFBO0FBQUE7QUFuTEE7QUFvTEE7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./Framework/src/icubismmodelsetting.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/id/cubismid.ts\":\n      /*!**************************************!*\\\n        !*** ./Framework/src/id/cubismid.ts ***!\n        \\**************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar csmstring_1 = __webpack_require__(/*! ../type/csmstring */ \\\"./Framework/src/type/csmstring.ts\\\");\\r\\nvar csmString = csmstring_1.Live2DCubismFramework.csmString;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismId = (function () {\\r\\n        function CubismId(id) {\\r\\n            if (typeof id === 'string') {\\r\\n                this._id = new csmString(id);\\r\\n                return;\\r\\n            }\\r\\n            this._id = id;\\r\\n        }\\r\\n        CubismId.prototype.getString = function () {\\r\\n            return this._id;\\r\\n        };\\r\\n        CubismId.prototype.isEqual = function (c) {\\r\\n            if (typeof c === 'string') {\\r\\n                return this._id.isEqual(c);\\r\\n            }\\r\\n            else if (c instanceof csmString) {\\r\\n                return this._id.isEqual(c.s);\\r\\n            }\\r\\n            else if (c instanceof CubismId) {\\r\\n                return this._id.isEqual(c._id.s);\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        CubismId.prototype.isNotEqual = function (c) {\\r\\n            if (typeof c == 'string') {\\r\\n                return !this._id.isEqual(c);\\r\\n            }\\r\\n            else if (c instanceof csmString) {\\r\\n                return !this._id.isEqual(c.s);\\r\\n            }\\r\\n            else if (c instanceof CubismId) {\\r\\n                return !this._id.isEqual(c._id.s);\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        return CubismId;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismId = CubismId;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL2lkL2N1YmlzbWlkLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vRnJhbWV3b3JrL3NyYy9pZC9jdWJpc21pZC50cz8xZjE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjc21zdHJpbmcgfSBmcm9tICcuLi90eXBlL2NzbXN0cmluZyc7XG5pbXBvcnQgY3NtU3RyaW5nID0gY3Ntc3RyaW5nLmNzbVN0cmluZztcblxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICAvKipcbiAgICog44OR44Op44Oh44O844K/5ZCN44O744OR44O844OE5ZCN44O7RHJhd2FibGXlkI3jgpLkv53mjIFcbiAgICpcbiAgICog44OR44Op44Oh44O844K/5ZCN44O744OR44O844OE5ZCN44O7RHJhd2FibGXlkI3jgpLkv53mjIHjgZnjgovjgq/jg6njgrnjgIJcbiAgICovXG4gIGV4cG9ydCBjbGFzcyBDdWJpc21JZCB7XG4gICAgLyoqXG4gICAgICogSUTlkI3jgpLlj5blvpfjgZnjgotcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0U3RyaW5nKCk6IGNzbVN0cmluZyB7XG4gICAgICByZXR1cm4gdGhpcy5faWQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKGlkOiBzdHJpbmcgfCBjc21TdHJpbmcpIHtcbiAgICAgIGlmICh0eXBlb2YgaWQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRoaXMuX2lkID0gbmV3IGNzbVN0cmluZyhpZCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5faWQgPSBpZDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBpZOOCkuavlOi8g1xuICAgICAqIEBwYXJhbSBjIOavlOi8g+OBmeOCi2lkXG4gICAgICogQHJldHVybiDlkIzjgZjjgarjgonjgbB0cnVlLOeVsOOBquOBo+OBpuOBhOOCjOOBsGZhbHNl44KS6L+U44GZXG4gICAgICovXG4gICAgcHVibGljIGlzRXF1YWwoYzogc3RyaW5nIHwgY3NtU3RyaW5nIHwgQ3ViaXNtSWQpOiBib29sZWFuIHtcbiAgICAgIGlmICh0eXBlb2YgYyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lkLmlzRXF1YWwoYyk7XG4gICAgICB9IGVsc2UgaWYgKGMgaW5zdGFuY2VvZiBjc21TdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lkLmlzRXF1YWwoYy5zKTtcbiAgICAgIH0gZWxzZSBpZiAoYyBpbnN0YW5jZW9mIEN1YmlzbUlkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pZC5pc0VxdWFsKGMuX2lkLnMpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGlk44KS5q+U6LyDXG4gICAgICogQHBhcmFtIGMg5q+U6LyD44GZ44KLaWRcbiAgICAgKiBAcmV0dXJuIOWQjOOBmOOBquOCieOBsHRydWUs55Ww44Gq44Gj44Gm44GE44KM44GwZmFsc2XjgpLov5TjgZlcbiAgICAgKi9cbiAgICBwdWJsaWMgaXNOb3RFcXVhbChjOiBzdHJpbmcgfCBjc21TdHJpbmcgfCBDdWJpc21JZCk6IGJvb2xlYW4ge1xuICAgICAgaWYgKHR5cGVvZiBjID09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5faWQuaXNFcXVhbChjKTtcbiAgICAgIH0gZWxzZSBpZiAoYyBpbnN0YW5jZW9mIGNzbVN0cmluZykge1xuICAgICAgICByZXR1cm4gIXRoaXMuX2lkLmlzRXF1YWwoYy5zKTtcbiAgICAgIH0gZWxzZSBpZiAoYyBpbnN0YW5jZW9mIEN1YmlzbUlkKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5faWQuaXNFcXVhbChjLl9pZC5zKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBwcml2YXRlIF9pZDogY3NtU3RyaW5nOyAvLyBJROWQjVxuICB9XG5cbiAgZXhwb3J0IGRlY2xhcmUgdHlwZSBDdWJpc21JZEhhbmRsZSA9IEN1YmlzbUlkO1xufVxuIl0sIm1hcHBpbmdzIjoiOztBQU9BO0FBQ0E7QUFFQTtBQUFBO0FBTUE7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQWRBO0FBQ0E7QUFDQTtBQW1CQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUFBO0FBckRBO0FBd0RBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Framework/src/id/cubismid.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/id/cubismidmanager.ts\":\n      /*!*********************************************!*\\\n        !*** ./Framework/src/id/cubismidmanager.ts ***!\n        \\*********************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar cubismid_1 = __webpack_require__(/*! ./cubismid */ \\\"./Framework/src/id/cubismid.ts\\\");\\r\\nvar CubismId = cubismid_1.Live2DCubismFramework.CubismId;\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismIdManager = (function () {\\r\\n        function CubismIdManager() {\\r\\n            this._ids = new csmVector();\\r\\n        }\\r\\n        CubismIdManager.prototype.release = function () {\\r\\n            for (var i = 0; i < this._ids.getSize(); ++i) {\\r\\n                this._ids.set(i, void 0);\\r\\n            }\\r\\n            this._ids = null;\\r\\n        };\\r\\n        CubismIdManager.prototype.registerIds = function (ids) {\\r\\n            for (var i = 0; i < ids.length; i++) {\\r\\n                this.registerId(ids[i]);\\r\\n            }\\r\\n        };\\r\\n        CubismIdManager.prototype.registerId = function (id) {\\r\\n            var result = null;\\r\\n            if ('string' == typeof id) {\\r\\n                if ((result = this.findId(id)) != null) {\\r\\n                    return result;\\r\\n                }\\r\\n                result = new CubismId(id);\\r\\n                this._ids.pushBack(result);\\r\\n            }\\r\\n            else {\\r\\n                return this.registerId(id.s);\\r\\n            }\\r\\n            return result;\\r\\n        };\\r\\n        CubismIdManager.prototype.getId = function (id) {\\r\\n            return this.registerId(id);\\r\\n        };\\r\\n        CubismIdManager.prototype.isExist = function (id) {\\r\\n            if ('string' == typeof id) {\\r\\n                return this.findId(id) != null;\\r\\n            }\\r\\n            return this.isExist(id.s);\\r\\n        };\\r\\n        CubismIdManager.prototype.findId = function (id) {\\r\\n            for (var i = 0; i < this._ids.getSize(); ++i) {\\r\\n                if (this._ids\\r\\n                    .at(i)\\r\\n                    .getString()\\r\\n                    .isEqual(id)) {\\r\\n                    return this._ids.at(i);\\r\\n                }\\r\\n            }\\r\\n            return null;\\r\\n        };\\r\\n        return CubismIdManager;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismIdManager = CubismIdManager;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL2lkL2N1YmlzbWlkbWFuYWdlci50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvaWQvY3ViaXNtaWRtYW5hZ2VyLnRzPzZmOWUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGNzbXZlY3RvciB9IGZyb20gJy4uL3R5cGUvY3NtdmVjdG9yJztcbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjdWJpc21pZCB9IGZyb20gJy4vY3ViaXNtaWQnO1xuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGNzbXN0cmluZyB9IGZyb20gJy4uL3R5cGUvY3Ntc3RyaW5nJztcbmltcG9ydCBjc21TdHJpbmcgPSBjc21zdHJpbmcuY3NtU3RyaW5nO1xuaW1wb3J0IEN1YmlzbUlkID0gY3ViaXNtaWQuQ3ViaXNtSWQ7XG5pbXBvcnQgY3NtVmVjdG9yID0gY3NtdmVjdG9yLmNzbVZlY3RvcjtcblxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICAvKipcbiAgICogSUTlkI3jga7nrqHnkIZcbiAgICpcbiAgICogSUTlkI3jgpLnrqHnkIbjgZnjgovjgIJcbiAgICovXG4gIGV4cG9ydCBjbGFzcyBDdWJpc21JZE1hbmFnZXIge1xuICAgIC8qKlxuICAgICAqIOOCs+ODs+OCueODiOODqeOCr+OCv1xuICAgICAqL1xuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICAgIHRoaXMuX2lkcyA9IG5ldyBjc21WZWN0b3I8Q3ViaXNtSWQ+KCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44OH44K544OI44Op44Kv44K/55u45b2T44Gu5Yem55CGXG4gICAgICovXG4gICAgcHVibGljIHJlbGVhc2UoKTogdm9pZCB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX2lkcy5nZXRTaXplKCk7ICsraSkge1xuICAgICAgICB0aGlzLl9pZHMuc2V0KGksIHZvaWQgMCk7XG4gICAgICB9XG4gICAgICB0aGlzLl9pZHMgPSBudWxsO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIElE5ZCN44KS44Oq44K544OI44GL44KJ55m76YyyXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaWRzIElE5ZCN44Oq44K544OIXG4gICAgICogQHBhcmFtIGNvdW50IElE44Gu5YCL5pWwXG4gICAgICovXG4gICAgcHVibGljIHJlZ2lzdGVySWRzKGlkczogc3RyaW5nW10gfCBjc21TdHJpbmdbXSk6IHZvaWQge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdGhpcy5yZWdpc3RlcklkKGlkc1tpXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSUTlkI3jgpLnmbvpjLJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCBJROWQjVxuICAgICAqL1xuICAgIHB1YmxpYyByZWdpc3RlcklkKGlkOiBzdHJpbmcgfCBjc21TdHJpbmcpOiBDdWJpc21JZCB7XG4gICAgICBsZXQgcmVzdWx0OiBDdWJpc21JZCA9IG51bGw7XG5cbiAgICAgIGlmICgnc3RyaW5nJyA9PSB0eXBlb2YgaWQpIHtcbiAgICAgICAgaWYgKChyZXN1bHQgPSB0aGlzLmZpbmRJZChpZCkpICE9IG51bGwpIHtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzdWx0ID0gbmV3IEN1YmlzbUlkKGlkKTtcbiAgICAgICAgdGhpcy5faWRzLnB1c2hCYWNrKHJlc3VsdCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdGhpcy5yZWdpc3RlcklkKGlkLnMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIElE5ZCN44GL44KJSUTjgpLlj5blvpfjgZnjgotcbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCBJROWQjVxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRJZChpZDogY3NtU3RyaW5nIHwgc3RyaW5nKTogQ3ViaXNtSWQge1xuICAgICAgcmV0dXJuIHRoaXMucmVnaXN0ZXJJZChpZCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSUTlkI3jgYvjgolJROOBrueiuuiqjVxuICAgICAqXG4gICAgICogQHJldHVybiB0cnVlIOWtmOWcqOOBmeOCi1xuICAgICAqIEByZXR1cm4gZmFsc2Ug5a2Y5Zyo44GX44Gq44GEXG4gICAgICovXG4gICAgcHVibGljIGlzRXhpc3QoaWQ6IGNzbVN0cmluZyB8IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgICAgaWYgKCdzdHJpbmcnID09IHR5cGVvZiBpZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5maW5kSWQoaWQpICE9IG51bGw7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5pc0V4aXN0KGlkLnMpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIElE5ZCN44GL44KJSUTjgpLmpJzntKLjgZnjgovjgIJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCBJROWQjVxuICAgICAqIEByZXR1cm4g55m76Yyy44GV44KM44Gm44GE44KLSUTjgILjgarjgZHjgozjgbBOVUxM44CCXG4gICAgICovXG4gICAgcHJpdmF0ZSBmaW5kSWQoaWQ6IHN0cmluZyk6IEN1YmlzbUlkIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5faWRzLmdldFNpemUoKTsgKytpKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICB0aGlzLl9pZHNcbiAgICAgICAgICAgIC5hdChpKVxuICAgICAgICAgICAgLmdldFN0cmluZygpXG4gICAgICAgICAgICAuaXNFcXVhbChpZClcbiAgICAgICAgKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuX2lkcy5hdChpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBwcml2YXRlIF9pZHM6IGNzbVZlY3RvcjxDdWJpc21JZD47IC8vIOeZu+mMsuOBleOCjOOBpuOBhOOCi0lE44Gu44Oq44K544OIXG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFPQTtBQUNBO0FBR0E7QUFDQTtBQUVBO0FBQUE7QUFNQTtBQUlBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUdBO0FBQUE7QUFoR0E7QUFpR0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./Framework/src/id/cubismidmanager.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/live2dcubismframework.ts\":\n      /*!************************************************!*\\\n        !*** ./Framework/src/live2dcubismframework.ts ***!\n        \\************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismjson_1 = __webpack_require__(/*! ./utils/cubismjson */ \\\"./Framework/src/utils/cubismjson.ts\\\");\\r\\nvar cubismidmanager_1 = __webpack_require__(/*! ./id/cubismidmanager */ \\\"./Framework/src/id/cubismidmanager.ts\\\");\\r\\nvar cubismrenderer_1 = __webpack_require__(/*! ./rendering/cubismrenderer */ \\\"./Framework/src/rendering/cubismrenderer.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ./utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar Value = cubismjson_1.Live2DCubismFramework.Value;\\r\\nvar CubismIdManager = cubismidmanager_1.Live2DCubismFramework.CubismIdManager;\\r\\nvar CubismRenderer = cubismrenderer_1.Live2DCubismFramework.CubismRenderer;\\r\\nfunction strtod(s, endPtr) {\\r\\n    var index = 0;\\r\\n    for (var i = 1;; i++) {\\r\\n        var testC = s.slice(i - 1, i);\\r\\n        if (testC == 'e' || testC == '-' || testC == 'E') {\\r\\n            continue;\\r\\n        }\\r\\n        var test = s.substring(0, i);\\r\\n        var number = Number(test);\\r\\n        if (isNaN(number)) {\\r\\n            break;\\r\\n        }\\r\\n        index = i;\\r\\n    }\\r\\n    var d = parseFloat(s);\\r\\n    if (isNaN(d)) {\\r\\n        d = NaN;\\r\\n    }\\r\\n    endPtr[0] = s.slice(index);\\r\\n    return d;\\r\\n}\\r\\nexports.strtod = strtod;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var s_isStarted = false;\\r\\n    var s_isInitialized = false;\\r\\n    var s_option = null;\\r\\n    var s_cubismIdManager = null;\\r\\n    var Constant;\\r\\n    (function (Constant) {\\r\\n        Constant.vertexOffset = 0;\\r\\n        Constant.vertexStep = 2;\\r\\n    })(Constant = Live2DCubismFramework.Constant || (Live2DCubismFramework.Constant = {}));\\r\\n    function csmDelete(address) {\\r\\n        if (!address) {\\r\\n            return;\\r\\n        }\\r\\n        address = void 0;\\r\\n    }\\r\\n    Live2DCubismFramework.csmDelete = csmDelete;\\r\\n    var CubismFramework = (function () {\\r\\n        function CubismFramework() {\\r\\n        }\\r\\n        CubismFramework.startUp = function (option) {\\r\\n            if (option === void 0) { option = null; }\\r\\n            if (s_isStarted) {\\r\\n                cubismdebug_1.CubismLogInfo('CubismFramework.startUp() is already done.');\\r\\n                return s_isStarted;\\r\\n            }\\r\\n            s_option = option;\\r\\n            if (s_option != null) {\\r\\n                Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\\r\\n            }\\r\\n            s_isStarted = true;\\r\\n            if (s_isStarted) {\\r\\n                var version = Live2DCubismCore.Version.csmGetVersion();\\r\\n                var major = (version & 0xff000000) >> 24;\\r\\n                var minor = (version & 0x00ff0000) >> 16;\\r\\n                var patch = version & 0x0000ffff;\\r\\n                var versionNumber = version;\\r\\n                cubismdebug_1.CubismLogInfo(\\\"Live2D Cubism Core version: {0}.{1}.{2} ({3})\\\", ('00' + major).slice(-2), ('00' + minor).slice(-2), ('0000' + patch).slice(-4), versionNumber);\\r\\n            }\\r\\n            cubismdebug_1.CubismLogInfo('CubismFramework.startUp() is complete.');\\r\\n            return s_isStarted;\\r\\n        };\\r\\n        CubismFramework.cleanUp = function () {\\r\\n            s_isStarted = false;\\r\\n            s_isInitialized = false;\\r\\n            s_option = null;\\r\\n            s_cubismIdManager = null;\\r\\n        };\\r\\n        CubismFramework.initialize = function () {\\r\\n            cubismdebug_1.CSM_ASSERT(s_isStarted);\\r\\n            if (!s_isStarted) {\\r\\n                cubismdebug_1.CubismLogWarning('CubismFramework is not started.');\\r\\n                return;\\r\\n            }\\r\\n            if (s_isInitialized) {\\r\\n                cubismdebug_1.CubismLogWarning('CubismFramework.initialize() skipped, already initialized.');\\r\\n                return;\\r\\n            }\\r\\n            Value.staticInitializeNotForClientCall();\\r\\n            s_cubismIdManager = new CubismIdManager();\\r\\n            s_isInitialized = true;\\r\\n            cubismdebug_1.CubismLogInfo('CubismFramework.initialize() is complete.');\\r\\n        };\\r\\n        CubismFramework.dispose = function () {\\r\\n            cubismdebug_1.CSM_ASSERT(s_isStarted);\\r\\n            if (!s_isStarted) {\\r\\n                cubismdebug_1.CubismLogWarning('CubismFramework is not started.');\\r\\n                return;\\r\\n            }\\r\\n            if (!s_isInitialized) {\\r\\n                cubismdebug_1.CubismLogWarning('CubismFramework.dispose() skipped, not initialized.');\\r\\n                return;\\r\\n            }\\r\\n            Value.staticReleaseNotForClientCall();\\r\\n            s_cubismIdManager.release();\\r\\n            s_cubismIdManager = null;\\r\\n            CubismRenderer.staticRelease();\\r\\n            s_isInitialized = false;\\r\\n            cubismdebug_1.CubismLogInfo('CubismFramework.dispose() is complete.');\\r\\n        };\\r\\n        CubismFramework.isStarted = function () {\\r\\n            return s_isStarted;\\r\\n        };\\r\\n        CubismFramework.isInitialized = function () {\\r\\n            return s_isInitialized;\\r\\n        };\\r\\n        CubismFramework.coreLogFunction = function (message) {\\r\\n            if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\\r\\n                return;\\r\\n            }\\r\\n            Live2DCubismCore.Logging.csmGetLogFunction()(message);\\r\\n        };\\r\\n        CubismFramework.getLoggingLevel = function () {\\r\\n            if (s_option != null) {\\r\\n                return s_option.loggingLevel;\\r\\n            }\\r\\n            return LogLevel.LogLevel_Off;\\r\\n        };\\r\\n        CubismFramework.getIdManager = function () {\\r\\n            return s_cubismIdManager;\\r\\n        };\\r\\n        return CubismFramework;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismFramework = CubismFramework;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\nvar Option = (function () {\\r\\n    function Option() {\\r\\n    }\\r\\n    return Option;\\r\\n}());\\r\\nexports.Option = Option;\\r\\nvar LogLevel;\\r\\n(function (LogLevel) {\\r\\n    LogLevel[LogLevel[\\\"LogLevel_Verbose\\\"] = 0] = \\\"LogLevel_Verbose\\\";\\r\\n    LogLevel[LogLevel[\\\"LogLevel_Debug\\\"] = 1] = \\\"LogLevel_Debug\\\";\\r\\n    LogLevel[LogLevel[\\\"LogLevel_Info\\\"] = 2] = \\\"LogLevel_Info\\\";\\r\\n    LogLevel[LogLevel[\\\"LogLevel_Warning\\\"] = 3] = \\\"LogLevel_Warning\\\";\\r\\n    LogLevel[LogLevel[\\\"LogLevel_Error\\\"] = 4] = \\\"LogLevel_Error\\\";\\r\\n    LogLevel[LogLevel[\\\"LogLevel_Off\\\"] = 5] = \\\"LogLevel_Off\\\";\\r\\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL2xpdmUyZGN1YmlzbWZyYW1ld29yay50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvbGl2ZTJkY3ViaXNtZnJhbWV3b3JrLnRzP2M2NGUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbWpzb24gfSBmcm9tICcuL3V0aWxzL2N1YmlzbWpzb24nO1xuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbWlkbWFuYWdlciB9IGZyb20gJy4vaWQvY3ViaXNtaWRtYW5hZ2VyJztcbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjdWJpc21yZW5kZXJlciB9IGZyb20gJy4vcmVuZGVyaW5nL2N1YmlzbXJlbmRlcmVyJztcbmltcG9ydCB7XG4gIEN1YmlzbUxvZ0luZm8sXG4gIEN1YmlzbUxvZ1dhcm5pbmcsXG4gIENTTV9BU1NFUlRcbn0gZnJvbSAnLi91dGlscy9jdWJpc21kZWJ1Zyc7XG5pbXBvcnQgVmFsdWUgPSBjdWJpc21qc29uLlZhbHVlO1xuaW1wb3J0IEN1YmlzbUlkTWFuYWdlciA9IGN1YmlzbWlkbWFuYWdlci5DdWJpc21JZE1hbmFnZXI7XG5pbXBvcnQgQ3ViaXNtUmVuZGVyZXIgPSBjdWJpc21yZW5kZXJlci5DdWJpc21SZW5kZXJlcjtcblxuZXhwb3J0IGZ1bmN0aW9uIHN0cnRvZChzOiBzdHJpbmcsIGVuZFB0cjogc3RyaW5nW10pOiBudW1iZXIge1xuICBsZXQgaW5kZXggPSAwO1xuICBmb3IgKGxldCBpID0gMTsgOyBpKyspIHtcbiAgICBjb25zdCB0ZXN0Qzogc3RyaW5nID0gcy5zbGljZShpIC0gMSwgaSk7XG5cbiAgICAvLyDmjIfmlbDjg7vjg57jgqTjg4rjgrnjga7lj6/og73mgKfjgYzjgYLjgovjga7jgafjgrnjgq3jg4Pjg5fjgZnjgotcbiAgICBpZiAodGVzdEMgPT0gJ2UnIHx8IHRlc3RDID09ICctJyB8fCB0ZXN0QyA9PSAnRScpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH0gLy8g5paH5a2X5YiX44Gu56+E5Zuy44KS5bqD44GS44Gm44GE44GPXG5cbiAgICBjb25zdCB0ZXN0OiBzdHJpbmcgPSBzLnN1YnN0cmluZygwLCBpKTtcbiAgICBjb25zdCBudW1iZXIgPSBOdW1iZXIodGVzdCk7XG4gICAgaWYgKGlzTmFOKG51bWJlcikpIHtcbiAgICAgIC8vIOaVsOWApOOBqOOBl+OBpuiqjeitmOOBp+OBjeOBquOBj+OBquOBo+OBn+OBruOBp+e1guS6hlxuICAgICAgYnJlYWs7XG4gICAgfSAvLyDmnIDlvozjgavmlbDlgKTjgajjgZfjgabjgafjgY3jgZ9pbmRleOOCkuagvOe0jeOBl+OBpuOBiuOBj1xuXG4gICAgaW5kZXggPSBpO1xuICB9XG4gIGxldCBkID0gcGFyc2VGbG9hdChzKTsgLy8g44OR44O844K544GX44Gf5pWw5YCkXG5cbiAgaWYgKGlzTmFOKGQpKSB7XG4gICAgLy8g5pWw5YCk44Go44GX44Gm6KqN6K2Y44Gn44GN44Gq44GP44Gq44Gj44Gf44Gu44Gn57WC5LqGXG4gICAgZCA9IE5hTjtcbiAgfVxuXG4gIGVuZFB0clswXSA9IHMuc2xpY2UoaW5kZXgpOyAvLyDlvozntprjga7mloflrZfliJdcbiAgcmV0dXJuIGQ7XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIHtcbiAgLy8g44OV44Kh44Kk44Or44K544Kz44O844OX44Gu5aSJ5pWw44KS5Yid5pyf5YyWXG5cbiAgbGV0IHNfaXNTdGFydGVkID0gZmFsc2U7XG4gIGxldCBzX2lzSW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgbGV0IHNfb3B0aW9uOiBPcHRpb24gPSBudWxsO1xuICBsZXQgc19jdWJpc21JZE1hbmFnZXI6IEN1YmlzbUlkTWFuYWdlciA9IG51bGw7XG5cbiAgLyoqXG4gICAqIEZyYW1ld29ya+WGheOBp+S9v+OBhuWumuaVsOOBruWuo+iogFxuICAgKi9cbiAgZXhwb3J0IG5hbWVzcGFjZSBDb25zdGFudCB7XG4gICAgZXhwb3J0IGNvbnN0IHZlcnRleE9mZnNldCA9IDA7IC8vIOODoeODg+OCt+ODpemggueCueOBruOCquODleOCu+ODg+ODiOWApFxuICAgIGV4cG9ydCBjb25zdCB2ZXJ0ZXhTdGVwID0gMjsgLy8g44Oh44OD44K344Ol6aCC54K544Gu44K544OG44OD44OX5YCkXG4gIH1cblxuICBleHBvcnQgZnVuY3Rpb24gY3NtRGVsZXRlPFQ+KGFkZHJlc3M6IFQpOiB2b2lkIHtcbiAgICBpZiAoIWFkZHJlc3MpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBhZGRyZXNzID0gdm9pZCAwO1xuICB9XG5cbiAgLyoqXG4gICAqIExpdmUyRCBDdWJpc20gU0RLIE9yaWdpbmFsIFdvcmtmbG93IFNES+OBruOCqOODs+ODiOODquODneOCpOODs+ODiFxuICAgKiDliKnnlKjplovlp4vmmYLjga9DdWJpc21GcmFtZXdvcmsuaW5pdGlhbGl6ZSgp44KS5ZG844Gz44CBQ3ViaXNtRnJhbWV3b3JrLmRpc3Bvc2UoKeOBp+e1guS6huOBmeOCi+OAglxuICAgKi9cbiAgZXhwb3J0IGNsYXNzIEN1YmlzbUZyYW1ld29yayB7XG4gICAgLyoqXG4gICAgICogQ3ViaXNtIEZyYW1ld29ya+OBrkFQSeOCkuS9v+eUqOWPr+iDveOBq+OBmeOCi+OAglxuICAgICAqICBBUEnjgpLlrp/ooYzjgZnjgovliY3jgavlv4XjgZrjgZPjga7plqLmlbDjgpLlrp/ooYzjgZnjgovjgZPjgajjgIJcbiAgICAgKiAg5LiA5bqm5rqW5YKZ44GM5a6M5LqG44GX44Gm5Lul6ZmN44Gv44CB5YaN44Gz5a6f6KGM44GX44Gm44KC5YaF6YOo5Yem55CG44GM44K544Kt44OD44OX44GV44KM44G+44GZ44CCXG4gICAgICpcbiAgICAgKiBAcGFyYW0gICAgb3B0aW9uICAgICAgT3B0aW9u44Kv44Op44K544Gu44Kk44Oz44K544K/44Oz44K5XG4gICAgICpcbiAgICAgKiBAcmV0dXJuICAg5rqW5YKZ5Yem55CG44GM5a6M5LqG44GX44Gf44KJdHJ1ZeOBjOi/lOOCiuOBvuOBmeOAglxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgc3RhcnRVcChvcHRpb246IE9wdGlvbiA9IG51bGwpOiBib29sZWFuIHtcbiAgICAgIGlmIChzX2lzU3RhcnRlZCkge1xuICAgICAgICBDdWJpc21Mb2dJbmZvKCdDdWJpc21GcmFtZXdvcmsuc3RhcnRVcCgpIGlzIGFscmVhZHkgZG9uZS4nKTtcbiAgICAgICAgcmV0dXJuIHNfaXNTdGFydGVkO1xuICAgICAgfVxuXG4gICAgICBzX29wdGlvbiA9IG9wdGlvbjtcblxuICAgICAgaWYgKHNfb3B0aW9uICE9IG51bGwpIHtcbiAgICAgICAgTGl2ZTJEQ3ViaXNtQ29yZS5Mb2dnaW5nLmNzbVNldExvZ0Z1bmN0aW9uKHNfb3B0aW9uLmxvZ0Z1bmN0aW9uKTtcbiAgICAgIH1cblxuICAgICAgc19pc1N0YXJ0ZWQgPSB0cnVlO1xuXG4gICAgICAvLyBMaXZlMkQgQ3ViaXNtIENvcmXjg5Djg7zjgrjjg6fjg7Pmg4XloLHjgpLooajnpLpcbiAgICAgIGlmIChzX2lzU3RhcnRlZCkge1xuICAgICAgICBjb25zdCB2ZXJzaW9uOiBudW1iZXIgPSBMaXZlMkRDdWJpc21Db3JlLlZlcnNpb24uY3NtR2V0VmVyc2lvbigpO1xuICAgICAgICBjb25zdCBtYWpvcjogbnVtYmVyID0gKHZlcnNpb24gJiAweGZmMDAwMDAwKSA+PiAyNDtcbiAgICAgICAgY29uc3QgbWlub3I6IG51bWJlciA9ICh2ZXJzaW9uICYgMHgwMGZmMDAwMCkgPj4gMTY7XG4gICAgICAgIGNvbnN0IHBhdGNoOiBudW1iZXIgPSB2ZXJzaW9uICYgMHgwMDAwZmZmZjtcbiAgICAgICAgY29uc3QgdmVyc2lvbk51bWJlcjogbnVtYmVyID0gdmVyc2lvbjtcblxuICAgICAgICBDdWJpc21Mb2dJbmZvKFxuICAgICAgICAgIGBMaXZlMkQgQ3ViaXNtIENvcmUgdmVyc2lvbjogezB9LnsxfS57Mn0gKHszfSlgLFxuICAgICAgICAgICgnMDAnICsgbWFqb3IpLnNsaWNlKC0yKSxcbiAgICAgICAgICAoJzAwJyArIG1pbm9yKS5zbGljZSgtMiksXG4gICAgICAgICAgKCcwMDAwJyArIHBhdGNoKS5zbGljZSgtNCksXG4gICAgICAgICAgdmVyc2lvbk51bWJlclxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICBDdWJpc21Mb2dJbmZvKCdDdWJpc21GcmFtZXdvcmsuc3RhcnRVcCgpIGlzIGNvbXBsZXRlLicpO1xuXG4gICAgICByZXR1cm4gc19pc1N0YXJ0ZWQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3RhcnRVcCgp44Gn5Yid5pyf5YyW44GX44GfQ3ViaXNtRnJhbWV3b3Jr44Gu5ZCE44OR44Op44Oh44O844K/44KS44Kv44Oq44Ki44GX44G+44GZ44CCXG4gICAgICogRGlzcG9zZSgp44GX44GfQ3ViaXNtRnJhbWV3b3Jr44KS5YaN5Yip55So44GZ44KL6Zqb44Gr5Yip55So44GX44Gm44GP44Gg44GV44GE44CCXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBjbGVhblVwKCk6IHZvaWQge1xuICAgICAgc19pc1N0YXJ0ZWQgPSBmYWxzZTtcbiAgICAgIHNfaXNJbml0aWFsaXplZCA9IGZhbHNlO1xuICAgICAgc19vcHRpb24gPSBudWxsO1xuICAgICAgc19jdWJpc21JZE1hbmFnZXIgPSBudWxsO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqICDlsIZDdWJpc20gRnJhbWV3b3Jr5YaF55qE6LWE5rqQ5Yid5aeL5YyW77yM5L2/5qih5Z6L5aSE5LqO5Y+v5pi+56S654q25oCB44CCXG4gICAgICogIOimgeWGjeasoUluaXRpYWxpemXvvIjvvInvvIzlv4XpobvlhYjmiafooYxEaXNwb3Nl77yI77yJ44CCXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBpbml0aWFsaXplKCk6IHZvaWQge1xuICAgICAgQ1NNX0FTU0VSVChzX2lzU3RhcnRlZCk7XG4gICAgICBpZiAoIXNfaXNTdGFydGVkKSB7XG4gICAgICAgIEN1YmlzbUxvZ1dhcm5pbmcoJ0N1YmlzbUZyYW1ld29yayBpcyBub3Qgc3RhcnRlZC4nKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyAtLS0gc19pc0luaXRpYWxpemVk44Gr44KI44KL6YCj57aa5Yid5pyf5YyW44Ks44O844OJIC0tLVxuICAgICAgLy8g6YCj57aa44GX44Gm44Oq44K944O844K556K65L+d44GM6KGM44KP44KM44Gq44GE44KI44GG44Gr44GZ44KL44CCXG4gICAgICAvLyDlho3luqZJbml0aWFsaXplKCnjgZnjgovjgavjga/lhYjjgatEaXNwb3NlKCnjgpLlrp/ooYzjgZnjgovlv4XopoHjgYzjgYLjgovjgIJcbiAgICAgIGlmIChzX2lzSW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgQ3ViaXNtTG9nV2FybmluZyhcbiAgICAgICAgICAnQ3ViaXNtRnJhbWV3b3JrLmluaXRpYWxpemUoKSBza2lwcGVkLCBhbHJlYWR5IGluaXRpYWxpemVkLidcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLy0tLS0gc3RhdGljIOWIneacn+WMliAtLS0tXG4gICAgICBWYWx1ZS5zdGF0aWNJbml0aWFsaXplTm90Rm9yQ2xpZW50Q2FsbCgpO1xuXG4gICAgICBzX2N1YmlzbUlkTWFuYWdlciA9IG5ldyBDdWJpc21JZE1hbmFnZXIoKTtcblxuICAgICAgc19pc0luaXRpYWxpemVkID0gdHJ1ZTtcblxuICAgICAgQ3ViaXNtTG9nSW5mbygnQ3ViaXNtRnJhbWV3b3JrLmluaXRpYWxpemUoKSBpcyBjb21wbGV0ZS4nKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDdWJpc20gRnJhbWV3b3Jr5YaF44Gu5YWo44Gm44Gu44Oq44K944O844K544KS6Kej5pS+44GX44G+44GZ44CCXG4gICAgICogICAgICDjgZ/jgaDjgZfjgIHlpJbpg6jjgafnorrkv53jgZXjgozjgZ/jg6rjgr3jg7zjgrnjgavjgaTjgYTjgabjga/op6PmlL7jgZfjgb7jgZvjgpPjgIJcbiAgICAgKiAgICAgIOWklumDqOOBp+mBqeWIh+OBq+egtOajhOOBmeOCi+W/heimgeOBjOOBguOCiuOBvuOBmeOAglxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgZGlzcG9zZSgpOiB2b2lkIHtcbiAgICAgIENTTV9BU1NFUlQoc19pc1N0YXJ0ZWQpO1xuICAgICAgaWYgKCFzX2lzU3RhcnRlZCkge1xuICAgICAgICBDdWJpc21Mb2dXYXJuaW5nKCdDdWJpc21GcmFtZXdvcmsgaXMgbm90IHN0YXJ0ZWQuJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gLS0tIHNfaXNJbml0aWFsaXplZOOBq+OCiOOCi+acquWIneacn+WMluino+aUvuOCrOODvOODiSAtLS1cbiAgICAgIC8vIGRpc3Bvc2UoKeOBmeOCi+OBq+OBr+WFiOOBq2luaXRpYWxpemUoKeOCkuWun+ihjOOBmeOCi+W/heimgeOBjOOBguOCi+OAglxuICAgICAgaWYgKCFzX2lzSW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgLy8gZmFsc2UuLi7jg6rjgr3jg7zjgrnmnKrnorrkv53jga7loLTlkIhcbiAgICAgICAgQ3ViaXNtTG9nV2FybmluZygnQ3ViaXNtRnJhbWV3b3JrLmRpc3Bvc2UoKSBza2lwcGVkLCBub3QgaW5pdGlhbGl6ZWQuJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgVmFsdWUuc3RhdGljUmVsZWFzZU5vdEZvckNsaWVudENhbGwoKTtcblxuICAgICAgc19jdWJpc21JZE1hbmFnZXIucmVsZWFzZSgpO1xuICAgICAgc19jdWJpc21JZE1hbmFnZXIgPSBudWxsO1xuXG4gICAgICAvLyDjg6zjg7Pjg4Djg6njga7pnZnnmoTjg6rjgr3jg7zjgrnvvIjjgrfjgqfjg7zjg4Djg5fjg63jgrDjg6njg6Dku5bvvInjgpLop6PmlL7jgZnjgotcbiAgICAgIEN1YmlzbVJlbmRlcmVyLnN0YXRpY1JlbGVhc2UoKTtcblxuICAgICAgc19pc0luaXRpYWxpemVkID0gZmFsc2U7XG5cbiAgICAgIEN1YmlzbUxvZ0luZm8oJ0N1YmlzbUZyYW1ld29yay5kaXNwb3NlKCkgaXMgY29tcGxldGUuJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3ViaXNtIEZyYW1ld29ya+OBrkFQSeOCkuS9v+eUqOOBmeOCi+a6luWCmeOBjOWujOS6huOBl+OBn+OBi+OBqeOBhuOBi1xuICAgICAqIEByZXR1cm4gQVBJ44KS5L2/55So44GZ44KL5rqW5YKZ44GM5a6M5LqG44GX44Gm44GE44KM44GwdHJ1ZeOBjOi/lOOCiuOBvuOBmeOAglxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgaXNTdGFydGVkKCk6IGJvb2xlYW4ge1xuICAgICAgcmV0dXJuIHNfaXNTdGFydGVkO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEN1YmlzbSBGcmFtZXdvcmvjga7jg6rjgr3jg7zjgrnliJ3mnJ/ljJbjgYzjgZnjgafjgavooYzjgo/jgozjgabjgYTjgovjgYvjganjgYbjgYtcbiAgICAgKiBAcmV0dXJuIOODquOCveODvOOCueeiuuS/neOBjOWujOS6huOBl+OBpuOBhOOCjOOBsHRydWXjgYzov5Tjgorjgb7jgZlcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGlzSW5pdGlhbGl6ZWQoKTogYm9vbGVhbiB7XG4gICAgICByZXR1cm4gc19pc0luaXRpYWxpemVkO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENvcmUgQVBJ44Gr44OQ44Kk44Oz44OJ44GX44Gf44Ot44Kw6Zai5pWw44KS5a6f6KGM44GZ44KLXG4gICAgICpcbiAgICAgKiBAcHJhcmFtIG1lc3NhZ2Ug44Ot44Kw44Oh44OD44K744O844K4XG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBjb3JlTG9nRnVuY3Rpb24obWVzc2FnZTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAvLyBSZXR1cm4gaWYgbG9nZ2luZyBub3QgcG9zc2libGUuXG4gICAgICBpZiAoIUxpdmUyREN1YmlzbUNvcmUuTG9nZ2luZy5jc21HZXRMb2dGdW5jdGlvbigpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgTGl2ZTJEQ3ViaXNtQ29yZS5Mb2dnaW5nLmNzbUdldExvZ0Z1bmN0aW9uKCkobWVzc2FnZSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog54++5Zyo44Gu44Ot44Kw5Ye65Yqb44Os44OZ44Or6Kit5a6a44Gu5YCk44KS6L+U44GZ44CCXG4gICAgICpcbiAgICAgKiBAcmV0dXJuICDnj77lnKjjga7jg63jgrDlh7rlipvjg6zjg5njg6voqK3lrprjga7lgKRcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGdldExvZ2dpbmdMZXZlbCgpOiBMb2dMZXZlbCB7XG4gICAgICBpZiAoc19vcHRpb24gIT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gc19vcHRpb24ubG9nZ2luZ0xldmVsO1xuICAgICAgfVxuICAgICAgcmV0dXJuIExvZ0xldmVsLkxvZ0xldmVsX09mZjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBJROODnuODjeODvOOCuOODo+OBruOCpOODs+OCueOCv+ODs+OCueOCkuWPluW+l+OBmeOCi1xuICAgICAqIEByZXR1cm4gQ3ViaXNtTWFuYWdlcuOCr+ODqeOCueOBruOCpOODs+OCueOCv+ODs+OCuVxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgZ2V0SWRNYW5hZ2VyKCk6IEN1YmlzbUlkTWFuYWdlciB7XG4gICAgICByZXR1cm4gc19jdWJpc21JZE1hbmFnZXI7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6Z2Z55qE44Kv44Op44K544Go44GX44Gm5L2/55So44GZ44KLXG4gICAgICog44Kk44Oz44K544K/44Oz44K55YyW44GV44Gb44Gq44GEXG4gICAgICovXG4gICAgcHJpdmF0ZSBjb25zdHJ1Y3RvcigpIHt9XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIE9wdGlvbiB7XG4gIGxvZ0Z1bmN0aW9uOiBMaXZlMkRDdWJpc21Db3JlLmNzbUxvZ0Z1bmN0aW9uOyAvLyDjg63jgrDlh7rlipvjga7plqLmlbDjgqrjg5bjgrjjgqfjgq/jg4hcbiAgbG9nZ2luZ0xldmVsOiBMb2dMZXZlbDsgLy8g44Ot44Kw5Ye65Yqb44Os44OZ44Or44Gu6Kit5a6aXG59XG5cbi8qKlxuICog44Ot44Kw5Ye65Yqb44Gu44Os44OZ44OrXG4gKi9cbmV4cG9ydCBlbnVtIExvZ0xldmVsIHtcbiAgTG9nTGV2ZWxfVmVyYm9zZSA9IDAsIC8vIOips+e0sOODreOCsFxuICBMb2dMZXZlbF9EZWJ1ZywgLy8g44OH44OQ44OD44Kw44Ot44KwXG4gIExvZ0xldmVsX0luZm8sIC8vIEluZm/jg63jgrBcbiAgTG9nTGV2ZWxfV2FybmluZywgLy8g6K2m5ZGK44Ot44KwXG4gIExvZ0xldmVsX0Vycm9yLCAvLyDjgqjjg6njg7zjg63jgrBcbiAgTG9nTGV2ZWxfT2ZmIC8vIOODreOCsOWHuuWKm+eEoeWKuVxufVxuIl0sIm1hcHBpbmdzIjoiOztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBNUJBO0FBOEJBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFOQTtBQVlBO0FBK0tBO0FBQUE7QUFyS0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBT0E7QUFFQTtBQUVBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBR0E7QUFDQTtBQUdBO0FBRUE7QUFFQTtBQUVBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUdBO0FBRUE7QUFFQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBT0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBT0E7QUFBQTtBQWhMQTtBQWlMQTtBQUVBO0FBQUE7QUFHQTtBQUFBO0FBQUE7QUFIQTtBQVFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./Framework/src/live2dcubismframework.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/math/cubismmath.ts\":\n      /*!******************************************!*\\\n        !*** ./Framework/src/math/cubismmath.ts ***!\n        \\******************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismvector2_1 = __webpack_require__(/*! ./cubismvector2 */ \\\"./Framework/src/math/cubismvector2.ts\\\");\\r\\nvar CubismVector2 = cubismvector2_1.Live2DCubismFramework.CubismVector2;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismMath = (function () {\\r\\n        function CubismMath() {\\r\\n        }\\r\\n        CubismMath.range = function (value, min, max) {\\r\\n            if (value < min) {\\r\\n                value = min;\\r\\n            }\\r\\n            else if (value > max) {\\r\\n                value = max;\\r\\n            }\\r\\n            return value;\\r\\n        };\\r\\n        CubismMath.sin = function (x) {\\r\\n            return Math.sin(x);\\r\\n        };\\r\\n        CubismMath.cos = function (x) {\\r\\n            return Math.cos(x);\\r\\n        };\\r\\n        CubismMath.abs = function (x) {\\r\\n            return Math.abs(x);\\r\\n        };\\r\\n        CubismMath.sqrt = function (x) {\\r\\n            return Math.sqrt(x);\\r\\n        };\\r\\n        CubismMath.getEasingSine = function (value) {\\r\\n            if (value < 0.0) {\\r\\n                return 0.0;\\r\\n            }\\r\\n            else if (value > 1.0) {\\r\\n                return 1.0;\\r\\n            }\\r\\n            return 0.5 - 0.5 * this.cos(value * Math.PI);\\r\\n        };\\r\\n        CubismMath.max = function (left, right) {\\r\\n            return left > right ? left : right;\\r\\n        };\\r\\n        CubismMath.min = function (left, right) {\\r\\n            return left > right ? right : left;\\r\\n        };\\r\\n        CubismMath.degreesToRadian = function (degrees) {\\r\\n            return (degrees / 180.0) * Math.PI;\\r\\n        };\\r\\n        CubismMath.radianToDegrees = function (radian) {\\r\\n            return (radian * 180.0) / Math.PI;\\r\\n        };\\r\\n        CubismMath.directionToRadian = function (from, to) {\\r\\n            var q1 = Math.atan2(to.y, to.x);\\r\\n            var q2 = Math.atan2(from.y, from.x);\\r\\n            var ret = q1 - q2;\\r\\n            while (ret < -Math.PI) {\\r\\n                ret += Math.PI * 2.0;\\r\\n            }\\r\\n            while (ret > Math.PI) {\\r\\n                ret -= Math.PI * 2.0;\\r\\n            }\\r\\n            return ret;\\r\\n        };\\r\\n        CubismMath.directionToDegrees = function (from, to) {\\r\\n            var radian = this.directionToRadian(from, to);\\r\\n            var degree = this.radianToDegrees(radian);\\r\\n            if (to.x - from.x > 0.0) {\\r\\n                degree = -degree;\\r\\n            }\\r\\n            return degree;\\r\\n        };\\r\\n        CubismMath.radianToDirection = function (totalAngle) {\\r\\n            var ret = new CubismVector2();\\r\\n            ret.x = this.sin(totalAngle);\\r\\n            ret.y = this.cos(totalAngle);\\r\\n            return ret;\\r\\n        };\\r\\n        return CubismMath;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMath = CubismMath;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21hdGgvY3ViaXNtbWF0aC50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvbWF0aC9jdWJpc21tYXRoLnRzP2Q0ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbXZlY3RvcjIgfSBmcm9tICcuL2N1YmlzbXZlY3RvcjInO1xuaW1wb3J0IEN1YmlzbVZlY3RvcjIgPSBjdWJpc212ZWN0b3IyLkN1YmlzbVZlY3RvcjI7XG5cbmV4cG9ydCBuYW1lc3BhY2UgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIHtcbiAgLyoqXG4gICAqIOaVsOWApOioiOeul+OBquOBqeOBq+S9v+eUqOOBmeOCi+ODpuODvOODhuOCo+ODquODhuOCo+OCr+ODqeOCuVxuICAgKi9cbiAgZXhwb3J0IGNsYXNzIEN1YmlzbU1hdGgge1xuICAgIC8qKlxuICAgICAqIOesrOS4gOW8leaVsOOBruWApOOCkuacgOWwj+WApOOBqOacgOWkp+WApOOBruevhOWbsuOBq+WPjuOCgeOBn+WApOOCkui/lOOBmVxuICAgICAqXG4gICAgICogQHBhcmFtIHZhbHVlIOWPjuOCgeOCieOCjOOCi+WApFxuICAgICAqIEBwYXJhbSBtaW4gICDnr4Tlm7Ljga7mnIDlsI/lgKRcbiAgICAgKiBAcGFyYW0gbWF4ICAg56+E5Zuy44Gu5pyA5aSn5YCkXG4gICAgICogQHJldHVybiDmnIDlsI/lgKTjgajmnIDlpKflgKTjga7nr4Tlm7Ljgavlj47jgoHjgZ/lgKRcbiAgICAgKi9cbiAgICBzdGF0aWMgcmFuZ2UodmFsdWU6IG51bWJlciwgbWluOiBudW1iZXIsIG1heDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgIGlmICh2YWx1ZSA8IG1pbikge1xuICAgICAgICB2YWx1ZSA9IG1pbjtcbiAgICAgIH0gZWxzZSBpZiAodmFsdWUgPiBtYXgpIHtcbiAgICAgICAgdmFsdWUgPSBtYXg7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjgrXjgqTjg7PplqLmlbDjga7lgKTjgpLmsYLjgoHjgotcbiAgICAgKlxuICAgICAqIEBwYXJhbSB4IOinkuW6puWApO+8iOODqeOCuOOCouODs++8iVxuICAgICAqIEByZXR1cm4g44K144Kk44Oz6Zai5pWwc2luKHgp44Gu5YCkXG4gICAgICovXG4gICAgc3RhdGljIHNpbih4OiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIE1hdGguc2luKHgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOOCs+OCteOCpOODs+mWouaVsOOBruWApOOCkuaxguOCgeOCi1xuICAgICAqXG4gICAgICogQHBhcmFtIHgg6KeS5bqm5YCkKOODqeOCuOOCouODsylcbiAgICAgKiBAcmV0dXJuIOOCs+OCteOCpOODs+mWouaVsGNvcyh4KeOBruWApFxuICAgICAqL1xuICAgIHN0YXRpYyBjb3MoeDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiBNYXRoLmNvcyh4KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlgKTjga7ntbblr77lgKTjgpLmsYLjgoHjgotcbiAgICAgKlxuICAgICAqIEBwYXJhbSB4IOe1tuWvvuWApOOCkuaxguOCgeOCi+WApFxuICAgICAqIEByZXR1cm4g5YCk44Gu57W25a++5YCkXG4gICAgICovXG4gICAgc3RhdGljIGFicyh4OiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIE1hdGguYWJzKHgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOW5s+aWueaguSjjg6vjg7zjg4gp44KS5rGC44KB44KLXG4gICAgICogQHBhcmFtIHggLT4g5bmz5pa55qC544KS5rGC44KB44KL5YCkXG4gICAgICogQHJldHVybiDlgKTjga7lubPmlrnmoLlcbiAgICAgKi9cbiAgICBzdGF0aWMgc3FydCh4OiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIE1hdGguc3FydCh4KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjgqTjg7zjgrjjg7PjgrDlh6bnkIbjgZXjgozjgZ/jgrXjgqTjg7PjgpLmsYLjgoHjgotcbiAgICAgKiDjg5Xjgqfjg7zjg4njgqTjg7Pjg7vjgqLjgqbjg4jmmYLjga7jgqTjg7zjgrjjg7PjgrDjgavliKnnlKjjgafjgY3jgotcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSDjgqTjg7zjgrjjg7PjgrDjgpLooYzjgYblgKRcbiAgICAgKiBAcmV0dXJuIOOCpOODvOOCuOODs+OCsOWHpueQhuOBleOCjOOBn+OCteOCpOODs+WApFxuICAgICAqL1xuICAgIHN0YXRpYyBnZXRFYXNpbmdTaW5lKHZhbHVlOiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgaWYgKHZhbHVlIDwgMC4wKSB7XG4gICAgICAgIHJldHVybiAwLjA7XG4gICAgICB9IGVsc2UgaWYgKHZhbHVlID4gMS4wKSB7XG4gICAgICAgIHJldHVybiAxLjA7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAwLjUgLSAwLjUgKiB0aGlzLmNvcyh2YWx1ZSAqIE1hdGguUEkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOWkp+OBjeOBhOaWueOBruWApOOCkui/lOOBmVxuICAgICAqXG4gICAgICogQHBhcmFtIGxlZnQg5bem6L6644Gu5YCkXG4gICAgICogQHBhcmFtIHJpZ2h0IOWPs+i+uuOBruWApFxuICAgICAqIEByZXR1cm4g5aSn44GN44GE5pa544Gu5YCkXG4gICAgICovXG4gICAgc3RhdGljIG1heChsZWZ0OiBudW1iZXIsIHJpZ2h0OiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIGxlZnQgPiByaWdodCA/IGxlZnQgOiByaWdodDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlsI/jgZXjgYTmlrnjga7lgKTjgpLov5TjgZlcbiAgICAgKlxuICAgICAqIEBwYXJhbSBsZWZ0ICDlt6bovrrjga7lgKRcbiAgICAgKiBAcGFyYW0gcmlnaHQg5Y+z6L6644Gu5YCkXG4gICAgICogQHJldHVybiDlsI/jgZXjgYTmlrnjga7lgKRcbiAgICAgKi9cbiAgICBzdGF0aWMgbWluKGxlZnQ6IG51bWJlciwgcmlnaHQ6IG51bWJlcik6IG51bWJlciB7XG4gICAgICByZXR1cm4gbGVmdCA+IHJpZ2h0ID8gcmlnaHQgOiBsZWZ0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOinkuW6puWApOOCkuODqeOCuOOCouODs+WApOOBq+WkieaPm+OBmeOCi1xuICAgICAqXG4gICAgICogQHBhcmFtIGRlZ3JlZXMgICDop5LluqblgKRcbiAgICAgKiBAcmV0dXJuIOinkuW6puWApOOBi+OCieWkieaPm+OBl+OBn+ODqeOCuOOCouODs+WApFxuICAgICAqL1xuICAgIHN0YXRpYyBkZWdyZWVzVG9SYWRpYW4oZGVncmVlczogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiAoZGVncmVlcyAvIDE4MC4wKSAqIE1hdGguUEk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Op44K444Ki44Oz5YCk44KS6KeS5bqm5YCk44Gr5aSJ5o+b44GZ44KLXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcmFkaWFuICAgIOODqeOCuOOCouODs+WApFxuICAgICAqIEByZXR1cm4g44Op44K444Ki44Oz5YCk44GL44KJ5aSJ5o+b44GX44Gf6KeS5bqm5YCkXG4gICAgICovXG4gICAgc3RhdGljIHJhZGlhblRvRGVncmVlcyhyYWRpYW46IG51bWJlcik6IG51bWJlciB7XG4gICAgICByZXR1cm4gKHJhZGlhbiAqIDE4MC4wKSAvIE1hdGguUEk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog77yS44Gk44Gu44OZ44Kv44OI44Or44GL44KJ44Op44K444Ki44Oz5YCk44KS5rGC44KB44KLXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZnJvbSAg5aeL54K544OZ44Kv44OI44OrXG4gICAgICogQHBhcmFtIHRvICAgIOe1gueCueODmeOCr+ODiOODq1xuICAgICAqIEByZXR1cm4g44Op44K444Ki44Oz5YCk44GL44KJ5rGC44KB44Gf5pa55ZCR44OZ44Kv44OI44OrXG4gICAgICovXG4gICAgc3RhdGljIGRpcmVjdGlvblRvUmFkaWFuKGZyb206IEN1YmlzbVZlY3RvcjIsIHRvOiBDdWJpc21WZWN0b3IyKTogbnVtYmVyIHtcbiAgICAgIGNvbnN0IHExOiBudW1iZXIgPSBNYXRoLmF0YW4yKHRvLnksIHRvLngpO1xuICAgICAgY29uc3QgcTI6IG51bWJlciA9IE1hdGguYXRhbjIoZnJvbS55LCBmcm9tLngpO1xuXG4gICAgICBsZXQgcmV0OiBudW1iZXIgPSBxMSAtIHEyO1xuXG4gICAgICB3aGlsZSAocmV0IDwgLU1hdGguUEkpIHtcbiAgICAgICAgcmV0ICs9IE1hdGguUEkgKiAyLjA7XG4gICAgICB9XG5cbiAgICAgIHdoaWxlIChyZXQgPiBNYXRoLlBJKSB7XG4gICAgICAgIHJldCAtPSBNYXRoLlBJICogMi4wO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmV0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIO+8kuOBpOOBruODmeOCr+ODiOODq+OBi+OCieinkuW6puWApOOCkuaxguOCgeOCi1xuICAgICAqXG4gICAgICogQHBhcmFtIGZyb20gIOWni+eCueODmeOCr+ODiOODq1xuICAgICAqIEBwYXJhbSB0byAgICDntYLngrnjg5njgq/jg4jjg6tcbiAgICAgKiBAcmV0dXJuIOinkuW6puWApOOBi+OCieaxguOCgeOBn+aWueWQkeODmeOCr+ODiOODq1xuICAgICAqL1xuICAgIHN0YXRpYyBkaXJlY3Rpb25Ub0RlZ3JlZXMoZnJvbTogQ3ViaXNtVmVjdG9yMiwgdG86IEN1YmlzbVZlY3RvcjIpOiBudW1iZXIge1xuICAgICAgY29uc3QgcmFkaWFuOiBudW1iZXIgPSB0aGlzLmRpcmVjdGlvblRvUmFkaWFuKGZyb20sIHRvKTtcbiAgICAgIGxldCBkZWdyZWU6IG51bWJlciA9IHRoaXMucmFkaWFuVG9EZWdyZWVzKHJhZGlhbik7XG5cbiAgICAgIGlmICh0by54IC0gZnJvbS54ID4gMC4wKSB7XG4gICAgICAgIGRlZ3JlZSA9IC1kZWdyZWU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBkZWdyZWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Op44K444Ki44Oz5YCk44KS5pa55ZCR44OZ44Kv44OI44Or44Gr5aSJ5o+b44GZ44KL44CCXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdG90YWxBbmdsZSAgICDjg6njgrjjgqLjg7PlgKRcbiAgICAgKiBAcmV0dXJuIOODqeOCuOOCouODs+WApOOBi+OCieWkieaPm+OBl+OBn+aWueWQkeODmeOCr+ODiOODq1xuICAgICAqL1xuXG4gICAgc3RhdGljIHJhZGlhblRvRGlyZWN0aW9uKHRvdGFsQW5nbGU6IG51bWJlcik6IEN1YmlzbVZlY3RvcjIge1xuICAgICAgY29uc3QgcmV0OiBDdWJpc21WZWN0b3IyID0gbmV3IEN1YmlzbVZlY3RvcjIoKTtcblxuICAgICAgcmV0LnggPSB0aGlzLnNpbih0b3RhbEFuZ2xlKTtcbiAgICAgIHJldC55ID0gdGhpcy5jb3ModG90YWxBbmdsZSk7XG5cbiAgICAgIHJldHVybiByZXQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAgICovXG4gICAgcHJpdmF0ZSBjb25zdHJ1Y3RvcigpIHt9XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFPQTtBQUNBO0FBRUE7QUFBQTtBQUlBO0FBa0xBO0FBQUE7QUF6S0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQVNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQU1BO0FBQUE7QUFuTEE7QUFvTEE7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./Framework/src/math/cubismmath.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/math/cubismmatrix44.ts\":\n      /*!**********************************************!*\\\n        !*** ./Framework/src/math/cubismmatrix44.ts ***!\n        \\**********************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismMatrix44 = (function () {\\r\\n        function CubismMatrix44() {\\r\\n            this._tr = new Float32Array(16);\\r\\n            this.loadIdentity();\\r\\n        }\\r\\n        CubismMatrix44.multiply = function (a, b, dst) {\\r\\n            var c = new Float32Array([\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0\\r\\n            ]);\\r\\n            var n = 4;\\r\\n            for (var i = 0; i < n; ++i) {\\r\\n                for (var j = 0; j < n; ++j) {\\r\\n                    for (var k = 0; k < n; ++k) {\\r\\n                        c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            for (var i = 0; i < 16; ++i) {\\r\\n                dst[i] = c[i];\\r\\n            }\\r\\n        };\\r\\n        CubismMatrix44.prototype.loadIdentity = function () {\\r\\n            var c = new Float32Array([\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0\\r\\n            ]);\\r\\n            this.setMatrix(c);\\r\\n        };\\r\\n        CubismMatrix44.prototype.setMatrix = function (tr) {\\r\\n            for (var i = 0; i < 16; ++i) {\\r\\n                this._tr[i] = tr[i];\\r\\n            }\\r\\n        };\\r\\n        CubismMatrix44.prototype.getArray = function () {\\r\\n            return this._tr;\\r\\n        };\\r\\n        CubismMatrix44.prototype.getScaleX = function () {\\r\\n            return this._tr[0];\\r\\n        };\\r\\n        CubismMatrix44.prototype.getScaleY = function () {\\r\\n            return this._tr[5];\\r\\n        };\\r\\n        CubismMatrix44.prototype.getTranslateX = function () {\\r\\n            return this._tr[12];\\r\\n        };\\r\\n        CubismMatrix44.prototype.getTranslateY = function () {\\r\\n            return this._tr[13];\\r\\n        };\\r\\n        CubismMatrix44.prototype.transformX = function (src) {\\r\\n            return this._tr[0] * src + this._tr[12];\\r\\n        };\\r\\n        CubismMatrix44.prototype.transformY = function (src) {\\r\\n            return this._tr[5] * src + this._tr[13];\\r\\n        };\\r\\n        CubismMatrix44.prototype.invertTransformX = function (src) {\\r\\n            return (src - this._tr[12]) / this._tr[0];\\r\\n        };\\r\\n        CubismMatrix44.prototype.invertTransformY = function (src) {\\r\\n            return (src - this._tr[13]) / this._tr[5];\\r\\n        };\\r\\n        CubismMatrix44.prototype.translateRelative = function (x, y) {\\r\\n            var tr1 = new Float32Array([\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                x,\\r\\n                y,\\r\\n                0.0,\\r\\n                1.0\\r\\n            ]);\\r\\n            CubismMatrix44.multiply(tr1, this._tr, this._tr);\\r\\n        };\\r\\n        CubismMatrix44.prototype.translate = function (x, y) {\\r\\n            this._tr[12] = x;\\r\\n            this._tr[13] = y;\\r\\n        };\\r\\n        CubismMatrix44.prototype.translateX = function (x) {\\r\\n            this._tr[12] = x;\\r\\n        };\\r\\n        CubismMatrix44.prototype.translateY = function (y) {\\r\\n            this._tr[13] = y;\\r\\n        };\\r\\n        CubismMatrix44.prototype.scaleRelative = function (x, y) {\\r\\n            var tr1 = new Float32Array([\\r\\n                x,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                y,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0\\r\\n            ]);\\r\\n            CubismMatrix44.multiply(tr1, this._tr, this._tr);\\r\\n        };\\r\\n        CubismMatrix44.prototype.scale = function (x, y) {\\r\\n            this._tr[0] = x;\\r\\n            this._tr[5] = y;\\r\\n        };\\r\\n        CubismMatrix44.prototype.multiplyByMatrix = function (m) {\\r\\n            CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\\r\\n        };\\r\\n        CubismMatrix44.prototype.clone = function () {\\r\\n            var cloneMatrix = new CubismMatrix44();\\r\\n            for (var i = 0; i < this._tr.length; i++) {\\r\\n                cloneMatrix._tr[i] = this._tr[i];\\r\\n            }\\r\\n            return cloneMatrix;\\r\\n        };\\r\\n        return CubismMatrix44;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMatrix44 = CubismMatrix44;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/math/cubismmatrix44.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/math/cubismmodelmatrix.ts\":\n      /*!*************************************************!*\\\n        !*** ./Framework/src/math/cubismmodelmatrix.ts ***!\n        \\*************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmatrix44_1 = __webpack_require__(/*! ./cubismmatrix44 */ \\\"./Framework/src/math/cubismmatrix44.ts\\\");\\r\\nvar CubismMatrix44 = cubismmatrix44_1.Live2DCubismFramework.CubismMatrix44;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismModelMatrix = (function (_super) {\\r\\n        __extends(CubismModelMatrix, _super);\\r\\n        function CubismModelMatrix(w, h) {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._width = w !== undefined ? w : 0.0;\\r\\n            _this._height = h !== undefined ? h : 0.0;\\r\\n            _this.setHeight(1.0);\\r\\n            return _this;\\r\\n        }\\r\\n        CubismModelMatrix.prototype.setWidth = function (w) {\\r\\n            var scaleX = w / this._width;\\r\\n            var scaleY = scaleX;\\r\\n            this.scale(scaleX * 2.6, scaleY * 2.6);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.setHeight = function (h) {\\r\\n            var scaleX = h / this._height;\\r\\n            var scaleY = scaleX;\\r\\n            this.scale(scaleX * 2.6, scaleY * 2.6);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.setPosition = function (x, y) {\\r\\n            this.translate(x, y);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.setCenterPosition = function (x, y) {\\r\\n            this.centerX(x);\\r\\n            this.centerY(y);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.top = function (y) {\\r\\n            this.setY(y);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.bottom = function (y) {\\r\\n            var h = this._height * this.getScaleY();\\r\\n            this.translateY(y - h);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.left = function (x) {\\r\\n            this.setX(x);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.right = function (x) {\\r\\n            var w = this._width * this.getScaleX();\\r\\n            this.translateX(x - w);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.centerX = function (x) {\\r\\n            var w = this._width * this.getScaleX();\\r\\n            this.translateX(x - w / 2.0);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.setX = function (x) {\\r\\n            this.translateX(x);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.centerY = function (y) {\\r\\n            var h = this._height * this.getScaleY();\\r\\n            this.translateY(y - h / 2.0);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.setY = function (y) {\\r\\n            this.translateY(y);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.setupFromLayout = function (layout) {\\r\\n            var keyWidth = 'width';\\r\\n            var keyHeight = 'height';\\r\\n            var keyX = 'x';\\r\\n            var keyY = 'y';\\r\\n            var keyCenterX = 'center_x';\\r\\n            var keyCenterY = 'center_y';\\r\\n            var keyTop = 'top';\\r\\n            var keyBottom = 'bottom';\\r\\n            var keyLeft = 'left';\\r\\n            var keyRight = 'right';\\r\\n            for (var ite = layout.begin(); ite.notEqual(layout.end()); ite.preIncrement()) {\\r\\n                var key = ite.ptr().first;\\r\\n                var value = ite.ptr().second;\\r\\n                if (key == keyWidth) {\\r\\n                    this.setWidth(value);\\r\\n                }\\r\\n                else if (key == keyHeight) {\\r\\n                    this.setHeight(value);\\r\\n                }\\r\\n            }\\r\\n            for (var ite = layout.begin(); ite.notEqual(layout.end()); ite.preIncrement()) {\\r\\n                var key = ite.ptr().first;\\r\\n                var value = ite.ptr().second;\\r\\n                if (key == keyX) {\\r\\n                    this.setX(value);\\r\\n                }\\r\\n                else if (key == keyY) {\\r\\n                    this.setY(value);\\r\\n                }\\r\\n                else if (key == keyCenterX) {\\r\\n                    this.centerX(value);\\r\\n                }\\r\\n                else if (key == keyCenterY) {\\r\\n                    this.centerY(value);\\r\\n                }\\r\\n                else if (key == keyTop) {\\r\\n                    this.top(value);\\r\\n                }\\r\\n                else if (key == keyBottom) {\\r\\n                    this.bottom(value);\\r\\n                }\\r\\n                else if (key == keyLeft) {\\r\\n                    this.left(value);\\r\\n                }\\r\\n                else if (key == keyRight) {\\r\\n                    this.right(value);\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        return CubismModelMatrix;\\r\\n    }(CubismMatrix44));\\r\\n    Live2DCubismFramework.CubismModelMatrix = CubismModelMatrix;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/math/cubismmodelmatrix.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/math/cubismtargetpoint.ts\":\n      /*!*************************************************!*\\\n        !*** ./Framework/src/math/cubismtargetpoint.ts ***!\n        \\*************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmath_1 = __webpack_require__(/*! ./cubismmath */ \\\"./Framework/src/math/cubismmath.ts\\\");\\r\\nvar CubismMath = cubismmath_1.Live2DCubismFramework.CubismMath;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var FrameRate = 30;\\r\\n    var Epsilon = 0.01;\\r\\n    var CubismTargetPoint = (function () {\\r\\n        function CubismTargetPoint() {\\r\\n            this._faceTargetX = 0.0;\\r\\n            this._faceTargetY = 0.0;\\r\\n            this._faceX = 0.0;\\r\\n            this._faceY = 0.0;\\r\\n            this._faceVX = 0.0;\\r\\n            this._faceVY = 0.0;\\r\\n            this._lastTimeSeconds = 0.0;\\r\\n            this._userTimeSeconds = 0.0;\\r\\n        }\\r\\n        CubismTargetPoint.prototype.update = function (deltaTimeSeconds) {\\r\\n            this._userTimeSeconds += deltaTimeSeconds;\\r\\n            var faceParamMaxV = 40.0 / 10.0;\\r\\n            var maxV = (faceParamMaxV * 1.0) / FrameRate;\\r\\n            if (this._lastTimeSeconds == 0.0) {\\r\\n                this._lastTimeSeconds = this._userTimeSeconds;\\r\\n                return;\\r\\n            }\\r\\n            var deltaTimeWeight = (this._userTimeSeconds - this._lastTimeSeconds) * FrameRate;\\r\\n            this._lastTimeSeconds = this._userTimeSeconds;\\r\\n            var timeToMaxSpeed = 0.15;\\r\\n            var frameToMaxSpeed = timeToMaxSpeed * FrameRate;\\r\\n            var maxA = (deltaTimeWeight * maxV) / frameToMaxSpeed;\\r\\n            var dx = this._faceTargetX - this._faceX;\\r\\n            var dy = this._faceTargetY - this._faceY;\\r\\n            if (CubismMath.abs(dx) <= Epsilon && CubismMath.abs(dy) <= Epsilon) {\\r\\n                return;\\r\\n            }\\r\\n            var d = CubismMath.sqrt(dx * dx + dy * dy);\\r\\n            var vx = (maxV * dx) / d;\\r\\n            var vy = (maxV * dy) / d;\\r\\n            var ax = vx - this._faceVX;\\r\\n            var ay = vy - this._faceVY;\\r\\n            var a = CubismMath.sqrt(ax * ax + ay * ay);\\r\\n            if (a < -maxA || a > maxA) {\\r\\n                ax *= maxA / a;\\r\\n                ay *= maxA / a;\\r\\n            }\\r\\n            this._faceVX += ax;\\r\\n            this._faceVY += ay;\\r\\n            {\\r\\n                var maxV_1 = 0.5 *\\r\\n                    (CubismMath.sqrt(maxA * maxA + 16.0 * maxA * d - 8.0 * maxA * d) -\\r\\n                        maxA);\\r\\n                var curV = CubismMath.sqrt(this._faceVX * this._faceVX + this._faceVY * this._faceVY);\\r\\n                if (curV > maxV_1) {\\r\\n                    this._faceVX *= maxV_1 / curV;\\r\\n                    this._faceVY *= maxV_1 / curV;\\r\\n                }\\r\\n            }\\r\\n            this._faceX += this._faceVX;\\r\\n            this._faceY += this._faceVY;\\r\\n        };\\r\\n        CubismTargetPoint.prototype.getX = function () {\\r\\n            return this._faceX;\\r\\n        };\\r\\n        CubismTargetPoint.prototype.getY = function () {\\r\\n            return this._faceY;\\r\\n        };\\r\\n        CubismTargetPoint.prototype.set = function (x, y) {\\r\\n            this._faceTargetX = x;\\r\\n            this._faceTargetY = y;\\r\\n        };\\r\\n        return CubismTargetPoint;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismTargetPoint = CubismTargetPoint;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/math/cubismtargetpoint.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/math/cubismvector2.ts\":\n      /*!*********************************************!*\\\n        !*** ./Framework/src/math/cubismvector2.ts ***!\n        \\*********************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismVector2 = (function () {\\r\\n        function CubismVector2(x, y) {\\r\\n            this.x = x;\\r\\n            this.y = y;\\r\\n            this.x = x == undefined ? 0.0 : x;\\r\\n            this.y = y == undefined ? 0.0 : y;\\r\\n        }\\r\\n        CubismVector2.prototype.add = function (vector2) {\\r\\n            var ret = new CubismVector2(0.0, 0.0);\\r\\n            ret.x = this.x + vector2.x;\\r\\n            ret.y = this.y + vector2.y;\\r\\n            return ret;\\r\\n        };\\r\\n        CubismVector2.prototype.substract = function (vector2) {\\r\\n            var ret = new CubismVector2(0.0, 0.0);\\r\\n            ret.x = this.x - vector2.x;\\r\\n            ret.y = this.y - vector2.y;\\r\\n            return ret;\\r\\n        };\\r\\n        CubismVector2.prototype.multiply = function (vector2) {\\r\\n            var ret = new CubismVector2(0.0, 0.0);\\r\\n            ret.x = this.x * vector2.x;\\r\\n            ret.y = this.y * vector2.y;\\r\\n            return ret;\\r\\n        };\\r\\n        CubismVector2.prototype.multiplyByScaler = function (scalar) {\\r\\n            return this.multiply(new CubismVector2(scalar, scalar));\\r\\n        };\\r\\n        CubismVector2.prototype.division = function (vector2) {\\r\\n            var ret = new CubismVector2(0.0, 0.0);\\r\\n            ret.x = this.x / vector2.x;\\r\\n            ret.y = this.y / vector2.y;\\r\\n            return ret;\\r\\n        };\\r\\n        CubismVector2.prototype.divisionByScalar = function (scalar) {\\r\\n            return this.division(new CubismVector2(scalar, scalar));\\r\\n        };\\r\\n        CubismVector2.prototype.getLength = function () {\\r\\n            return Math.sqrt(this.x * this.x + this.y * this.y);\\r\\n        };\\r\\n        CubismVector2.prototype.getDistanceWith = function (a) {\\r\\n            return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\\r\\n        };\\r\\n        CubismVector2.prototype.dot = function (a) {\\r\\n            return this.x * a.x + this.y * a.y;\\r\\n        };\\r\\n        CubismVector2.prototype.normalize = function () {\\r\\n            var length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\\r\\n            this.x = this.x / length;\\r\\n            this.y = this.y / length;\\r\\n        };\\r\\n        CubismVector2.prototype.isEqual = function (rhs) {\\r\\n            return this.x == rhs.x && this.y == rhs.y;\\r\\n        };\\r\\n        CubismVector2.prototype.isNotEqual = function (rhs) {\\r\\n            return !this.isEqual(rhs);\\r\\n        };\\r\\n        return CubismVector2;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismVector2 = CubismVector2;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21hdGgvY3ViaXNtdmVjdG9yMi50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvbWF0aC9jdWJpc212ZWN0b3IyLnRzP2RiMDgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICAvKipcbiAgICogMuasoeWFg+ODmeOCr+ODiOODq+Wei1xuICAgKlxuICAgKiAy5qyh5YWD44OZ44Kv44OI44Or5Z6L44Gu5qmf6IO944KS5o+Q5L6b44GZ44KL44CCXG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtVmVjdG9yMiB7XG4gICAgLyoqXG4gICAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKHB1YmxpYyB4PzogbnVtYmVyLCBwdWJsaWMgeT86IG51bWJlcikge1xuICAgICAgdGhpcy54ID0geCA9PSB1bmRlZmluZWQgPyAwLjAgOiB4O1xuXG4gICAgICB0aGlzLnkgPSB5ID09IHVuZGVmaW5lZCA/IDAuMCA6IHk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44OZ44Kv44OI44Or44Gu5Yqg566XXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmVjdG9yMiDliqDnrpfjgZnjgovjg5njgq/jg4jjg6vlgKRcbiAgICAgKiBAcmV0dXJuIOWKoOeul+e1kOaenCDjg5njgq/jg4jjg6vlgKRcbiAgICAgKi9cbiAgICBwdWJsaWMgYWRkKHZlY3RvcjI6IEN1YmlzbVZlY3RvcjIpOiBDdWJpc21WZWN0b3IyIHtcbiAgICAgIGNvbnN0IHJldDogQ3ViaXNtVmVjdG9yMiA9IG5ldyBDdWJpc21WZWN0b3IyKDAuMCwgMC4wKTtcbiAgICAgIHJldC54ID0gdGhpcy54ICsgdmVjdG9yMi54O1xuICAgICAgcmV0LnkgPSB0aGlzLnkgKyB2ZWN0b3IyLnk7XG4gICAgICByZXR1cm4gcmV0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODmeOCr+ODiOODq+OBrua4m+eul1xuICAgICAqXG4gICAgICogQHBhcmFtIHZlY3RvcjIg5rib566X44GZ44KL44OZ44Kv44OI44Or5YCkXG4gICAgICogQHJldHVybiDmuJvnrpfntZDmnpwg44OZ44Kv44OI44Or5YCkXG4gICAgICovXG4gICAgcHVibGljIHN1YnN0cmFjdCh2ZWN0b3IyOiBDdWJpc21WZWN0b3IyKTogQ3ViaXNtVmVjdG9yMiB7XG4gICAgICBjb25zdCByZXQ6IEN1YmlzbVZlY3RvcjIgPSBuZXcgQ3ViaXNtVmVjdG9yMigwLjAsIDAuMCk7XG4gICAgICByZXQueCA9IHRoaXMueCAtIHZlY3RvcjIueDtcbiAgICAgIHJldC55ID0gdGhpcy55IC0gdmVjdG9yMi55O1xuICAgICAgcmV0dXJuIHJldDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg5njgq/jg4jjg6vjga7kuZfnrpdcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2ZWN0b3IyIOS5l+eul+OBmeOCi+ODmeOCr+ODiOODq+WApFxuICAgICAqIEByZXR1cm4g5LmX566X57WQ5p6cIOODmeOCr+ODiOODq+WApFxuICAgICAqL1xuICAgIHB1YmxpYyBtdWx0aXBseSh2ZWN0b3IyOiBDdWJpc21WZWN0b3IyKTogQ3ViaXNtVmVjdG9yMiB7XG4gICAgICBjb25zdCByZXQ6IEN1YmlzbVZlY3RvcjIgPSBuZXcgQ3ViaXNtVmVjdG9yMigwLjAsIDAuMCk7XG4gICAgICByZXQueCA9IHRoaXMueCAqIHZlY3RvcjIueDtcbiAgICAgIHJldC55ID0gdGhpcy55ICogdmVjdG9yMi55O1xuICAgICAgcmV0dXJuIHJldDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg5njgq/jg4jjg6vjga7kuZfnrpco44K544Kr44Op44O8KVxuICAgICAqXG4gICAgICogQHBhcmFtIHNjYWxhciDkuZfnrpfjgZnjgovjgrnjgqvjg6njg7zlgKRcbiAgICAgKiBAcmV0dXJuIOS5l+eul+e1kOaenCDjg5njgq/jg4jjg6vlgKRcbiAgICAgKi9cbiAgICBwdWJsaWMgbXVsdGlwbHlCeVNjYWxlcihzY2FsYXI6IG51bWJlcik6IEN1YmlzbVZlY3RvcjIge1xuICAgICAgcmV0dXJuIHRoaXMubXVsdGlwbHkobmV3IEN1YmlzbVZlY3RvcjIoc2NhbGFyLCBzY2FsYXIpKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg5njgq/jg4jjg6vjga7pmaTnrpdcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2ZWN0b3IyIOmZpOeul+OBmeOCi+ODmeOCr+ODiOODq+WApFxuICAgICAqIEByZXR1cm4g6Zmk566X57WQ5p6cIOODmeOCr+ODiOODq+WApFxuICAgICAqL1xuICAgIHB1YmxpYyBkaXZpc2lvbih2ZWN0b3IyOiBDdWJpc21WZWN0b3IyKTogQ3ViaXNtVmVjdG9yMiB7XG4gICAgICBjb25zdCByZXQ6IEN1YmlzbVZlY3RvcjIgPSBuZXcgQ3ViaXNtVmVjdG9yMigwLjAsIDAuMCk7XG4gICAgICByZXQueCA9IHRoaXMueCAvIHZlY3RvcjIueDtcbiAgICAgIHJldC55ID0gdGhpcy55IC8gdmVjdG9yMi55O1xuICAgICAgcmV0dXJuIHJldDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg5njgq/jg4jjg6vjga7pmaTnrpco44K544Kr44Op44O8KVxuICAgICAqXG4gICAgICogQHBhcmFtIHNjYWxhciDpmaTnrpfjgZnjgovjgrnjgqvjg6njg7zlgKRcbiAgICAgKiBAcmV0dXJuIOmZpOeul+e1kOaenCDjg5njgq/jg4jjg6vlgKRcbiAgICAgKi9cbiAgICBwdWJsaWMgZGl2aXNpb25CeVNjYWxhcihzY2FsYXI6IG51bWJlcik6IEN1YmlzbVZlY3RvcjIge1xuICAgICAgcmV0dXJuIHRoaXMuZGl2aXNpb24obmV3IEN1YmlzbVZlY3RvcjIoc2NhbGFyLCBzY2FsYXIpKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg5njgq/jg4jjg6vjga7plbfjgZXjgpLlj5blvpfjgZnjgotcbiAgICAgKlxuICAgICAqIEByZXR1cm4g44OZ44Kv44OI44Or44Gu6ZW344GVXG4gICAgICovXG4gICAgcHVibGljIGdldExlbmd0aCgpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIE1hdGguc3FydCh0aGlzLnggKiB0aGlzLnggKyB0aGlzLnkgKiB0aGlzLnkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODmeOCr+ODiOODq+OBrui3nembouOBruWPluW+l1xuICAgICAqXG4gICAgICogQHBhcmFtIGEg54K5XG4gICAgICogQHJldHVybiDjg5njgq/jg4jjg6vjga7ot53pm6JcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0RGlzdGFuY2VXaXRoKGE6IEN1YmlzbVZlY3RvcjIpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIE1hdGguc3FydChcbiAgICAgICAgKHRoaXMueCAtIGEueCkgKiAodGhpcy54IC0gYS54KSArICh0aGlzLnkgLSBhLnkpICogKHRoaXMueSAtIGEueSlcbiAgICAgICk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44OJ44OD44OI56mN44Gu6KiI566XXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYSDlgKRcbiAgICAgKiBAcmV0dXJuIOe1kOaenFxuICAgICAqL1xuICAgIHB1YmxpYyBkb3QoYTogQ3ViaXNtVmVjdG9yMik6IG51bWJlciB7XG4gICAgICByZXR1cm4gdGhpcy54ICogYS54ICsgdGhpcy55ICogYS55O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOato+imj+WMluOBrumBqeeUqFxuICAgICAqL1xuICAgIHB1YmxpYyBub3JtYWxpemUoKTogdm9pZCB7XG4gICAgICBjb25zdCBsZW5ndGg6IG51bWJlciA9IE1hdGgucG93KHRoaXMueCAqIHRoaXMueCArIHRoaXMueSAqIHRoaXMueSwgMC41KTtcblxuICAgICAgdGhpcy54ID0gdGhpcy54IC8gbGVuZ3RoO1xuICAgICAgdGhpcy55ID0gdGhpcy55IC8gbGVuZ3RoO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOetieOBl+OBleOBrueiuuiqje+8iOetieOBl+OBhOOBi++8n++8iVxuICAgICAqXG4gICAgICog5YCk44GM562J44GX44GE44GL77yfXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcmhzIOeiuuiqjeOBmeOCi+WApFxuICAgICAqIEByZXR1cm4gdHJ1ZSDlgKTjga/nrYnjgZfjgYRcbiAgICAgKiBAcmV0dXJuIGZhbHNlIOWApOOBr+etieOBl+OBj+OBquOBhFxuICAgICAqL1xuICAgIHB1YmxpYyBpc0VxdWFsKHJoczogQ3ViaXNtVmVjdG9yMik6IGJvb2xlYW4ge1xuICAgICAgcmV0dXJuIHRoaXMueCA9PSByaHMueCAmJiB0aGlzLnkgPT0gcmhzLnk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog562J44GX44GV44Gu56K66KqN77yI562J44GX44GP44Gq44GE44GL77yf77yJXG4gICAgICpcbiAgICAgKiDlgKTjgYznrYnjgZfjgY/jgarjgYTjgYvvvJ9cbiAgICAgKlxuICAgICAqIEBwYXJhbSByaHMg56K66KqN44GZ44KL5YCkXG4gICAgICogQHJldHVybiB0cnVlIOWApOOBr+etieOBl+OBj+OBquOBhFxuICAgICAqIEByZXR1cm4gZmFsc2Ug5YCk44Gv562J44GX44GEXG4gICAgICovXG4gICAgcHVibGljIGlzTm90RXF1YWwocmhzOiBDdWJpc21WZWN0b3IyKTogYm9vbGVhbiB7XG4gICAgICByZXR1cm4gIXRoaXMuaXNFcXVhbChyaHMpO1xuICAgIH1cbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOztBQU9BO0FBQUE7QUFNQTtBQUlBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFHQTtBQVFBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFXQTtBQUNBO0FBQ0E7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBcEpBO0FBcUpBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Framework/src/math/cubismvector2.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/math/cubismviewmatrix.ts\":\n      /*!************************************************!*\\\n        !*** ./Framework/src/math/cubismviewmatrix.ts ***!\n        \\************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmatrix44_1 = __webpack_require__(/*! ./cubismmatrix44 */ \\\"./Framework/src/math/cubismmatrix44.ts\\\");\\r\\nvar CubismMatrix44 = cubismmatrix44_1.Live2DCubismFramework.CubismMatrix44;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismViewMatrix = (function (_super) {\\r\\n        __extends(CubismViewMatrix, _super);\\r\\n        function CubismViewMatrix() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._screenLeft = 0.0;\\r\\n            _this._screenRight = 0.0;\\r\\n            _this._screenTop = 0.0;\\r\\n            _this._screenBottom = 0.0;\\r\\n            _this._maxLeft = 0.0;\\r\\n            _this._maxRight = 0.0;\\r\\n            _this._maxTop = 0.0;\\r\\n            _this._maxBottom = 0.0;\\r\\n            _this._maxScale = 0.0;\\r\\n            _this._minScale = 0.0;\\r\\n            return _this;\\r\\n        }\\r\\n        CubismViewMatrix.prototype.adjustTranslate = function (x, y) {\\r\\n            if (this._tr[0] * this._maxLeft + (this._tr[12] + x) > this._screenLeft) {\\r\\n                x = this._screenLeft - this._tr[0] * this._maxLeft - this._tr[12];\\r\\n            }\\r\\n            if (this._tr[0] * this._maxRight + (this._tr[12] + x) <\\r\\n                this._screenRight) {\\r\\n                x = this._screenRight - this._tr[0] * this._maxRight - this._tr[12];\\r\\n            }\\r\\n            if (this._tr[5] * this._maxTop + (this._tr[13] + y) < this._screenTop) {\\r\\n                y = this._screenTop - this._tr[5] * this._maxTop - this._tr[13];\\r\\n            }\\r\\n            if (this._tr[5] * this._maxBottom + (this._tr[13] + y) >\\r\\n                this._screenBottom) {\\r\\n                y = this._screenBottom - this._tr[5] * this._maxBottom - this._tr[13];\\r\\n            }\\r\\n            var tr1 = new Float32Array([\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                x,\\r\\n                y,\\r\\n                0.0,\\r\\n                1.0\\r\\n            ]);\\r\\n            CubismMatrix44.multiply(tr1, this._tr, this._tr);\\r\\n        };\\r\\n        CubismViewMatrix.prototype.adjustScale = function (cx, cy, scale) {\\r\\n            var maxScale = this.getMaxScale();\\r\\n            var minScale = this.getMinScale();\\r\\n            var targetScale = scale * this._tr[0];\\r\\n            if (targetScale < minScale) {\\r\\n                if (this._tr[0] > 0.0) {\\r\\n                    scale = minScale / this._tr[0];\\r\\n                }\\r\\n            }\\r\\n            else if (targetScale > maxScale) {\\r\\n                if (this._tr[0] > 0.0) {\\r\\n                    scale = maxScale / this._tr[0];\\r\\n                }\\r\\n            }\\r\\n            var tr1 = new Float32Array([\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                cx,\\r\\n                cy,\\r\\n                0.0,\\r\\n                1.0\\r\\n            ]);\\r\\n            var tr2 = new Float32Array([\\r\\n                scale,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                scale,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0\\r\\n            ]);\\r\\n            var tr3 = new Float32Array([\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                -cx,\\r\\n                -cy,\\r\\n                0.0,\\r\\n                1.0\\r\\n            ]);\\r\\n            CubismMatrix44.multiply(tr3, this._tr, this._tr);\\r\\n            CubismMatrix44.multiply(tr2, this._tr, this._tr);\\r\\n            CubismMatrix44.multiply(tr1, this._tr, this._tr);\\r\\n        };\\r\\n        CubismViewMatrix.prototype.setScreenRect = function (left, right, bottom, top) {\\r\\n            this._screenLeft = left;\\r\\n            this._screenRight = right;\\r\\n            this._screenBottom = bottom;\\r\\n            this._screenTop = top;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.setMaxScreenRect = function (left, right, bottom, top) {\\r\\n            this._maxLeft = left;\\r\\n            this._maxRight = right;\\r\\n            this._maxTop = top;\\r\\n            this._maxBottom = bottom;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.setMaxScale = function (maxScale) {\\r\\n            this._maxScale = maxScale;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.setMinScale = function (minScale) {\\r\\n            this._minScale = minScale;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getMaxScale = function () {\\r\\n            return this._maxScale;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getMinScale = function () {\\r\\n            return this._minScale;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.isMaxScale = function () {\\r\\n            return this.getScaleX() >= this._maxScale;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.isMinScale = function () {\\r\\n            return this.getScaleX() <= this._minScale;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getScreenLeft = function () {\\r\\n            return this._screenLeft;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getScreenRight = function () {\\r\\n            return this._screenRight;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getScreenBottom = function () {\\r\\n            return this._screenBottom;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getScreenTop = function () {\\r\\n            return this._screenTop;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getMaxLeft = function () {\\r\\n            return this._maxLeft;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getMaxRight = function () {\\r\\n            return this._maxRight;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getMaxBottom = function () {\\r\\n            return this._maxBottom;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getMaxTop = function () {\\r\\n            return this._maxTop;\\r\\n        };\\r\\n        return CubismViewMatrix;\\r\\n    }(CubismMatrix44));\\r\\n    Live2DCubismFramework.CubismViewMatrix = CubismViewMatrix;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/math/cubismviewmatrix.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/model/cubismmoc.ts\":\n      /*!******************************************!*\\\n        !*** ./Framework/src/model/cubismmoc.ts ***!\n        \\******************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmodel_1 = __webpack_require__(/*! ./cubismmodel */ \\\"./Framework/src/model/cubismmodel.ts\\\");\\r\\nvar CubismModel = cubismmodel_1.Live2DCubismFramework.CubismModel;\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismMoc = (function () {\\r\\n        function CubismMoc(moc) {\\r\\n            this._moc = moc;\\r\\n            this._modelCount = 0;\\r\\n        }\\r\\n        CubismMoc.create = function (mocBytes) {\\r\\n            var cubismMoc = null;\\r\\n            var moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\\r\\n            if (moc) {\\r\\n                cubismMoc = new CubismMoc(moc);\\r\\n            }\\r\\n            return cubismMoc;\\r\\n        };\\r\\n        CubismMoc.delete = function (moc) {\\r\\n            moc._moc._release();\\r\\n            moc._moc = null;\\r\\n            moc = null;\\r\\n        };\\r\\n        CubismMoc.prototype.createModel = function () {\\r\\n            var cubismModel = null;\\r\\n            var model = Live2DCubismCore.Model.fromMoc(this._moc);\\r\\n            if (model) {\\r\\n                cubismModel = new CubismModel(model);\\r\\n                cubismModel.initialize();\\r\\n                ++this._modelCount;\\r\\n            }\\r\\n            return cubismModel;\\r\\n        };\\r\\n        CubismMoc.prototype.deleteModel = function (model) {\\r\\n            if (model != null) {\\r\\n                model.release();\\r\\n                model = null;\\r\\n                --this._modelCount;\\r\\n            }\\r\\n        };\\r\\n        CubismMoc.prototype.release = function () {\\r\\n            cubismdebug_1.CSM_ASSERT(this._modelCount == 0);\\r\\n            this._moc._release();\\r\\n            this._moc = null;\\r\\n        };\\r\\n        return CubismMoc;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMoc = CubismMoc;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21vZGVsL2N1YmlzbW1vYy50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvbW9kZWwvY3ViaXNtbW9jLnRzPzdlNDYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbW1vZGVsIH0gZnJvbSAnLi9jdWJpc21tb2RlbCc7XG5pbXBvcnQgQ3ViaXNtTW9kZWwgPSBjdWJpc21tb2RlbC5DdWJpc21Nb2RlbDtcbmltcG9ydCB7IENTTV9BU1NFUlQgfSBmcm9tICcuLi91dGlscy9jdWJpc21kZWJ1Zyc7XG5cbmV4cG9ydCBuYW1lc3BhY2UgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIHtcbiAgLyoqXG4gICAqIE1vY+ODh+ODvOOCv+OBrueuoeeQhlxuICAgKlxuICAgKiBNb2Pjg4fjg7zjgr/jga7nrqHnkIbjgpLooYzjgYbjgq/jg6njgrnjgIJcbiAgICovXG4gIGV4cG9ydCBjbGFzcyBDdWJpc21Nb2Mge1xuICAgIC8qKlxuICAgICAqIE1vY+ODh+ODvOOCv+OBruS9nOaIkFxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgY3JlYXRlKG1vY0J5dGVzOiBBcnJheUJ1ZmZlcik6IEN1YmlzbU1vYyB7XG4gICAgICBsZXQgY3ViaXNtTW9jOiBDdWJpc21Nb2MgPSBudWxsO1xuICAgICAgY29uc3QgbW9jOiBMaXZlMkRDdWJpc21Db3JlLk1vYyA9IExpdmUyREN1YmlzbUNvcmUuTW9jLmZyb21BcnJheUJ1ZmZlcihcbiAgICAgICAgbW9jQnl0ZXNcbiAgICAgICk7XG5cbiAgICAgIGlmIChtb2MpIHtcbiAgICAgICAgY3ViaXNtTW9jID0gbmV3IEN1YmlzbU1vYyhtb2MpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY3ViaXNtTW9jO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE1vY+ODh+ODvOOCv+OCkuWJiumZpFxuICAgICAqXG4gICAgICogTW9j44OH44O844K/44KS5YmK6Zmk44GZ44KLXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBkZWxldGUobW9jOiBDdWJpc21Nb2MpOiB2b2lkIHtcbiAgICAgIG1vYy5fbW9jLl9yZWxlYXNlKCk7XG4gICAgICBtb2MuX21vYyA9IG51bGw7XG4gICAgICBtb2MgPSBudWxsO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODouODh+ODq+OCkuS9nOaIkOOBmeOCi1xuICAgICAqXG4gICAgICogQHJldHVybiBNb2Pjg4fjg7zjgr/jgYvjgonkvZzmiJDjgZXjgozjgZ/jg6Ljg4fjg6tcbiAgICAgKi9cbiAgICBjcmVhdGVNb2RlbCgpOiBDdWJpc21Nb2RlbCB7XG4gICAgICBsZXQgY3ViaXNtTW9kZWw6IEN1YmlzbU1vZGVsID0gbnVsbDtcblxuICAgICAgY29uc3QgbW9kZWw6IExpdmUyREN1YmlzbUNvcmUuTW9kZWwgPSBMaXZlMkRDdWJpc21Db3JlLk1vZGVsLmZyb21Nb2MoXG4gICAgICAgIHRoaXMuX21vY1xuICAgICAgKTtcblxuICAgICAgaWYgKG1vZGVsKSB7XG4gICAgICAgIGN1YmlzbU1vZGVsID0gbmV3IEN1YmlzbU1vZGVsKG1vZGVsKTtcbiAgICAgICAgY3ViaXNtTW9kZWwuaW5pdGlhbGl6ZSgpO1xuXG4gICAgICAgICsrdGhpcy5fbW9kZWxDb3VudDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGN1YmlzbU1vZGVsO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODouODh+ODq+OCkuWJiumZpOOBmeOCi1xuICAgICAqL1xuICAgIGRlbGV0ZU1vZGVsKG1vZGVsOiBDdWJpc21Nb2RlbCk6IHZvaWQge1xuICAgICAgaWYgKG1vZGVsICE9IG51bGwpIHtcbiAgICAgICAgbW9kZWwucmVsZWFzZSgpO1xuICAgICAgICBtb2RlbCA9IG51bGw7XG4gICAgICAgIC0tdGhpcy5fbW9kZWxDb3VudDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICAgKi9cbiAgICBwcml2YXRlIGNvbnN0cnVjdG9yKG1vYzogTGl2ZTJEQ3ViaXNtQ29yZS5Nb2MpIHtcbiAgICAgIHRoaXMuX21vYyA9IG1vYztcbiAgICAgIHRoaXMuX21vZGVsQ291bnQgPSAwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODh+OCueODiOODqeOCr+OCv+ebuOW9k+OBruWHpueQhlxuICAgICAqL1xuICAgIHB1YmxpYyByZWxlYXNlKCk6IHZvaWQge1xuICAgICAgQ1NNX0FTU0VSVCh0aGlzLl9tb2RlbENvdW50ID09IDApO1xuXG4gICAgICB0aGlzLl9tb2MuX3JlbGVhc2UoKTtcbiAgICAgIHRoaXMuX21vYyA9IG51bGw7XG4gICAgfVxuXG4gICAgX21vYzogTGl2ZTJEQ3ViaXNtQ29yZS5Nb2M7IC8vIE1vY+ODh+ODvOOCv1xuICAgIF9tb2RlbENvdW50OiBudW1iZXI7IC8vIE1vY+ODh+ODvOOCv+OBi+OCieS9nOOCieOCjOOBn+ODouODh+ODq+OBruWAi+aVsFxuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7O0FBT0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQU1BO0FBZ0VBO0FBQ0E7QUFDQTtBQUNBO0FBL0RBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUVBO0FBSUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFJQTtBQUFBO0FBakZBO0FBa0ZBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Framework/src/model/cubismmoc.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/model/cubismmodel.ts\":\n      /*!********************************************!*\\\n        !*** ./Framework/src/model/cubismmodel.ts ***!\n        \\********************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismrenderer_1 = __webpack_require__(/*! ../rendering/cubismrenderer */ \\\"./Framework/src/rendering/cubismrenderer.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar csmmap_1 = __webpack_require__(/*! ../type/csmmap */ \\\"./Framework/src/type/csmmap.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismBlendMode = cubismrenderer_1.Live2DCubismFramework.CubismBlendMode;\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar csmMap = csmmap_1.Live2DCubismFramework.csmMap;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismModel = (function () {\\r\\n        function CubismModel(model) {\\r\\n            this._model = model;\\r\\n            this._parameterValues = null;\\r\\n            this._parameterMaximumValues = null;\\r\\n            this._parameterMinimumValues = null;\\r\\n            this._partOpacities = null;\\r\\n            this._savedParameters = new csmVector();\\r\\n            this._parameterIds = new csmVector();\\r\\n            this._drawableIds = new csmVector();\\r\\n            this._partIds = new csmVector();\\r\\n            this._notExistPartId = new csmMap();\\r\\n            this._notExistParameterId = new csmMap();\\r\\n            this._notExistParameterValues = new csmMap();\\r\\n            this._notExistPartOpacities = new csmMap();\\r\\n        }\\r\\n        CubismModel.prototype.update = function () {\\r\\n            this._model.update();\\r\\n            this._model.drawables.resetDynamicFlags();\\r\\n        };\\r\\n        CubismModel.prototype.getCanvasWidth = function () {\\r\\n            if (this._model == null) {\\r\\n                return 0.0;\\r\\n            }\\r\\n            return (this._model.canvasinfo.CanvasWidth /\\r\\n                this._model.canvasinfo.PixelsPerUnit);\\r\\n        };\\r\\n        CubismModel.prototype.getCanvasHeight = function () {\\r\\n            if (this._model == null) {\\r\\n                return 0.0;\\r\\n            }\\r\\n            return (this._model.canvasinfo.CanvasHeight /\\r\\n                this._model.canvasinfo.PixelsPerUnit);\\r\\n        };\\r\\n        CubismModel.prototype.saveParameters = function () {\\r\\n            var parameterCount = this._model.parameters.count;\\r\\n            var savedParameterCount = this._savedParameters.getSize();\\r\\n            for (var i = 0; i < parameterCount; ++i) {\\r\\n                if (i < savedParameterCount) {\\r\\n                    this._savedParameters.set(i, this._parameterValues[i]);\\r\\n                }\\r\\n                else {\\r\\n                    this._savedParameters.pushBack(this._parameterValues[i]);\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismModel.prototype.getModel = function () {\\r\\n            return this._model;\\r\\n        };\\r\\n        CubismModel.prototype.getPartIndex = function (partId) {\\r\\n            var partIndex;\\r\\n            var partCount = this._model.parts.count;\\r\\n            for (partIndex = 0; partIndex < partCount; ++partIndex) {\\r\\n                if (partId == this._partIds.at(partIndex)) {\\r\\n                    return partIndex;\\r\\n                }\\r\\n            }\\r\\n            if (this._notExistPartId.isExist(partId)) {\\r\\n                return this._notExistPartId.getValue(partId);\\r\\n            }\\r\\n            partIndex = partCount + this._notExistPartId.getSize();\\r\\n            this._notExistPartId.setValue(partId, partIndex);\\r\\n            this._notExistPartOpacities.appendKey(partIndex);\\r\\n            return partIndex;\\r\\n        };\\r\\n        CubismModel.prototype.getPartCount = function () {\\r\\n            var partCount = this._model.parts.count;\\r\\n            return partCount;\\r\\n        };\\r\\n        CubismModel.prototype.setPartOpacityByIndex = function (partIndex, opacity) {\\r\\n            if (this._notExistPartOpacities.isExist(partIndex)) {\\r\\n                this._notExistPartOpacities.setValue(partIndex, opacity);\\r\\n                return;\\r\\n            }\\r\\n            cubismdebug_1.CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\\r\\n            this._partOpacities[partIndex] = opacity;\\r\\n        };\\r\\n        CubismModel.prototype.setPartOpacityById = function (partId, opacity) {\\r\\n            var index = this.getPartIndex(partId);\\r\\n            if (index < 0) {\\r\\n                return;\\r\\n            }\\r\\n            this.setPartOpacityByIndex(index, opacity);\\r\\n        };\\r\\n        CubismModel.prototype.getPartOpacityByIndex = function (partIndex) {\\r\\n            if (this._notExistPartOpacities.isExist(partIndex)) {\\r\\n                return this._notExistPartOpacities.getValue(partIndex);\\r\\n            }\\r\\n            cubismdebug_1.CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\\r\\n            return this._partOpacities[partIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getPartOpacityById = function (partId) {\\r\\n            var index = this.getPartIndex(partId);\\r\\n            if (index < 0) {\\r\\n                return 0;\\r\\n            }\\r\\n            return this.getPartOpacityByIndex(index);\\r\\n        };\\r\\n        CubismModel.prototype.getParameterIndex = function (parameterId) {\\r\\n            var parameterIndex;\\r\\n            var idCount = this._model.parameters.count;\\r\\n            for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\\r\\n                if (parameterId != this._parameterIds.at(parameterIndex)) {\\r\\n                    continue;\\r\\n                }\\r\\n                return parameterIndex;\\r\\n            }\\r\\n            if (this._notExistParameterId.isExist(parameterId)) {\\r\\n                return this._notExistParameterId.getValue(parameterId);\\r\\n            }\\r\\n            parameterIndex =\\r\\n                this._model.parameters.count + this._notExistParameterId.getSize();\\r\\n            this._notExistParameterId.setValue(parameterId, parameterIndex);\\r\\n            this._notExistParameterValues.appendKey(parameterIndex);\\r\\n            return parameterIndex;\\r\\n        };\\r\\n        CubismModel.prototype.getParameterCount = function () {\\r\\n            return this._model.parameters.count;\\r\\n        };\\r\\n        CubismModel.prototype.getParameterMaximumValue = function (parameterIndex) {\\r\\n            return this._model.parameters.maximumValues[parameterIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getParameterMinimumValue = function (parameterIndex) {\\r\\n            return this._model.parameters.minimumValues[parameterIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getParameterDefaultValue = function (parameterIndex) {\\r\\n            return this._model.parameters.defaultValues[parameterIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getParameterValueByIndex = function (parameterIndex) {\\r\\n            if (this._notExistParameterValues.isExist(parameterIndex)) {\\r\\n                return this._notExistParameterValues.getValue(parameterIndex);\\r\\n            }\\r\\n            cubismdebug_1.CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\\r\\n            return this._parameterValues[parameterIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getParameterValueById = function (parameterId) {\\r\\n            var parameterIndex = this.getParameterIndex(parameterId);\\r\\n            return this.getParameterValueByIndex(parameterIndex);\\r\\n        };\\r\\n        CubismModel.prototype.setParameterValueByIndex = function (parameterIndex, value, weight) {\\r\\n            if (weight === void 0) { weight = 1.0; }\\r\\n            if (this._notExistParameterValues.isExist(parameterIndex)) {\\r\\n                this._notExistParameterValues.setValue(parameterIndex, weight == 1\\r\\n                    ? value\\r\\n                    : this._notExistParameterValues.getValue(parameterIndex) *\\r\\n                        (1 - weight) +\\r\\n                        value * weight);\\r\\n                return;\\r\\n            }\\r\\n            cubismdebug_1.CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\\r\\n            if (this._model.parameters.maximumValues[parameterIndex] < value) {\\r\\n                value = this._model.parameters.maximumValues[parameterIndex];\\r\\n            }\\r\\n            if (this._model.parameters.minimumValues[parameterIndex] > value) {\\r\\n                value = this._model.parameters.minimumValues[parameterIndex];\\r\\n            }\\r\\n            this._parameterValues[parameterIndex] =\\r\\n                weight == 1\\r\\n                    ? value\\r\\n                    : (this._parameterValues[parameterIndex] =\\r\\n                        this._parameterValues[parameterIndex] * (1 - weight) +\\r\\n                            value * weight);\\r\\n        };\\r\\n        CubismModel.prototype.setParameterValueById = function (parameterId, value, weight) {\\r\\n            if (weight === void 0) { weight = 1.0; }\\r\\n            var index = this.getParameterIndex(parameterId);\\r\\n            this.setParameterValueByIndex(index, value, weight);\\r\\n        };\\r\\n        CubismModel.prototype.addParameterValueByIndex = function (parameterIndex, value, weight) {\\r\\n            if (weight === void 0) { weight = 1.0; }\\r\\n            this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\\r\\n        };\\r\\n        CubismModel.prototype.addParameterValueById = function (parameterId, value, weight) {\\r\\n            if (weight === void 0) { weight = 1.0; }\\r\\n            var index = this.getParameterIndex(parameterId);\\r\\n            this.addParameterValueByIndex(index, value, weight);\\r\\n        };\\r\\n        CubismModel.prototype.multiplyParameterValueById = function (parameterId, value, weight) {\\r\\n            if (weight === void 0) { weight = 1.0; }\\r\\n            var index = this.getParameterIndex(parameterId);\\r\\n            this.multiplyParameterValueByIndex(index, value, weight);\\r\\n        };\\r\\n        CubismModel.prototype.multiplyParameterValueByIndex = function (parameterIndex, value, weight) {\\r\\n            if (weight === void 0) { weight = 1.0; }\\r\\n            this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) *\\r\\n                (1.0 + (value - 1.0) * weight));\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableIndex = function (drawableId) {\\r\\n            var drawableCount = this._model.drawables.count;\\r\\n            for (var drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\\r\\n                if (this._drawableIds.at(drawableIndex) == drawableId) {\\r\\n                    return drawableIndex;\\r\\n                }\\r\\n            }\\r\\n            return -1;\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableCount = function () {\\r\\n            var drawableCount = this._model.drawables.count;\\r\\n            return drawableCount;\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableId = function (drawableIndex) {\\r\\n            var parameterIds = this._model.drawables.ids;\\r\\n            return CubismFramework.getIdManager().getId(parameterIds[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableRenderOrders = function () {\\r\\n            var renderOrders = this._model.drawables.renderOrders;\\r\\n            return renderOrders;\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableTextureIndices = function (drawableIndex) {\\r\\n            var textureIndices = this._model.drawables.textureIndices;\\r\\n            return textureIndices[drawableIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableDynamicFlagVertexPositionsDidChange = function (drawableIndex) {\\r\\n            var dynamicFlags = this._model.drawables.dynamicFlags;\\r\\n            return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableVertexIndexCount = function (drawableIndex) {\\r\\n            var indexCounts = this._model.drawables.indexCounts;\\r\\n            return indexCounts[drawableIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableVertexCount = function (drawableIndex) {\\r\\n            var vertexCounts = this._model.drawables.vertexCounts;\\r\\n            return vertexCounts[drawableIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableVertices = function (drawableIndex) {\\r\\n            return this.getDrawableVertexPositions(drawableIndex);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableVertexIndices = function (drawableIndex) {\\r\\n            var indicesArray = this._model.drawables.indices;\\r\\n            return indicesArray[drawableIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableVertexPositions = function (drawableIndex) {\\r\\n            var verticesArray = this._model.drawables\\r\\n                .vertexPositions;\\r\\n            return verticesArray[drawableIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableVertexUvs = function (drawableIndex) {\\r\\n            var uvsArray = this._model.drawables.vertexUvs;\\r\\n            return uvsArray[drawableIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableOpacity = function (drawableIndex) {\\r\\n            var opacities = this._model.drawables.opacities;\\r\\n            return opacities[drawableIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableCulling = function (drawableIndex) {\\r\\n            var constantFlags = this._model.drawables.constantFlags;\\r\\n            return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableBlendMode = function (drawableIndex) {\\r\\n            var constantFlags = this._model.drawables.constantFlags;\\r\\n            return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex])\\r\\n                ? CubismBlendMode.CubismBlendMode_Additive\\r\\n                : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex])\\r\\n                    ? CubismBlendMode.CubismBlendMode_Multiplicative\\r\\n                    : CubismBlendMode.CubismBlendMode_Normal;\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableInvertedMaskBit = function (drawableIndex) {\\r\\n            var constantFlags = this._model.drawables.constantFlags;\\r\\n            return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableMasks = function () {\\r\\n            var masks = this._model.drawables.masks;\\r\\n            return masks;\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableMaskCounts = function () {\\r\\n            var maskCounts = this._model.drawables.maskCounts;\\r\\n            return maskCounts;\\r\\n        };\\r\\n        CubismModel.prototype.isUsingMasking = function () {\\r\\n            for (var d = 0; d < this._model.drawables.count; ++d) {\\r\\n                if (this._model.drawables.maskCounts[d] <= 0) {\\r\\n                    continue;\\r\\n                }\\r\\n                return true;\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableDynamicFlagIsVisible = function (drawableIndex) {\\r\\n            var dynamicFlags = this._model.drawables.dynamicFlags;\\r\\n            return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableDynamicFlagVisibilityDidChange = function (drawableIndex) {\\r\\n            var dynamicFlags = this._model.drawables.dynamicFlags;\\r\\n            return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableDynamicFlagOpacityDidChange = function (drawableIndex) {\\r\\n            var dynamicFlags = this._model.drawables.dynamicFlags;\\r\\n            return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableDynamicFlagRenderOrderDidChange = function (drawableIndex) {\\r\\n            var dynamicFlags = this._model.drawables.dynamicFlags;\\r\\n            return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.loadParameters = function () {\\r\\n            var parameterCount = this._model.parameters.count;\\r\\n            var savedParameterCount = this._savedParameters.getSize();\\r\\n            if (parameterCount > savedParameterCount) {\\r\\n                parameterCount = savedParameterCount;\\r\\n            }\\r\\n            for (var i = 0; i < parameterCount; ++i) {\\r\\n                this._parameterValues[i] = this._savedParameters.at(i);\\r\\n            }\\r\\n        };\\r\\n        CubismModel.prototype.initialize = function () {\\r\\n            cubismdebug_1.CSM_ASSERT(this._model);\\r\\n            this._parameterValues = this._model.parameters.values;\\r\\n            this._partOpacities = this._model.parts.opacities;\\r\\n            this._parameterMaximumValues = this._model.parameters.maximumValues;\\r\\n            this._parameterMinimumValues = this._model.parameters.minimumValues;\\r\\n            {\\r\\n                var parameterIds = this._model.parameters.ids;\\r\\n                var parameterCount = this._model.parameters.count;\\r\\n                this._parameterIds.prepareCapacity(parameterCount);\\r\\n                for (var i = 0; i < parameterCount; ++i) {\\r\\n                    this._parameterIds.pushBack(CubismFramework.getIdManager().getId(parameterIds[i]));\\r\\n                }\\r\\n            }\\r\\n            {\\r\\n                var partIds = this._model.parts.ids;\\r\\n                var partCount = this._model.parts.count;\\r\\n                this._partIds.prepareCapacity(partCount);\\r\\n                for (var i = 0; i < partCount; ++i) {\\r\\n                    this._partIds.pushBack(CubismFramework.getIdManager().getId(partIds[i]));\\r\\n                }\\r\\n            }\\r\\n            {\\r\\n                var drawableIds = this._model.drawables.ids;\\r\\n                var drawableCount = this._model.drawables.count;\\r\\n                this._drawableIds.prepareCapacity(drawableCount);\\r\\n                for (var i = 0; i < drawableCount; ++i) {\\r\\n                    this._drawableIds.pushBack(CubismFramework.getIdManager().getId(drawableIds[i]));\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismModel.prototype.release = function () {\\r\\n            this._model.release();\\r\\n            this._model = null;\\r\\n        };\\r\\n        return CubismModel;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismModel = CubismModel;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/model/cubismmodel.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/model/cubismmodeluserdata.ts\":\n      /*!****************************************************!*\\\n        !*** ./Framework/src/model/cubismmodeluserdata.ts ***!\n        \\****************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmodeluserdatajson_1 = __webpack_require__(/*! ./cubismmodeluserdatajson */ \\\"./Framework/src/model/cubismmodeluserdatajson.ts\\\");\\r\\nvar csmstring_1 = __webpack_require__(/*! ../type/csmstring */ \\\"./Framework/src/type/csmstring.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar csmString = csmstring_1.Live2DCubismFramework.csmString;\\r\\nvar CubismModelUserDataJson = cubismmodeluserdatajson_1.Live2DCubismFramework.CubismModelUserDataJson;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var ArtMesh = 'ArtMesh';\\r\\n    var CubismModelUserDataNode = (function () {\\r\\n        function CubismModelUserDataNode() {\\r\\n        }\\r\\n        return CubismModelUserDataNode;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismModelUserDataNode = CubismModelUserDataNode;\\r\\n    var CubismModelUserData = (function () {\\r\\n        function CubismModelUserData() {\\r\\n            this._userDataNodes = new csmVector();\\r\\n            this._artMeshUserDataNode = new csmVector();\\r\\n        }\\r\\n        CubismModelUserData.create = function (buffer, size) {\\r\\n            var ret = new CubismModelUserData();\\r\\n            ret.parseUserData(buffer, size);\\r\\n            return ret;\\r\\n        };\\r\\n        CubismModelUserData.delete = function (modelUserData) {\\r\\n            if (modelUserData != null) {\\r\\n                modelUserData.release();\\r\\n                modelUserData = null;\\r\\n            }\\r\\n        };\\r\\n        CubismModelUserData.prototype.getArtMeshUserDatas = function () {\\r\\n            return this._artMeshUserDataNode;\\r\\n        };\\r\\n        CubismModelUserData.prototype.parseUserData = function (buffer, size) {\\r\\n            var json = new CubismModelUserDataJson(buffer, size);\\r\\n            var typeOfArtMesh = CubismFramework.getIdManager().getId(ArtMesh);\\r\\n            var nodeCount = json.getUserDataCount();\\r\\n            for (var i = 0; i < nodeCount; i++) {\\r\\n                var addNode = new CubismModelUserDataNode();\\r\\n                addNode.targetId = json.getUserDataId(i);\\r\\n                addNode.targetType = CubismFramework.getIdManager().getId(json.getUserDataTargetType(i));\\r\\n                addNode.value = new csmString(json.getUserDataValue(i));\\r\\n                this._userDataNodes.pushBack(addNode);\\r\\n                if (addNode.targetType == typeOfArtMesh) {\\r\\n                    this._artMeshUserDataNode.pushBack(addNode);\\r\\n                }\\r\\n            }\\r\\n            json.release();\\r\\n            json = void 0;\\r\\n        };\\r\\n        CubismModelUserData.prototype.release = function () {\\r\\n            for (var i = 0; i < this._userDataNodes.getSize(); ++i) {\\r\\n                this._userDataNodes.set(i, null);\\r\\n            }\\r\\n            this._userDataNodes = null;\\r\\n        };\\r\\n        return CubismModelUserData;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismModelUserData = CubismModelUserData;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21vZGVsL2N1YmlzbW1vZGVsdXNlcmRhdGEudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saXZlMmQvLi9GcmFtZXdvcmsvc3JjL21vZGVsL2N1YmlzbW1vZGVsdXNlcmRhdGEudHM/OTU1MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IHRoZSBMaXZlMkQgT3BlbiBTb2Z0d2FyZSBsaWNlbnNlXG4gKiB0aGF0IGNhbiBiZSBmb3VuZCBhdCBodHRwczovL3d3dy5saXZlMmQuY29tL2V1bGEvbGl2ZTJkLW9wZW4tc29mdHdhcmUtbGljZW5zZS1hZ3JlZW1lbnRfZW4uaHRtbC5cbiAqL1xuXG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3ViaXNtbW9kZWx1c2VyZGF0YWpzb24gfSBmcm9tICcuL2N1YmlzbW1vZGVsdXNlcmRhdGFqc29uJztcbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjdWJpc21pZCB9IGZyb20gJy4uL2lkL2N1YmlzbWlkJztcbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjc21zdHJpbmcgfSBmcm9tICcuLi90eXBlL2NzbXN0cmluZyc7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3NtdmVjdG9yIH0gZnJvbSAnLi4vdHlwZS9jc212ZWN0b3InO1xuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbWZyYW1ld29yayB9IGZyb20gJy4uL2xpdmUyZGN1YmlzbWZyYW1ld29yayc7XG5pbXBvcnQgQ3ViaXNtRnJhbWV3b3JrID0gY3ViaXNtZnJhbWV3b3JrLkN1YmlzbUZyYW1ld29yaztcbmltcG9ydCBjc21WZWN0b3IgPSBjc212ZWN0b3IuY3NtVmVjdG9yO1xuaW1wb3J0IGNzbVN0cmluZyA9IGNzbXN0cmluZy5jc21TdHJpbmc7XG5pbXBvcnQgQ3ViaXNtSWRIYW5kbGUgPSBjdWJpc21pZC5DdWJpc21JZEhhbmRsZTtcbmltcG9ydCBDdWJpc21Nb2RlbFVzZXJEYXRhSnNvbiA9IGN1YmlzbW1vZGVsdXNlcmRhdGFqc29uLkN1YmlzbU1vZGVsVXNlckRhdGFKc29uO1xuXG5leHBvcnQgbmFtZXNwYWNlIExpdmUyREN1YmlzbUZyYW1ld29yayB7XG4gIGNvbnN0IEFydE1lc2ggPSAnQXJ0TWVzaCc7XG5cbiAgLyoqXG4gICAqIOODpuODvOOCtuODvOODh+ODvOOCv+OCpOODs+OCv+ODvOODleOCp+ODvOOCuVxuICAgKlxuICAgKiBKc29u44GL44KJ6Kqt44G/6L6844KT44Gg44Om44O844K244O844OH44O844K/44KS6KiY6Yyy44GX44Gm44GK44GP44Gf44KB44Gu5qeL6YCg5L2TXG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtTW9kZWxVc2VyRGF0YU5vZGUge1xuICAgIHRhcmdldFR5cGU6IEN1YmlzbUlkSGFuZGxlOyAvLyDjg6bjg7zjgrbjg7zjg4fjg7zjgr/jgr/jg7zjgrLjg4Pjg4jjgr/jgqTjg5dcbiAgICB0YXJnZXRJZDogQ3ViaXNtSWRIYW5kbGU7IC8vIOODpuODvOOCtuODvOODh+ODvOOCv+OCv+ODvOOCsuODg+ODiOOBrklEXG4gICAgdmFsdWU6IGNzbVN0cmluZzsgLy8g44Om44O844K244O844OH44O844K/XG4gIH1cblxuICAvKipcbiAgICog44Om44O844K244OH44O844K/44Gu566h55CG44Kv44Op44K5XG4gICAqXG4gICAqIOODpuODvOOCtuODh+ODvOOCv+OCkuODreODvOODieOAgeeuoeeQhuOAgeaknOe0ouOCpOODs+OCv+ODvOODleOCp+OCpOOCueOAgeino+aUvuOBvuOBp+OCkuihjOOBhuOAglxuICAgKi9cbiAgZXhwb3J0IGNsYXNzIEN1YmlzbU1vZGVsVXNlckRhdGEge1xuICAgIC8qKlxuICAgICAqIOOCpOODs+OCueOCv+ODs+OCueOBruS9nOaIkFxuICAgICAqXG4gICAgICogQHBhcmFtIGJ1ZmZlciAgICB1c2VyZGF0YTMuanNvbuOBjOiqreOBv+i+vOOBvuOCjOOBpuOBhOOCi+ODkOODg+ODleOCoVxuICAgICAqIEBwYXJhbSBzaXplICAgICAg44OQ44OD44OV44Kh44Gu44K144Kk44K6XG4gICAgICogQHJldHVybiDkvZzmiJDjgZXjgozjgZ/jgqTjg7Pjgrnjgr/jg7PjgrlcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZShcbiAgICAgIGJ1ZmZlcjogQXJyYXlCdWZmZXIsXG4gICAgICBzaXplOiBudW1iZXJcbiAgICApOiBDdWJpc21Nb2RlbFVzZXJEYXRhIHtcbiAgICAgIGNvbnN0IHJldDogQ3ViaXNtTW9kZWxVc2VyRGF0YSA9IG5ldyBDdWJpc21Nb2RlbFVzZXJEYXRhKCk7XG5cbiAgICAgIHJldC5wYXJzZVVzZXJEYXRhKGJ1ZmZlciwgc2l6ZSk7XG5cbiAgICAgIHJldHVybiByZXQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Kk44Oz44K544K/44Oz44K544KS56C05qOE44GZ44KLXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbW9kZWxVc2VyRGF0YSDnoLTmo4TjgZnjgovjgqTjg7Pjgrnjgr/jg7PjgrlcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGRlbGV0ZShtb2RlbFVzZXJEYXRhOiBDdWJpc21Nb2RlbFVzZXJEYXRhKTogdm9pZCB7XG4gICAgICBpZiAobW9kZWxVc2VyRGF0YSAhPSBudWxsKSB7XG4gICAgICAgIG1vZGVsVXNlckRhdGEucmVsZWFzZSgpO1xuICAgICAgICBtb2RlbFVzZXJEYXRhID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBcnRNZXNo44Gu44Om44O844K244O844OH44O844K/44Gu44Oq44K544OI44Gu5Y+W5b6XXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIOODpuODvOOCtuODvOODh+ODvOOCv+ODquOCueODiFxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRBcnRNZXNoVXNlckRhdGFzKCk6IGNzbVZlY3RvcjxDdWJpc21Nb2RlbFVzZXJEYXRhTm9kZT4ge1xuICAgICAgcmV0dXJuIHRoaXMuX2FydE1lc2hVc2VyRGF0YU5vZGU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogdXNlcmRhdGEzLmpzb27jga7jg5Hjg7zjgrlcbiAgICAgKlxuICAgICAqIEBwYXJhbSBidWZmZXIgICAgdXNlcmRhdGEzLmpzb27jgYzoqq3jgb/ovrzjgb7jgozjgabjgYTjgovjg5Djg4Pjg5XjgqFcbiAgICAgKiBAcGFyYW0gc2l6ZSAgICAgIOODkOODg+ODleOCoeOBruOCteOCpOOCulxuICAgICAqL1xuICAgIHB1YmxpYyBwYXJzZVVzZXJEYXRhKGJ1ZmZlcjogQXJyYXlCdWZmZXIsIHNpemU6IG51bWJlcik6IHZvaWQge1xuICAgICAgbGV0IGpzb246IEN1YmlzbU1vZGVsVXNlckRhdGFKc29uID0gbmV3IEN1YmlzbU1vZGVsVXNlckRhdGFKc29uKFxuICAgICAgICBidWZmZXIsXG4gICAgICAgIHNpemVcbiAgICAgICk7XG5cbiAgICAgIGNvbnN0IHR5cGVPZkFydE1lc2ggPSBDdWJpc21GcmFtZXdvcmsuZ2V0SWRNYW5hZ2VyKCkuZ2V0SWQoQXJ0TWVzaCk7XG4gICAgICBjb25zdCBub2RlQ291bnQ6IG51bWJlciA9IGpzb24uZ2V0VXNlckRhdGFDb3VudCgpO1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5vZGVDb3VudDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGFkZE5vZGU6IEN1YmlzbU1vZGVsVXNlckRhdGFOb2RlID0gbmV3IEN1YmlzbU1vZGVsVXNlckRhdGFOb2RlKCk7XG5cbiAgICAgICAgYWRkTm9kZS50YXJnZXRJZCA9IGpzb24uZ2V0VXNlckRhdGFJZChpKTtcbiAgICAgICAgYWRkTm9kZS50YXJnZXRUeXBlID0gQ3ViaXNtRnJhbWV3b3JrLmdldElkTWFuYWdlcigpLmdldElkKFxuICAgICAgICAgIGpzb24uZ2V0VXNlckRhdGFUYXJnZXRUeXBlKGkpXG4gICAgICAgICk7XG4gICAgICAgIGFkZE5vZGUudmFsdWUgPSBuZXcgY3NtU3RyaW5nKGpzb24uZ2V0VXNlckRhdGFWYWx1ZShpKSk7XG4gICAgICAgIHRoaXMuX3VzZXJEYXRhTm9kZXMucHVzaEJhY2soYWRkTm9kZSk7XG5cbiAgICAgICAgaWYgKGFkZE5vZGUudGFyZ2V0VHlwZSA9PSB0eXBlT2ZBcnRNZXNoKSB7XG4gICAgICAgICAgdGhpcy5fYXJ0TWVzaFVzZXJEYXRhTm9kZS5wdXNoQmFjayhhZGROb2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBqc29uLnJlbGVhc2UoKTtcbiAgICAgIGpzb24gPSB2b2lkIDA7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgdGhpcy5fdXNlckRhdGFOb2RlcyA9IG5ldyBjc21WZWN0b3I8Q3ViaXNtTW9kZWxVc2VyRGF0YU5vZGU+KCk7XG4gICAgICB0aGlzLl9hcnRNZXNoVXNlckRhdGFOb2RlID0gbmV3IGNzbVZlY3RvcjxDdWJpc21Nb2RlbFVzZXJEYXRhTm9kZT4oKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg4fjgrnjg4jjg6njgq/jgr/nm7jlvZPjga7lh6bnkIZcbiAgICAgKlxuICAgICAqIOODpuODvOOCtuODvOODh+ODvOOCv+ani+mAoOS9k+mFjeWIl+OCkuino+aUvuOBmeOCi1xuICAgICAqL1xuICAgIHB1YmxpYyByZWxlYXNlKCk6IHZvaWQge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl91c2VyRGF0YU5vZGVzLmdldFNpemUoKTsgKytpKSB7XG4gICAgICAgIHRoaXMuX3VzZXJEYXRhTm9kZXMuc2V0KGksIG51bGwpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl91c2VyRGF0YU5vZGVzID0gbnVsbDtcbiAgICB9XG5cbiAgICBwcml2YXRlIF91c2VyRGF0YU5vZGVzOiBjc21WZWN0b3I8Q3ViaXNtTW9kZWxVc2VyRGF0YU5vZGU+OyAvLyDjg6bjg7zjgrbjg7zjg4fjg7zjgr/mp4vpgKDkvZPphY3liJdcbiAgICBwcml2YXRlIF9hcnRNZXNoVXNlckRhdGFOb2RlOiBjc21WZWN0b3I8Q3ViaXNtTW9kZWxVc2VyRGF0YU5vZGU+OyAvLyDplrLopqfjg6rjgrnjg4jjga7kv53mjIFcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOztBQU9BO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUFBO0FBQ0E7QUFPQTtBQUFBO0FBSUE7QUFBQTtBQUFBO0FBSkE7QUFXQTtBQTZFQTtBQUNBO0FBQ0E7QUFDQTtBQXhFQTtBQUlBO0FBRUE7QUFFQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUtBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQWVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUlBO0FBQUE7QUFqR0E7QUFrR0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./Framework/src/model/cubismmodeluserdata.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/model/cubismmodeluserdatajson.ts\":\n      /*!********************************************************!*\\\n        !*** ./Framework/src/model/cubismmodeluserdatajson.ts ***!\n        \\********************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismjson_1 = __webpack_require__(/*! ../utils/cubismjson */ \\\"./Framework/src/utils/cubismjson.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismJson = cubismjson_1.Live2DCubismFramework.CubismJson;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var Meta = 'Meta';\\r\\n    var UserDataCount = 'UserDataCount';\\r\\n    var TotalUserDataSize = 'TotalUserDataSize';\\r\\n    var UserData = 'UserData';\\r\\n    var Target = 'Target';\\r\\n    var Id = 'Id';\\r\\n    var Value = 'Value';\\r\\n    var CubismModelUserDataJson = (function () {\\r\\n        function CubismModelUserDataJson(buffer, size) {\\r\\n            this._json = CubismJson.create(buffer, size);\\r\\n        }\\r\\n        CubismModelUserDataJson.prototype.release = function () {\\r\\n            CubismJson.delete(this._json);\\r\\n        };\\r\\n        CubismModelUserDataJson.prototype.getUserDataCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(UserDataCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismModelUserDataJson.prototype.getTotalUserDataSize = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(TotalUserDataSize)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismModelUserDataJson.prototype.getUserDataTargetType = function (i) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(UserData)\\r\\n                .getValueByIndex(i)\\r\\n                .getValueByString(Target)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelUserDataJson.prototype.getUserDataId = function (i) {\\r\\n            return CubismFramework.getIdManager().getId(this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(UserData)\\r\\n                .getValueByIndex(i)\\r\\n                .getValueByString(Id)\\r\\n                .getRawString());\\r\\n        };\\r\\n        CubismModelUserDataJson.prototype.getUserDataValue = function (i) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(UserData)\\r\\n                .getValueByIndex(i)\\r\\n                .getValueByString(Value)\\r\\n                .getRawString();\\r\\n        };\\r\\n        return CubismModelUserDataJson;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismModelUserDataJson = CubismModelUserDataJson;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21vZGVsL2N1YmlzbW1vZGVsdXNlcmRhdGFqc29uLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vRnJhbWV3b3JrL3NyYy9tb2RlbC9jdWJpc21tb2RlbHVzZXJkYXRhanNvbi50cz82MWE4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjdWJpc21qc29uIH0gZnJvbSAnLi4vdXRpbHMvY3ViaXNtanNvbic7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3ViaXNtaWQgfSBmcm9tICcuLi9pZC9jdWJpc21pZCc7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3ViaXNtZnJhbWV3b3JrIH0gZnJvbSAnLi4vbGl2ZTJkY3ViaXNtZnJhbWV3b3JrJztcbmltcG9ydCBDdWJpc21GcmFtZXdvcmsgPSBjdWJpc21mcmFtZXdvcmsuQ3ViaXNtRnJhbWV3b3JrO1xuaW1wb3J0IEN1YmlzbUlkSGFuZGxlID0gY3ViaXNtaWQuQ3ViaXNtSWRIYW5kbGU7XG5pbXBvcnQgQ3ViaXNtSnNvbiA9IGN1YmlzbWpzb24uQ3ViaXNtSnNvbjtcblxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICBjb25zdCBNZXRhID0gJ01ldGEnO1xuICBjb25zdCBVc2VyRGF0YUNvdW50ID0gJ1VzZXJEYXRhQ291bnQnO1xuICBjb25zdCBUb3RhbFVzZXJEYXRhU2l6ZSA9ICdUb3RhbFVzZXJEYXRhU2l6ZSc7XG4gIGNvbnN0IFVzZXJEYXRhID0gJ1VzZXJEYXRhJztcbiAgY29uc3QgVGFyZ2V0ID0gJ1RhcmdldCc7XG4gIGNvbnN0IElkID0gJ0lkJztcbiAgY29uc3QgVmFsdWUgPSAnVmFsdWUnO1xuXG4gIGV4cG9ydCBjbGFzcyBDdWJpc21Nb2RlbFVzZXJEYXRhSnNvbiB7XG4gICAgLyoqXG4gICAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAgICogQHBhcmFtIGJ1ZmZlciAgICB1c2VyZGF0YTMuanNvbuOBjOiqreOBv+i+vOOBvuOCjOOBpuOBhOOCi+ODkOODg+ODleOCoVxuICAgICAqIEBwYXJhbSBzaXplICAgICAg44OQ44OD44OV44Kh44Gu44K144Kk44K6XG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKGJ1ZmZlcjogQXJyYXlCdWZmZXIsIHNpemU6IG51bWJlcikge1xuICAgICAgdGhpcy5fanNvbiA9IEN1YmlzbUpzb24uY3JlYXRlKGJ1ZmZlciwgc2l6ZSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44OH44K544OI44Op44Kv44K/55u45b2T44Gu5Yem55CGXG4gICAgICovXG4gICAgcHVibGljIHJlbGVhc2UoKTogdm9pZCB7XG4gICAgICBDdWJpc21Kc29uLmRlbGV0ZSh0aGlzLl9qc29uKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6bjg7zjgrbjg7zjg4fjg7zjgr/lgIvmlbDjga7lj5blvpdcbiAgICAgKiBAcmV0dXJuIOODpuODvOOCtuODvOODh+ODvOOCv+OBruWAi+aVsFxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRVc2VyRGF0YUNvdW50KCk6IG51bWJlciB7XG4gICAgICByZXR1cm4gdGhpcy5fanNvblxuICAgICAgICAuZ2V0Um9vdCgpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKE1ldGEpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKFVzZXJEYXRhQ291bnQpXG4gICAgICAgIC50b0ludCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODpuODvOOCtuODvOODh+ODvOOCv+e3j+aWh+Wtl+WIl+aVsOOBruWPluW+l1xuICAgICAqXG4gICAgICogQHJldHVybiDjg6bjg7zjgrbjg7zjg4fjg7zjgr/nt4/mloflrZfliJfmlbBcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0VG90YWxVc2VyRGF0YVNpemUoKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiB0aGlzLl9qc29uXG4gICAgICAgIC5nZXRSb290KClcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoTWV0YSlcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoVG90YWxVc2VyRGF0YVNpemUpXG4gICAgICAgIC50b0ludCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODpuODvOOCtuODvOODh+ODvOOCv+OBruOCv+OCpOODl+OBruWPluW+l1xuICAgICAqXG4gICAgICogQHJldHVybiDjg6bjg7zjgrbjg7zjg4fjg7zjgr/jga7jgr/jgqTjg5dcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0VXNlckRhdGFUYXJnZXRUeXBlKGk6IG51bWJlcik6IHN0cmluZyB7XG4gICAgICByZXR1cm4gdGhpcy5fanNvblxuICAgICAgICAuZ2V0Um9vdCgpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKFVzZXJEYXRhKVxuICAgICAgICAuZ2V0VmFsdWVCeUluZGV4KGkpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKFRhcmdldClcbiAgICAgICAgLmdldFJhd1N0cmluZygpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODpuODvOOCtuODvOODh+ODvOOCv+OBruOCv+ODvOOCsuODg+ODiElE44Gu5Y+W5b6XXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaSDjgqTjg7Pjg4fjg4Pjgq/jgrlcbiAgICAgKiBAcmV0dXJuIOODpuODvOOCtuODvOODh+ODvOOCv+OCv+ODvOOCsuODg+ODiElEXG4gICAgICovXG4gICAgcHVibGljIGdldFVzZXJEYXRhSWQoaTogbnVtYmVyKTogQ3ViaXNtSWRIYW5kbGUge1xuICAgICAgcmV0dXJuIEN1YmlzbUZyYW1ld29yay5nZXRJZE1hbmFnZXIoKS5nZXRJZChcbiAgICAgICAgdGhpcy5fanNvblxuICAgICAgICAgIC5nZXRSb290KClcbiAgICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhVc2VyRGF0YSlcbiAgICAgICAgICAuZ2V0VmFsdWVCeUluZGV4KGkpXG4gICAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoSWQpXG4gICAgICAgICAgLmdldFJhd1N0cmluZygpXG4gICAgICApO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODpuODvOOCtuODvOODh+ODvOOCv+OBruaWh+Wtl+WIl+OBruWPluW+l1xuICAgICAqXG4gICAgICogQHBhcmFtIGkg44Kk44Oz44OH44OD44Kv44K5XG4gICAgICogQHJldHVybiDjg6bjg7zjgrbjg7zjg4fjg7zjgr9cbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0VXNlckRhdGFWYWx1ZShpOiBudW1iZXIpOiBzdHJpbmcge1xuICAgICAgcmV0dXJuIHRoaXMuX2pzb25cbiAgICAgICAgLmdldFJvb3QoKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhVc2VyRGF0YSlcbiAgICAgICAgLmdldFZhbHVlQnlJbmRleChpKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhWYWx1ZSlcbiAgICAgICAgLmdldFJhd1N0cmluZygpO1xuICAgIH1cblxuICAgIHByaXZhdGUgX2pzb246IEN1YmlzbUpzb247XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFPQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBTUE7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQUE7QUF6RkE7QUEwRkE7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./Framework/src/model/cubismmodeluserdatajson.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/model/cubismusermodel.ts\":\n      /*!************************************************!*\\\n        !*** ./Framework/src/model/cubismusermodel.ts ***!\n        \\************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar cubismmotionmanager_1 = __webpack_require__(/*! ../motion/cubismmotionmanager */ \\\"./Framework/src/motion/cubismmotionmanager.ts\\\");\\r\\nvar cubismtargetpoint_1 = __webpack_require__(/*! ../math/cubismtargetpoint */ \\\"./Framework/src/math/cubismtargetpoint.ts\\\");\\r\\nvar cubismmodelmatrix_1 = __webpack_require__(/*! ../math/cubismmodelmatrix */ \\\"./Framework/src/math/cubismmodelmatrix.ts\\\");\\r\\nvar cubismmoc_1 = __webpack_require__(/*! ./cubismmoc */ \\\"./Framework/src/model/cubismmoc.ts\\\");\\r\\nvar cubismmotion_1 = __webpack_require__(/*! ../motion/cubismmotion */ \\\"./Framework/src/motion/cubismmotion.ts\\\");\\r\\nvar cubismexpressionmotion_1 = __webpack_require__(/*! ../motion/cubismexpressionmotion */ \\\"./Framework/src/motion/cubismexpressionmotion.ts\\\");\\r\\nvar cubismpose_1 = __webpack_require__(/*! ../effect/cubismpose */ \\\"./Framework/src/effect/cubismpose.ts\\\");\\r\\nvar cubismmodeluserdata_1 = __webpack_require__(/*! ./cubismmodeluserdata */ \\\"./Framework/src/model/cubismmodeluserdata.ts\\\");\\r\\nvar cubismphysics_1 = __webpack_require__(/*! ../physics/cubismphysics */ \\\"./Framework/src/physics/cubismphysics.ts\\\");\\r\\nvar cubismbreath_1 = __webpack_require__(/*! ../effect/cubismbreath */ \\\"./Framework/src/effect/cubismbreath.ts\\\");\\r\\nvar cubismeyeblink_1 = __webpack_require__(/*! ../effect/cubismeyeblink */ \\\"./Framework/src/effect/cubismeyeblink.ts\\\");\\r\\nvar cubismrenderer_webgl_1 = __webpack_require__(/*! ../rendering/cubismrenderer_webgl */ \\\"./Framework/src/rendering/cubismrenderer_webgl.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar CubismRenderer_WebGL = cubismrenderer_webgl_1.Live2DCubismFramework.CubismRenderer_WebGL;\\r\\nvar CubismEyeBlink = cubismeyeblink_1.Live2DCubismFramework.CubismEyeBlink;\\r\\nvar CubismBreath = cubismbreath_1.Live2DCubismFramework.CubismBreath;\\r\\nvar Constant = live2dcubismframework_1.Live2DCubismFramework.Constant;\\r\\nvar CubismPhysics = cubismphysics_1.Live2DCubismFramework.CubismPhysics;\\r\\nvar CubismModelUserData = cubismmodeluserdata_1.Live2DCubismFramework.CubismModelUserData;\\r\\nvar CubismPose = cubismpose_1.Live2DCubismFramework.CubismPose;\\r\\nvar CubismExpressionMotion = cubismexpressionmotion_1.Live2DCubismFramework.CubismExpressionMotion;\\r\\nvar CubismMotion = cubismmotion_1.Live2DCubismFramework.CubismMotion;\\r\\nvar CubismMoc = cubismmoc_1.Live2DCubismFramework.CubismMoc;\\r\\nvar CubismModelMatrix = cubismmodelmatrix_1.Live2DCubismFramework.CubismModelMatrix;\\r\\nvar CubismTargetPoint = cubismtargetpoint_1.Live2DCubismFramework.CubismTargetPoint;\\r\\nvar CubismMotionManager = cubismmotionmanager_1.Live2DCubismFramework.CubismMotionManager;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismUserModel = (function () {\\r\\n        function CubismUserModel() {\\r\\n            this.loadMotion = function (buffer, size, name, onFinishedMotionHandler) { return CubismMotion.create(buffer, size, onFinishedMotionHandler); };\\r\\n            this._moc = null;\\r\\n            this._model = null;\\r\\n            this._motionManager = null;\\r\\n            this._expressionManager = null;\\r\\n            this._eyeBlink = null;\\r\\n            this._breath = null;\\r\\n            this._modelMatrix = null;\\r\\n            this._pose = null;\\r\\n            this._dragManager = null;\\r\\n            this._physics = null;\\r\\n            this._modelUserData = null;\\r\\n            this._initialized = false;\\r\\n            this._updating = false;\\r\\n            this._opacity = 1.0;\\r\\n            this._lipsync = true;\\r\\n            this._lastLipSyncValue = 0.0;\\r\\n            this._dragX = 0.0;\\r\\n            this._dragY = 0.0;\\r\\n            this._accelerationX = 0.0;\\r\\n            this._accelerationY = 0.0;\\r\\n            this._accelerationZ = 0.0;\\r\\n            this._debugMode = false;\\r\\n            this._renderer = null;\\r\\n            this._motionManager = new CubismMotionManager();\\r\\n            this._motionManager.setEventCallback(CubismUserModel.cubismDefaultMotionEventCallback, this);\\r\\n            this._expressionManager = new CubismMotionManager();\\r\\n            this._dragManager = new CubismTargetPoint();\\r\\n        }\\r\\n        CubismUserModel.prototype.isInitialized = function () {\\r\\n            return this._initialized;\\r\\n        };\\r\\n        CubismUserModel.prototype.setInitialized = function (v) {\\r\\n            this._initialized = v;\\r\\n        };\\r\\n        CubismUserModel.prototype.isUpdating = function () {\\r\\n            return this._updating;\\r\\n        };\\r\\n        CubismUserModel.prototype.setUpdating = function (v) {\\r\\n            this._updating = v;\\r\\n        };\\r\\n        CubismUserModel.prototype.setDragging = function (x, y) {\\r\\n            this._dragManager.set(x, y);\\r\\n        };\\r\\n        CubismUserModel.prototype.setAcceleration = function (x, y, z) {\\r\\n            this._accelerationX = x;\\r\\n            this._accelerationY = y;\\r\\n            this._accelerationZ = z;\\r\\n        };\\r\\n        CubismUserModel.prototype.getModelMatrix = function () {\\r\\n            return this._modelMatrix;\\r\\n        };\\r\\n        CubismUserModel.prototype.setOpacity = function (a) {\\r\\n            this._opacity = a;\\r\\n        };\\r\\n        CubismUserModel.prototype.getOpacity = function () {\\r\\n            return this._opacity;\\r\\n        };\\r\\n        CubismUserModel.prototype.loadModel = function (buffer) {\\r\\n            this._moc = CubismMoc.create(buffer);\\r\\n            this._model = this._moc.createModel();\\r\\n            this._model.saveParameters();\\r\\n            if (this._moc == null || this._model == null) {\\r\\n                cubismdebug_1.CubismLogError('Failed to CreateModel().');\\r\\n                return;\\r\\n            }\\r\\n            this._modelMatrix = new CubismModelMatrix(this._model.getCanvasWidth(), this._model.getCanvasHeight());\\r\\n        };\\r\\n        CubismUserModel.prototype.loadExpression = function (buffer, size, name) {\\r\\n            return CubismExpressionMotion.create(buffer, size);\\r\\n        };\\r\\n        CubismUserModel.prototype.loadPose = function (buffer, size) {\\r\\n            this._pose = CubismPose.create(buffer, size);\\r\\n        };\\r\\n        CubismUserModel.prototype.loadUserData = function (buffer, size) {\\r\\n            this._modelUserData = CubismModelUserData.create(buffer, size);\\r\\n        };\\r\\n        CubismUserModel.prototype.loadPhysics = function (buffer, size) {\\r\\n            this._physics = CubismPhysics.create(buffer, size);\\r\\n        };\\r\\n        CubismUserModel.prototype.isHit = function (drawableId, pointX, pointY) {\\r\\n            var drawIndex = this._model.getDrawableIndex(drawableId);\\r\\n            if (drawIndex < 0) {\\r\\n                return false;\\r\\n            }\\r\\n            var count = this._model.getDrawableVertexCount(drawIndex);\\r\\n            var vertices = this._model.getDrawableVertices(drawIndex);\\r\\n            var left = vertices[0];\\r\\n            var right = vertices[0];\\r\\n            var top = vertices[1];\\r\\n            var bottom = vertices[1];\\r\\n            for (var j = 1; j < count; ++j) {\\r\\n                var x = vertices[Constant.vertexOffset + j * Constant.vertexStep];\\r\\n                var y = vertices[Constant.vertexOffset + j * Constant.vertexStep + 1];\\r\\n                if (x < left) {\\r\\n                    left = x;\\r\\n                }\\r\\n                if (x > right) {\\r\\n                    right = x;\\r\\n                }\\r\\n                if (y < top) {\\r\\n                    top = y;\\r\\n                }\\r\\n                if (y > bottom) {\\r\\n                    bottom = y;\\r\\n                }\\r\\n            }\\r\\n            var tx = this._modelMatrix.invertTransformX(pointX);\\r\\n            var ty = this._modelMatrix.invertTransformY(pointY);\\r\\n            return left <= tx && tx <= right && top <= ty && ty <= bottom;\\r\\n        };\\r\\n        CubismUserModel.prototype.getModel = function () {\\r\\n            return this._model;\\r\\n        };\\r\\n        CubismUserModel.prototype.getRenderer = function () {\\r\\n            return this._renderer;\\r\\n        };\\r\\n        CubismUserModel.prototype.createRenderer = function () {\\r\\n            if (this._renderer) {\\r\\n                this.deleteRenderer();\\r\\n            }\\r\\n            this._renderer = new CubismRenderer_WebGL();\\r\\n            this._renderer.initialize(this._model);\\r\\n        };\\r\\n        CubismUserModel.prototype.deleteRenderer = function () {\\r\\n            if (this._renderer != null) {\\r\\n                this._renderer.release();\\r\\n                this._renderer = null;\\r\\n            }\\r\\n        };\\r\\n        CubismUserModel.prototype.motionEventFired = function (eventValue) {\\r\\n            cubismdebug_1.CubismLogInfo('{0}', eventValue.s);\\r\\n        };\\r\\n        CubismUserModel.cubismDefaultMotionEventCallback = function (caller, eventValue, customData) {\\r\\n            var model = customData;\\r\\n            if (model != null) {\\r\\n                model.motionEventFired(eventValue);\\r\\n            }\\r\\n        };\\r\\n        CubismUserModel.prototype.release = function () {\\r\\n            if (this._motionManager != null) {\\r\\n                this._motionManager.release();\\r\\n                this._motionManager = null;\\r\\n            }\\r\\n            if (this._expressionManager != null) {\\r\\n                this._expressionManager.release();\\r\\n                this._expressionManager = null;\\r\\n            }\\r\\n            if (this._moc != null) {\\r\\n                this._moc.deleteModel(this._model);\\r\\n                this._moc.release();\\r\\n                this._moc = null;\\r\\n            }\\r\\n            this._modelMatrix = null;\\r\\n            CubismPose.delete(this._pose);\\r\\n            CubismEyeBlink.delete(this._eyeBlink);\\r\\n            CubismBreath.delete(this._breath);\\r\\n            this._dragManager = null;\\r\\n            CubismPhysics.delete(this._physics);\\r\\n            CubismModelUserData.delete(this._modelUserData);\\r\\n            this.deleteRenderer();\\r\\n        };\\r\\n        return CubismUserModel;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismUserModel = CubismUserModel;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/model/cubismusermodel.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/motion/acubismmotion.ts\":\n      /*!***********************************************!*\\\n        !*** ./Framework/src/motion/acubismmotion.ts ***!\n        \\***********************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmath_1 = __webpack_require__(/*! ../math/cubismmath */ \\\"./Framework/src/math/cubismmath.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismMath = cubismmath_1.Live2DCubismFramework.CubismMath;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var ACubismMotion = (function () {\\r\\n        function ACubismMotion() {\\r\\n            var _this = this;\\r\\n            this.setFinishedMotionHandler = function (onFinishedMotionHandler) { return (_this._onFinishedMotion = onFinishedMotionHandler); };\\r\\n            this.getFinishedMotionHandler = function () { return _this._onFinishedMotion; };\\r\\n            this._fadeInSeconds = -1.0;\\r\\n            this._fadeOutSeconds = -1.0;\\r\\n            this._weight = 1.0;\\r\\n            this._offsetSeconds = 0.0;\\r\\n            this._firedEventValues = new csmVector();\\r\\n        }\\r\\n        ACubismMotion.delete = function (motion) {\\r\\n            motion.release();\\r\\n            motion = void 0;\\r\\n            motion = null;\\r\\n        };\\r\\n        ACubismMotion.prototype.release = function () {\\r\\n            this._weight = 0.0;\\r\\n        };\\r\\n        ACubismMotion.prototype.updateParameters = function (model, motionQueueEntry, userTimeSeconds) {\\r\\n            if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\\r\\n                return;\\r\\n            }\\r\\n            if (!motionQueueEntry.isStarted()) {\\r\\n                motionQueueEntry.setIsStarted(true);\\r\\n                motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\\r\\n                motionQueueEntry.setFadeInStartTime(userTimeSeconds);\\r\\n                var duration = this.getDuration();\\r\\n                if (motionQueueEntry.getEndTime() < 0) {\\r\\n                    motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\\r\\n                }\\r\\n            }\\r\\n            var fadeWeight = this._weight;\\r\\n            var fadeIn = this._fadeInSeconds == 0.0\\r\\n                ? 1.0\\r\\n                : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\\r\\n                    this._fadeInSeconds);\\r\\n            var fadeOut = this._fadeOutSeconds == 0.0 || motionQueueEntry.getEndTime() < 0.0\\r\\n                ? 1.0\\r\\n                : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) /\\r\\n                    this._fadeOutSeconds);\\r\\n            fadeWeight = fadeWeight * fadeIn * fadeOut;\\r\\n            motionQueueEntry.setState(userTimeSeconds, fadeWeight);\\r\\n            cubismdebug_1.CSM_ASSERT(0.0 <= fadeWeight && fadeWeight <= 1.0);\\r\\n            this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\\r\\n            if (motionQueueEntry.getEndTime() > 0 &&\\r\\n                motionQueueEntry.getEndTime() < userTimeSeconds) {\\r\\n                motionQueueEntry.setIsFinished(true);\\r\\n            }\\r\\n        };\\r\\n        ACubismMotion.prototype.setFadeInTime = function (fadeInSeconds) {\\r\\n            this._fadeInSeconds = fadeInSeconds;\\r\\n        };\\r\\n        ACubismMotion.prototype.setFadeOutTime = function (fadeOutSeconds) {\\r\\n            this._fadeOutSeconds = fadeOutSeconds;\\r\\n        };\\r\\n        ACubismMotion.prototype.getFadeOutTime = function () {\\r\\n            return this._fadeOutSeconds;\\r\\n        };\\r\\n        ACubismMotion.prototype.getFadeInTime = function () {\\r\\n            return this._fadeInSeconds;\\r\\n        };\\r\\n        ACubismMotion.prototype.setWeight = function (weight) {\\r\\n            this._weight = weight;\\r\\n        };\\r\\n        ACubismMotion.prototype.getWeight = function () {\\r\\n            return this._weight;\\r\\n        };\\r\\n        ACubismMotion.prototype.getDuration = function () {\\r\\n            return -1.0;\\r\\n        };\\r\\n        ACubismMotion.prototype.getLoopDuration = function () {\\r\\n            return -1.0;\\r\\n        };\\r\\n        ACubismMotion.prototype.setOffsetTime = function (offsetSeconds) {\\r\\n            this._offsetSeconds = offsetSeconds;\\r\\n        };\\r\\n        ACubismMotion.prototype.getFiredEvent = function (beforeCheckTimeSeconds, motionTimeSeconds) {\\r\\n            return this._firedEventValues;\\r\\n        };\\r\\n        return ACubismMotion;\\r\\n    }());\\r\\n    Live2DCubismFramework.ACubismMotion = ACubismMotion;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/motion/acubismmotion.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/motion/cubismexpressionmotion.ts\":\n      /*!********************************************************!*\\\n        !*** ./Framework/src/motion/cubismexpressionmotion.ts ***!\n        \\********************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar acubismmotion_1 = __webpack_require__(/*! ./acubismmotion */ \\\"./Framework/src/motion/acubismmotion.ts\\\");\\r\\nvar cubismjson_1 = __webpack_require__(/*! ../utils/cubismjson */ \\\"./Framework/src/utils/cubismjson.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismJson = cubismjson_1.Live2DCubismFramework.CubismJson;\\r\\nvar ACubismMotion = acubismmotion_1.Live2DCubismFramework.ACubismMotion;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var ExpressionKeyFadeIn = 'FadeInTime';\\r\\n    var ExpressionKeyFadeOut = 'FadeOutTime';\\r\\n    var ExpressionKeyParameters = 'Parameters';\\r\\n    var ExpressionKeyId = 'Id';\\r\\n    var ExpressionKeyValue = 'Value';\\r\\n    var ExpressionKeyBlend = 'Blend';\\r\\n    var BlendValueAdd = 'Add';\\r\\n    var BlendValueMultiply = 'Multiply';\\r\\n    var BlendValueOverwrite = 'Overwrite';\\r\\n    var DefaultFadeTime = 1.0;\\r\\n    var CubismExpressionMotion = (function (_super) {\\r\\n        __extends(CubismExpressionMotion, _super);\\r\\n        function CubismExpressionMotion() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._parameters = new csmVector();\\r\\n            return _this;\\r\\n        }\\r\\n        CubismExpressionMotion.create = function (buffer, size) {\\r\\n            var expression = new CubismExpressionMotion();\\r\\n            var json = CubismJson.create(buffer, size);\\r\\n            var root = json.getRoot();\\r\\n            expression.setFadeInTime(root.getValueByString(ExpressionKeyFadeIn).toFloat(DefaultFadeTime));\\r\\n            expression.setFadeOutTime(root.getValueByString(ExpressionKeyFadeOut).toFloat(DefaultFadeTime));\\r\\n            var parameterCount = root\\r\\n                .getValueByString(ExpressionKeyParameters)\\r\\n                .getSize();\\r\\n            expression._parameters.prepareCapacity(parameterCount);\\r\\n            for (var i = 0; i < parameterCount; ++i) {\\r\\n                var param = root\\r\\n                    .getValueByString(ExpressionKeyParameters)\\r\\n                    .getValueByIndex(i);\\r\\n                var parameterId = CubismFramework.getIdManager().getId(param.getValueByString(ExpressionKeyId).getRawString());\\r\\n                var value = param\\r\\n                    .getValueByString(ExpressionKeyValue)\\r\\n                    .toFloat();\\r\\n                var blendType = void 0;\\r\\n                if (param.getValueByString(ExpressionKeyBlend).isNull() ||\\r\\n                    param.getValueByString(ExpressionKeyBlend).getString() ==\\r\\n                        BlendValueAdd) {\\r\\n                    blendType = ExpressionBlendType.ExpressionBlendType_Add;\\r\\n                }\\r\\n                else if (param.getValueByString(ExpressionKeyBlend).getString() ==\\r\\n                    BlendValueMultiply) {\\r\\n                    blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\\r\\n                }\\r\\n                else if (param.getValueByString(ExpressionKeyBlend).getString() ==\\r\\n                    BlendValueOverwrite) {\\r\\n                    blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\\r\\n                }\\r\\n                else {\\r\\n                    blendType = ExpressionBlendType.ExpressionBlendType_Add;\\r\\n                }\\r\\n                var item = new ExpressionParameter();\\r\\n                item.parameterId = parameterId;\\r\\n                item.blendType = blendType;\\r\\n                item.value = value;\\r\\n                expression._parameters.pushBack(item);\\r\\n            }\\r\\n            CubismJson.delete(json);\\r\\n            return expression;\\r\\n        };\\r\\n        CubismExpressionMotion.prototype.doUpdateParameters = function (model, userTimeSeconds, weight, motionQueueEntry) {\\r\\n            for (var i = 0; i < this._parameters.getSize(); ++i) {\\r\\n                var parameter = this._parameters.at(i);\\r\\n                switch (parameter.blendType) {\\r\\n                    case ExpressionBlendType.ExpressionBlendType_Add: {\\r\\n                        model.addParameterValueById(parameter.parameterId, parameter.value, weight);\\r\\n                        break;\\r\\n                    }\\r\\n                    case ExpressionBlendType.ExpressionBlendType_Multiply: {\\r\\n                        model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\\r\\n                        break;\\r\\n                    }\\r\\n                    case ExpressionBlendType.ExpressionBlendType_Overwrite: {\\r\\n                        model.setParameterValueById(parameter.parameterId, parameter.value, weight);\\r\\n                        break;\\r\\n                    }\\r\\n                    default:\\r\\n                        break;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        return CubismExpressionMotion;\\r\\n    }(ACubismMotion));\\r\\n    Live2DCubismFramework.CubismExpressionMotion = CubismExpressionMotion;\\r\\n    var ExpressionBlendType;\\r\\n    (function (ExpressionBlendType) {\\r\\n        ExpressionBlendType[ExpressionBlendType[\\\"ExpressionBlendType_Add\\\"] = 0] = \\\"ExpressionBlendType_Add\\\";\\r\\n        ExpressionBlendType[ExpressionBlendType[\\\"ExpressionBlendType_Multiply\\\"] = 1] = \\\"ExpressionBlendType_Multiply\\\";\\r\\n        ExpressionBlendType[ExpressionBlendType[\\\"ExpressionBlendType_Overwrite\\\"] = 2] = \\\"ExpressionBlendType_Overwrite\\\";\\r\\n    })(ExpressionBlendType = Live2DCubismFramework.ExpressionBlendType || (Live2DCubismFramework.ExpressionBlendType = {}));\\r\\n    var ExpressionParameter = (function () {\\r\\n        function ExpressionParameter() {\\r\\n        }\\r\\n        return ExpressionParameter;\\r\\n    }());\\r\\n    Live2DCubismFramework.ExpressionParameter = ExpressionParameter;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/motion/cubismexpressionmotion.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/motion/cubismmotion.ts\":\n      /*!**********************************************!*\\\n        !*** ./Framework/src/motion/cubismmotion.ts ***!\n        \\**********************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmotionjson_1 = __webpack_require__(/*! ./cubismmotionjson */ \\\"./Framework/src/motion/cubismmotionjson.ts\\\");\\r\\nvar cubismmotioninternal_1 = __webpack_require__(/*! ./cubismmotioninternal */ \\\"./Framework/src/motion/cubismmotioninternal.ts\\\");\\r\\nvar acubismmotion_1 = __webpack_require__(/*! ./acubismmotion */ \\\"./Framework/src/motion/acubismmotion.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar cubismmath_1 = __webpack_require__(/*! ../math/cubismmath */ \\\"./Framework/src/math/cubismmath.ts\\\");\\r\\nvar csmstring_1 = __webpack_require__(/*! ../type/csmstring */ \\\"./Framework/src/type/csmstring.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar csmString = csmstring_1.Live2DCubismFramework.csmString;\\r\\nvar CubismMotionData = cubismmotioninternal_1.Live2DCubismFramework.CubismMotionData;\\r\\nvar CubismMotionSegment = cubismmotioninternal_1.Live2DCubismFramework.CubismMotionSegment;\\r\\nvar CubismMotionPoint = cubismmotioninternal_1.Live2DCubismFramework.CubismMotionPoint;\\r\\nvar CubismMotionEvent = cubismmotioninternal_1.Live2DCubismFramework.CubismMotionEvent;\\r\\nvar CubismMotionSegmentType = cubismmotioninternal_1.Live2DCubismFramework.CubismMotionSegmentType;\\r\\nvar CubismMotionCurve = cubismmotioninternal_1.Live2DCubismFramework.CubismMotionCurve;\\r\\nvar CubismMotionCurveTarget = cubismmotioninternal_1.Live2DCubismFramework.CubismMotionCurveTarget;\\r\\nvar CubismMath = cubismmath_1.Live2DCubismFramework.CubismMath;\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar ACubismMotion = acubismmotion_1.Live2DCubismFramework.ACubismMotion;\\r\\nvar CubismMotionJson = cubismmotionjson_1.Live2DCubismFramework.CubismMotionJson;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var EffectNameEyeBlink = 'EyeBlink';\\r\\n    var EffectNameLipSync = 'LipSync';\\r\\n    var TargetNameModel = 'Model';\\r\\n    var TargetNameParameter = 'Parameter';\\r\\n    var TargetNamePartOpacity = 'PartOpacity';\\r\\n    function lerpPoints(a, b, t) {\\r\\n        var result = new CubismMotionPoint();\\r\\n        result.time = a.time + (b.time - a.time) * t;\\r\\n        result.value = a.value + (b.value - a.value) * t;\\r\\n        return result;\\r\\n    }\\r\\n    function linearEvaluate(points, time) {\\r\\n        var t;\\r\\n        if (points[0] && points[0].time != 0) {\\r\\n            t = (time - points[0].time) / (points[1].time - points[0].time);\\r\\n        }\\r\\n        else if (points[2] && points[2].time) {\\r\\n            t = (time - points[1].time) / (points[2].time - points[1].time);\\r\\n        }\\r\\n        else if (points.length > 0) {\\r\\n            t = (time - points[0].time) / (points[1].time - points[0].time);\\r\\n        }\\r\\n        if (t < 0.0) {\\r\\n            t = 0.0;\\r\\n        }\\r\\n        return points[0].value + (points[1].value - points[0].value) * t;\\r\\n    }\\r\\n    function bezierEvaluate(points, time) {\\r\\n        var t = (time - points[0].time) / (points[3].time - points[0].time);\\r\\n        if (t < 0.0) {\\r\\n            t = 0.0;\\r\\n        }\\r\\n        var p01 = lerpPoints(points[0], points[1], t);\\r\\n        var p12 = lerpPoints(points[1], points[2], t);\\r\\n        var p23 = lerpPoints(points[2], points[3], t);\\r\\n        var p012 = lerpPoints(p01, p12, t);\\r\\n        var p123 = lerpPoints(p12, p23, t);\\r\\n        return lerpPoints(p012, p123, t).value;\\r\\n    }\\r\\n    function steppedEvaluate(points, time) {\\r\\n        return points[0].value;\\r\\n    }\\r\\n    function inverseSteppedEvaluate(points, time) {\\r\\n        return points[1].value;\\r\\n    }\\r\\n    function evaluateCurve(motionData, index, time) {\\r\\n        var curve = motionData.curves.at(index);\\r\\n        var target = -1;\\r\\n        var totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\\r\\n        var pointPosition = 0;\\r\\n        for (var i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\\r\\n            pointPosition = motionData.segments.at(i).basePointIndex + (motionData.segments.at(i).segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\\r\\n            if (pointPosition >= motionData.points._size) {\\r\\n                pointPosition = motionData.points._size - 3;\\r\\n            }\\r\\n            if (motionData.points.at(pointPosition).time > time) {\\r\\n                target = i;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        if (target == -1) {\\r\\n            return motionData.points.at(pointPosition).value;\\r\\n        }\\r\\n        var segment = motionData.segments.at(target);\\r\\n        return segment.evaluate(motionData.points.get(segment.basePointIndex), time);\\r\\n    }\\r\\n    var CubismMotion = (function (_super) {\\r\\n        __extends(CubismMotion, _super);\\r\\n        function CubismMotion() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._sourceFrameRate = 30.0;\\r\\n            _this._loopDurationSeconds = -1.0;\\r\\n            _this._isLoop = false;\\r\\n            _this._isLoopFadeIn = true;\\r\\n            _this._lastWeight = 0.0;\\r\\n            _this._motionData = null;\\r\\n            _this._modelCurveIdEyeBlink = null;\\r\\n            _this._modelCurveIdLipSync = null;\\r\\n            _this._eyeBlinkParameterIds = null;\\r\\n            _this._lipSyncParameterIds = null;\\r\\n            return _this;\\r\\n        }\\r\\n        CubismMotion.create = function (buffer, size, onFinishedMotionHandler) {\\r\\n            var ret = new CubismMotion();\\r\\n            ret.parse(buffer, size);\\r\\n            ret._sourceFrameRate = ret._motionData.fps;\\r\\n            ret._loopDurationSeconds = ret._motionData.duration;\\r\\n            ret._onFinishedMotion = onFinishedMotionHandler;\\r\\n            return ret;\\r\\n        };\\r\\n        CubismMotion.prototype.doUpdateParameters = function (model, userTimeSeconds, fadeWeight, motionQueueEntry) {\\r\\n            if (this._modelCurveIdEyeBlink == null) {\\r\\n                this._modelCurveIdEyeBlink = CubismFramework.getIdManager().getId(EffectNameEyeBlink);\\r\\n            }\\r\\n            if (this._modelCurveIdLipSync == null) {\\r\\n                this._modelCurveIdLipSync = CubismFramework.getIdManager().getId(EffectNameLipSync);\\r\\n            }\\r\\n            var timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\\r\\n            if (timeOffsetSeconds < 0.0) {\\r\\n                timeOffsetSeconds = 0.0;\\r\\n            }\\r\\n            var lipSyncValue = Number.MAX_VALUE;\\r\\n            var eyeBlinkValue = Number.MAX_VALUE;\\r\\n            var MaxTargetSize = 64;\\r\\n            var lipSyncFlags = 0;\\r\\n            var eyeBlinkFlags = 0;\\r\\n            if (this._eyeBlinkParameterIds.getSize() > MaxTargetSize) {\\r\\n                cubismdebug_1.CubismLogDebug('too many eye blink targets : {0}', this._eyeBlinkParameterIds.getSize());\\r\\n            }\\r\\n            if (this._lipSyncParameterIds.getSize() > MaxTargetSize) {\\r\\n                cubismdebug_1.CubismLogDebug('too many lip sync targets : {0}', this._lipSyncParameterIds.getSize());\\r\\n            }\\r\\n            var tmpFadeIn = this._fadeInSeconds <= 0.0\\r\\n                ? 1.0\\r\\n                : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\\r\\n                    this._fadeInSeconds);\\r\\n            var tmpFadeOut = this._fadeOutSeconds <= 0.0 || motionQueueEntry.getEndTime() < 0.0\\r\\n                ? 1.0\\r\\n                : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) /\\r\\n                    this._fadeOutSeconds);\\r\\n            var value;\\r\\n            var c, parameterIndex;\\r\\n            var time = timeOffsetSeconds;\\r\\n            if (this._isLoop) {\\r\\n                while (time > this._motionData.duration) {\\r\\n                    time -= this._motionData.duration;\\r\\n                }\\r\\n            }\\r\\n            var curves = this._motionData.curves;\\r\\n            for (c = 0; c < this._motionData.curveCount &&\\r\\n                curves.at(c).type ==\\r\\n                    CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\\r\\n                value = evaluateCurve(this._motionData, c, time);\\r\\n                if (curves.at(c).id == this._modelCurveIdEyeBlink) {\\r\\n                    eyeBlinkValue = value;\\r\\n                }\\r\\n                else if (curves.at(c).id == this._modelCurveIdLipSync) {\\r\\n                    lipSyncValue = value;\\r\\n                }\\r\\n            }\\r\\n            var parameterMotionCurveCount = 0;\\r\\n            for (; c < this._motionData.curveCount &&\\r\\n                curves.at(c).type ==\\r\\n                    CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\\r\\n                parameterMotionCurveCount++;\\r\\n                parameterIndex = model.getParameterIndex(curves.at(c).id);\\r\\n                if (parameterIndex == -1) {\\r\\n                    continue;\\r\\n                }\\r\\n                var sourceValue = model.getParameterValueByIndex(parameterIndex);\\r\\n                value = evaluateCurve(this._motionData, c, time);\\r\\n                if (eyeBlinkValue != Number.MAX_VALUE) {\\r\\n                    for (var i = 0; i < this._eyeBlinkParameterIds.getSize() && i < MaxTargetSize; ++i) {\\r\\n                        if (this._eyeBlinkParameterIds.at(i) == curves.at(c).id) {\\r\\n                            value *= eyeBlinkValue;\\r\\n                            eyeBlinkFlags |= 1 << i;\\r\\n                            break;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                if (lipSyncValue != Number.MAX_VALUE) {\\r\\n                    for (var i = 0; i < this._lipSyncParameterIds.getSize() && i < MaxTargetSize; ++i) {\\r\\n                        if (this._lipSyncParameterIds.at(i) == curves.at(c).id) {\\r\\n                            value += lipSyncValue;\\r\\n                            lipSyncFlags |= 1 << i;\\r\\n                            break;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                var v = void 0;\\r\\n                if (curves.at(c).fadeInTime < 0.0 && curves.at(c).fadeOutTime < 0.0) {\\r\\n                    v = sourceValue + (value - sourceValue) * fadeWeight;\\r\\n                }\\r\\n                else {\\r\\n                    var fin = void 0;\\r\\n                    var fout = void 0;\\r\\n                    if (curves.at(c).fadeInTime < 0.0) {\\r\\n                        fin = tmpFadeIn;\\r\\n                    }\\r\\n                    else {\\r\\n                        fin =\\r\\n                            curves.at(c).fadeInTime == 0.0\\r\\n                                ? 1.0\\r\\n                                : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\\r\\n                                    curves.at(c).fadeInTime);\\r\\n                    }\\r\\n                    if (curves.at(c).fadeOutTime < 0.0) {\\r\\n                        fout = tmpFadeOut;\\r\\n                    }\\r\\n                    else {\\r\\n                        fout =\\r\\n                            curves.at(c).fadeOutTime == 0.0 ||\\r\\n                                motionQueueEntry.getEndTime() < 0.0\\r\\n                                ? 1.0\\r\\n                                : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) /\\r\\n                                    curves.at(c).fadeOutTime);\\r\\n                    }\\r\\n                    var paramWeight = this._weight * fin * fout;\\r\\n                    v = sourceValue + (value - sourceValue) * paramWeight;\\r\\n                }\\r\\n                model.setParameterValueByIndex(parameterIndex, v, 1.0);\\r\\n            }\\r\\n            {\\r\\n                if (eyeBlinkValue != Number.MAX_VALUE) {\\r\\n                    for (var i = 0; i < this._eyeBlinkParameterIds.getSize() && i < MaxTargetSize; ++i) {\\r\\n                        var sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds.at(i));\\r\\n                        if ((eyeBlinkFlags >> i) & 0x01) {\\r\\n                            continue;\\r\\n                        }\\r\\n                        var v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\\r\\n                        model.setParameterValueById(this._eyeBlinkParameterIds.at(i), v);\\r\\n                    }\\r\\n                }\\r\\n                if (lipSyncValue != Number.MAX_VALUE) {\\r\\n                    for (var i = 0; i < this._lipSyncParameterIds.getSize() && i < MaxTargetSize; ++i) {\\r\\n                        var sourceValue = model.getParameterValueById(this._lipSyncParameterIds.at(i));\\r\\n                        if ((lipSyncFlags >> i) & 0x01) {\\r\\n                            continue;\\r\\n                        }\\r\\n                        var v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\\r\\n                        model.setParameterValueById(this._lipSyncParameterIds.at(i), v);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            for (; c < this._motionData.curveCount &&\\r\\n                curves.at(c).type ==\\r\\n                    CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\\r\\n                parameterIndex = model.getParameterIndex(curves.at(c).id);\\r\\n                if (parameterIndex == -1) {\\r\\n                    continue;\\r\\n                }\\r\\n                value = evaluateCurve(this._motionData, c, time);\\r\\n                model.setParameterValueByIndex(parameterIndex, value);\\r\\n            }\\r\\n            if (timeOffsetSeconds >= this._motionData.duration) {\\r\\n                if (this._isLoop) {\\r\\n                    motionQueueEntry.setStartTime(userTimeSeconds);\\r\\n                    if (this._isLoopFadeIn) {\\r\\n                        motionQueueEntry.setFadeInStartTime(userTimeSeconds);\\r\\n                    }\\r\\n                }\\r\\n                else {\\r\\n                    if (this._onFinishedMotion) {\\r\\n                        this._onFinishedMotion(this);\\r\\n                    }\\r\\n                    motionQueueEntry.setIsFinished(true);\\r\\n                }\\r\\n            }\\r\\n            this._lastWeight = fadeWeight;\\r\\n        };\\r\\n        CubismMotion.prototype.setIsLoop = function (loop) {\\r\\n            this._isLoop = loop;\\r\\n        };\\r\\n        CubismMotion.prototype.isLoop = function () {\\r\\n            return this._isLoop;\\r\\n        };\\r\\n        CubismMotion.prototype.setIsLoopFadeIn = function (loopFadeIn) {\\r\\n            this._isLoopFadeIn = loopFadeIn;\\r\\n        };\\r\\n        CubismMotion.prototype.isLoopFadeIn = function () {\\r\\n            return this._isLoopFadeIn;\\r\\n        };\\r\\n        CubismMotion.prototype.getDuration = function () {\\r\\n            return this._isLoop ? -1.0 : this._loopDurationSeconds;\\r\\n        };\\r\\n        CubismMotion.prototype.getLoopDuration = function () {\\r\\n            return this._loopDurationSeconds;\\r\\n        };\\r\\n        CubismMotion.prototype.setParameterFadeInTime = function (parameterId, value) {\\r\\n            var curves = this._motionData.curves;\\r\\n            for (var i = 0; i < this._motionData.curveCount; ++i) {\\r\\n                if (parameterId == curves.at(i).id) {\\r\\n                    curves.at(i).fadeInTime = value;\\r\\n                    return;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismMotion.prototype.setParameterFadeOutTime = function (parameterId, value) {\\r\\n            var curves = this._motionData.curves;\\r\\n            for (var i = 0; i < this._motionData.curveCount; ++i) {\\r\\n                if (parameterId == curves.at(i).id) {\\r\\n                    curves.at(i).fadeOutTime = value;\\r\\n                    return;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismMotion.prototype.getParameterFadeInTime = function (parameterId) {\\r\\n            var curves = this._motionData.curves;\\r\\n            for (var i = 0; i < this._motionData.curveCount; ++i) {\\r\\n                if (parameterId == curves.at(i).id) {\\r\\n                    return curves.at(i).fadeInTime;\\r\\n                }\\r\\n            }\\r\\n            return -1;\\r\\n        };\\r\\n        CubismMotion.prototype.getParameterFadeOutTime = function (parameterId) {\\r\\n            var curves = this._motionData.curves;\\r\\n            for (var i = 0; i < this._motionData.curveCount; ++i) {\\r\\n                if (parameterId == curves.at(i).id) {\\r\\n                    return curves.at(i).fadeOutTime;\\r\\n                }\\r\\n            }\\r\\n            return -1;\\r\\n        };\\r\\n        CubismMotion.prototype.setEffectIds = function (eyeBlinkParameterIds, lipSyncParameterIds) {\\r\\n            this._eyeBlinkParameterIds = eyeBlinkParameterIds;\\r\\n            this._lipSyncParameterIds = lipSyncParameterIds;\\r\\n        };\\r\\n        CubismMotion.prototype.release = function () {\\r\\n            this._motionData = void 0;\\r\\n            this._motionData = null;\\r\\n        };\\r\\n        CubismMotion.prototype.parse = function (motionJson, size) {\\r\\n            this._motionData = new CubismMotionData();\\r\\n            var json = new CubismMotionJson(motionJson, size);\\r\\n            this._motionData.duration = json.getMotionDuration();\\r\\n            this._motionData.loop = json.isMotionLoop();\\r\\n            this._motionData.curveCount = json.getMotionCurveCount();\\r\\n            this._motionData.fps = json.getMotionFps();\\r\\n            this._motionData.eventCount = json.getEventCount();\\r\\n            if (json.isExistMotionFadeInTime()) {\\r\\n                this._fadeInSeconds =\\r\\n                    json.getMotionFadeInTime() < 0.0 ? 1.0 : json.getMotionFadeInTime();\\r\\n            }\\r\\n            else {\\r\\n                this._fadeInSeconds = 1.0;\\r\\n            }\\r\\n            if (json.isExistMotionFadeOutTime()) {\\r\\n                this._fadeOutSeconds =\\r\\n                    json.getMotionFadeOutTime() < 0.0 ? 1.0 : json.getMotionFadeOutTime();\\r\\n            }\\r\\n            else {\\r\\n                this._fadeOutSeconds = 1.0;\\r\\n            }\\r\\n            this._motionData.curves.updateSize(this._motionData.curveCount, CubismMotionCurve, true);\\r\\n            this._motionData.segments.updateSize(json.getMotionTotalSegmentCount(), CubismMotionSegment, true);\\r\\n            this._motionData.points.updateSize(json.getMotionTotalPointCount(), CubismMotionPoint, true);\\r\\n            this._motionData.events.updateSize(this._motionData.eventCount, CubismMotionEvent, true);\\r\\n            var totalPointCount = 0;\\r\\n            var totalSegmentCount = 0;\\r\\n            for (var curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\\r\\n                if (json.getMotionCurveTarget(curveCount) == TargetNameModel) {\\r\\n                    this._motionData.curves.at(curveCount).type =\\r\\n                        CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\\r\\n                }\\r\\n                else if (json.getMotionCurveTarget(curveCount) == TargetNameParameter) {\\r\\n                    this._motionData.curves.at(curveCount).type =\\r\\n                        CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\\r\\n                }\\r\\n                else if (json.getMotionCurveTarget(curveCount) == TargetNamePartOpacity) {\\r\\n                    this._motionData.curves.at(curveCount).type =\\r\\n                        CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\\r\\n                }\\r\\n                this._motionData.curves.at(curveCount).id = json.getMotionCurveId(curveCount);\\r\\n                this._motionData.curves.at(curveCount).baseSegmentIndex = totalSegmentCount;\\r\\n                this._motionData.curves.at(curveCount).fadeInTime = json.isExistMotionCurveFadeInTime(curveCount)\\r\\n                    ? json.getMotionCurveFadeInTime(curveCount)\\r\\n                    : -1.0;\\r\\n                this._motionData.curves.at(curveCount).fadeOutTime = json.isExistMotionCurveFadeOutTime(curveCount)\\r\\n                    ? json.getMotionCurveFadeOutTime(curveCount)\\r\\n                    : -1.0;\\r\\n                for (var segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount);) {\\r\\n                    if (segmentPosition == 0) {\\r\\n                        this._motionData.segments.at(totalSegmentCount).basePointIndex = totalPointCount;\\r\\n                        if (this._motionData.points.at(totalPointCount)) {\\r\\n                            this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition);\\r\\n                            this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\\r\\n                        }\\r\\n                        totalPointCount += 1;\\r\\n                        segmentPosition += 2;\\r\\n                    }\\r\\n                    else {\\r\\n                        this._motionData.segments.at(totalSegmentCount).basePointIndex =\\r\\n                            totalPointCount - 1;\\r\\n                    }\\r\\n                    var segment = json.getMotionCurveSegment(curveCount, segmentPosition);\\r\\n                    switch (segment) {\\r\\n                        case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\\r\\n                            this._motionData.segments.at(totalSegmentCount).segmentType =\\r\\n                                CubismMotionSegmentType.CubismMotionSegmentType_Linear;\\r\\n                            this._motionData.segments.at(totalSegmentCount).evaluate = linearEvaluate;\\r\\n                            if (this._motionData.points.at(totalPointCount)) {\\r\\n                                this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\\r\\n                                this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 2);\\r\\n                            }\\r\\n                            totalPointCount += 1;\\r\\n                            segmentPosition += 3;\\r\\n                            break;\\r\\n                        }\\r\\n                        case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\\r\\n                            this._motionData.segments.at(totalSegmentCount).segmentType =\\r\\n                                CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\\r\\n                            this._motionData.segments.at(totalSegmentCount).evaluate = bezierEvaluate;\\r\\n                            if (this._motionData.points.at(totalPointCount)) {\\r\\n                                this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\\r\\n                                this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 2);\\r\\n                            }\\r\\n                            if (this._motionData.points.at(totalPointCount + 1)) {\\r\\n                                this._motionData.points.at(totalPointCount + 1).time = json.getMotionCurveSegment(curveCount, segmentPosition + 3);\\r\\n                                this._motionData.points.at(totalPointCount + 1).value = json.getMotionCurveSegment(curveCount, segmentPosition + 4);\\r\\n                            }\\r\\n                            if (this._motionData.points.at(totalPointCount + 2)) {\\r\\n                                this._motionData.points.at(totalPointCount + 2).time = json.getMotionCurveSegment(curveCount, segmentPosition + 5);\\r\\n                                this._motionData.points.at(totalPointCount + 2).value = json.getMotionCurveSegment(curveCount, segmentPosition + 6);\\r\\n                            }\\r\\n                            totalPointCount += 3;\\r\\n                            segmentPosition += 7;\\r\\n                            break;\\r\\n                        }\\r\\n                        case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\\r\\n                            this._motionData.segments.at(totalSegmentCount).segmentType =\\r\\n                                CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\\r\\n                            this._motionData.segments.at(totalSegmentCount).evaluate = steppedEvaluate;\\r\\n                            if (this._motionData.points.at(totalPointCount)) {\\r\\n                                this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\\r\\n                                this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 2);\\r\\n                            }\\r\\n                            totalPointCount += 1;\\r\\n                            segmentPosition += 3;\\r\\n                            break;\\r\\n                        }\\r\\n                        case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\\r\\n                            this._motionData.segments.at(totalSegmentCount).segmentType =\\r\\n                                CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\\r\\n                            this._motionData.segments.at(totalSegmentCount).evaluate = inverseSteppedEvaluate;\\r\\n                            if (this._motionData.points.at(totalPointCount)) {\\r\\n                                this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\\r\\n                                this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 2);\\r\\n                            }\\r\\n                            totalPointCount += 1;\\r\\n                            segmentPosition += 3;\\r\\n                            break;\\r\\n                        }\\r\\n                        default: {\\r\\n                            cubismdebug_1.CSM_ASSERT(0);\\r\\n                            break;\\r\\n                        }\\r\\n                    }\\r\\n                    ++this._motionData.curves.at(curveCount).segmentCount;\\r\\n                    ++totalSegmentCount;\\r\\n                }\\r\\n            }\\r\\n            for (var userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\\r\\n                this._motionData.events.at(userdatacount).fireTime = json.getEventTime(userdatacount);\\r\\n                this._motionData.events.at(userdatacount).value = json.getEventValue(userdatacount);\\r\\n            }\\r\\n            json.release();\\r\\n            json = void 0;\\r\\n            json = null;\\r\\n        };\\r\\n        CubismMotion.prototype.getFiredEvent = function (beforeCheckTimeSeconds, motionTimeSeconds) {\\r\\n            this._firedEventValues.updateSize(0);\\r\\n            for (var u = 0; u < this._motionData.eventCount; ++u) {\\r\\n                if (this._motionData.events.at(u).fireTime > beforeCheckTimeSeconds &&\\r\\n                    this._motionData.events.at(u).fireTime <= motionTimeSeconds) {\\r\\n                    this._firedEventValues.pushBack(new csmString(this._motionData.events.at(u).value.s));\\r\\n                }\\r\\n            }\\r\\n            return this._firedEventValues;\\r\\n        };\\r\\n        return CubismMotion;\\r\\n    }(ACubismMotion));\\r\\n    Live2DCubismFramework.CubismMotion = CubismMotion;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/motion/cubismmotion.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/motion/cubismmotioninternal.ts\":\n      /*!******************************************************!*\\\n        !*** ./Framework/src/motion/cubismmotioninternal.ts ***!\n        \\******************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismMotionCurveTarget;\\r\\n    (function (CubismMotionCurveTarget) {\\r\\n        CubismMotionCurveTarget[CubismMotionCurveTarget[\\\"CubismMotionCurveTarget_Model\\\"] = 0] = \\\"CubismMotionCurveTarget_Model\\\";\\r\\n        CubismMotionCurveTarget[CubismMotionCurveTarget[\\\"CubismMotionCurveTarget_Parameter\\\"] = 1] = \\\"CubismMotionCurveTarget_Parameter\\\";\\r\\n        CubismMotionCurveTarget[CubismMotionCurveTarget[\\\"CubismMotionCurveTarget_PartOpacity\\\"] = 2] = \\\"CubismMotionCurveTarget_PartOpacity\\\";\\r\\n    })(CubismMotionCurveTarget = Live2DCubismFramework.CubismMotionCurveTarget || (Live2DCubismFramework.CubismMotionCurveTarget = {}));\\r\\n    var CubismMotionSegmentType;\\r\\n    (function (CubismMotionSegmentType) {\\r\\n        CubismMotionSegmentType[CubismMotionSegmentType[\\\"CubismMotionSegmentType_Linear\\\"] = 0] = \\\"CubismMotionSegmentType_Linear\\\";\\r\\n        CubismMotionSegmentType[CubismMotionSegmentType[\\\"CubismMotionSegmentType_Bezier\\\"] = 1] = \\\"CubismMotionSegmentType_Bezier\\\";\\r\\n        CubismMotionSegmentType[CubismMotionSegmentType[\\\"CubismMotionSegmentType_Stepped\\\"] = 2] = \\\"CubismMotionSegmentType_Stepped\\\";\\r\\n        CubismMotionSegmentType[CubismMotionSegmentType[\\\"CubismMotionSegmentType_InverseStepped\\\"] = 3] = \\\"CubismMotionSegmentType_InverseStepped\\\";\\r\\n    })(CubismMotionSegmentType = Live2DCubismFramework.CubismMotionSegmentType || (Live2DCubismFramework.CubismMotionSegmentType = {}));\\r\\n    var CubismMotionPoint = (function () {\\r\\n        function CubismMotionPoint() {\\r\\n            this.time = 0.0;\\r\\n            this.value = 0.0;\\r\\n        }\\r\\n        return CubismMotionPoint;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionPoint = CubismMotionPoint;\\r\\n    var CubismMotionSegment = (function () {\\r\\n        function CubismMotionSegment() {\\r\\n            this.evaluate = null;\\r\\n            this.basePointIndex = 0;\\r\\n            this.segmentType = 0;\\r\\n        }\\r\\n        return CubismMotionSegment;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionSegment = CubismMotionSegment;\\r\\n    var CubismMotionCurve = (function () {\\r\\n        function CubismMotionCurve() {\\r\\n            this.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\\r\\n            this.segmentCount = 0;\\r\\n            this.baseSegmentIndex = 0;\\r\\n            this.fadeInTime = 0.0;\\r\\n            this.fadeOutTime = 0.0;\\r\\n        }\\r\\n        return CubismMotionCurve;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionCurve = CubismMotionCurve;\\r\\n    var CubismMotionEvent = (function () {\\r\\n        function CubismMotionEvent() {\\r\\n            this.fireTime = 0.0;\\r\\n        }\\r\\n        return CubismMotionEvent;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionEvent = CubismMotionEvent;\\r\\n    var CubismMotionData = (function () {\\r\\n        function CubismMotionData() {\\r\\n            this.duration = 0.0;\\r\\n            this.loop = false;\\r\\n            this.curveCount = 0;\\r\\n            this.eventCount = 0;\\r\\n            this.fps = 0.0;\\r\\n            this.curves = new csmVector();\\r\\n            this.segments = new csmVector();\\r\\n            this.points = new csmVector();\\r\\n            this.events = new csmVector();\\r\\n        }\\r\\n        return CubismMotionData;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionData = CubismMotionData;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21vdGlvbi9jdWJpc21tb3Rpb25pbnRlcm5hbC50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvbW90aW9uL2N1YmlzbW1vdGlvbmludGVybmFsLnRzP2U2ZGUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbWlkIH0gZnJvbSAnLi4vaWQvY3ViaXNtaWQnO1xuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGNzbXN0cmluZyB9IGZyb20gJy4uL3R5cGUvY3Ntc3RyaW5nJztcbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjc212ZWN0b3IgfSBmcm9tICcuLi90eXBlL2NzbXZlY3Rvcic7XG5pbXBvcnQgY3NtVmVjdG9yID0gY3NtdmVjdG9yLmNzbVZlY3RvcjtcbmltcG9ydCBjc21TdHJpbmcgPSBjc21zdHJpbmcuY3NtU3RyaW5nO1xuaW1wb3J0IEN1YmlzbUlkSGFuZGxlID0gY3ViaXNtaWQuQ3ViaXNtSWRIYW5kbGU7XG5cbmV4cG9ydCBuYW1lc3BhY2UgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIHtcbiAgLyoqXG4gICAqIEBicmllZiDjg6Ljg7zjgrfjg6fjg7Pjgqvjg7zjg5bjga7nqK7poZ5cbiAgICpcbiAgICog44Oi44O844K344On44Oz44Kr44O844OW44Gu56iu6aGe44CCXG4gICAqL1xuICBleHBvcnQgZW51bSBDdWJpc21Nb3Rpb25DdXJ2ZVRhcmdldCB7XG4gICAgQ3ViaXNtTW90aW9uQ3VydmVUYXJnZXRfTW9kZWwsIC8vIOODouODh+ODq+OBq+WvvuOBl+OBplxuICAgIEN1YmlzbU1vdGlvbkN1cnZlVGFyZ2V0X1BhcmFtZXRlciwgLy8g44OR44Op44Oh44O844K/44Gr5a++44GX44GmXG4gICAgQ3ViaXNtTW90aW9uQ3VydmVUYXJnZXRfUGFydE9wYWNpdHkgLy8g44OR44O844OE44Gu5LiN6YCP5piO5bqm44Gr5a++44GX44GmXG4gIH1cblxuICAvKipcbiAgICogQGJyaWVmIOODouODvOOCt+ODp+ODs+OCq+ODvOODluOBruOCu+OCsOODoeODs+ODiOOBrueorumhnlxuICAgKlxuICAgKiDjg6Ljg7zjgrfjg6fjg7Pjgqvjg7zjg5bjga7jgrvjgrDjg6Hjg7Pjg4jjga7nqK7poZ7jgIJcbiAgICovXG4gIGV4cG9ydCBlbnVtIEN1YmlzbU1vdGlvblNlZ21lbnRUeXBlIHtcbiAgICBDdWJpc21Nb3Rpb25TZWdtZW50VHlwZV9MaW5lYXIgPSAwLCAvLyDjg6rjg4vjgqJcbiAgICBDdWJpc21Nb3Rpb25TZWdtZW50VHlwZV9CZXppZXIgPSAxLCAvLyDjg5njgrjjgqfmm7Lnt5pcbiAgICBDdWJpc21Nb3Rpb25TZWdtZW50VHlwZV9TdGVwcGVkID0gMiwgLy8g44K544OG44OD44OXXG4gICAgQ3ViaXNtTW90aW9uU2VnbWVudFR5cGVfSW52ZXJzZVN0ZXBwZWQgPSAzIC8vIOOCpOODs+ODkOODvOOCueOCueODhuODg+ODl1xuICB9XG5cbiAgLyoqXG4gICAqIEBicmllZiDjg6Ljg7zjgrfjg6fjg7Pjgqvjg7zjg5bjga7liLblvqHngrlcbiAgICpcbiAgICog44Oi44O844K344On44Oz44Kr44O844OW44Gu5Yi25b6h54K544CCXG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtTW90aW9uUG9pbnQge1xuICAgIHRpbWUgPSAwLjA7IC8vIOaZgumWk1vnp5JdXG4gICAgdmFsdWUgPSAwLjA7IC8vIOWApFxuICB9XG5cbiAgLyoqXG4gICAqIOODouODvOOCt+ODp+ODs+OCq+ODvOODluOBruOCu+OCsOODoeODs+ODiOOBruipleS+oemWouaVsFxuICAgKlxuICAgKiBAcGFyYW0gICBwb2ludHMgICAgICDjg6Ljg7zjgrfjg6fjg7Pjgqvjg7zjg5bjga7liLblvqHngrnjg6rjgrnjg4hcbiAgICogQHBhcmFtICAgdGltZSAgICAgICAg6KmV5L6h44GZ44KL5pmC6ZaTW+enkl1cbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgY3NtTW90aW9uU2VnbWVudEV2YWx1YXRpb25GdW5jdGlvbiB7XG4gICAgKHBvaW50czogQ3ViaXNtTW90aW9uUG9pbnRbXSwgdGltZTogbnVtYmVyKTogbnVtYmVyO1xuICB9XG5cbiAgLyoqXG4gICAqIEBicmllZiDjg6Ljg7zjgrfjg6fjg7Pjgqvjg7zjg5bjga7jgrvjgrDjg6Hjg7Pjg4hcbiAgICpcbiAgICog44Oi44O844K344On44Oz44Kr44O844OW44Gu44K744Kw44Oh44Oz44OI44CCXG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtTW90aW9uU2VnbWVudCB7XG4gICAgLyoqXG4gICAgICogQGJyaWVmIOOCs+ODs+OCueODiOODqeOCr+OCv1xuICAgICAqXG4gICAgICog44Kz44Oz44K544OI44Op44Kv44K/44CCXG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgdGhpcy5ldmFsdWF0ZSA9IG51bGw7XG4gICAgICB0aGlzLmJhc2VQb2ludEluZGV4ID0gMDtcbiAgICAgIHRoaXMuc2VnbWVudFR5cGUgPSAwO1xuICAgIH1cblxuICAgIGV2YWx1YXRlOiBjc21Nb3Rpb25TZWdtZW50RXZhbHVhdGlvbkZ1bmN0aW9uOyAvLyDkvb/nlKjjgZnjgovoqZXkvqHplqLmlbBcbiAgICBiYXNlUG9pbnRJbmRleDogbnVtYmVyOyAvLyDmnIDliJ3jga7jgrvjgrDjg6Hjg7Pjg4jjgbjjga7jgqTjg7Pjg4fjg4Pjgq/jgrlcbiAgICBzZWdtZW50VHlwZTogbnVtYmVyOyAvLyDjgrvjgrDjg6Hjg7Pjg4jjga7nqK7poZ5cbiAgfVxuXG4gIC8qKlxuICAgKiBAYnJpZWYg44Oi44O844K344On44Oz44Kr44O844OWXG4gICAqXG4gICAqIOODouODvOOCt+ODp+ODs+OCq+ODvOODluOAglxuICAgKi9cbiAgZXhwb3J0IGNsYXNzIEN1YmlzbU1vdGlvbkN1cnZlIHtcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgICB0aGlzLnR5cGUgPSBDdWJpc21Nb3Rpb25DdXJ2ZVRhcmdldC5DdWJpc21Nb3Rpb25DdXJ2ZVRhcmdldF9Nb2RlbDtcbiAgICAgIHRoaXMuc2VnbWVudENvdW50ID0gMDtcbiAgICAgIHRoaXMuYmFzZVNlZ21lbnRJbmRleCA9IDA7XG4gICAgICB0aGlzLmZhZGVJblRpbWUgPSAwLjA7XG4gICAgICB0aGlzLmZhZGVPdXRUaW1lID0gMC4wO1xuICAgIH1cblxuICAgIHR5cGU6IEN1YmlzbU1vdGlvbkN1cnZlVGFyZ2V0OyAvLyDjgqvjg7zjg5bjga7nqK7poZ5cbiAgICBpZDogQ3ViaXNtSWRIYW5kbGU7IC8vIOOCq+ODvOODluOBrklEXG4gICAgc2VnbWVudENvdW50OiBudW1iZXI7IC8vIOOCu+OCsOODoeODs+ODiOOBruWAi+aVsFxuICAgIGJhc2VTZWdtZW50SW5kZXg6IG51bWJlcjsgLy8g5pyA5Yid44Gu44K744Kw44Oh44Oz44OI44Gu44Kk44Oz44OH44OD44Kv44K5XG4gICAgZmFkZUluVGltZTogbnVtYmVyOyAvLyDjg5Xjgqfjg7zjg4njgqTjg7PjgavjgYvjgYvjgovmmYLplpNb56eSXVxuICAgIGZhZGVPdXRUaW1lOiBudW1iZXI7IC8vIOODleOCp+ODvOODieOCouOCpuODiOOBq+OBi+OBi+OCi+aZgumWk1vnp5JdXG4gIH1cblxuICAvKipcbiAgICog44Kk44OZ44Oz44OI44CCXG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtTW90aW9uRXZlbnQge1xuICAgIGZpcmVUaW1lID0gMC4wO1xuICAgIHZhbHVlOiBjc21TdHJpbmc7XG4gIH1cblxuICAvKipcbiAgICogQGJyaWVmIOODouODvOOCt+ODp+ODs+ODh+ODvOOCv1xuICAgKlxuICAgKiDjg6Ljg7zjgrfjg6fjg7Pjg4fjg7zjgr/jgIJcbiAgICovXG4gIGV4cG9ydCBjbGFzcyBDdWJpc21Nb3Rpb25EYXRhIHtcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgICB0aGlzLmR1cmF0aW9uID0gMC4wO1xuICAgICAgdGhpcy5sb29wID0gZmFsc2U7XG4gICAgICB0aGlzLmN1cnZlQ291bnQgPSAwO1xuICAgICAgdGhpcy5ldmVudENvdW50ID0gMDtcbiAgICAgIHRoaXMuZnBzID0gMC4wO1xuXG4gICAgICB0aGlzLmN1cnZlcyA9IG5ldyBjc21WZWN0b3I8Q3ViaXNtTW90aW9uQ3VydmU+KCk7XG4gICAgICB0aGlzLnNlZ21lbnRzID0gbmV3IGNzbVZlY3RvcjxDdWJpc21Nb3Rpb25TZWdtZW50PigpO1xuICAgICAgdGhpcy5wb2ludHMgPSBuZXcgY3NtVmVjdG9yPEN1YmlzbU1vdGlvblBvaW50PigpO1xuICAgICAgdGhpcy5ldmVudHMgPSBuZXcgY3NtVmVjdG9yPEN1YmlzbU1vdGlvbkV2ZW50PigpO1xuICAgIH1cblxuICAgIGR1cmF0aW9uOiBudW1iZXI7IC8vIOODouODvOOCt+ODp+ODs+OBrumVt+OBlVvnp5JdXG4gICAgbG9vcDogYm9vbGVhbjsgLy8g44Or44O844OX44GZ44KL44GL44Gp44GG44GLXG4gICAgY3VydmVDb3VudDogbnVtYmVyOyAvLyDjgqvjg7zjg5bjga7lgIvmlbBcbiAgICBldmVudENvdW50OiBudW1iZXI7IC8vIFVzZXJEYXRh44Gu5YCL5pWwXG4gICAgZnBzOiBudW1iZXI7IC8vIOODleODrOODvOODoOODrOODvOODiFxuICAgIGN1cnZlczogY3NtVmVjdG9yPEN1YmlzbU1vdGlvbkN1cnZlPjsgLy8g44Kr44O844OW44Gu44Oq44K544OIXG4gICAgc2VnbWVudHM6IGNzbVZlY3RvcjxDdWJpc21Nb3Rpb25TZWdtZW50PjsgLy8g44K744Kw44Oh44Oz44OI44Gu44Oq44K544OIXG4gICAgcG9pbnRzOiBjc21WZWN0b3I8Q3ViaXNtTW90aW9uUG9pbnQ+OyAvLyDjg53jgqTjg7Pjg4jjga7jg6rjgrnjg4hcbiAgICBldmVudHM6IGNzbVZlY3RvcjxDdWJpc21Nb3Rpb25FdmVudD47IC8vIOOCpOODmeODs+ODiOOBruODquOCueODiFxuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7O0FBU0E7QUFDQTtBQUlBO0FBQUE7QUFNQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBSEE7QUFvQkE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFBQTtBQWZBO0FBc0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUFBO0FBZkE7QUFvQkE7QUFBQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBSEE7QUFVQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFXQTtBQUFBO0FBdkJBO0FBd0JBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Framework/src/motion/cubismmotioninternal.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/motion/cubismmotionjson.ts\":\n      /*!**************************************************!*\\\n        !*** ./Framework/src/motion/cubismmotionjson.ts ***!\n        \\**************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismjson_1 = __webpack_require__(/*! ../utils/cubismjson */ \\\"./Framework/src/utils/cubismjson.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar csmstring_1 = __webpack_require__(/*! ../type/csmstring */ \\\"./Framework/src/type/csmstring.ts\\\");\\r\\nvar csmString = csmstring_1.Live2DCubismFramework.csmString;\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismJson = cubismjson_1.Live2DCubismFramework.CubismJson;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var Meta = 'Meta';\\r\\n    var Duration = 'Duration';\\r\\n    var Loop = 'Loop';\\r\\n    var CurveCount = 'CurveCount';\\r\\n    var Fps = 'Fps';\\r\\n    var TotalSegmentCount = 'TotalSegmentCount';\\r\\n    var TotalPointCount = 'TotalPointCount';\\r\\n    var Curves = 'Curves';\\r\\n    var Target = 'Target';\\r\\n    var Id = 'Id';\\r\\n    var FadeInTime = 'FadeInTime';\\r\\n    var FadeOutTime = 'FadeOutTime';\\r\\n    var Segments = 'Segments';\\r\\n    var UserData = 'UserData';\\r\\n    var UserDataCount = 'UserDataCount';\\r\\n    var TotalUserDataSize = 'TotalUserDataSize';\\r\\n    var Time = 'Time';\\r\\n    var Value = 'Value';\\r\\n    var CubismMotionJson = (function () {\\r\\n        function CubismMotionJson(buffer, size) {\\r\\n            this._json = CubismJson.create(buffer, size);\\r\\n        }\\r\\n        CubismMotionJson.prototype.release = function () {\\r\\n            CubismJson.delete(this._json);\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionDuration = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(Duration)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismMotionJson.prototype.isMotionLoop = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(Loop)\\r\\n                .toBoolean();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionCurveCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(CurveCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionFps = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(Fps)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionTotalSegmentCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(TotalSegmentCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionTotalPointCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(TotalPointCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismMotionJson.prototype.isExistMotionFadeInTime = function () {\\r\\n            return !this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(FadeInTime)\\r\\n                .isNull();\\r\\n        };\\r\\n        CubismMotionJson.prototype.isExistMotionFadeOutTime = function () {\\r\\n            return !this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(FadeOutTime)\\r\\n                .isNull();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionFadeInTime = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(FadeInTime)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionFadeOutTime = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(FadeOutTime)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionCurveTarget = function (curveIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(Target)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionCurveId = function (curveIndex) {\\r\\n            return CubismFramework.getIdManager().getId(this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(Id)\\r\\n                .getRawString());\\r\\n        };\\r\\n        CubismMotionJson.prototype.isExistMotionCurveFadeInTime = function (curveIndex) {\\r\\n            return !this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(FadeInTime)\\r\\n                .isNull();\\r\\n        };\\r\\n        CubismMotionJson.prototype.isExistMotionCurveFadeOutTime = function (curveIndex) {\\r\\n            return !this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(FadeOutTime)\\r\\n                .isNull();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionCurveFadeInTime = function (curveIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(FadeInTime)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionCurveFadeOutTime = function (curveIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(FadeOutTime)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionCurveSegmentCount = function (curveIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(Segments)\\r\\n                .getVector()\\r\\n                .getSize();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionCurveSegment = function (curveIndex, segmentIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(Segments)\\r\\n                .getValueByIndex(segmentIndex)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getEventCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(UserDataCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getTotalEventValueSize = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(TotalUserDataSize)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getEventTime = function (userDataIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(UserData)\\r\\n                .getValueByIndex(userDataIndex)\\r\\n                .getValueByString(Time)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getEventValue = function (userDataIndex) {\\r\\n            return new csmString(this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(UserData)\\r\\n                .getValueByIndex(userDataIndex)\\r\\n                .getValueByString(Value)\\r\\n                .getRawString());\\r\\n        };\\r\\n        return CubismMotionJson;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionJson = CubismMotionJson;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/motion/cubismmotionjson.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/motion/cubismmotionmanager.ts\":\n      /*!*****************************************************!*\\\n        !*** ./Framework/src/motion/cubismmotionmanager.ts ***!\n        \\*****************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmotionqueuemanager_1 = __webpack_require__(/*! ./cubismmotionqueuemanager */ \\\"./Framework/src/motion/cubismmotionqueuemanager.ts\\\");\\r\\nvar CubismMotionQueueManager = cubismmotionqueuemanager_1.Live2DCubismFramework.CubismMotionQueueManager;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismMotionManager = (function (_super) {\\r\\n        __extends(CubismMotionManager, _super);\\r\\n        function CubismMotionManager() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._currentPriority = 0;\\r\\n            _this._reservePriority = 0;\\r\\n            return _this;\\r\\n        }\\r\\n        CubismMotionManager.prototype.getCurrentPriority = function () {\\r\\n            return this._currentPriority;\\r\\n        };\\r\\n        CubismMotionManager.prototype.getReservePriority = function () {\\r\\n            return this._reservePriority;\\r\\n        };\\r\\n        CubismMotionManager.prototype.setReservePriority = function (val) {\\r\\n            this._reservePriority = val;\\r\\n        };\\r\\n        CubismMotionManager.prototype.startMotionPriority = function (motion, autoDelete, priority) {\\r\\n            if (priority == this._reservePriority) {\\r\\n                this._reservePriority = 0;\\r\\n            }\\r\\n            this._currentPriority = priority;\\r\\n            return _super.prototype.startMotion.call(this, motion, autoDelete, this._userTimeSeconds);\\r\\n        };\\r\\n        CubismMotionManager.prototype.updateMotion = function (model, deltaTimeSeconds) {\\r\\n            this._userTimeSeconds += deltaTimeSeconds;\\r\\n            var updated = _super.prototype.doUpdateMotion.call(this, model, this._userTimeSeconds);\\r\\n            if (this.isFinished()) {\\r\\n                this._currentPriority = 0;\\r\\n            }\\r\\n            return updated;\\r\\n        };\\r\\n        CubismMotionManager.prototype.reserveMotion = function (priority) {\\r\\n            if (priority <= this._reservePriority ||\\r\\n                priority <= this._currentPriority) {\\r\\n                return false;\\r\\n            }\\r\\n            this._reservePriority = priority;\\r\\n            return true;\\r\\n        };\\r\\n        return CubismMotionManager;\\r\\n    }(CubismMotionQueueManager));\\r\\n    Live2DCubismFramework.CubismMotionManager = CubismMotionManager;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21vdGlvbi9jdWJpc21tb3Rpb25tYW5hZ2VyLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vRnJhbWV3b3JrL3NyYy9tb3Rpb24vY3ViaXNtbW90aW9ubWFuYWdlci50cz81ZmE2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjdWJpc21tb3Rpb25xdWV1ZW1hbmFnZXIgfSBmcm9tICcuL2N1YmlzbW1vdGlvbnF1ZXVlbWFuYWdlcic7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgYWN1YmlzbW1vdGlvbiB9IGZyb20gJy4vYWN1YmlzbW1vdGlvbic7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3ViaXNtbW9kZWwgfSBmcm9tICcuLi9tb2RlbC9jdWJpc21tb2RlbCc7XG5pbXBvcnQgQ3ViaXNtTW90aW9uUXVldWVFbnRyeUhhbmRsZSA9IGN1YmlzbW1vdGlvbnF1ZXVlbWFuYWdlci5DdWJpc21Nb3Rpb25RdWV1ZUVudHJ5SGFuZGxlO1xuaW1wb3J0IEN1YmlzbU1vZGVsID0gY3ViaXNtbW9kZWwuQ3ViaXNtTW9kZWw7XG5pbXBvcnQgQUN1YmlzbU1vdGlvbiA9IGFjdWJpc21tb3Rpb24uQUN1YmlzbU1vdGlvbjtcbmltcG9ydCBDdWJpc21Nb3Rpb25RdWV1ZU1hbmFnZXIgPSBjdWJpc21tb3Rpb25xdWV1ZW1hbmFnZXIuQ3ViaXNtTW90aW9uUXVldWVNYW5hZ2VyO1xuXG5leHBvcnQgbmFtZXNwYWNlIExpdmUyREN1YmlzbUZyYW1ld29yayB7XG4gIC8qKlxuICAgKiDjg6Ljg7zjgrfjg6fjg7Pjga7nrqHnkIZcbiAgICpcbiAgICog44Oi44O844K344On44Oz44Gu566h55CG44KS6KGM44GG44Kv44Op44K5XG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtTW90aW9uTWFuYWdlciBleHRlbmRzIEN1YmlzbU1vdGlvblF1ZXVlTWFuYWdlciB7XG4gICAgLyoqXG4gICAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgc3VwZXIoKTtcbiAgICAgIHRoaXMuX2N1cnJlbnRQcmlvcml0eSA9IDA7XG4gICAgICB0aGlzLl9yZXNlcnZlUHJpb3JpdHkgPSAwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOWGjeeUn+S4reOBruODouODvOOCt+ODp+ODs+OBruWEquWFiOW6puOBruWPluW+l1xuICAgICAqIEByZXR1cm4gIOODouODvOOCt+ODp+ODs+OBruWEquWFiOW6plxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRDdXJyZW50UHJpb3JpdHkoKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiB0aGlzLl9jdXJyZW50UHJpb3JpdHk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5LqI57SE5Lit44Gu44Oi44O844K344On44Oz44Gu5YSq5YWI5bqm44KS5Y+W5b6X44GZ44KL44CCXG4gICAgICogQHJldHVybiAg44Oi44O844K344On44Oz44Gu5YSq5YWI5bqmXG4gICAgICovXG4gICAgcHVibGljIGdldFJlc2VydmVQcmlvcml0eSgpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMuX3Jlc2VydmVQcmlvcml0eTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDkuojntITkuK3jga7jg6Ljg7zjgrfjg6fjg7Pjga7lhKrlhYjluqbjgpLoqK3lrprjgZnjgovjgIJcbiAgICAgKiBAcGFyYW0gICB2YWwgICAgIOWEquWFiOW6plxuICAgICAqL1xuICAgIHB1YmxpYyBzZXRSZXNlcnZlUHJpb3JpdHkodmFsOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgIHRoaXMuX3Jlc2VydmVQcmlvcml0eSA9IHZhbDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDorr7lrprkvJjlhYjnuqflkI7lvIDlp4vliqjkvZzjgIJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBtb3Rpb24gICAgICAgICAg5Yqo5L2cXG4gICAgICogQHBhcmFtIGF1dG9EZWxldGUgICAgICDlho3nlJ/jgYzni6nnjJ/jgZfjgZ/jg6Ljg7zjgrfjg6fjg7Pjga7jgqTjg7Pjgrnjgr/jg7PjgrnjgpLliYrpmaTjgZnjgovjgarjgol0cnVlXG4gICAgICogQHBhcmFtIHByaW9yaXR5ICAgICAgICDlhKrlhYjluqZcbiAgICAgKiBAcmV0dXJuICAgICAgICAgICAgICAgIOi/lOWbnuW8gOWni+eahOWKqOS9nOeahOivhuWIq+WPt+eggeOAgueUqOS6juWIpOWumuS4quWIq+WKqOS9nOaYr+WQpue7k+adn+eahElzRmluaXNoZWTvvIjvvInlj4LmlbDjgILml6Dms5XlvIDlp4vml7bkuLrigJwtMeKAnVxuICAgICAqL1xuICAgIHB1YmxpYyBzdGFydE1vdGlvblByaW9yaXR5KFxuICAgICAgbW90aW9uOiBBQ3ViaXNtTW90aW9uLFxuICAgICAgYXV0b0RlbGV0ZTogYm9vbGVhbixcbiAgICAgIHByaW9yaXR5OiBudW1iZXJcbiAgICApOiBDdWJpc21Nb3Rpb25RdWV1ZUVudHJ5SGFuZGxlIHtcbiAgICAgIGlmIChwcmlvcml0eSA9PSB0aGlzLl9yZXNlcnZlUHJpb3JpdHkpIHtcbiAgICAgICAgdGhpcy5fcmVzZXJ2ZVByaW9yaXR5ID0gMDsgLy8g5LqI57SE44KS6Kej6ZmkXG4gICAgICB9XG5cbiAgICAgIHRoaXMuX2N1cnJlbnRQcmlvcml0eSA9IHByaW9yaXR5OyAvLyDlho3nlJ/kuK3jg6Ljg7zjgrfjg6fjg7Pjga7lhKrlhYjluqbjgpLoqK3lrppcblxuICAgICAgcmV0dXJuIHN1cGVyLnN0YXJ0TW90aW9uKG1vdGlvbiwgYXV0b0RlbGV0ZSwgdGhpcy5fdXNlclRpbWVTZWNvbmRzKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg7zjgrfjg6fjg7PjgpLmm7TmlrDjgZfjgabjgIHjg6Ljg4fjg6vjgavjg5Hjg6njg6Hjg7zjgr/lgKTjgpLlj43mmKDjgZnjgovjgIJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBtb2RlbCAgIOWvvuixoeOBruODouODh+ODq1xuICAgICAqIEBwYXJhbSBkZWx0YVRpbWVTZWNvbmRzICAgIOODh+ODq+OCv+aZgumWk1vnp5JdXG4gICAgICogQHJldHVybiAgdHJ1ZSAgICDmm7TmlrDjgZXjgozjgabjgYTjgotcbiAgICAgKiBAcmV0dXJuICBmYWxzZSAgIOabtOaWsOOBleOCjOOBpuOBhOOBquOBhFxuICAgICAqL1xuICAgIHB1YmxpYyB1cGRhdGVNb3Rpb24obW9kZWw6IEN1YmlzbU1vZGVsLCBkZWx0YVRpbWVTZWNvbmRzOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICAgIHRoaXMuX3VzZXJUaW1lU2Vjb25kcyArPSBkZWx0YVRpbWVTZWNvbmRzO1xuXG4gICAgICBjb25zdCB1cGRhdGVkOiBib29sZWFuID0gc3VwZXIuZG9VcGRhdGVNb3Rpb24oXG4gICAgICAgIG1vZGVsLFxuICAgICAgICB0aGlzLl91c2VyVGltZVNlY29uZHNcbiAgICAgICk7XG5cbiAgICAgIGlmICh0aGlzLmlzRmluaXNoZWQoKSkge1xuICAgICAgICB0aGlzLl9jdXJyZW50UHJpb3JpdHkgPSAwOyAvLyDlho3nlJ/kuK3jga7jg6Ljg7zjgrfjg6fjg7Pjga7lhKrlhYjluqbjgpLop6PpmaRcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVwZGF0ZWQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Oi44O844K344On44Oz44KS5LqI57SE44GZ44KL44CCXG4gICAgICpcbiAgICAgKiBAcGFyYW0gICBwcmlvcml0eSAgICDlhKrlhYjluqZcbiAgICAgKiBAcmV0dXJuICB0cnVlICAgIOS6iOe0hOOBp+OBjeOBn1xuICAgICAqIEByZXR1cm4gIGZhbHNlICAg5LqI57SE44Gn44GN44Gq44GL44Gj44GfXG4gICAgICovXG4gICAgcHVibGljIHJlc2VydmVNb3Rpb24ocHJpb3JpdHk6IG51bWJlcik6IGJvb2xlYW4ge1xuICAgICAgaWYgKFxuICAgICAgICBwcmlvcml0eSA8PSB0aGlzLl9yZXNlcnZlUHJpb3JpdHkgfHxcbiAgICAgICAgcHJpb3JpdHkgPD0gdGhpcy5fY3VycmVudFByaW9yaXR5XG4gICAgICApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9yZXNlcnZlUHJpb3JpdHkgPSBwcmlvcml0eTtcblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgX2N1cnJlbnRQcmlvcml0eTogbnVtYmVyOyAvLyDnj77lnKjlho3nlJ/kuK3jga7jg6Ljg7zjgrfjg6fjg7Pjga7lhKrlhYjluqZcbiAgICBfcmVzZXJ2ZVByaW9yaXR5OiBudW1iZXI7IC8vIOWGjeeUn+S6iOWumuOBruODouODvOOCt+ODp+ODs+OBruWEquWFiOW6puOAguWGjeeUn+S4reOBrzDjgavjgarjgovjgILjg6Ljg7zjgrfjg6fjg7Pjg5XjgqHjgqTjg6vjgpLliKXjgrnjg6zjg4Pjg4njgafoqq3jgb/ovrzjgoDjgajjgY3jga7mqZ/og73jgIJcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFPQTtBQU1BO0FBRUE7QUFBQTtBQU1BO0FBQUE7QUFJQTtBQUFBO0FBRUE7QUFDQTs7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQVVBO0FBS0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBVUE7QUFDQTtBQUVBO0FBS0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQVNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFJQTtBQUFBO0FBckdBO0FBc0dBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Framework/src/motion/cubismmotionmanager.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/motion/cubismmotionqueueentry.ts\":\n      /*!********************************************************!*\\\n        !*** ./Framework/src/motion/cubismmotionqueueentry.ts ***!\n        \\********************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar acubismmotion_1 = __webpack_require__(/*! ./acubismmotion */ \\\"./Framework/src/motion/acubismmotion.ts\\\");\\r\\nvar ACubismMotion = acubismmotion_1.Live2DCubismFramework.ACubismMotion;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismMotionQueueEntry = (function () {\\r\\n        function CubismMotionQueueEntry() {\\r\\n            this._autoDelete = false;\\r\\n            this._motion = null;\\r\\n            this._available = true;\\r\\n            this._finished = false;\\r\\n            this._started = false;\\r\\n            this._startTimeSeconds = -1.0;\\r\\n            this._fadeInStartTimeSeconds = 0.0;\\r\\n            this._endTimeSeconds = -1.0;\\r\\n            this._stateTimeSeconds = 0.0;\\r\\n            this._stateWeight = 0.0;\\r\\n            this._lastEventCheckSeconds = 0.0;\\r\\n            this._motionQueueEntryHandle = this;\\r\\n        }\\r\\n        CubismMotionQueueEntry.prototype.release = function () {\\r\\n            if (this._autoDelete && this._motion) {\\r\\n                ACubismMotion.delete(this._motion);\\r\\n            }\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.startFadeout = function (fadeoutSeconds, userTimeSeconds) {\\r\\n            var newEndTimeSeconds = userTimeSeconds + fadeoutSeconds;\\r\\n            if (this._endTimeSeconds < 0.0 ||\\r\\n                newEndTimeSeconds < this._endTimeSeconds) {\\r\\n                this._endTimeSeconds = newEndTimeSeconds;\\r\\n            }\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.isFinished = function () {\\r\\n            return this._finished;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.isStarted = function () {\\r\\n            return this._started;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.getStartTime = function () {\\r\\n            return this._startTimeSeconds;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.getFadeInStartTime = function () {\\r\\n            return this._fadeInStartTimeSeconds;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.getEndTime = function () {\\r\\n            return this._endTimeSeconds;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setStartTime = function (startTime) {\\r\\n            this._startTimeSeconds = startTime;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setFadeInStartTime = function (startTime) {\\r\\n            this._fadeInStartTimeSeconds = startTime;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setEndTime = function (endTime) {\\r\\n            this._endTimeSeconds = endTime;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setIsFinished = function (f) {\\r\\n            this._finished = f;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setIsStarted = function (f) {\\r\\n            this._started = f;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.isAvailable = function () {\\r\\n            return this._available;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setIsAvailable = function (v) {\\r\\n            this._available = v;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setState = function (timeSeconds, weight) {\\r\\n            this._stateTimeSeconds = timeSeconds;\\r\\n            this._stateWeight = weight;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.getStateTime = function () {\\r\\n            return this._stateTimeSeconds;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.getStateWeight = function () {\\r\\n            return this._stateWeight;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.getLastCheckEventTime = function () {\\r\\n            return this._lastEventCheckSeconds;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setLastCheckEventTime = function (checkTime) {\\r\\n            this._lastEventCheckSeconds = checkTime;\\r\\n        };\\r\\n        return CubismMotionQueueEntry;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionQueueEntry = CubismMotionQueueEntry;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/motion/cubismmotionqueueentry.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/motion/cubismmotionqueuemanager.ts\":\n      /*!**********************************************************!*\\\n        !*** ./Framework/src/motion/cubismmotionqueuemanager.ts ***!\n        \\**********************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmotionqueueentry_1 = __webpack_require__(/*! ./cubismmotionqueueentry */ \\\"./Framework/src/motion/cubismmotionqueueentry.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismMotionQueueEntry = cubismmotionqueueentry_1.Live2DCubismFramework.CubismMotionQueueEntry;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismMotionQueueManager = (function () {\\r\\n        function CubismMotionQueueManager() {\\r\\n            this._userTimeSeconds = 0.0;\\r\\n            this._eventCallBack = null;\\r\\n            this._eventCustomData = null;\\r\\n            this._motions = new csmVector();\\r\\n        }\\r\\n        CubismMotionQueueManager.prototype.release = function () {\\r\\n            for (var i = 0; i < this._motions.getSize(); ++i) {\\r\\n                if (this._motions.at(i)) {\\r\\n                    this._motions.at(i).release();\\r\\n                    this._motions.set(i, void 0);\\r\\n                    this._motions.set(i, null);\\r\\n                }\\r\\n            }\\r\\n            this._motions = null;\\r\\n        };\\r\\n        CubismMotionQueueManager.prototype.startMotion = function (motion, autoDelete, userTimeSeconds) {\\r\\n            var _a, _b;\\r\\n            if (motion == null) {\\r\\n                return Live2DCubismFramework.InvalidMotionQueueEntryHandleValue;\\r\\n            }\\r\\n            var motionQueueEntry = null;\\r\\n            for (var i = 0; i < this._motions.getSize(); ++i) {\\r\\n                motionQueueEntry = this._motions.at(i);\\r\\n                if (motionQueueEntry == null) {\\r\\n                    continue;\\r\\n                }\\r\\n                motionQueueEntry.startFadeout(motionQueueEntry._motion.getFadeOutTime(), userTimeSeconds);\\r\\n            }\\r\\n            motionQueueEntry = new CubismMotionQueueEntry();\\r\\n            motionQueueEntry._autoDelete = autoDelete;\\r\\n            motionQueueEntry._motion = motion;\\r\\n            if (((_b = (_a = motion) === null || _a === void 0 ? void 0 : _a['_motionData']) === null || _b === void 0 ? void 0 : _b['curveCount']) < 100) {\\r\\n                this._motions.pushBack(motionQueueEntry);\\r\\n            }\\r\\n            return motionQueueEntry._motionQueueEntryHandle;\\r\\n        };\\r\\n        CubismMotionQueueManager.prototype.isFinished = function () {\\r\\n            for (var ite = this._motions.begin(); ite.notEqual(this._motions.end());) {\\r\\n                var motionQueueEntry = ite.ptr();\\r\\n                if (motionQueueEntry == null) {\\r\\n                    ite = this._motions.erase(ite);\\r\\n                    continue;\\r\\n                }\\r\\n                var motion = motionQueueEntry._motion;\\r\\n                if (motion == null) {\\r\\n                    motionQueueEntry.release();\\r\\n                    motionQueueEntry = void 0;\\r\\n                    motionQueueEntry = null;\\r\\n                    ite = this._motions.erase(ite);\\r\\n                    continue;\\r\\n                }\\r\\n                if (!motionQueueEntry.isFinished()) {\\r\\n                    return false;\\r\\n                }\\r\\n                else {\\r\\n                    ite.preIncrement();\\r\\n                }\\r\\n            }\\r\\n            return true;\\r\\n        };\\r\\n        CubismMotionQueueManager.prototype.isFinishedByHandle = function (motionQueueEntryNumber) {\\r\\n            for (var ite = this._motions.begin(); ite.notEqual(this._motions.end()); ite.increment()) {\\r\\n                var motionQueueEntry = ite.ptr();\\r\\n                if (motionQueueEntry == null) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber &&\\r\\n                    !motionQueueEntry.isFinished()) {\\r\\n                    return false;\\r\\n                }\\r\\n            }\\r\\n            return true;\\r\\n        };\\r\\n        CubismMotionQueueManager.prototype.stopAllMotions = function () {\\r\\n            for (var ite = this._motions.begin(); ite.notEqual(this._motions.end());) {\\r\\n                var motionQueueEntry = ite.ptr();\\r\\n                if (motionQueueEntry == null) {\\r\\n                    ite = this._motions.erase(ite);\\r\\n                    continue;\\r\\n                }\\r\\n                motionQueueEntry.release();\\r\\n                motionQueueEntry = void 0;\\r\\n                motionQueueEntry = null;\\r\\n                ite = this._motions.erase(ite);\\r\\n            }\\r\\n        };\\r\\n        CubismMotionQueueManager.prototype.getCubismMotionQueueEntry = function (motionQueueEntryNumber) {\\r\\n            for (var ite = this._motions.begin(); ite.notEqual(this._motions.end()); ite.preIncrement()) {\\r\\n                var motionQueueEntry = ite.ptr();\\r\\n                if (motionQueueEntry == null) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber) {\\r\\n                    return motionQueueEntry;\\r\\n                }\\r\\n            }\\r\\n            return null;\\r\\n        };\\r\\n        CubismMotionQueueManager.prototype.setEventCallback = function (callback, customData) {\\r\\n            if (customData === void 0) { customData = null; }\\r\\n            this._eventCallBack = callback;\\r\\n            this._eventCustomData = customData;\\r\\n        };\\r\\n        CubismMotionQueueManager.prototype.doUpdateMotion = function (model, userTimeSeconds) {\\r\\n            var updated = false;\\r\\n            for (var ite = this._motions.begin(); ite.notEqual(this._motions.end());) {\\r\\n                var motionQueueEntry = ite.ptr();\\r\\n                if (motionQueueEntry == null) {\\r\\n                    ite = this._motions.erase(ite);\\r\\n                    continue;\\r\\n                }\\r\\n                var motion = motionQueueEntry._motion;\\r\\n                if (motion == null) {\\r\\n                    motionQueueEntry.release();\\r\\n                    motionQueueEntry = void 0;\\r\\n                    motionQueueEntry = null;\\r\\n                    ite = this._motions.erase(ite);\\r\\n                    continue;\\r\\n                }\\r\\n                motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\\r\\n                updated = true;\\r\\n                var firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventTime() -\\r\\n                    motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\\r\\n                for (var i = 0; i < firedList.getSize(); ++i) {\\r\\n                    this._eventCallBack(this, firedList.at(i), this._eventCustomData);\\r\\n                }\\r\\n                motionQueueEntry.setLastCheckEventTime(userTimeSeconds);\\r\\n                if (motionQueueEntry.isFinished()) {\\r\\n                    motionQueueEntry.release();\\r\\n                    motionQueueEntry = void 0;\\r\\n                    motionQueueEntry = null;\\r\\n                    ite = this._motions.erase(ite);\\r\\n                }\\r\\n                else {\\r\\n                    ite.preIncrement();\\r\\n                }\\r\\n            }\\r\\n            return updated;\\r\\n        };\\r\\n        return CubismMotionQueueManager;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionQueueManager = CubismMotionQueueManager;\\r\\n    Live2DCubismFramework.InvalidMotionQueueEntryHandleValue = -1;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/motion/cubismmotionqueuemanager.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/physics/cubismphysics.ts\":\n      /*!************************************************!*\\\n        !*** ./Framework/src/physics/cubismphysics.ts ***!\n        \\************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismphysicsinternal_1 = __webpack_require__(/*! ./cubismphysicsinternal */ \\\"./Framework/src/physics/cubismphysicsinternal.ts\\\");\\r\\nvar cubismvector2_1 = __webpack_require__(/*! ../math/cubismvector2 */ \\\"./Framework/src/math/cubismvector2.ts\\\");\\r\\nvar cubismmath_1 = __webpack_require__(/*! ../math/cubismmath */ \\\"./Framework/src/math/cubismmath.ts\\\");\\r\\nvar cubismphysicsjson_1 = __webpack_require__(/*! ./cubismphysicsjson */ \\\"./Framework/src/physics/cubismphysicsjson.ts\\\");\\r\\nvar CubismPhysicsJson = cubismphysicsjson_1.Live2DCubismFramework.CubismPhysicsJson;\\r\\nvar CubismMath = cubismmath_1.Live2DCubismFramework.CubismMath;\\r\\nvar CubismPhysicsRig = cubismphysicsinternal_1.Live2DCubismFramework.CubismPhysicsRig;\\r\\nvar CubismPhysicsSubRig = cubismphysicsinternal_1.Live2DCubismFramework.CubismPhysicsSubRig;\\r\\nvar CubismPhysicsInput = cubismphysicsinternal_1.Live2DCubismFramework.CubismPhysicsInput;\\r\\nvar CubismPhysicsOutput = cubismphysicsinternal_1.Live2DCubismFramework.CubismPhysicsOutput;\\r\\nvar CubismPhysicsParticle = cubismphysicsinternal_1.Live2DCubismFramework.CubismPhysicsParticle;\\r\\nvar CubismPhysicsSource = cubismphysicsinternal_1.Live2DCubismFramework.CubismPhysicsSource;\\r\\nvar CubismPhysicsTargetType = cubismphysicsinternal_1.Live2DCubismFramework.CubismPhysicsTargetType;\\r\\nvar CubismVector2 = cubismvector2_1.Live2DCubismFramework.CubismVector2;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var PhysicsTypeTagX = 'X';\\r\\n    var PhysicsTypeTagY = 'Y';\\r\\n    var PhysicsTypeTagAngle = 'Angle';\\r\\n    var AirResistance = 5.0;\\r\\n    var MaximumWeight = 100.0;\\r\\n    var MovementThreshold = 0.001;\\r\\n    var CubismPhysics = (function () {\\r\\n        function CubismPhysics() {\\r\\n            this._physicsRig = null;\\r\\n            this._options = new Options();\\r\\n            this._options.gravity.y = -1.0;\\r\\n            this._options.gravity.x = 0;\\r\\n            this._options.wind.x = 0;\\r\\n            this._options.wind.y = 0;\\r\\n        }\\r\\n        CubismPhysics.create = function (buffer, size) {\\r\\n            var ret = new CubismPhysics();\\r\\n            ret.parse(buffer, size);\\r\\n            ret._physicsRig.gravity.y = 0;\\r\\n            return ret;\\r\\n        };\\r\\n        CubismPhysics.delete = function (physics) {\\r\\n            if (physics != null) {\\r\\n                physics.release();\\r\\n                physics = null;\\r\\n            }\\r\\n        };\\r\\n        CubismPhysics.prototype.evaluate = function (model, deltaTimeSeconds) {\\r\\n            var totalAngle;\\r\\n            var weight;\\r\\n            var radAngle;\\r\\n            var outputValue;\\r\\n            var totalTranslation = new CubismVector2();\\r\\n            var currentSetting;\\r\\n            var currentInput;\\r\\n            var currentOutput;\\r\\n            var currentParticles;\\r\\n            var parameterValue;\\r\\n            var parameterMaximumValue;\\r\\n            var parameterMinimumValue;\\r\\n            var parameterDefaultValue;\\r\\n            parameterValue = model.getModel().parameters.values;\\r\\n            parameterMaximumValue = model.getModel().parameters.maximumValues;\\r\\n            parameterMinimumValue = model.getModel().parameters.minimumValues;\\r\\n            parameterDefaultValue = model.getModel().parameters.defaultValues;\\r\\n            for (var settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\\r\\n                totalAngle = { angle: 0.0 };\\r\\n                totalTranslation.x = 0.0;\\r\\n                totalTranslation.y = 0.0;\\r\\n                currentSetting = this._physicsRig.settings.at(settingIndex);\\r\\n                currentInput = this._physicsRig.inputs.get(currentSetting.baseInputIndex);\\r\\n                currentOutput = this._physicsRig.outputs.get(currentSetting.baseOutputIndex);\\r\\n                currentParticles = this._physicsRig.particles.get(currentSetting.baseParticleIndex);\\r\\n                for (var i = 0; i < currentSetting.inputCount; ++i) {\\r\\n                    weight = currentInput[i].weight / MaximumWeight;\\r\\n                    if (currentInput[i].sourceParameterIndex == -1) {\\r\\n                        currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\\r\\n                    }\\r\\n                    currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[0].reflect, weight);\\r\\n                }\\r\\n                radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\\r\\n                totalTranslation.x =\\r\\n                    totalTranslation.x * CubismMath.cos(radAngle) -\\r\\n                        totalTranslation.y * CubismMath.sin(radAngle);\\r\\n                totalTranslation.y =\\r\\n                    totalTranslation.x * CubismMath.sin(radAngle) +\\r\\n                        totalTranslation.y * CubismMath.cos(radAngle);\\r\\n                updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\\r\\n                for (var i = 0; i < currentSetting.outputCount; ++i) {\\r\\n                    var particleIndex = currentOutput[i].vertexIndex;\\r\\n                    if (particleIndex < 1 ||\\r\\n                        particleIndex >= currentSetting.particleCount) {\\r\\n                        break;\\r\\n                    }\\r\\n                    if (currentOutput[i].destinationParameterIndex == -1) {\\r\\n                        currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\\r\\n                    }\\r\\n                    var translation = new CubismVector2();\\r\\n                    translation.x =\\r\\n                        currentParticles[particleIndex].position.x -\\r\\n                            currentParticles[particleIndex - 1].position.x;\\r\\n                    translation.y =\\r\\n                        currentParticles[particleIndex].position.y -\\r\\n                            currentParticles[particleIndex - 1].position.y;\\r\\n                    outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\\r\\n                    var destinationParameterIndex = currentOutput[i].destinationParameterIndex;\\r\\n                    var outParameterValue = !Float32Array.prototype.slice &&\\r\\n                        'subarray' in Float32Array.prototype\\r\\n                        ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex)))\\r\\n                        : parameterValue.slice(destinationParameterIndex);\\r\\n                    updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\\r\\n                    for (var offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\\r\\n                        parameterValue[offset] = outParameterValue[outParamIndex];\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismPhysics.prototype.setOptions = function (options) {\\r\\n            this._options = options;\\r\\n        };\\r\\n        CubismPhysics.prototype.getOption = function () {\\r\\n            return this._options;\\r\\n        };\\r\\n        CubismPhysics.prototype.release = function () {\\r\\n            this._physicsRig = void 0;\\r\\n            this._physicsRig = null;\\r\\n        };\\r\\n        CubismPhysics.prototype.parse = function (physicsJson, size) {\\r\\n            this._physicsRig = new CubismPhysicsRig();\\r\\n            var json = new CubismPhysicsJson(physicsJson, size);\\r\\n            this._physicsRig.gravity = json.getGravity();\\r\\n            this._physicsRig.wind = json.getWind();\\r\\n            this._physicsRig.subRigCount = json.getSubRigCount();\\r\\n            this._physicsRig.settings.updateSize(this._physicsRig.subRigCount, CubismPhysicsSubRig, true);\\r\\n            this._physicsRig.inputs.updateSize(json.getTotalInputCount(), CubismPhysicsInput, true);\\r\\n            this._physicsRig.outputs.updateSize(json.getTotalOutputCount(), CubismPhysicsOutput, true);\\r\\n            this._physicsRig.particles.updateSize(json.getVertexCount(), CubismPhysicsParticle, true);\\r\\n            var inputIndex = 0, outputIndex = 0, particleIndex = 0;\\r\\n            for (var i = 0; i < this._physicsRig.settings.getSize(); ++i) {\\r\\n                this._physicsRig.settings.at(i).normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\\r\\n                this._physicsRig.settings.at(i).normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\\r\\n                this._physicsRig.settings.at(i).normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\\r\\n                this._physicsRig.settings.at(i).normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\\r\\n                this._physicsRig.settings.at(i).normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\\r\\n                this._physicsRig.settings.at(i).normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\\r\\n                this._physicsRig.settings.at(i).inputCount = json.getInputCount(i);\\r\\n                this._physicsRig.settings.at(i).baseInputIndex = inputIndex;\\r\\n                for (var j = 0; j < this._physicsRig.settings.at(i).inputCount; ++j) {\\r\\n                    this._physicsRig.inputs.at(inputIndex + j).sourceParameterIndex = -1;\\r\\n                    this._physicsRig.inputs.at(inputIndex + j).weight = json.getInputWeight(i, j);\\r\\n                    this._physicsRig.inputs.at(inputIndex + j).reflect = json.getInputReflect(i, j);\\r\\n                    if (json.getInputType(i, j) == PhysicsTypeTagX) {\\r\\n                        this._physicsRig.inputs.at(inputIndex + j).type =\\r\\n                            CubismPhysicsSource.CubismPhysicsSource_X;\\r\\n                        this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\\r\\n                    }\\r\\n                    else if (json.getInputType(i, j) == PhysicsTypeTagY) {\\r\\n                        this._physicsRig.inputs.at(inputIndex + j).type =\\r\\n                            CubismPhysicsSource.CubismPhysicsSource_Y;\\r\\n                        this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\\r\\n                    }\\r\\n                    else if (json.getInputType(i, j) == PhysicsTypeTagAngle) {\\r\\n                        this._physicsRig.inputs.at(inputIndex + j).type =\\r\\n                            CubismPhysicsSource.CubismPhysicsSource_Angle;\\r\\n                        this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\\r\\n                    }\\r\\n                    this._physicsRig.inputs.at(inputIndex + j).source.targetType =\\r\\n                        CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\\r\\n                    this._physicsRig.inputs.at(inputIndex + j).source.id = json.getInputSourceId(i, j);\\r\\n                }\\r\\n                inputIndex += this._physicsRig.settings.at(i).inputCount;\\r\\n                this._physicsRig.settings.at(i).outputCount = json.getOutputCount(i);\\r\\n                this._physicsRig.settings.at(i).baseOutputIndex = outputIndex;\\r\\n                for (var j = 0; j < this._physicsRig.settings.at(i).outputCount; ++j) {\\r\\n                    this._physicsRig.outputs.at(outputIndex + j).destinationParameterIndex = -1;\\r\\n                    this._physicsRig.outputs.at(outputIndex + j).vertexIndex = json.getOutputVertexIndex(i, j);\\r\\n                    this._physicsRig.outputs.at(outputIndex + j).angleScale = json.getOutputAngleScale(i, j);\\r\\n                    this._physicsRig.outputs.at(outputIndex + j).weight = json.getOutputWeight(i, j);\\r\\n                    this._physicsRig.outputs.at(outputIndex + j).destination.targetType =\\r\\n                        CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\\r\\n                    this._physicsRig.outputs.at(outputIndex + j).destination.id = json.getOutputDestinationId(i, j);\\r\\n                    if (json.getOutputType(i, j) == PhysicsTypeTagX) {\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).type =\\r\\n                            CubismPhysicsSource.CubismPhysicsSource_X;\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).getValue = getOutputTranslationX;\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).getScale = getOutputScaleTranslationX;\\r\\n                    }\\r\\n                    else if (json.getOutputType(i, j) == PhysicsTypeTagY) {\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).type =\\r\\n                            CubismPhysicsSource.CubismPhysicsSource_Y;\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).getValue = getOutputTranslationY;\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).getScale = getOutputScaleTranslationY;\\r\\n                    }\\r\\n                    else if (json.getOutputType(i, j) == PhysicsTypeTagAngle) {\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).type =\\r\\n                            CubismPhysicsSource.CubismPhysicsSource_Angle;\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).getValue = getOutputAngle;\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).getScale = getOutputScaleAngle;\\r\\n                    }\\r\\n                    this._physicsRig.outputs.at(outputIndex + j).reflect = json.getOutputReflect(i, j);\\r\\n                }\\r\\n                outputIndex += this._physicsRig.settings.at(i).outputCount;\\r\\n                this._physicsRig.settings.at(i).particleCount = json.getParticleCount(i);\\r\\n                this._physicsRig.settings.at(i).baseParticleIndex = particleIndex;\\r\\n                for (var j = 0; j < this._physicsRig.settings.at(i).particleCount; ++j) {\\r\\n                    this._physicsRig.particles.at(particleIndex + j).mobility = json.getParticleMobility(i, j);\\r\\n                    this._physicsRig.particles.at(particleIndex + j).delay = json.getParticleDelay(i, j);\\r\\n                    this._physicsRig.particles.at(particleIndex + j).acceleration = json.getParticleAcceleration(i, j);\\r\\n                    this._physicsRig.particles.at(particleIndex + j).radius = json.getParticleRadius(i, j);\\r\\n                    this._physicsRig.particles.at(particleIndex + j).position = json.getParticlePosition(i, j);\\r\\n                }\\r\\n                particleIndex += this._physicsRig.settings.at(i).particleCount;\\r\\n            }\\r\\n            this.initialize();\\r\\n            json.release();\\r\\n            json = void 0;\\r\\n            json = null;\\r\\n        };\\r\\n        CubismPhysics.prototype.initialize = function () {\\r\\n            var strand;\\r\\n            var currentSetting;\\r\\n            var radius;\\r\\n            for (var settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\\r\\n                currentSetting = this._physicsRig.settings.at(settingIndex);\\r\\n                strand = this._physicsRig.particles.get(currentSetting.baseParticleIndex);\\r\\n                strand[0].initialPosition = new CubismVector2(0.0, 0.0);\\r\\n                strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\\r\\n                strand[0].lastGravity = new CubismVector2(0.0, -1.0);\\r\\n                strand[0].lastGravity.y *= -1.0;\\r\\n                strand[0].velocity = new CubismVector2(0.0, 0.0);\\r\\n                strand[0].force = new CubismVector2(0.0, 0.0);\\r\\n                for (var i = 1; i < currentSetting.particleCount; ++i) {\\r\\n                    radius = new CubismVector2(0.0, 0.0);\\r\\n                    radius.y = strand[i].radius;\\r\\n                    strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\\r\\n                    strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\\r\\n                    strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\\r\\n                    strand[i].lastGravity = new CubismVector2(0.0, -1.0);\\r\\n                    strand[i].lastGravity.y *= -1.0;\\r\\n                    strand[i].velocity = new CubismVector2(0.0, 0.0);\\r\\n                    strand[i].force = new CubismVector2(0.0, 0.0);\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        return CubismPhysics;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysics = CubismPhysics;\\r\\n    var Options = (function () {\\r\\n        function Options() {\\r\\n            this.gravity = new CubismVector2(0, 0);\\r\\n            this.wind = new CubismVector2(0, 0);\\r\\n        }\\r\\n        return Options;\\r\\n    }());\\r\\n    Live2DCubismFramework.Options = Options;\\r\\n    function sign(value) {\\r\\n        var ret = 0;\\r\\n        if (value > 0.0) {\\r\\n            ret = 1;\\r\\n        }\\r\\n        else if (value < 0.0) {\\r\\n            ret = -1;\\r\\n        }\\r\\n        return ret;\\r\\n    }\\r\\n    function getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\\r\\n        targetTranslation.x +=\\r\\n            normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\\r\\n    }\\r\\n    function getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\\r\\n        targetTranslation.y +=\\r\\n            normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\\r\\n    }\\r\\n    function getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\\r\\n        targetAngle.angle +=\\r\\n            normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\\r\\n    }\\r\\n    function getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\\r\\n        var outputValue = translation.x;\\r\\n        if (isInverted) {\\r\\n            outputValue *= -1.0;\\r\\n        }\\r\\n        return outputValue;\\r\\n    }\\r\\n    function getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\\r\\n        var outputValue = translation.y;\\r\\n        if (isInverted) {\\r\\n            outputValue *= -1.0;\\r\\n        }\\r\\n        return outputValue;\\r\\n    }\\r\\n    function getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\\r\\n        var outputValue;\\r\\n        if (particleIndex >= 2) {\\r\\n            parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\\r\\n        }\\r\\n        else {\\r\\n            parentGravity = parentGravity.multiplyByScaler(-1.0);\\r\\n        }\\r\\n        outputValue = CubismMath.directionToRadian(parentGravity, translation);\\r\\n        if (isInverted) {\\r\\n            outputValue *= -1.0;\\r\\n        }\\r\\n        return outputValue;\\r\\n    }\\r\\n    function getRangeValue(min, max) {\\r\\n        var maxValue = CubismMath.max(min, max);\\r\\n        var minValue = CubismMath.min(min, max);\\r\\n        return CubismMath.abs(maxValue - minValue);\\r\\n    }\\r\\n    function getDefaultValue(min, max) {\\r\\n        var minValue = CubismMath.min(min, max);\\r\\n        return minValue + getRangeValue(min, max) / 2.0;\\r\\n    }\\r\\n    function getOutputScaleTranslationX(translationScale, angleScale) {\\r\\n        return JSON.parse(JSON.stringify(translationScale.x));\\r\\n    }\\r\\n    function getOutputScaleTranslationY(translationScale, angleScale) {\\r\\n        return JSON.parse(JSON.stringify(translationScale.y));\\r\\n    }\\r\\n    function getOutputScaleAngle(translationScale, angleScale) {\\r\\n        return JSON.parse(JSON.stringify(angleScale));\\r\\n    }\\r\\n    function updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\\r\\n        var totalRadian;\\r\\n        var delay;\\r\\n        var radian;\\r\\n        var currentGravity;\\r\\n        var direction = new CubismVector2(0.0, 0.0);\\r\\n        var velocity = new CubismVector2(0.0, 0.0);\\r\\n        var force = new CubismVector2(0.0, 0.0);\\r\\n        var newDirection = new CubismVector2(0.0, 0.0);\\r\\n        strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\\r\\n        totalRadian = CubismMath.degreesToRadian(totalAngle);\\r\\n        currentGravity = CubismMath.radianToDirection(totalRadian);\\r\\n        currentGravity.normalize();\\r\\n        for (var i = 1; i < strandCount; ++i) {\\r\\n            strand[i].force = currentGravity\\r\\n                .multiplyByScaler(strand[i].acceleration)\\r\\n                .add(windDirection);\\r\\n            strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\\r\\n            delay = strand[i].delay * deltaTimeSeconds * 30.0;\\r\\n            direction = strand[i].position.substract(strand[i - 1].position);\\r\\n            radian =\\r\\n                CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) /\\r\\n                    airResistance;\\r\\n            direction.x =\\r\\n                CubismMath.cos(radian) * direction.x -\\r\\n                    direction.y * CubismMath.sin(radian);\\r\\n            direction.y =\\r\\n                CubismMath.sin(radian) * direction.x +\\r\\n                    direction.y * CubismMath.cos(radian);\\r\\n            strand[i].position = strand[i - 1].position.add(direction);\\r\\n            velocity = strand[i].velocity.multiplyByScaler(delay);\\r\\n            force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\\r\\n            strand[i].position = strand[i].position.add(velocity).add(force);\\r\\n            newDirection = strand[i].position.substract(strand[i - 1].position);\\r\\n            newDirection.normalize();\\r\\n            strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\\r\\n            if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\\r\\n                strand[i].position.x = 0.0;\\r\\n            }\\r\\n            if (delay != 0.0) {\\r\\n                strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\\r\\n                strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\\r\\n                strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\\r\\n            }\\r\\n            strand[i].force = new CubismVector2(0.0, 0.0);\\r\\n            strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\\r\\n        }\\r\\n    }\\r\\n    function updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\\r\\n        var outputScale;\\r\\n        var value;\\r\\n        var weight;\\r\\n        outputScale = output.getScale(output.translationScale, output.angleScale);\\r\\n        value = translation * outputScale;\\r\\n        if (value < parameterValueMinimum) {\\r\\n            if (value < output.valueBelowMinimum) {\\r\\n                output.valueBelowMinimum = value;\\r\\n            }\\r\\n            value = parameterValueMinimum;\\r\\n        }\\r\\n        else if (value > parameterValueMaximum) {\\r\\n            if (value > output.valueExceededMaximum) {\\r\\n                output.valueExceededMaximum = value;\\r\\n            }\\r\\n            value = parameterValueMaximum;\\r\\n        }\\r\\n        weight = output.weight / MaximumWeight;\\r\\n        if (weight >= 1.0) {\\r\\n            parameterValue[0] = value;\\r\\n        }\\r\\n        else {\\r\\n            value = parameterValue[0] * (1.0 - weight) + value * weight;\\r\\n            parameterValue[0] = value;\\r\\n        }\\r\\n    }\\r\\n    function normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\\r\\n        var result = 0.0;\\r\\n        var maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\\r\\n        if (maxValue < value) {\\r\\n            value = maxValue;\\r\\n        }\\r\\n        var minValue = CubismMath.min(parameterMaximum, parameterMinimum);\\r\\n        if (minValue > value) {\\r\\n            value = minValue;\\r\\n        }\\r\\n        var minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\\r\\n        var maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\\r\\n        var middleNormValue = normalizedDefault;\\r\\n        var middleValue = getDefaultValue(minValue, maxValue);\\r\\n        var paramValue = value - middleValue;\\r\\n        switch (sign(paramValue)) {\\r\\n            case 1: {\\r\\n                var nLength = maxNormValue - middleNormValue;\\r\\n                var pLength = maxValue - middleValue;\\r\\n                if (pLength != 0.0) {\\r\\n                    result = paramValue * (nLength / pLength);\\r\\n                    result += middleNormValue;\\r\\n                }\\r\\n                break;\\r\\n            }\\r\\n            case -1: {\\r\\n                var nLength = minNormValue - middleNormValue;\\r\\n                var pLength = minValue - middleValue;\\r\\n                if (pLength != 0.0) {\\r\\n                    result = paramValue * (nLength / pLength);\\r\\n                    result += middleNormValue;\\r\\n                }\\r\\n                break;\\r\\n            }\\r\\n            case 0: {\\r\\n                result = middleNormValue;\\r\\n                break;\\r\\n            }\\r\\n            default: {\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        return isInverted ? result : result * -1.0;\\r\\n    }\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/physics/cubismphysics.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/physics/cubismphysicsinternal.ts\":\n      /*!********************************************************!*\\\n        !*** ./Framework/src/physics/cubismphysicsinternal.ts ***!\n        \\********************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismvector2_1 = __webpack_require__(/*! ../math/cubismvector2 */ \\\"./Framework/src/math/cubismvector2.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismVector2 = cubismvector2_1.Live2DCubismFramework.CubismVector2;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismPhysicsTargetType;\\r\\n    (function (CubismPhysicsTargetType) {\\r\\n        CubismPhysicsTargetType[CubismPhysicsTargetType[\\\"CubismPhysicsTargetType_Parameter\\\"] = 0] = \\\"CubismPhysicsTargetType_Parameter\\\";\\r\\n    })(CubismPhysicsTargetType = Live2DCubismFramework.CubismPhysicsTargetType || (Live2DCubismFramework.CubismPhysicsTargetType = {}));\\r\\n    var CubismPhysicsSource;\\r\\n    (function (CubismPhysicsSource) {\\r\\n        CubismPhysicsSource[CubismPhysicsSource[\\\"CubismPhysicsSource_X\\\"] = 0] = \\\"CubismPhysicsSource_X\\\";\\r\\n        CubismPhysicsSource[CubismPhysicsSource[\\\"CubismPhysicsSource_Y\\\"] = 1] = \\\"CubismPhysicsSource_Y\\\";\\r\\n        CubismPhysicsSource[CubismPhysicsSource[\\\"CubismPhysicsSource_Angle\\\"] = 2] = \\\"CubismPhysicsSource_Angle\\\";\\r\\n    })(CubismPhysicsSource = Live2DCubismFramework.CubismPhysicsSource || (Live2DCubismFramework.CubismPhysicsSource = {}));\\r\\n    var PhysicsJsonEffectiveForces = (function () {\\r\\n        function PhysicsJsonEffectiveForces() {\\r\\n            this.gravity = new CubismVector2(0, 0);\\r\\n            this.wind = new CubismVector2(0, 0);\\r\\n        }\\r\\n        return PhysicsJsonEffectiveForces;\\r\\n    }());\\r\\n    Live2DCubismFramework.PhysicsJsonEffectiveForces = PhysicsJsonEffectiveForces;\\r\\n    var CubismPhysicsParameter = (function () {\\r\\n        function CubismPhysicsParameter() {\\r\\n        }\\r\\n        return CubismPhysicsParameter;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsParameter = CubismPhysicsParameter;\\r\\n    var CubismPhysicsNormalization = (function () {\\r\\n        function CubismPhysicsNormalization() {\\r\\n        }\\r\\n        return CubismPhysicsNormalization;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsNormalization = CubismPhysicsNormalization;\\r\\n    var CubismPhysicsParticle = (function () {\\r\\n        function CubismPhysicsParticle() {\\r\\n            this.initialPosition = new CubismVector2(0, 0);\\r\\n            this.position = new CubismVector2(0, 0);\\r\\n            this.lastPosition = new CubismVector2(0, 0);\\r\\n            this.lastGravity = new CubismVector2(0, 0);\\r\\n            this.force = new CubismVector2(0, 0);\\r\\n            this.velocity = new CubismVector2(0, 0);\\r\\n        }\\r\\n        return CubismPhysicsParticle;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsParticle = CubismPhysicsParticle;\\r\\n    var CubismPhysicsSubRig = (function () {\\r\\n        function CubismPhysicsSubRig() {\\r\\n            this.normalizationPosition = new CubismPhysicsNormalization();\\r\\n            this.normalizationAngle = new CubismPhysicsNormalization();\\r\\n        }\\r\\n        return CubismPhysicsSubRig;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsSubRig = CubismPhysicsSubRig;\\r\\n    var CubismPhysicsInput = (function () {\\r\\n        function CubismPhysicsInput() {\\r\\n            this.source = new CubismPhysicsParameter();\\r\\n        }\\r\\n        return CubismPhysicsInput;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsInput = CubismPhysicsInput;\\r\\n    var CubismPhysicsOutput = (function () {\\r\\n        function CubismPhysicsOutput() {\\r\\n            this.destination = new CubismPhysicsParameter();\\r\\n            this.translationScale = new CubismVector2(0, 0);\\r\\n        }\\r\\n        return CubismPhysicsOutput;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsOutput = CubismPhysicsOutput;\\r\\n    var CubismPhysicsRig = (function () {\\r\\n        function CubismPhysicsRig() {\\r\\n            this.settings = new csmVector();\\r\\n            this.inputs = new csmVector();\\r\\n            this.outputs = new csmVector();\\r\\n            this.particles = new csmVector();\\r\\n            this.gravity = new CubismVector2(0, 0);\\r\\n            this.wind = new CubismVector2(0, 0);\\r\\n        }\\r\\n        return CubismPhysicsRig;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsRig = CubismPhysicsRig;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/physics/cubismphysicsinternal.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/physics/cubismphysicsjson.ts\":\n      /*!****************************************************!*\\\n        !*** ./Framework/src/physics/cubismphysicsjson.ts ***!\n        \\****************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismjson_1 = __webpack_require__(/*! ../utils/cubismjson */ \\\"./Framework/src/utils/cubismjson.ts\\\");\\r\\nvar cubismvector2_1 = __webpack_require__(/*! ../math/cubismvector2 */ \\\"./Framework/src/math/cubismvector2.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismVector2 = cubismvector2_1.Live2DCubismFramework.CubismVector2;\\r\\nvar CubismJson = cubismjson_1.Live2DCubismFramework.CubismJson;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var Position = 'Position';\\r\\n    var X = 'X';\\r\\n    var Y = 'Y';\\r\\n    var Angle = 'Angle';\\r\\n    var Type = 'Type';\\r\\n    var Id = 'Id';\\r\\n    var Meta = 'Meta';\\r\\n    var EffectiveForces = 'EffectiveForces';\\r\\n    var TotalInputCount = 'TotalInputCount';\\r\\n    var TotalOutputCount = 'TotalOutputCount';\\r\\n    var PhysicsSettingCount = 'PhysicsSettingCount';\\r\\n    var Gravity = 'Gravity';\\r\\n    var Wind = 'Wind';\\r\\n    var VertexCount = 'VertexCount';\\r\\n    var PhysicsSettings = 'PhysicsSettings';\\r\\n    var Normalization = 'Normalization';\\r\\n    var Minimum = 'Minimum';\\r\\n    var Maximum = 'Maximum';\\r\\n    var Default = 'Default';\\r\\n    var Reflect = 'Reflect';\\r\\n    var Weight = 'Weight';\\r\\n    var Input = 'Input';\\r\\n    var Source = 'Source';\\r\\n    var Output = 'Output';\\r\\n    var Scale = 'Scale';\\r\\n    var VertexIndex = 'VertexIndex';\\r\\n    var Destination = 'Destination';\\r\\n    var Vertices = 'Vertices';\\r\\n    var Mobility = 'Mobility';\\r\\n    var Delay = 'Delay';\\r\\n    var Radius = 'Radius';\\r\\n    var Acceleration = 'Acceleration';\\r\\n    var CubismPhysicsJson = (function () {\\r\\n        function CubismPhysicsJson(buffer, size) {\\r\\n            this._json = CubismJson.create(buffer, size);\\r\\n        }\\r\\n        CubismPhysicsJson.prototype.release = function () {\\r\\n            CubismJson.delete(this._json);\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getGravity = function () {\\r\\n            var ret = new CubismVector2(0, 0);\\r\\n            ret.x = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(EffectiveForces)\\r\\n                .getValueByString(Gravity)\\r\\n                .getValueByString(X)\\r\\n                .toFloat();\\r\\n            ret.y = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(EffectiveForces)\\r\\n                .getValueByString(Gravity)\\r\\n                .getValueByString(Y)\\r\\n                .toFloat();\\r\\n            return ret;\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getWind = function () {\\r\\n            var ret = new CubismVector2(0, 0);\\r\\n            ret.x = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(EffectiveForces)\\r\\n                .getValueByString(Wind)\\r\\n                .getValueByString(X)\\r\\n                .toFloat();\\r\\n            ret.y = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(EffectiveForces)\\r\\n                .getValueByString(Wind)\\r\\n                .getValueByString(Y)\\r\\n                .toFloat();\\r\\n            return ret;\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getSubRigCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(PhysicsSettingCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getTotalInputCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(TotalInputCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getTotalOutputCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(TotalOutputCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getVertexCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(VertexCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getNormalizationPositionMinimumValue = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Normalization)\\r\\n                .getValueByString(Position)\\r\\n                .getValueByString(Minimum)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getNormalizationPositionMaximumValue = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Normalization)\\r\\n                .getValueByString(Position)\\r\\n                .getValueByString(Maximum)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getNormalizationPositionDefaultValue = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Normalization)\\r\\n                .getValueByString(Position)\\r\\n                .getValueByString(Default)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getNormalizationAngleMinimumValue = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Normalization)\\r\\n                .getValueByString(Angle)\\r\\n                .getValueByString(Minimum)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getNormalizationAngleMaximumValue = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Normalization)\\r\\n                .getValueByString(Angle)\\r\\n                .getValueByString(Maximum)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getNormalizationAngleDefaultValue = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Normalization)\\r\\n                .getValueByString(Angle)\\r\\n                .getValueByString(Default)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getInputCount = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Input)\\r\\n                .getVector()\\r\\n                .getSize();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getInputWeight = function (physicsSettingIndex, inputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Input)\\r\\n                .getValueByIndex(inputIndex)\\r\\n                .getValueByString(Weight)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getInputReflect = function (physicsSettingIndex, inputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Input)\\r\\n                .getValueByIndex(inputIndex)\\r\\n                .getValueByString(Reflect)\\r\\n                .toBoolean();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getInputType = function (physicsSettingIndex, inputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Input)\\r\\n                .getValueByIndex(inputIndex)\\r\\n                .getValueByString(Type)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getInputSourceId = function (physicsSettingIndex, inputIndex) {\\r\\n            return CubismFramework.getIdManager().getId(this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Input)\\r\\n                .getValueByIndex(inputIndex)\\r\\n                .getValueByString(Source)\\r\\n                .getValueByString(Id)\\r\\n                .getRawString());\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getOutputCount = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Output)\\r\\n                .getVector()\\r\\n                .getSize();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getOutputVertexIndex = function (physicsSettingIndex, outputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Output)\\r\\n                .getValueByIndex(outputIndex)\\r\\n                .getValueByString(VertexIndex)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getOutputAngleScale = function (physicsSettingIndex, outputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Output)\\r\\n                .getValueByIndex(outputIndex)\\r\\n                .getValueByString(Scale)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getOutputWeight = function (physicsSettingIndex, outputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Output)\\r\\n                .getValueByIndex(outputIndex)\\r\\n                .getValueByString(Weight)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getOutputDestinationId = function (physicsSettingIndex, outputIndex) {\\r\\n            return CubismFramework.getIdManager().getId(this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Output)\\r\\n                .getValueByIndex(outputIndex)\\r\\n                .getValueByString(Destination)\\r\\n                .getValueByString(Id)\\r\\n                .getRawString());\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getOutputType = function (physicsSettingIndex, outputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Output)\\r\\n                .getValueByIndex(outputIndex)\\r\\n                .getValueByString(Type)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getOutputReflect = function (physicsSettingIndex, outputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Output)\\r\\n                .getValueByIndex(outputIndex)\\r\\n                .getValueByString(Reflect)\\r\\n                .toBoolean();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getParticleCount = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Vertices)\\r\\n                .getVector()\\r\\n                .getSize();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getParticleMobility = function (physicsSettingIndex, vertexIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Vertices)\\r\\n                .getValueByIndex(vertexIndex)\\r\\n                .getValueByString(Mobility)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getParticleDelay = function (physicsSettingIndex, vertexIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Vertices)\\r\\n                .getValueByIndex(vertexIndex)\\r\\n                .getValueByString(Delay)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getParticleAcceleration = function (physicsSettingIndex, vertexIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Vertices)\\r\\n                .getValueByIndex(vertexIndex)\\r\\n                .getValueByString(Acceleration)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getParticleRadius = function (physicsSettingIndex, vertexIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Vertices)\\r\\n                .getValueByIndex(vertexIndex)\\r\\n                .getValueByString(Radius)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getParticlePosition = function (physicsSettingIndex, vertexIndex) {\\r\\n            var ret = new CubismVector2(0, 0);\\r\\n            ret.x = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Vertices)\\r\\n                .getValueByIndex(vertexIndex)\\r\\n                .getValueByString(Position)\\r\\n                .getValueByString(X)\\r\\n                .toFloat();\\r\\n            ret.y = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Vertices)\\r\\n                .getValueByIndex(vertexIndex)\\r\\n                .getValueByString(Position)\\r\\n                .getValueByString(Y)\\r\\n                .toFloat();\\r\\n            return ret;\\r\\n        };\\r\\n        return CubismPhysicsJson;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsJson = CubismPhysicsJson;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/physics/cubismphysicsjson.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/rendering/cubismrenderer.ts\":\n      /*!***************************************************!*\\\n        !*** ./Framework/src/rendering/cubismrenderer.ts ***!\n        \\***************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmatrix44_1 = __webpack_require__(/*! ../math/cubismmatrix44 */ \\\"./Framework/src/math/cubismmatrix44.ts\\\");\\r\\nvar CubismMatrix44 = cubismmatrix44_1.Live2DCubismFramework.CubismMatrix44;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismRenderer = (function () {\\r\\n        function CubismRenderer() {\\r\\n            this._isCulling = false;\\r\\n            this._isPremultipliedAlpha = false;\\r\\n            this._anisortopy = 0.0;\\r\\n            this._model = null;\\r\\n            this._modelColor = new CubismTextureColor();\\r\\n            this._mvpMatrix4x4 = new CubismMatrix44();\\r\\n            this._mvpMatrix4x4.loadIdentity();\\r\\n        }\\r\\n        CubismRenderer.create = function () {\\r\\n            return null;\\r\\n        };\\r\\n        CubismRenderer.delete = function (renderer) {\\r\\n            renderer = null;\\r\\n        };\\r\\n        CubismRenderer.prototype.initialize = function (model) {\\r\\n            this._model = model;\\r\\n        };\\r\\n        CubismRenderer.prototype.drawModel = function () {\\r\\n            if (this.getModel() == null)\\r\\n                return;\\r\\n            this.doDrawModel();\\r\\n        };\\r\\n        CubismRenderer.prototype.setMvpMatrix = function (matrix44) {\\r\\n            this._mvpMatrix4x4.setMatrix(matrix44.getArray());\\r\\n        };\\r\\n        CubismRenderer.prototype.getMvpMatrix = function () {\\r\\n            return this._mvpMatrix4x4;\\r\\n        };\\r\\n        CubismRenderer.prototype.setModelColor = function (red, green, blue, alpha) {\\r\\n            if (red < 0.0) {\\r\\n                red = 0.0;\\r\\n            }\\r\\n            else if (red > 1.0) {\\r\\n                red = 1.0;\\r\\n            }\\r\\n            if (green < 0.0) {\\r\\n                green = 0.0;\\r\\n            }\\r\\n            else if (green > 1.0) {\\r\\n                green = 1.0;\\r\\n            }\\r\\n            if (blue < 0.0) {\\r\\n                blue = 0.0;\\r\\n            }\\r\\n            else if (blue > 1.0) {\\r\\n                blue = 1.0;\\r\\n            }\\r\\n            if (alpha < 0.0) {\\r\\n                alpha = 0.0;\\r\\n            }\\r\\n            else if (alpha > 1.0) {\\r\\n                alpha = 1.0;\\r\\n            }\\r\\n            this._modelColor.R = red;\\r\\n            this._modelColor.G = green;\\r\\n            this._modelColor.B = blue;\\r\\n            this._modelColor.A = alpha;\\r\\n        };\\r\\n        CubismRenderer.prototype.getModelColor = function () {\\r\\n            return JSON.parse(JSON.stringify(this._modelColor));\\r\\n        };\\r\\n        CubismRenderer.prototype.setIsPremultipliedAlpha = function (enable) {\\r\\n            this._isPremultipliedAlpha = enable;\\r\\n        };\\r\\n        CubismRenderer.prototype.isPremultipliedAlpha = function () {\\r\\n            return this._isPremultipliedAlpha;\\r\\n        };\\r\\n        CubismRenderer.prototype.setIsCulling = function (culling) {\\r\\n            this._isCulling = culling;\\r\\n        };\\r\\n        CubismRenderer.prototype.isCulling = function () {\\r\\n            return this._isCulling;\\r\\n        };\\r\\n        CubismRenderer.prototype.setAnisotropy = function (n) {\\r\\n            this._anisortopy = n;\\r\\n        };\\r\\n        CubismRenderer.prototype.getAnisotropy = function () {\\r\\n            return this._anisortopy;\\r\\n        };\\r\\n        CubismRenderer.prototype.getModel = function () {\\r\\n            return this._model;\\r\\n        };\\r\\n        return CubismRenderer;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismRenderer = CubismRenderer;\\r\\n    var CubismBlendMode;\\r\\n    (function (CubismBlendMode) {\\r\\n        CubismBlendMode[CubismBlendMode[\\\"CubismBlendMode_Normal\\\"] = 0] = \\\"CubismBlendMode_Normal\\\";\\r\\n        CubismBlendMode[CubismBlendMode[\\\"CubismBlendMode_Additive\\\"] = 1] = \\\"CubismBlendMode_Additive\\\";\\r\\n        CubismBlendMode[CubismBlendMode[\\\"CubismBlendMode_Multiplicative\\\"] = 2] = \\\"CubismBlendMode_Multiplicative\\\";\\r\\n    })(CubismBlendMode = Live2DCubismFramework.CubismBlendMode || (Live2DCubismFramework.CubismBlendMode = {}));\\r\\n    var CubismTextureColor = (function () {\\r\\n        function CubismTextureColor() {\\r\\n            this.R = 1.0;\\r\\n            this.G = 1.0;\\r\\n            this.B = 1.0;\\r\\n            this.A = 1.0;\\r\\n        }\\r\\n        return CubismTextureColor;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismTextureColor = CubismTextureColor;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL3JlbmRlcmluZy9jdWJpc21yZW5kZXJlci50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvcmVuZGVyaW5nL2N1YmlzbXJlbmRlcmVyLnRzPzdmZmYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbW1hdHJpeDQ0IH0gZnJvbSAnLi4vbWF0aC9jdWJpc21tYXRyaXg0NCc7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3ViaXNtbW9kZWwgfSBmcm9tICcuLi9tb2RlbC9jdWJpc21tb2RlbCc7XG5pbXBvcnQgQ3ViaXNtTW9kZWwgPSBjdWJpc21tb2RlbC5DdWJpc21Nb2RlbDtcbmltcG9ydCBDdWJpc21NYXRyaXg0NCA9IGN1YmlzbW1hdHJpeDQ0LkN1YmlzbU1hdHJpeDQ0O1xuXG5leHBvcnQgbmFtZXNwYWNlIExpdmUyREN1YmlzbUZyYW1ld29yayB7XG4gIC8qKlxuICAgKiDjg6Ljg4fjg6vmj4/nlLvjgpLlh6bnkIbjgZnjgovjg6zjg7Pjg4Djg6lcbiAgICpcbiAgICog44K144OW44Kv44Op44K544Gr55Kw5aKD5L6d5a2Y44Gu5o+P55S75ZG95Luk44KS6KiY6L+w44GZ44KL44CCXG4gICAqL1xuICBleHBvcnQgYWJzdHJhY3QgY2xhc3MgQ3ViaXNtUmVuZGVyZXIge1xuICAgIC8qKlxuICAgICAqIOODrOODs+ODgOODqeOBruOCpOODs+OCueOCv+ODs+OCueOCkueUn+aIkOOBl+OBpuWPluW+l+OBmeOCi1xuICAgICAqXG4gICAgICogQHJldHVybiDjg6zjg7Pjg4Djg6njga7jgqTjg7Pjgrnjgr/jg7PjgrlcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZSgpOiBDdWJpc21SZW5kZXJlciB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6zjg7Pjg4Djg6njga7jgqTjg7Pjgrnjgr/jg7PjgrnjgpLop6PmlL7jgZnjgotcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGRlbGV0ZShyZW5kZXJlcjogQ3ViaXNtUmVuZGVyZXIpOiB2b2lkIHtcbiAgICAgIHJlbmRlcmVyID0gbnVsbDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6zjg7Pjg4Djg6njga7liJ3mnJ/ljJblh6bnkIbjgpLlrp/ooYzjgZnjgotcbiAgICAgKiDlvJXmlbDjgavmuKHjgZfjgZ/jg6Ljg4fjg6vjgYvjgonjg6zjg7Pjg4Djg6njga7liJ3mnJ/ljJblh6bnkIbjgavlv4XopoHjgarmg4XloLHjgpLlj5bjgorlh7rjgZnjgZPjgajjgYzjgafjgY3jgotcbiAgICAgKiBAcGFyYW0gbW9kZWwg44Oi44OH44Or44Gu44Kk44Oz44K544K/44Oz44K5XG4gICAgICovXG4gICAgcHVibGljIGluaXRpYWxpemUobW9kZWw6IEN1YmlzbU1vZGVsKTogdm9pZCB7XG4gICAgICB0aGlzLl9tb2RlbCA9IG1vZGVsO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODouODh+ODq+OCkuaPj+eUu+OBmeOCi1xuICAgICAqL1xuICAgIHB1YmxpYyBkcmF3TW9kZWwoKTogdm9pZCB7XG4gICAgICBpZiAodGhpcy5nZXRNb2RlbCgpID09IG51bGwpIHJldHVybjtcblxuICAgICAgdGhpcy5kb0RyYXdNb2RlbCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE1vZGVsLVZpZXctUHJvamVjdGlvbiDooYzliJfjgpLjgrvjg4Pjg4jjgZnjgotcbiAgICAgKiDphY3liJfjga/opIfoo73jgZXjgozjgovjga7jgafjgIHlhYPjga7phY3liJfjga/lpJbjgafnoLTmo4TjgZfjgaboia/jgYRcbiAgICAgKiBAcGFyYW0gbWF0cml4NDQgTW9kZWwtVmlldy1Qcm9qZWN0aW9uIOihjOWIl1xuICAgICAqL1xuICAgIHB1YmxpYyBzZXRNdnBNYXRyaXgobWF0cml4NDQ6IEN1YmlzbU1hdHJpeDQ0KTogdm9pZCB7XG4gICAgICB0aGlzLl9tdnBNYXRyaXg0eDQuc2V0TWF0cml4KG1hdHJpeDQ0LmdldEFycmF5KCkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE1vZGVsLVZpZXctUHJvamVjdGlvbiDooYzliJfjgpLlj5blvpfjgZnjgotcbiAgICAgKiBAcmV0dXJuIE1vZGVsLVZpZXctUHJvamVjdGlvbiDooYzliJdcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0TXZwTWF0cml4KCk6IEN1YmlzbU1hdHJpeDQ0IHtcbiAgICAgIHJldHVybiB0aGlzLl9tdnBNYXRyaXg0eDQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Oi44OH44Or44Gu6Imy44KS44K744OD44OI44GZ44KLXG4gICAgICog5ZCE6ImyMC4wfjEuMOOBrumWk+OBp+aMh+WumuOBmeOCi++8iDEuMOOBjOaomea6luOBrueKtuaFi++8iVxuICAgICAqIEBwYXJhbSByZWQg6LWk44OB44Oj44Oz44ON44Or44Gu5YCkXG4gICAgICogQHBhcmFtIGdyZWVuIOe3keODgeODo+ODs+ODjeODq+OBruWApFxuICAgICAqIEBwYXJhbSBibHVlIOmdkuODgeODo+ODs+ODjeODq+OBruWApFxuICAgICAqIEBwYXJhbSBhbHBoYSDOseODgeODo+ODs+ODjeODq+OBruWApFxuICAgICAqL1xuICAgIHB1YmxpYyBzZXRNb2RlbENvbG9yKFxuICAgICAgcmVkOiBudW1iZXIsXG4gICAgICBncmVlbjogbnVtYmVyLFxuICAgICAgYmx1ZTogbnVtYmVyLFxuICAgICAgYWxwaGE6IG51bWJlclxuICAgICk6IHZvaWQge1xuICAgICAgaWYgKHJlZCA8IDAuMCkge1xuICAgICAgICByZWQgPSAwLjA7XG4gICAgICB9IGVsc2UgaWYgKHJlZCA+IDEuMCkge1xuICAgICAgICByZWQgPSAxLjA7XG4gICAgICB9XG5cbiAgICAgIGlmIChncmVlbiA8IDAuMCkge1xuICAgICAgICBncmVlbiA9IDAuMDtcbiAgICAgIH0gZWxzZSBpZiAoZ3JlZW4gPiAxLjApIHtcbiAgICAgICAgZ3JlZW4gPSAxLjA7XG4gICAgICB9XG5cbiAgICAgIGlmIChibHVlIDwgMC4wKSB7XG4gICAgICAgIGJsdWUgPSAwLjA7XG4gICAgICB9IGVsc2UgaWYgKGJsdWUgPiAxLjApIHtcbiAgICAgICAgYmx1ZSA9IDEuMDtcbiAgICAgIH1cblxuICAgICAgaWYgKGFscGhhIDwgMC4wKSB7XG4gICAgICAgIGFscGhhID0gMC4wO1xuICAgICAgfSBlbHNlIGlmIChhbHBoYSA+IDEuMCkge1xuICAgICAgICBhbHBoYSA9IDEuMDtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fbW9kZWxDb2xvci5SID0gcmVkO1xuICAgICAgdGhpcy5fbW9kZWxDb2xvci5HID0gZ3JlZW47XG4gICAgICB0aGlzLl9tb2RlbENvbG9yLkIgPSBibHVlO1xuICAgICAgdGhpcy5fbW9kZWxDb2xvci5BID0gYWxwaGE7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Oi44OH44Or44Gu6Imy44KS5Y+W5b6X44GZ44KLXG4gICAgICog5ZCE6ImyMC4wfjEuMOOBrumWk+OBp+aMh+WumuOBmeOCiygxLjDjgYzmqJnmupbjga7nirbmhYspXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIFJHQkHjga7jgqvjg6njg7zmg4XloLFcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0TW9kZWxDb2xvcigpOiBDdWJpc21UZXh0dXJlQ29sb3Ige1xuICAgICAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5fbW9kZWxDb2xvcikpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOS5l+eul+a4iOOBv86x44Gu5pyJ5Yq544O754Sh5Yq544KS44K744OD44OI44GZ44KLXG4gICAgICog5pyJ5Yq544Gr44GZ44KL44Gq44KJdHJ1ZeOAgeeEoeWKueOBq+OBmeOCi+OBquOCiWZhbHNl44KS44K744OD44OI44GZ44KLXG4gICAgICovXG4gICAgcHVibGljIHNldElzUHJlbXVsdGlwbGllZEFscGhhKGVuYWJsZTogYm9vbGVhbik6IHZvaWQge1xuICAgICAgdGhpcy5faXNQcmVtdWx0aXBsaWVkQWxwaGEgPSBlbmFibGU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5LmX566X5riI44G/zrHjga7mnInlirnjg7vnhKHlirnjgpLlj5blvpfjgZnjgotcbiAgICAgKiBAcmV0dXJuIHRydWUg5LmX566X5riI44G/44GuzrHmnInlirlcbiAgICAgKiBAcmV0dXJuIGZhbHNlIOS5l+eul+a4iOOBv+OBrs6x54Sh5Yq5XG4gICAgICovXG4gICAgcHVibGljIGlzUHJlbXVsdGlwbGllZEFscGhhKCk6IGJvb2xlYW4ge1xuICAgICAgcmV0dXJuIHRoaXMuX2lzUHJlbXVsdGlwbGllZEFscGhhO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOOCq+ODquODs+OCsO+8iOeJh+mdouaPj+eUu++8ieOBruacieWKueODu+eEoeWKueOCkuOCu+ODg+ODiOOBmeOCi+OAglxuICAgICAqIOacieWKueOBq+OBmeOCi+OBquOCiXRydWXjgIHnhKHlirnjgavjgZnjgovjgarjgolmYWxzZeOCkuOCu+ODg+ODiOOBmeOCi1xuICAgICAqL1xuICAgIHB1YmxpYyBzZXRJc0N1bGxpbmcoY3VsbGluZzogYm9vbGVhbik6IHZvaWQge1xuICAgICAgdGhpcy5faXNDdWxsaW5nID0gY3VsbGluZztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjgqvjg6rjg7PjgrDvvIjniYfpnaLmj4/nlLvvvInjga7mnInlirnjg7vnhKHlirnjgpLlj5blvpfjgZnjgovjgIJcbiAgICAgKiBAcmV0dXJuIHRydWUg44Kr44Oq44Oz44Kw5pyJ5Yq5XG4gICAgICogQHJldHVybiBmYWxzZSDjgqvjg6rjg7PjgrDnhKHlirlcbiAgICAgKi9cbiAgICBwdWJsaWMgaXNDdWxsaW5nKCk6IGJvb2xlYW4ge1xuICAgICAgcmV0dXJuIHRoaXMuX2lzQ3VsbGluZztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg4bjgq/jgrnjg4Hjg6Pjga7nlbDmlrnmgKfjg5XjgqPjg6vjgr/jg6rjg7PjgrDjga7jg5Hjg6njg6Hjg7zjgr/jgpLjgrvjg4Pjg4jjgZnjgotcbiAgICAgKiDjg5Hjg6njg6Hjg7zjgr/lgKTjga7lvbHpn7/luqbjga/jg6zjg7Pjg4Djg6njga7lrp/oo4Xjgavkvp3lrZjjgZnjgotcbiAgICAgKiBAcGFyYW0gbiDjg5Hjg6njg6Hjg7zjgr/jga7lgKRcbiAgICAgKi9cbiAgICBwdWJsaWMgc2V0QW5pc290cm9weShuOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgIHRoaXMuX2FuaXNvcnRvcHkgPSBuO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODhuOCr+OCueODgeODo+OBrueVsOaWueaAp+ODleOCo+ODq+OCv+ODquODs+OCsOOBruODkeODqeODoeODvOOCv+OCkuOCu+ODg+ODiOOBmeOCi1xuICAgICAqIEByZXR1cm4g55Ww5pa55oCn44OV44Kj44Or44K/44Oq44Oz44Kw44Gu44OR44Op44Oh44O844K/XG4gICAgICovXG4gICAgcHVibGljIGdldEFuaXNvdHJvcHkoKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiB0aGlzLl9hbmlzb3J0b3B5O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODrOODs+ODgOODquODs+OCsOOBmeOCi+ODouODh+ODq+OCkuWPluW+l+OBmeOCi1xuICAgICAqIEByZXR1cm4g44Os44Oz44OA44Oq44Oz44Kw44GZ44KL44Oi44OH44OrXG4gICAgICovXG4gICAgcHVibGljIGdldE1vZGVsKCk6IEN1YmlzbU1vZGVsIHtcbiAgICAgIHJldHVybiB0aGlzLl9tb2RlbDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgY29uc3RydWN0b3IoKSB7XG4gICAgICB0aGlzLl9pc0N1bGxpbmcgPSBmYWxzZTtcbiAgICAgIHRoaXMuX2lzUHJlbXVsdGlwbGllZEFscGhhID0gZmFsc2U7XG4gICAgICB0aGlzLl9hbmlzb3J0b3B5ID0gMC4wO1xuICAgICAgdGhpcy5fbW9kZWwgPSBudWxsO1xuICAgICAgdGhpcy5fbW9kZWxDb2xvciA9IG5ldyBDdWJpc21UZXh0dXJlQ29sb3IoKTtcblxuICAgICAgLy8g5Y2Y5L2N6KGM5YiX44Gr5Yid5pyf5YyWXG4gICAgICB0aGlzLl9tdnBNYXRyaXg0eDQgPSBuZXcgQ3ViaXNtTWF0cml4NDQoKTtcbiAgICAgIHRoaXMuX212cE1hdHJpeDR4NC5sb2FkSWRlbnRpdHkoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg4fjg6vmj4/nlLvjga7lrp/oo4VcbiAgICAgKi9cbiAgICBwdWJsaWMgYWJzdHJhY3QgZG9EcmF3TW9kZWwoKTogdm9pZDtcblxuICAgIC8qKlxuICAgICAqIOaPj+eUu+OCquODluOCuOOCp+OCr+ODiO+8iOOCouODvOODiOODoeODg+OCt+ODpe+8ieOCkuaPj+eUu+OBmeOCi1xuICAgICAqIOODneODquOCtOODs+ODoeODg+OCt+ODpeOBqOODhuOCr+OCueODgeODo+eVquWPt+OCkuOCu+ODg+ODiOOBp+a4oeOBmeOAglxuICAgICAqIEBwYXJhbSB0ZXh0dXJlTm8g5o+P55S744GZ44KL44OG44Kv44K544OB44Oj55Wq5Y+3XG4gICAgICogQHBhcmFtIGluZGV4Q291bnQg5o+P55S744Kq44OW44K444Kn44Kv44OI44Gu44Kk44Oz44OH44OD44Kv44K55YCkXG4gICAgICogQHBhcmFtIHZlcnRleENvdW50IOODneODquOCtOODs+ODoeODg+OCt+ODpeOBrumggueCueaVsFxuICAgICAqIEBwYXJhbSBpbmRleEFycmF5IOODneODquOCtOODs+ODoeODg+OCt+ODpemggueCueOBruOCpOODs+ODh+ODg+OCr+OCuemFjeWIl1xuICAgICAqIEBwYXJhbSB2ZXJ0ZXhBcnJheSDjg53jg6rjgrTjg7Pjg6Hjg4Pjgrfjg6Xjga7poILngrnphY3liJdcbiAgICAgKiBAcGFyYW0gdXZBcnJheSB1dumFjeWIl1xuICAgICAqIEBwYXJhbSBvcGFjaXR5IOS4jemAj+aYjuW6plxuICAgICAqIEBwYXJhbSBjb2xvckJsZW5kTW9kZSDjgqvjg6njg7zjg5bjg6zjg7Pjg4fjgqPjg7PjgrDjga7jgr/jgqTjg5dcbiAgICAgKiBAcGFyYW0gaW52ZXJ0ZWRNYXNrIOODnuOCueOCr+S9v+eUqOaZguOBruODnuOCueOCr+OBruWPjei7ouS9v+eUqFxuICAgICAqL1xuICAgIHB1YmxpYyBhYnN0cmFjdCBkcmF3TWVzaChcbiAgICAgIHRleHR1cmVObzogbnVtYmVyLFxuICAgICAgaW5kZXhDb3VudDogbnVtYmVyLFxuICAgICAgdmVydGV4Q291bnQ6IG51bWJlcixcbiAgICAgIGluZGV4QXJyYXk6IFVpbnQxNkFycmF5LFxuICAgICAgdmVydGV4QXJyYXk6IEZsb2F0MzJBcnJheSxcbiAgICAgIHV2QXJyYXk6IEZsb2F0MzJBcnJheSxcbiAgICAgIG9wYWNpdHk6IG51bWJlcixcbiAgICAgIGNvbG9yQmxlbmRNb2RlOiBDdWJpc21CbGVuZE1vZGUsXG4gICAgICBpbnZlcnRlZE1hc2s6IGJvb2xlYW5cbiAgICApOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICog44Os44Oz44OA44Op44GM5L+d5oyB44GZ44KL6Z2Z55qE44Gq44Oq44K944O844K544KS6ZaL5pS+44GZ44KLXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBzdGF0aWNSZWxlYXNlOiBGdW5jdGlvbjtcblxuICAgIHByb3RlY3RlZCBfbXZwTWF0cml4NHg0OiBDdWJpc21NYXRyaXg0NDsgLy8gTW9kZWwtVmlldy1Qcm9qZWN0aW9uIOihjOWIl1xuICAgIHByb3RlY3RlZCBfbW9kZWxDb2xvcjogQ3ViaXNtVGV4dHVyZUNvbG9yOyAvLyDjg6Ljg4fjg6voh6rkvZPjga7jgqvjg6njg7zvvIhSR0JB77yJXG4gICAgcHJvdGVjdGVkIF9pc0N1bGxpbmc6IGJvb2xlYW47IC8vIOOCq+ODquODs+OCsOOBjOacieWKueOBquOCiXRydWVcbiAgICBwcm90ZWN0ZWQgX2lzUHJlbXVsdGlwbGllZEFscGhhOiBib29sZWFuOyAvLyDkuZfnrpfmuIjjgb/OseOBquOCiXRydWVcbiAgICBwcm90ZWN0ZWQgX2FuaXNvcnRvcHk6IGFueTsgLy8g44OG44Kv44K544OB44Oj44Gu55Ww5pa55oCn44OV44Kj44Or44K/44Oq44Oz44Kw44Gu44OR44Op44Oh44O844K/XG4gICAgcHJvdGVjdGVkIF9tb2RlbDogQ3ViaXNtTW9kZWw7IC8vIOODrOODs+ODgOODquODs+OCsOWvvuixoeOBruODouODh+ODq1xuICB9XG5cbiAgZXhwb3J0IGVudW0gQ3ViaXNtQmxlbmRNb2RlIHtcbiAgICBDdWJpc21CbGVuZE1vZGVfTm9ybWFsID0gMCwgLy8g6YCa5bi4XG4gICAgQ3ViaXNtQmxlbmRNb2RlX0FkZGl0aXZlID0gMSwgLy8g5Yqg566XXG4gICAgQ3ViaXNtQmxlbmRNb2RlX011bHRpcGxpY2F0aXZlID0gMiAvLyDkuZfnrpdcbiAgfVxuXG4gIC8qKlxuICAgKiDjg4bjgq/jgrnjg4Hjg6Pjga7oibLjgpJSR0JB44Gn5omx44GG44Gf44KB44Gu44Kv44Op44K5XG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtVGV4dHVyZUNvbG9yIHtcbiAgICAvKipcbiAgICAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgIHRoaXMuUiA9IDEuMDtcbiAgICAgIHRoaXMuRyA9IDEuMDtcbiAgICAgIHRoaXMuQiA9IDEuMDtcbiAgICAgIHRoaXMuQSA9IDEuMDtcbiAgICB9XG5cbiAgICBSOiBudW1iZXI7IC8vIOi1pOODgeODo+ODs+ODjeODq1xuICAgIEc6IG51bWJlcjsgLy8g57eR44OB44Oj44Oz44ON44OrXG4gICAgQjogbnVtYmVyOyAvLyDpnZLjg4Hjg6Pjg7Pjg43jg6tcbiAgICBBOiBudW1iZXI7IC8vIM6x44OB44Oj44Oz44ON44OrXG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFPQTtBQUdBO0FBRUE7QUFBQTtBQU1BO0FBd0tBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQTVLQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBVUE7QUFNQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBMERBO0FBQUE7QUE3TkE7QUErTkE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUFBO0FBZkE7QUFnQkE7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./Framework/src/rendering/cubismrenderer.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/rendering/cubismrenderer_webgl.ts\":\n      /*!*********************************************************!*\\\n        !*** ./Framework/src/rendering/cubismrenderer_webgl.ts ***!\n        \\*********************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar csmrectf_1 = __webpack_require__(/*! ../type/csmrectf */ \\\"./Framework/src/type/csmrectf.ts\\\");\\r\\nvar cubismrenderer_1 = __webpack_require__(/*! ./cubismrenderer */ \\\"./Framework/src/rendering/cubismrenderer.ts\\\");\\r\\nvar cubismmatrix44_1 = __webpack_require__(/*! ../math/cubismmatrix44 */ \\\"./Framework/src/math/cubismmatrix44.ts\\\");\\r\\nvar csmmap_1 = __webpack_require__(/*! ../type/csmmap */ \\\"./Framework/src/type/csmmap.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar Constant = live2dcubismframework_1.Live2DCubismFramework.Constant;\\r\\nvar CubismMatrix44 = cubismmatrix44_1.Live2DCubismFramework.CubismMatrix44;\\r\\nvar csmRect = csmrectf_1.Live2DCubismFramework.csmRect;\\r\\nvar csmMap = csmmap_1.Live2DCubismFramework.csmMap;\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismRenderer = cubismrenderer_1.Live2DCubismFramework.CubismRenderer;\\r\\nvar CubismBlendMode = cubismrenderer_1.Live2DCubismFramework.CubismBlendMode;\\r\\nvar CubismTextureColor = cubismrenderer_1.Live2DCubismFramework.CubismTextureColor;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var ColorChannelCount = 4;\\r\\n    var shaderCount = 10;\\r\\n    var s_instance;\\r\\n    var s_viewport;\\r\\n    var s_fbo;\\r\\n    var CubismClippingManager_WebGL = (function () {\\r\\n        function CubismClippingManager_WebGL() {\\r\\n            this._maskRenderTexture = null;\\r\\n            this._colorBuffer = null;\\r\\n            this._currentFrameNo = 0;\\r\\n            this._clippingMaskBufferSize = 256;\\r\\n            this._clippingContextListForMask = new csmVector();\\r\\n            this._clippingContextListForDraw = new csmVector();\\r\\n            this._channelColors = new csmVector();\\r\\n            this._tmpBoundsOnModel = new csmRect();\\r\\n            this._tmpMatrix = new CubismMatrix44();\\r\\n            this._tmpMatrixForMask = new CubismMatrix44();\\r\\n            this._tmpMatrixForDraw = new CubismMatrix44();\\r\\n            this._maskTexture = null;\\r\\n            var tmp = new CubismTextureColor();\\r\\n            tmp.R = 1.0;\\r\\n            tmp.G = 0.0;\\r\\n            tmp.B = 0.0;\\r\\n            tmp.A = 0.0;\\r\\n            this._channelColors.pushBack(tmp);\\r\\n            tmp = new CubismTextureColor();\\r\\n            tmp.R = 0.0;\\r\\n            tmp.G = 1.0;\\r\\n            tmp.B = 0.0;\\r\\n            tmp.A = 0.0;\\r\\n            this._channelColors.pushBack(tmp);\\r\\n            tmp = new CubismTextureColor();\\r\\n            tmp.R = 0.0;\\r\\n            tmp.G = 0.0;\\r\\n            tmp.B = 1.0;\\r\\n            tmp.A = 0.0;\\r\\n            this._channelColors.pushBack(tmp);\\r\\n            tmp = new CubismTextureColor();\\r\\n            tmp.R = 0.0;\\r\\n            tmp.G = 0.0;\\r\\n            tmp.B = 0.0;\\r\\n            tmp.A = 1.0;\\r\\n            this._channelColors.pushBack(tmp);\\r\\n        }\\r\\n        CubismClippingManager_WebGL.prototype.getChannelFlagAsColor = function (channelNo) {\\r\\n            return this._channelColors.at(channelNo);\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.getMaskRenderTexture = function () {\\r\\n            var ret = 0;\\r\\n            if (this._maskTexture && this._maskTexture.texture != 0) {\\r\\n                this._maskTexture.frameNo = this._currentFrameNo;\\r\\n                ret = this._maskTexture.texture;\\r\\n            }\\r\\n            if (ret == 0) {\\r\\n                var size = this._clippingMaskBufferSize;\\r\\n                this._colorBuffer = this.gl.createTexture();\\r\\n                this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\\r\\n                this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\\r\\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\\r\\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\\r\\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\\r\\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\\r\\n                this.gl.bindTexture(this.gl.TEXTURE_2D, null);\\r\\n                ret = this.gl.createFramebuffer();\\r\\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\\r\\n                this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\\r\\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\\r\\n                this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\\r\\n            }\\r\\n            return ret;\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.setGL = function (gl) {\\r\\n            this.gl = gl;\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.calcClippedDrawTotalBounds = function (model, clippingContext) {\\r\\n            var clippedDrawTotalMinX = Number.MAX_VALUE;\\r\\n            var clippedDrawTotalMinY = Number.MAX_VALUE;\\r\\n            var clippedDrawTotalMaxX = Number.MIN_VALUE;\\r\\n            var clippedDrawTotalMaxY = Number.MIN_VALUE;\\r\\n            var clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\\r\\n            for (var clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\\r\\n                var drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\\r\\n                var drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\\r\\n                var drawableVertexes = model.getDrawableVertices(drawableIndex);\\r\\n                var minX = Number.MAX_VALUE;\\r\\n                var minY = Number.MAX_VALUE;\\r\\n                var maxX = Number.MIN_VALUE;\\r\\n                var maxY = Number.MIN_VALUE;\\r\\n                var loop = drawableVertexCount * Constant.vertexStep;\\r\\n                for (var pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\\r\\n                    var x = drawableVertexes[pi];\\r\\n                    var y = drawableVertexes[pi + 1];\\r\\n                    if (x < minX) {\\r\\n                        minX = x;\\r\\n                    }\\r\\n                    if (x > maxX) {\\r\\n                        maxX = x;\\r\\n                    }\\r\\n                    if (y < minY) {\\r\\n                        minY = y;\\r\\n                    }\\r\\n                    if (y > maxY) {\\r\\n                        maxY = y;\\r\\n                    }\\r\\n                }\\r\\n                if (minX == Number.MAX_VALUE) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (minX < clippedDrawTotalMinX) {\\r\\n                    clippedDrawTotalMinX = minX;\\r\\n                }\\r\\n                if (minY < clippedDrawTotalMinY) {\\r\\n                    clippedDrawTotalMinY = minY;\\r\\n                }\\r\\n                if (maxX > clippedDrawTotalMaxX) {\\r\\n                    clippedDrawTotalMaxX = maxX;\\r\\n                }\\r\\n                if (maxY > clippedDrawTotalMaxY) {\\r\\n                    clippedDrawTotalMaxY = maxY;\\r\\n                }\\r\\n                if (clippedDrawTotalMinX == Number.MAX_VALUE) {\\r\\n                    clippingContext._allClippedDrawRect.x = 0.0;\\r\\n                    clippingContext._allClippedDrawRect.y = 0.0;\\r\\n                    clippingContext._allClippedDrawRect.width = 0.0;\\r\\n                    clippingContext._allClippedDrawRect.height = 0.0;\\r\\n                    clippingContext._isUsing = false;\\r\\n                }\\r\\n                else {\\r\\n                    clippingContext._isUsing = true;\\r\\n                    var w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\\r\\n                    var h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\\r\\n                    clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\\r\\n                    clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\\r\\n                    clippingContext._allClippedDrawRect.width = w;\\r\\n                    clippingContext._allClippedDrawRect.height = h;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.release = function () {\\r\\n            for (var i = 0; i < this._clippingContextListForMask.getSize(); i++) {\\r\\n                if (this._clippingContextListForMask.at(i)) {\\r\\n                    this._clippingContextListForMask.at(i).release();\\r\\n                    this._clippingContextListForMask.set(i, void 0);\\r\\n                }\\r\\n                this._clippingContextListForMask.set(i, null);\\r\\n            }\\r\\n            this._clippingContextListForMask = null;\\r\\n            for (var i = 0; i < this._clippingContextListForDraw.getSize(); i++) {\\r\\n                this._clippingContextListForDraw.set(i, null);\\r\\n            }\\r\\n            this._clippingContextListForDraw = null;\\r\\n            if (this._maskTexture) {\\r\\n                this.gl.deleteFramebuffer(this._maskTexture.texture);\\r\\n                this._maskTexture = null;\\r\\n            }\\r\\n            for (var i = 0; i < this._channelColors.getSize(); i++) {\\r\\n                this._channelColors.set(i, null);\\r\\n            }\\r\\n            this._channelColors = null;\\r\\n            this.gl.deleteTexture(this._colorBuffer);\\r\\n            this._colorBuffer = null;\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.initialize = function (model, drawableCount, drawableMasks, drawableMaskCounts) {\\r\\n            for (var i = 0; i < drawableCount; i++) {\\r\\n                if (drawableMaskCounts[i] <= 0) {\\r\\n                    this._clippingContextListForDraw.pushBack(null);\\r\\n                    continue;\\r\\n                }\\r\\n                var clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\\r\\n                if (clippingContext == null) {\\r\\n                    clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\\r\\n                    this._clippingContextListForMask.pushBack(clippingContext);\\r\\n                }\\r\\n                clippingContext.addClippedDrawable(i);\\r\\n                this._clippingContextListForDraw.pushBack(clippingContext);\\r\\n            }\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.setupClippingContext = function (model, renderer) {\\r\\n            this._currentFrameNo++;\\r\\n            var usingClipCount = 0;\\r\\n            for (var clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++) {\\r\\n                var cc = this._clippingContextListForMask.at(clipIndex);\\r\\n                this.calcClippedDrawTotalBounds(model, cc);\\r\\n                if (cc._isUsing) {\\r\\n                    usingClipCount++;\\r\\n                }\\r\\n            }\\r\\n            if (usingClipCount > 0) {\\r\\n                this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\\r\\n                this._maskRenderTexture = this.getMaskRenderTexture();\\r\\n                var modelToWorldF = renderer.getMvpMatrix();\\r\\n                renderer.preDraw();\\r\\n                this.setupLayoutBounds(usingClipCount);\\r\\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\\r\\n                this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\\r\\n                this.gl.clear(this.gl.COLOR_BUFFER_BIT);\\r\\n                for (var clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++) {\\r\\n                    var clipContext = this._clippingContextListForMask.at(clipIndex);\\r\\n                    var allClipedDrawRect = clipContext._allClippedDrawRect;\\r\\n                    var layoutBoundsOnTex01 = clipContext._layoutBounds;\\r\\n                    var MARGIN = 0.05;\\r\\n                    this._tmpBoundsOnModel.setRect(allClipedDrawRect);\\r\\n                    this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\\r\\n                    var scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\\r\\n                    var scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\\r\\n                    {\\r\\n                        this._tmpMatrix.loadIdentity();\\r\\n                        {\\r\\n                            this._tmpMatrix.translateRelative(-1.0, -1.0);\\r\\n                            this._tmpMatrix.scaleRelative(2.0, 2.0);\\r\\n                        }\\r\\n                        {\\r\\n                            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\\r\\n                            this._tmpMatrix.scaleRelative(scaleX, scaleY);\\r\\n                            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\\r\\n                        }\\r\\n                        this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\\r\\n                    }\\r\\n                    {\\r\\n                        this._tmpMatrix.loadIdentity();\\r\\n                        {\\r\\n                            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\\r\\n                            this._tmpMatrix.scaleRelative(scaleX, scaleY);\\r\\n                            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\\r\\n                        }\\r\\n                        this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\\r\\n                    }\\r\\n                    clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\\r\\n                    clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\\r\\n                    var clipDrawCount = clipContext._clippingIdCount;\\r\\n                    for (var i = 0; i < clipDrawCount; i++) {\\r\\n                        var clipDrawIndex = clipContext._clippingIdList[i];\\r\\n                        if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\\r\\n                            continue;\\r\\n                        }\\r\\n                        renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\\r\\n                        renderer.setClippingContextBufferForMask(clipContext);\\r\\n                        renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\\r\\n                    }\\r\\n                }\\r\\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\\r\\n                renderer.setClippingContextBufferForMask(null);\\r\\n                this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\\r\\n            }\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.findSameClip = function (drawableMasks, drawableMaskCounts) {\\r\\n            for (var i = 0; i < this._clippingContextListForMask.getSize(); i++) {\\r\\n                var clippingContext = this._clippingContextListForMask.at(i);\\r\\n                var count = clippingContext._clippingIdCount;\\r\\n                if (count != drawableMaskCounts) {\\r\\n                    continue;\\r\\n                }\\r\\n                var sameCount = 0;\\r\\n                for (var j = 0; j < count; j++) {\\r\\n                    var clipId = clippingContext._clippingIdList[j];\\r\\n                    for (var k = 0; k < count; k++) {\\r\\n                        if (drawableMasks[k] == clipId) {\\r\\n                            sameCount++;\\r\\n                            break;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                if (sameCount == count) {\\r\\n                    return clippingContext;\\r\\n                }\\r\\n            }\\r\\n            return null;\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.setupLayoutBounds = function (usingClipCount) {\\r\\n            var div = usingClipCount / ColorChannelCount;\\r\\n            var mod = usingClipCount % ColorChannelCount;\\r\\n            div = ~~div;\\r\\n            mod = ~~mod;\\r\\n            var curClipIndex = 0;\\r\\n            for (var channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\\r\\n                var layoutCount = div + (channelNo < mod ? 1 : 0);\\r\\n                if (layoutCount == 0) {\\r\\n                }\\r\\n                else if (layoutCount == 1) {\\r\\n                    var clipContext = this._clippingContextListForMask.at(curClipIndex++);\\r\\n                    clipContext._layoutChannelNo = channelNo;\\r\\n                    clipContext._layoutBounds.x = 0.0;\\r\\n                    clipContext._layoutBounds.y = 0.0;\\r\\n                    clipContext._layoutBounds.width = 1.0;\\r\\n                    clipContext._layoutBounds.height = 1.0;\\r\\n                }\\r\\n                else if (layoutCount == 2) {\\r\\n                    for (var i = 0; i < layoutCount; i++) {\\r\\n                        var xpos = i % 2;\\r\\n                        xpos = ~~xpos;\\r\\n                        var cc = this._clippingContextListForMask.at(curClipIndex++);\\r\\n                        cc._layoutChannelNo = channelNo;\\r\\n                        cc._layoutBounds.x = xpos * 0.5;\\r\\n                        cc._layoutBounds.y = 0.0;\\r\\n                        cc._layoutBounds.width = 0.5;\\r\\n                        cc._layoutBounds.height = 1.0;\\r\\n                    }\\r\\n                }\\r\\n                else if (layoutCount <= 4) {\\r\\n                    for (var i = 0; i < layoutCount; i++) {\\r\\n                        var xpos = i % 2;\\r\\n                        var ypos = i / 2;\\r\\n                        xpos = ~~xpos;\\r\\n                        ypos = ~~ypos;\\r\\n                        var cc = this._clippingContextListForMask.at(curClipIndex++);\\r\\n                        cc._layoutChannelNo = channelNo;\\r\\n                        cc._layoutBounds.x = xpos * 0.5;\\r\\n                        cc._layoutBounds.y = ypos * 0.5;\\r\\n                        cc._layoutBounds.width = 0.5;\\r\\n                        cc._layoutBounds.height = 0.5;\\r\\n                    }\\r\\n                }\\r\\n                else if (layoutCount <= 9) {\\r\\n                    for (var i = 0; i < layoutCount; i++) {\\r\\n                        var xpos = i % 3;\\r\\n                        var ypos = i / 3;\\r\\n                        xpos = ~~xpos;\\r\\n                        ypos = ~~ypos;\\r\\n                        var cc = this._clippingContextListForMask.at(curClipIndex++);\\r\\n                        cc._layoutChannelNo = channelNo;\\r\\n                        cc._layoutBounds.x = xpos / 3.0;\\r\\n                        cc._layoutBounds.y = ypos / 3.0;\\r\\n                        cc._layoutBounds.width = 1.0 / 3.0;\\r\\n                        cc._layoutBounds.height = 1.0 / 3.0;\\r\\n                    }\\r\\n                }\\r\\n                else {\\r\\n                    cubismdebug_1.CubismLogError('not supported mask count : {0}', layoutCount);\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.getColorBuffer = function () {\\r\\n            return this._colorBuffer;\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.getClippingContextListForDraw = function () {\\r\\n            return this._clippingContextListForDraw;\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.setClippingMaskBufferSize = function (size) {\\r\\n            this._clippingMaskBufferSize = size;\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.getClippingMaskBufferSize = function () {\\r\\n            return this._clippingMaskBufferSize;\\r\\n        };\\r\\n        return CubismClippingManager_WebGL;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismClippingManager_WebGL = CubismClippingManager_WebGL;\\r\\n    var CubismRenderTextureResource = (function () {\\r\\n        function CubismRenderTextureResource(frameNo, texture) {\\r\\n            this.frameNo = frameNo;\\r\\n            this.texture = texture;\\r\\n        }\\r\\n        return CubismRenderTextureResource;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismRenderTextureResource = CubismRenderTextureResource;\\r\\n    var CubismClippingContext = (function () {\\r\\n        function CubismClippingContext(manager, clippingDrawableIndices, clipCount) {\\r\\n            this._owner = manager;\\r\\n            this._clippingIdList = clippingDrawableIndices;\\r\\n            this._clippingIdCount = clipCount;\\r\\n            this._allClippedDrawRect = new csmRect();\\r\\n            this._layoutBounds = new csmRect();\\r\\n            this._clippedDrawableIndexList = [];\\r\\n            this._matrixForMask = new CubismMatrix44();\\r\\n            this._matrixForDraw = new CubismMatrix44();\\r\\n        }\\r\\n        CubismClippingContext.prototype.release = function () {\\r\\n            if (this._layoutBounds != null) {\\r\\n                this._layoutBounds = null;\\r\\n            }\\r\\n            if (this._allClippedDrawRect != null) {\\r\\n                this._allClippedDrawRect = null;\\r\\n            }\\r\\n            if (this._clippedDrawableIndexList != null) {\\r\\n                this._clippedDrawableIndexList = null;\\r\\n            }\\r\\n        };\\r\\n        CubismClippingContext.prototype.addClippedDrawable = function (drawableIndex) {\\r\\n            this._clippedDrawableIndexList.push(drawableIndex);\\r\\n        };\\r\\n        CubismClippingContext.prototype.getClippingManager = function () {\\r\\n            return this._owner;\\r\\n        };\\r\\n        CubismClippingContext.prototype.setGl = function (gl) {\\r\\n            this._owner.setGL(gl);\\r\\n        };\\r\\n        return CubismClippingContext;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismClippingContext = CubismClippingContext;\\r\\n    var CubismShader_WebGL = (function () {\\r\\n        function CubismShader_WebGL() {\\r\\n            this._shaderSets = new csmVector();\\r\\n        }\\r\\n        CubismShader_WebGL.getInstance = function () {\\r\\n            if (s_instance == null) {\\r\\n                s_instance = new CubismShader_WebGL();\\r\\n                return s_instance;\\r\\n            }\\r\\n            return s_instance;\\r\\n        };\\r\\n        CubismShader_WebGL.deleteInstance = function () {\\r\\n            if (s_instance) {\\r\\n                s_instance.release();\\r\\n                s_instance = null;\\r\\n            }\\r\\n        };\\r\\n        CubismShader_WebGL.prototype.release = function () {\\r\\n            this.releaseShaderProgram();\\r\\n        };\\r\\n        CubismShader_WebGL.prototype.setupShaderProgram = function (renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\\r\\n            if (!isPremultipliedAlpha) {\\r\\n                cubismdebug_1.CubismLogError('NoPremultipliedAlpha is not allowed');\\r\\n            }\\r\\n            if (this._shaderSets.getSize() == 0) {\\r\\n                this.generateShaders();\\r\\n            }\\r\\n            var SRC_COLOR;\\r\\n            var DST_COLOR;\\r\\n            var SRC_ALPHA;\\r\\n            var DST_ALPHA;\\r\\n            if (renderer.getClippingContextBufferForMask() != null) {\\r\\n                var shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_SetupMask);\\r\\n                this.gl.useProgram(shaderSet.shaderProgram);\\r\\n                this.gl.activeTexture(this.gl.TEXTURE0);\\r\\n                this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\\r\\n                this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\\r\\n                if (bufferData.vertex == null) {\\r\\n                    bufferData.vertex = this.gl.createBuffer();\\r\\n                }\\r\\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\\r\\n                this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\\r\\n                this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\\r\\n                this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\\r\\n                if (bufferData.uv == null) {\\r\\n                    bufferData.uv = this.gl.createBuffer();\\r\\n                }\\r\\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\\r\\n                this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\\r\\n                this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\\r\\n                this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\\r\\n                var channelNo = renderer.getClippingContextBufferForMask()\\r\\n                    ._layoutChannelNo;\\r\\n                var colorChannel = renderer\\r\\n                    .getClippingContextBufferForMask()\\r\\n                    .getClippingManager()\\r\\n                    .getChannelFlagAsColor(channelNo);\\r\\n                this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\\r\\n                this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, renderer.getClippingContextBufferForMask()._matrixForMask.getArray());\\r\\n                var rect = renderer.getClippingContextBufferForMask()\\r\\n                    ._layoutBounds;\\r\\n                this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2.0 - 1.0, rect.y * 2.0 - 1.0, rect.getRight() * 2.0 - 1.0, rect.getBottom() * 2.0 - 1.0);\\r\\n                SRC_COLOR = this.gl.ZERO;\\r\\n                DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\\r\\n                SRC_ALPHA = this.gl.ZERO;\\r\\n                DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\\r\\n            }\\r\\n            else {\\r\\n                var masked = renderer.getClippingContextBufferForDraw() != null;\\r\\n                var offset = masked ? (invertedMask ? 2 : 1) : 0;\\r\\n                var shaderSet = new CubismShaderSet();\\r\\n                switch (colorBlendMode) {\\r\\n                    case CubismBlendMode.CubismBlendMode_Normal:\\r\\n                    default:\\r\\n                        shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset);\\r\\n                        SRC_COLOR = this.gl.ONE;\\r\\n                        DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\\r\\n                        SRC_ALPHA = this.gl.ONE;\\r\\n                        DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\\r\\n                        break;\\r\\n                    case CubismBlendMode.CubismBlendMode_Additive:\\r\\n                        shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_AddPremultipliedAlpha + offset);\\r\\n                        SRC_COLOR = this.gl.ONE;\\r\\n                        DST_COLOR = this.gl.ONE;\\r\\n                        SRC_ALPHA = this.gl.ZERO;\\r\\n                        DST_ALPHA = this.gl.ONE;\\r\\n                        break;\\r\\n                    case CubismBlendMode.CubismBlendMode_Multiplicative:\\r\\n                        shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_MultPremultipliedAlpha + offset);\\r\\n                        SRC_COLOR = this.gl.DST_COLOR;\\r\\n                        DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\\r\\n                        SRC_ALPHA = this.gl.ZERO;\\r\\n                        DST_ALPHA = this.gl.ONE;\\r\\n                        break;\\r\\n                }\\r\\n                this.gl.useProgram(shaderSet.shaderProgram);\\r\\n                if (bufferData.vertex == null) {\\r\\n                    bufferData.vertex = this.gl.createBuffer();\\r\\n                }\\r\\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\\r\\n                this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\\r\\n                this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\\r\\n                this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\\r\\n                if (bufferData.uv == null) {\\r\\n                    bufferData.uv = this.gl.createBuffer();\\r\\n                }\\r\\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\\r\\n                this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\\r\\n                this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\\r\\n                this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\\r\\n                if (masked) {\\r\\n                    this.gl.activeTexture(this.gl.TEXTURE1);\\r\\n                    var tex = renderer\\r\\n                        .getClippingContextBufferForDraw()\\r\\n                        .getClippingManager()\\r\\n                        .getColorBuffer();\\r\\n                    this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\\r\\n                    this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\\r\\n                    this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, renderer.getClippingContextBufferForDraw()._matrixForDraw.getArray());\\r\\n                    var channelNo = renderer.getClippingContextBufferForDraw()\\r\\n                        ._layoutChannelNo;\\r\\n                    var colorChannel = renderer\\r\\n                        .getClippingContextBufferForDraw()\\r\\n                        .getClippingManager()\\r\\n                        .getChannelFlagAsColor(channelNo);\\r\\n                    this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\\r\\n                }\\r\\n                this.gl.activeTexture(this.gl.TEXTURE0);\\r\\n                this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\\r\\n                this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\\r\\n                this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\\r\\n                this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\\r\\n            }\\r\\n            if (bufferData.index == null) {\\r\\n                bufferData.index = this.gl.createBuffer();\\r\\n            }\\r\\n            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\\r\\n            this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\\r\\n            this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\\r\\n        };\\r\\n        CubismShader_WebGL.prototype.releaseShaderProgram = function () {\\r\\n            for (var i = 0; i < this._shaderSets.getSize(); i++) {\\r\\n                this.gl.deleteProgram(this._shaderSets.at(i).shaderProgram);\\r\\n                this._shaderSets.at(i).shaderProgram = 0;\\r\\n                this._shaderSets.set(i, void 0);\\r\\n                this._shaderSets.set(i, null);\\r\\n            }\\r\\n        };\\r\\n        CubismShader_WebGL.prototype.generateShaders = function () {\\r\\n            for (var i = 0; i < shaderCount; i++) {\\r\\n                this._shaderSets.pushBack(new CubismShaderSet());\\r\\n            }\\r\\n            this._shaderSets.at(0).shaderProgram = this.loadShaderProgram(Live2DCubismFramework.vertexShaderSrcSetupMask, Live2DCubismFramework.fragmentShaderSrcsetupMask);\\r\\n            this._shaderSets.at(1).shaderProgram = this.loadShaderProgram(Live2DCubismFramework.vertexShaderSrc, Live2DCubismFramework.fragmentShaderSrcPremultipliedAlpha);\\r\\n            this._shaderSets.at(2).shaderProgram = this.loadShaderProgram(Live2DCubismFramework.vertexShaderSrcMasked, Live2DCubismFramework.fragmentShaderSrcMaskPremultipliedAlpha);\\r\\n            this._shaderSets.at(3).shaderProgram = this.loadShaderProgram(Live2DCubismFramework.vertexShaderSrcMasked, Live2DCubismFramework.fragmentShaderSrcMaskInvertedPremultipliedAlpha);\\r\\n            this._shaderSets.at(4).shaderProgram = this._shaderSets.at(1).shaderProgram;\\r\\n            this._shaderSets.at(5).shaderProgram = this._shaderSets.at(2).shaderProgram;\\r\\n            this._shaderSets.at(6).shaderProgram = this._shaderSets.at(3).shaderProgram;\\r\\n            this._shaderSets.at(7).shaderProgram = this._shaderSets.at(1).shaderProgram;\\r\\n            this._shaderSets.at(8).shaderProgram = this._shaderSets.at(2).shaderProgram;\\r\\n            this._shaderSets.at(9).shaderProgram = this._shaderSets.at(3).shaderProgram;\\r\\n            this._shaderSets.at(0).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(0).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(0).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(0).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(0).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(0).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_clipMatrix');\\r\\n            this._shaderSets.at(0).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_channelFlag');\\r\\n            this._shaderSets.at(0).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(1).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(1).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(1).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(1).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(1).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(1).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(1).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(2).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(2).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(2).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(2).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(2).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(2).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 's_texture1');\\r\\n            this._shaderSets.at(2).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(2).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_clipMatrix');\\r\\n            this._shaderSets.at(2).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_channelFlag');\\r\\n            this._shaderSets.at(2).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(3).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(3).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(3).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(3).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(3).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(3).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 's_texture1');\\r\\n            this._shaderSets.at(3).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(3).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_clipMatrix');\\r\\n            this._shaderSets.at(3).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_channelFlag');\\r\\n            this._shaderSets.at(3).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(4).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(4).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(4).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(4).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(4).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(4).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(4).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(5).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(5).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(5).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(5).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(5).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(5).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 's_texture1');\\r\\n            this._shaderSets.at(5).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(5).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_clipMatrix');\\r\\n            this._shaderSets.at(5).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_channelFlag');\\r\\n            this._shaderSets.at(5).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(6).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(6).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(6).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(6).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(6).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(6).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 's_texture1');\\r\\n            this._shaderSets.at(6).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(6).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_clipMatrix');\\r\\n            this._shaderSets.at(6).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_channelFlag');\\r\\n            this._shaderSets.at(6).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(7).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(7).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(7).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(7).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(7).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(7).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(7).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(8).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(8).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(8).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(8).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(8).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(8).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 's_texture1');\\r\\n            this._shaderSets.at(8).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(8).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_clipMatrix');\\r\\n            this._shaderSets.at(8).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_channelFlag');\\r\\n            this._shaderSets.at(8).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(9).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(9).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(9).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(9).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(9).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(9).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 's_texture1');\\r\\n            this._shaderSets.at(9).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(9).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_clipMatrix');\\r\\n            this._shaderSets.at(9).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_channelFlag');\\r\\n            this._shaderSets.at(9).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_baseColor');\\r\\n        };\\r\\n        CubismShader_WebGL.prototype.loadShaderProgram = function (vertexShaderSource, fragmentShaderSource) {\\r\\n            var shaderProgram = this.gl.createProgram();\\r\\n            var vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\\r\\n            if (!vertShader) {\\r\\n                cubismdebug_1.CubismLogError('Vertex shader compile error!');\\r\\n                return 0;\\r\\n            }\\r\\n            var fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\\r\\n            if (!fragShader) {\\r\\n                cubismdebug_1.CubismLogError('Vertex shader compile error!');\\r\\n                return 0;\\r\\n            }\\r\\n            this.gl.attachShader(shaderProgram, vertShader);\\r\\n            this.gl.attachShader(shaderProgram, fragShader);\\r\\n            this.gl.linkProgram(shaderProgram);\\r\\n            var linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\\r\\n            if (!linkStatus) {\\r\\n                cubismdebug_1.CubismLogError('Failed to link program: {0}', shaderProgram);\\r\\n                this.gl.deleteShader(vertShader);\\r\\n                vertShader = 0;\\r\\n                this.gl.deleteShader(fragShader);\\r\\n                fragShader = 0;\\r\\n                if (shaderProgram) {\\r\\n                    this.gl.deleteProgram(shaderProgram);\\r\\n                    shaderProgram = 0;\\r\\n                }\\r\\n                return 0;\\r\\n            }\\r\\n            this.gl.deleteShader(vertShader);\\r\\n            this.gl.deleteShader(fragShader);\\r\\n            return shaderProgram;\\r\\n        };\\r\\n        CubismShader_WebGL.prototype.compileShaderSource = function (shaderType, shaderSource) {\\r\\n            var source = shaderSource;\\r\\n            var shader = this.gl.createShader(shaderType);\\r\\n            this.gl.shaderSource(shader, source);\\r\\n            this.gl.compileShader(shader);\\r\\n            if (!shader) {\\r\\n                var log = this.gl.getShaderInfoLog(shader);\\r\\n                cubismdebug_1.CubismLogError('Shader compile log: {0} ', log);\\r\\n            }\\r\\n            var status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\\r\\n            if (!status) {\\r\\n                this.gl.deleteShader(shader);\\r\\n                return null;\\r\\n            }\\r\\n            return shader;\\r\\n        };\\r\\n        CubismShader_WebGL.prototype.setGl = function (gl) {\\r\\n            this.gl = gl;\\r\\n        };\\r\\n        return CubismShader_WebGL;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismShader_WebGL = CubismShader_WebGL;\\r\\n    var CubismShaderSet = (function () {\\r\\n        function CubismShaderSet() {\\r\\n        }\\r\\n        return CubismShaderSet;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismShaderSet = CubismShaderSet;\\r\\n    var ShaderNames;\\r\\n    (function (ShaderNames) {\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_SetupMask\\\"] = 0] = \\\"ShaderNames_SetupMask\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_NormalPremultipliedAlpha\\\"] = 1] = \\\"ShaderNames_NormalPremultipliedAlpha\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_NormalMaskedPremultipliedAlpha\\\"] = 2] = \\\"ShaderNames_NormalMaskedPremultipliedAlpha\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\\\"] = 3] = \\\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_AddPremultipliedAlpha\\\"] = 4] = \\\"ShaderNames_AddPremultipliedAlpha\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_AddMaskedPremultipliedAlpha\\\"] = 5] = \\\"ShaderNames_AddMaskedPremultipliedAlpha\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_AddMaskedPremultipliedAlphaInverted\\\"] = 6] = \\\"ShaderNames_AddMaskedPremultipliedAlphaInverted\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_MultPremultipliedAlpha\\\"] = 7] = \\\"ShaderNames_MultPremultipliedAlpha\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_MultMaskedPremultipliedAlpha\\\"] = 8] = \\\"ShaderNames_MultMaskedPremultipliedAlpha\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_MultMaskedPremultipliedAlphaInverted\\\"] = 9] = \\\"ShaderNames_MultMaskedPremultipliedAlphaInverted\\\";\\r\\n    })(ShaderNames = Live2DCubismFramework.ShaderNames || (Live2DCubismFramework.ShaderNames = {}));\\r\\n    Live2DCubismFramework.vertexShaderSrcSetupMask = 'attribute vec4     a_position;' +\\r\\n        'attribute vec2     a_texCoord;' +\\r\\n        'varying vec2       v_texCoord;' +\\r\\n        'varying vec4       v_myPos;' +\\r\\n        'uniform mat4       u_clipMatrix;' +\\r\\n        'void main()' +\\r\\n        '{' +\\r\\n        '   gl_Position = u_clipMatrix * a_position;' +\\r\\n        '   v_myPos = u_clipMatrix * a_position;' +\\r\\n        '   v_texCoord = a_texCoord;' +\\r\\n        '   v_texCoord.y = 1.0 - v_texCoord.y;' +\\r\\n        '}';\\r\\n    Live2DCubismFramework.fragmentShaderSrcsetupMask = 'precision mediump float;' +\\r\\n        'varying vec2       v_texCoord;' +\\r\\n        'varying vec4       v_myPos;' +\\r\\n        'uniform vec4       u_baseColor;' +\\r\\n        'uniform vec4       u_channelFlag;' +\\r\\n        'uniform sampler2D  s_texture0;' +\\r\\n        'void main()' +\\r\\n        '{' +\\r\\n        '   float isInside = ' +\\r\\n        '       step(u_baseColor.x, v_myPos.x/v_myPos.w)' +\\r\\n        '       * step(u_baseColor.y, v_myPos.y/v_myPos.w)' +\\r\\n        '       * step(v_myPos.x/v_myPos.w, u_baseColor.z)' +\\r\\n        '       * step(v_myPos.y/v_myPos.w, u_baseColor.w);' +\\r\\n        '   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;' +\\r\\n        '}';\\r\\n    Live2DCubismFramework.vertexShaderSrc = 'attribute vec4     a_position;' +\\r\\n        'attribute vec2     a_texCoord;' +\\r\\n        'varying vec2       v_texCoord;' +\\r\\n        'uniform mat4       u_matrix;' +\\r\\n        'void main()' +\\r\\n        '{' +\\r\\n        '   gl_Position = u_matrix * a_position;' +\\r\\n        '   v_texCoord = a_texCoord;' +\\r\\n        '   v_texCoord.y = 1.0 - v_texCoord.y;' +\\r\\n        '}';\\r\\n    Live2DCubismFramework.vertexShaderSrcMasked = 'attribute vec4     a_position;' +\\r\\n        'attribute vec2     a_texCoord;' +\\r\\n        'varying vec2       v_texCoord;' +\\r\\n        'varying vec4       v_clipPos;' +\\r\\n        'uniform mat4       u_matrix;' +\\r\\n        'uniform mat4       u_clipMatrix;' +\\r\\n        'void main()' +\\r\\n        '{' +\\r\\n        '   gl_Position = u_matrix * a_position;' +\\r\\n        '   v_clipPos = u_clipMatrix * a_position;' +\\r\\n        '   v_texCoord = a_texCoord;' +\\r\\n        '   v_texCoord.y = 1.0 - v_texCoord.y;' +\\r\\n        '}';\\r\\n    Live2DCubismFramework.fragmentShaderSrcPremultipliedAlpha = 'precision mediump float;' +\\r\\n        'varying vec2       v_texCoord;' +\\r\\n        'uniform vec4       u_baseColor;' +\\r\\n        'uniform sampler2D  s_texture0;' +\\r\\n        'void main()' +\\r\\n        '{' +\\r\\n        '   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;' +\\r\\n        '}';\\r\\n    Live2DCubismFramework.fragmentShaderSrcMaskPremultipliedAlpha = 'precision mediump float;' +\\r\\n        'varying vec2       v_texCoord;' +\\r\\n        'varying vec4       v_clipPos;' +\\r\\n        'uniform vec4       u_baseColor;' +\\r\\n        'uniform vec4       u_channelFlag;' +\\r\\n        'uniform sampler2D  s_texture0;' +\\r\\n        'uniform sampler2D  s_texture1;' +\\r\\n        'void main()' +\\r\\n        '{' +\\r\\n        '   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;' +\\r\\n        '   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\\r\\n        '   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\\r\\n        '   col_formask = col_formask * maskVal;' +\\r\\n        '   gl_FragColor = col_formask;' +\\r\\n        '}';\\r\\n    Live2DCubismFramework.fragmentShaderSrcMaskInvertedPremultipliedAlpha = 'precision mediump float;' +\\r\\n        'varying vec2 v_texCoord;' +\\r\\n        'varying vec4 v_clipPos;' +\\r\\n        'uniform sampler2D s_texture0;' +\\r\\n        'uniform sampler2D s_texture1;' +\\r\\n        'uniform vec4 u_channelFlag;' +\\r\\n        'uniform vec4 u_baseColor;' +\\r\\n        'void main()' +\\r\\n        '{' +\\r\\n        'vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;' +\\r\\n        'vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\\r\\n        'float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\\r\\n        'col_formask = col_formask * (1.0 - maskVal);' +\\r\\n        'gl_FragColor = col_formask;' +\\r\\n        '}';\\r\\n    var CubismRenderer_WebGL = (function (_super) {\\r\\n        __extends(CubismRenderer_WebGL, _super);\\r\\n        function CubismRenderer_WebGL() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._clippingContextBufferForMask = null;\\r\\n            _this._clippingContextBufferForDraw = null;\\r\\n            _this._clippingManager = new CubismClippingManager_WebGL();\\r\\n            _this.firstDraw = true;\\r\\n            _this._textures = new csmMap();\\r\\n            _this._sortedDrawableIndexList = new csmVector();\\r\\n            _this._bufferData = {\\r\\n                vertex: WebGLBuffer = null,\\r\\n                uv: WebGLBuffer = null,\\r\\n                index: WebGLBuffer = null\\r\\n            };\\r\\n            _this._textures.prepareCapacity(32, true);\\r\\n            return _this;\\r\\n        }\\r\\n        CubismRenderer_WebGL.prototype.initialize = function (model) {\\r\\n            if (model.isUsingMasking()) {\\r\\n                this._clippingManager = new CubismClippingManager_WebGL();\\r\\n                this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\\r\\n            }\\r\\n            this._sortedDrawableIndexList.resize(model.getDrawableCount(), 0);\\r\\n            _super.prototype.initialize.call(this, model);\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.bindTexture = function (modelTextureNo, glTexture) {\\r\\n            this._textures.setValue(modelTextureNo, glTexture);\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.getBindedTextures = function () {\\r\\n            return this._textures;\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.setClippingMaskBufferSize = function (size) {\\r\\n            this._clippingManager.release();\\r\\n            this._clippingManager = void 0;\\r\\n            this._clippingManager = null;\\r\\n            this._clippingManager = new CubismClippingManager_WebGL();\\r\\n            this._clippingManager.setClippingMaskBufferSize(size);\\r\\n            this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.getClippingMaskBufferSize = function () {\\r\\n            return this._clippingManager.getClippingMaskBufferSize();\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.release = function () {\\r\\n            this._clippingManager.release();\\r\\n            this._clippingManager = void 0;\\r\\n            this._clippingManager = null;\\r\\n            this.gl.deleteBuffer(this._bufferData.vertex);\\r\\n            this._bufferData.vertex = null;\\r\\n            this.gl.deleteBuffer(this._bufferData.uv);\\r\\n            this._bufferData.uv = null;\\r\\n            this.gl.deleteBuffer(this._bufferData.index);\\r\\n            this._bufferData.index = null;\\r\\n            this._bufferData = null;\\r\\n            this._textures = null;\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.doDrawModel = function () {\\r\\n            if (this._clippingManager != null) {\\r\\n                this.preDraw();\\r\\n                this._clippingManager.setupClippingContext(this.getModel(), this);\\r\\n            }\\r\\n            this.preDraw();\\r\\n            var drawableCount = this.getModel().getDrawableCount();\\r\\n            var renderOrder = this.getModel().getDrawableRenderOrders();\\r\\n            for (var i = 0; i < drawableCount; ++i) {\\r\\n                var order = renderOrder[i];\\r\\n                this._sortedDrawableIndexList.set(order, i);\\r\\n            }\\r\\n            for (var i = 0; i < drawableCount; ++i) {\\r\\n                var drawableIndex = this._sortedDrawableIndexList.at(i);\\r\\n                if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\\r\\n                    continue;\\r\\n                }\\r\\n                this.setClippingContextBufferForDraw(this._clippingManager != null\\r\\n                    ? this._clippingManager\\r\\n                        .getClippingContextListForDraw()\\r\\n                        .at(drawableIndex)\\r\\n                    : null);\\r\\n                this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\\r\\n                this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\\r\\n            }\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.drawMesh = function (textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\\r\\n            if (this.isCulling()) {\\r\\n                this.gl.enable(this.gl.CULL_FACE);\\r\\n            }\\r\\n            else {\\r\\n                this.gl.disable(this.gl.CULL_FACE);\\r\\n            }\\r\\n            this.gl.frontFace(this.gl.CCW);\\r\\n            var modelColorRGBA = this.getModelColor();\\r\\n            if (this.getClippingContextBufferForMask() == null) {\\r\\n                modelColorRGBA.A *= opacity;\\r\\n                if (this.isPremultipliedAlpha()) {\\r\\n                    modelColorRGBA.R *= modelColorRGBA.A;\\r\\n                    modelColorRGBA.G *= modelColorRGBA.A;\\r\\n                    modelColorRGBA.B *= modelColorRGBA.A;\\r\\n                }\\r\\n            }\\r\\n            var drawtexture;\\r\\n            if (this._textures.getValue(textureNo) != null) {\\r\\n                drawtexture = this._textures.getValue(textureNo);\\r\\n            }\\r\\n            else {\\r\\n                drawtexture = null;\\r\\n            }\\r\\n            CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\\r\\n            this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\\r\\n            this.gl.useProgram(null);\\r\\n            this.setClippingContextBufferForDraw(null);\\r\\n            this.setClippingContextBufferForMask(null);\\r\\n        };\\r\\n        CubismRenderer_WebGL.doStaticRelease = function () {\\r\\n            CubismShader_WebGL.deleteInstance();\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.setRenderState = function (fbo, viewport) {\\r\\n            s_fbo = fbo;\\r\\n            s_viewport = viewport;\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.preDraw = function () {\\r\\n            if (this.firstDraw) {\\r\\n                this.firstDraw = false;\\r\\n                this._anisortopy =\\r\\n                    this.gl.getExtension('EXT_texture_filter_anisotropic') ||\\r\\n                        this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic') ||\\r\\n                        this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic');\\r\\n            }\\r\\n            this.gl.disable(this.gl.SCISSOR_TEST);\\r\\n            this.gl.disable(this.gl.STENCIL_TEST);\\r\\n            this.gl.disable(this.gl.DEPTH_TEST);\\r\\n            this.gl.frontFace(this.gl.CW);\\r\\n            this.gl.enable(this.gl.BLEND);\\r\\n            this.gl.colorMask(true, true, true, true);\\r\\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\\r\\n            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.setClippingContextBufferForMask = function (clip) {\\r\\n            this._clippingContextBufferForMask = clip;\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.getClippingContextBufferForMask = function () {\\r\\n            return this._clippingContextBufferForMask;\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.setClippingContextBufferForDraw = function (clip) {\\r\\n            this._clippingContextBufferForDraw = clip;\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.getClippingContextBufferForDraw = function () {\\r\\n            return this._clippingContextBufferForDraw;\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.startUp = function (gl) {\\r\\n            this.gl = gl;\\r\\n            this._clippingManager.setGL(gl);\\r\\n            CubismShader_WebGL.getInstance().setGl(gl);\\r\\n        };\\r\\n        return CubismRenderer_WebGL;\\r\\n    }(CubismRenderer));\\r\\n    Live2DCubismFramework.CubismRenderer_WebGL = CubismRenderer_WebGL;\\r\\n    CubismRenderer.staticRelease = function () {\\r\\n        CubismRenderer_WebGL.doStaticRelease();\\r\\n    };\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/rendering/cubismrenderer_webgl.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/type/csmmap.ts\":\n      /*!**************************************!*\\\n        !*** ./Framework/src/type/csmmap.ts ***!\n        \\**************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var csmPair = (function () {\\r\\n        function csmPair(key, value) {\\r\\n            this.first = key == undefined ? null : key;\\r\\n            this.second = value == undefined ? null : value;\\r\\n        }\\r\\n        return csmPair;\\r\\n    }());\\r\\n    Live2DCubismFramework.csmPair = csmPair;\\r\\n    var csmMap = (function () {\\r\\n        function csmMap(size) {\\r\\n            if (size != undefined) {\\r\\n                if (size < 1) {\\r\\n                    this._keyValues = [];\\r\\n                    this._dummyValue = null;\\r\\n                    this._size = 0;\\r\\n                }\\r\\n                else {\\r\\n                    this._keyValues = new Array(size);\\r\\n                    this._size = size;\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                this._keyValues = [];\\r\\n                this._dummyValue = null;\\r\\n                this._size = 0;\\r\\n            }\\r\\n        }\\r\\n        csmMap.prototype.release = function () {\\r\\n            this.clear();\\r\\n        };\\r\\n        csmMap.prototype.appendKey = function (key) {\\r\\n            this.prepareCapacity(this._size + 1, false);\\r\\n            this._keyValues[this._size] = new csmPair(key);\\r\\n            this._size += 1;\\r\\n        };\\r\\n        csmMap.prototype.getValue = function (key) {\\r\\n            var found = -1;\\r\\n            for (var i = 0; i < this._size; i++) {\\r\\n                if (this._keyValues[i].first == key) {\\r\\n                    found = i;\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n            if (found >= 0) {\\r\\n                return this._keyValues[found].second;\\r\\n            }\\r\\n            else {\\r\\n                this.appendKey(key);\\r\\n                return this._keyValues[this._size - 1].second;\\r\\n            }\\r\\n        };\\r\\n        csmMap.prototype.setValue = function (key, value) {\\r\\n            var found = -1;\\r\\n            for (var i = 0; i < this._size; i++) {\\r\\n                if (this._keyValues[i].first == key) {\\r\\n                    found = i;\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n            if (found >= 0) {\\r\\n                this._keyValues[found].second = value;\\r\\n            }\\r\\n            else {\\r\\n                this.appendKey(key);\\r\\n                this._keyValues[this._size - 1].second = value;\\r\\n            }\\r\\n        };\\r\\n        csmMap.prototype.isExist = function (key) {\\r\\n            for (var i = 0; i < this._size; i++) {\\r\\n                if (this._keyValues[i].first == key) {\\r\\n                    return true;\\r\\n                }\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        csmMap.prototype.clear = function () {\\r\\n            this._keyValues = void 0;\\r\\n            this._keyValues = null;\\r\\n            this._keyValues = [];\\r\\n            this._size = 0;\\r\\n        };\\r\\n        csmMap.prototype.getSize = function () {\\r\\n            return this._size;\\r\\n        };\\r\\n        csmMap.prototype.prepareCapacity = function (newSize, fitToSize) {\\r\\n            if (newSize > this._keyValues.length) {\\r\\n                if (this._keyValues.length == 0) {\\r\\n                    if (!fitToSize && newSize < csmMap.DefaultSize)\\r\\n                        newSize = csmMap.DefaultSize;\\r\\n                    this._keyValues.length = newSize;\\r\\n                }\\r\\n                else {\\r\\n                    if (!fitToSize && newSize < this._keyValues.length * 2)\\r\\n                        newSize = this._keyValues.length * 2;\\r\\n                    this._keyValues.length = newSize;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        csmMap.prototype.begin = function () {\\r\\n            var ite = new iterator(this, 0);\\r\\n            return ite;\\r\\n        };\\r\\n        csmMap.prototype.end = function () {\\r\\n            var ite = new iterator(this, this._size);\\r\\n            return ite;\\r\\n        };\\r\\n        csmMap.prototype.erase = function (ite) {\\r\\n            var index = ite._index;\\r\\n            if (index < 0 || this._size <= index) {\\r\\n                return ite;\\r\\n            }\\r\\n            this._keyValues.splice(index, 1);\\r\\n            --this._size;\\r\\n            var ite2 = new iterator(this, index);\\r\\n            return ite2;\\r\\n        };\\r\\n        csmMap.prototype.dumpAsInt = function () {\\r\\n            for (var i = 0; i < this._size; i++) {\\r\\n                cubismdebug_1.CubismLogDebug('{0} ,', this._keyValues[i]);\\r\\n                cubismdebug_1.CubismLogDebug('\\\\n');\\r\\n            }\\r\\n        };\\r\\n        csmMap.DefaultSize = 10;\\r\\n        return csmMap;\\r\\n    }());\\r\\n    Live2DCubismFramework.csmMap = csmMap;\\r\\n    var iterator = (function () {\\r\\n        function iterator(v, idx) {\\r\\n            this._map = v != undefined ? v : new csmMap();\\r\\n            this._index = idx != undefined ? idx : 0;\\r\\n        }\\r\\n        iterator.prototype.set = function (ite) {\\r\\n            this._index = ite._index;\\r\\n            this._map = ite._map;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.preIncrement = function () {\\r\\n            ++this._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.preDecrement = function () {\\r\\n            --this._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.increment = function () {\\r\\n            var iteold = new iterator(this._map, this._index++);\\r\\n            this._map = iteold._map;\\r\\n            this._index = iteold._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.decrement = function () {\\r\\n            var iteold = new iterator(this._map, this._index);\\r\\n            this._map = iteold._map;\\r\\n            this._index = iteold._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.ptr = function () {\\r\\n            return this._map._keyValues[this._index];\\r\\n        };\\r\\n        iterator.prototype.notEqual = function (ite) {\\r\\n            return this._index != ite._index || this._map != ite._map;\\r\\n        };\\r\\n        return iterator;\\r\\n    }());\\r\\n    Live2DCubismFramework.iterator = iterator;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/type/csmmap.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/type/csmrectf.ts\":\n      /*!****************************************!*\\\n        !*** ./Framework/src/type/csmrectf.ts ***!\n        \\****************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var csmRect = (function () {\\r\\n        function csmRect(x, y, w, h) {\\r\\n            this.x = x;\\r\\n            this.y = y;\\r\\n            this.width = w;\\r\\n            this.height = h;\\r\\n        }\\r\\n        csmRect.prototype.getCenterX = function () {\\r\\n            return this.x + 0.5 * this.width;\\r\\n        };\\r\\n        csmRect.prototype.getCenterY = function () {\\r\\n            return this.y + 0.5 * this.height;\\r\\n        };\\r\\n        csmRect.prototype.getRight = function () {\\r\\n            return this.x + this.width;\\r\\n        };\\r\\n        csmRect.prototype.getBottom = function () {\\r\\n            return this.y + this.height;\\r\\n        };\\r\\n        csmRect.prototype.setRect = function (r) {\\r\\n            this.x = r.x;\\r\\n            this.y = r.y;\\r\\n            this.width = r.width;\\r\\n            this.height = r.height;\\r\\n        };\\r\\n        csmRect.prototype.expand = function (w, h) {\\r\\n            this.x -= w;\\r\\n            this.y -= h;\\r\\n            this.width += w * 2.0;\\r\\n            this.height += h * 2.0;\\r\\n        };\\r\\n        return csmRect;\\r\\n    }());\\r\\n    Live2DCubismFramework.csmRect = csmRect;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL3R5cGUvY3NtcmVjdGYudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saXZlMmQvLi9GcmFtZXdvcmsvc3JjL3R5cGUvY3NtcmVjdGYudHM/M2M5MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IHRoZSBMaXZlMkQgT3BlbiBTb2Z0d2FyZSBsaWNlbnNlXG4gKiB0aGF0IGNhbiBiZSBmb3VuZCBhdCBodHRwczovL3d3dy5saXZlMmQuY29tL2V1bGEvbGl2ZTJkLW9wZW4tc29mdHdhcmUtbGljZW5zZS1hZ3JlZW1lbnRfZW4uaHRtbC5cbiAqL1xuXG5leHBvcnQgbmFtZXNwYWNlIExpdmUyREN1YmlzbUZyYW1ld29yayB7XG4gIC8qKlxuICAgKiDnn6nlvaLlvaLnirbvvIjluqfmqJnjg7vplbfjgZXjga9mbG9hdOWApO+8ieOCkuWumue+qeOBmeOCi+OCr+ODqeOCuVxuICAgKi9cbiAgZXhwb3J0IGNsYXNzIGNzbVJlY3Qge1xuICAgIC8qKlxuICAgICAqIOOCs+ODs+OCueODiOODqeOCr+OCv1xuICAgICAqIEBwYXJhbSB4IOW3puerr1jluqfmqJlcbiAgICAgKiBAcGFyYW0geSDkuIrnq69Z5bqn5qiZXG4gICAgICogQHBhcmFtIHcg5bmFXG4gICAgICogQHBhcmFtIGgg6auY44GVXG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKHg/OiBudW1iZXIsIHk/OiBudW1iZXIsIHc/OiBudW1iZXIsIGg/OiBudW1iZXIpIHtcbiAgICAgIHRoaXMueCA9IHg7XG4gICAgICB0aGlzLnkgPSB5O1xuICAgICAgdGhpcy53aWR0aCA9IHc7XG4gICAgICB0aGlzLmhlaWdodCA9IGg7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog55+p5b2i5Lit5aSu44GuWOW6p+aomeOCkuWPluW+l+OBmeOCi1xuICAgICAqL1xuICAgIHB1YmxpYyBnZXRDZW50ZXJYKCk6IG51bWJlciB7XG4gICAgICByZXR1cm4gdGhpcy54ICsgMC41ICogdGhpcy53aWR0aDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDnn6nlvaLkuK3lpK7jga5Z5bqn5qiZ44KS5Y+W5b6X44GZ44KLXG4gICAgICovXG4gICAgcHVibGljIGdldENlbnRlclkoKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiB0aGlzLnkgKyAwLjUgKiB0aGlzLmhlaWdodDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlj7PlgbTjga5Y5bqn5qiZ44KS5Y+W5b6X44GZ44KLXG4gICAgICovXG4gICAgcHVibGljIGdldFJpZ2h0KCk6IG51bWJlciB7XG4gICAgICByZXR1cm4gdGhpcy54ICsgdGhpcy53aWR0aDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDkuIvnq6/jga5Z5bqn5qiZ44KS5Y+W5b6X44GZ44KLXG4gICAgICovXG4gICAgcHVibGljIGdldEJvdHRvbSgpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMueSArIHRoaXMuaGVpZ2h0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOefqeW9ouOBq+WApOOCkuOCu+ODg+ODiOOBmeOCi1xuICAgICAqIEBwYXJhbSByIOefqeW9ouOBruOCpOODs+OCueOCv+ODs+OCuVxuICAgICAqL1xuICAgIHB1YmxpYyBzZXRSZWN0KHI6IGNzbVJlY3QpOiB2b2lkIHtcbiAgICAgIHRoaXMueCA9IHIueDtcbiAgICAgIHRoaXMueSA9IHIueTtcbiAgICAgIHRoaXMud2lkdGggPSByLndpZHRoO1xuICAgICAgdGhpcy5oZWlnaHQgPSByLmhlaWdodDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDnn6nlvaLkuK3lpK7jgpLou7jjgavjgZfjgabnuKbmqKrjgpLmi6HnuK7jgZnjgotcbiAgICAgKiBAcGFyYW0gdyDluYXmlrnlkJHjgavmi6HnuK7jgZnjgovph49cbiAgICAgKiBAcGFyYW0gaCDpq5jjgZXmlrnlkJHjgavmi6HnuK7jgZnjgovph49cbiAgICAgKi9cbiAgICBwdWJsaWMgZXhwYW5kKHc6IG51bWJlciwgaDogbnVtYmVyKSB7XG4gICAgICB0aGlzLnggLT0gdztcbiAgICAgIHRoaXMueSAtPSBoO1xuICAgICAgdGhpcy53aWR0aCArPSB3ICogMi4wO1xuICAgICAgdGhpcy5oZWlnaHQgKz0gaCAqIDIuMDtcbiAgICB9XG5cbiAgICBwdWJsaWMgeDogbnVtYmVyOyAvLyDlt6bnq69Y5bqn5qiZXG4gICAgcHVibGljIHk6IG51bWJlcjsgLy8g5LiK56uvWeW6p+aomVxuICAgIHB1YmxpYyB3aWR0aDogbnVtYmVyOyAvLyDluYVcbiAgICBwdWJsaWMgaGVpZ2h0OiBudW1iZXI7IC8vIOmrmOOBlVxuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7O0FBT0E7QUFBQTtBQUlBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFBQTtBQXRFQTtBQXVFQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./Framework/src/type/csmrectf.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/type/csmstring.ts\":\n      /*!*****************************************!*\\\n        !*** ./Framework/src/type/csmstring.ts ***!\n        \\*****************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var csmString = (function () {\\r\\n        function csmString(s) {\\r\\n            this.s = s;\\r\\n        }\\r\\n        csmString.prototype.append = function (c, length) {\\r\\n            this.s += length !== undefined ? c.substr(0, length) : c;\\r\\n            return this;\\r\\n        };\\r\\n        csmString.prototype.expansion = function (length, v) {\\r\\n            for (var i = 0; i < length; i++) {\\r\\n                this.append(v);\\r\\n            }\\r\\n            return this;\\r\\n        };\\r\\n        csmString.prototype.getBytes = function () {\\r\\n            return encodeURIComponent(this.s).replace(/%../g, 'x').length;\\r\\n        };\\r\\n        csmString.prototype.getLength = function () {\\r\\n            return this.s.length;\\r\\n        };\\r\\n        csmString.prototype.isLess = function (s) {\\r\\n            return this.s < s.s;\\r\\n        };\\r\\n        csmString.prototype.isGreat = function (s) {\\r\\n            return this.s > s.s;\\r\\n        };\\r\\n        csmString.prototype.isEqual = function (s) {\\r\\n            return this.s == s;\\r\\n        };\\r\\n        csmString.prototype.isEmpty = function () {\\r\\n            return this.s.length == 0;\\r\\n        };\\r\\n        return csmString;\\r\\n    }());\\r\\n    Live2DCubismFramework.csmString = csmString;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL3R5cGUvY3Ntc3RyaW5nLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vRnJhbWV3b3JrL3NyYy90eXBlL2NzbXN0cmluZy50cz9iNTllIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmV4cG9ydCBuYW1lc3BhY2UgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIHtcbiAgLyoqXG4gICAqIOaWh+Wtl+WIl+OCr+ODqeOCueOAglxuICAgKi9cbiAgZXhwb3J0IGNsYXNzIGNzbVN0cmluZyB7XG4gICAgLyoqXG4gICAgICog5paH5a2X5YiX44KS5b6M5pa544Gr6L+95Yqg44GZ44KLXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYyDov73liqDjgZnjgovmloflrZfliJdcbiAgICAgKiBAcmV0dXJuIOabtOaWsOOBleOCjOOBn+aWh+Wtl+WIl1xuICAgICAqL1xuICAgIHB1YmxpYyBhcHBlbmQoYzogc3RyaW5nLCBsZW5ndGg/OiBudW1iZXIpOiBjc21TdHJpbmcge1xuICAgICAgdGhpcy5zICs9IGxlbmd0aCAhPT0gdW5kZWZpbmVkID8gYy5zdWJzdHIoMCwgbGVuZ3RoKSA6IGM7XG5cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOaWh+Wtl+OCteOCpOOCuuOCkuaLoeW8teOBl+OBpuaWh+Wtl+OCkuWfi+OCgeOCi1xuICAgICAqIEBwYXJhbSBsZW5ndGggICAg5ouh5by144GZ44KL5paH5a2X5pWwXG4gICAgICogQHBhcmFtIHYgICAgICAgICDln4vjgoHjgovmloflrZdcbiAgICAgKiBAcmV0dXJuIOabtOaWsOOBleOCjOOBn+aWh+Wtl+WIl1xuICAgICAqL1xuICAgIHB1YmxpYyBleHBhbnNpb24obGVuZ3RoOiBudW1iZXIsIHY6IHN0cmluZyk6IGNzbVN0cmluZyB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRoaXMuYXBwZW5kKHYpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDmloflrZfliJfjga7plbfjgZXjgpLjg5DjgqTjg4jmlbDjgaflj5blvpfjgZnjgotcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0Qnl0ZXMoKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQodGhpcy5zKS5yZXBsYWNlKC8lLi4vZywgJ3gnKS5sZW5ndGg7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5paH5a2X5YiX44Gu6ZW344GV44KS6L+U44GZXG4gICAgICovXG4gICAgcHVibGljIGdldExlbmd0aCgpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMucy5sZW5ndGg7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5paH5a2X5YiX5q+U6LyDIDxcbiAgICAgKiBAcGFyYW0gcyDmr5TovIPjgZnjgovmloflrZfliJdcbiAgICAgKiBAcmV0dXJuIHRydWU6ICAgIOavlOi8g+OBmeOCi+aWh+Wtl+WIl+OCiOOCiuWwj+OBleOBhFxuICAgICAqIEByZXR1cm4gZmFsc2U6ICAg5q+U6LyD44GZ44KL5paH5a2X5YiX44KI44KK5aSn44GN44GEXG4gICAgICovXG4gICAgcHVibGljIGlzTGVzcyhzOiBjc21TdHJpbmcpOiBib29sZWFuIHtcbiAgICAgIHJldHVybiB0aGlzLnMgPCBzLnM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5paH5a2X5YiX5q+U6LyDID5cbiAgICAgKiBAcGFyYW0gcyDmr5TovIPjgZnjgovmloflrZfliJdcbiAgICAgKiBAcmV0dXJuIHRydWU6ICAgIOavlOi8g+OBmeOCi+aWh+Wtl+WIl+OCiOOCiuWkp+OBjeOBhFxuICAgICAqIEByZXR1cm4gZmFsc2U6ICAg5q+U6LyD44GZ44KL5paH5a2X5YiX44KI44KK5bCP44GV44GEXG4gICAgICovXG4gICAgcHVibGljIGlzR3JlYXQoczogY3NtU3RyaW5nKTogYm9vbGVhbiB7XG4gICAgICByZXR1cm4gdGhpcy5zID4gcy5zO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOaWh+Wtl+WIl+avlOi8gyA9PVxuICAgICAqIEBwYXJhbSBzIOavlOi8g+OBmeOCi+aWh+Wtl+WIl1xuICAgICAqIEByZXR1cm4gdHJ1ZTogICAg5q+U6LyD44GZ44KL5paH5a2X5YiX44Go562J44GX44GEXG4gICAgICogQHJldHVybiBmYWxzZTogICDmr5TovIPjgZnjgovmloflrZfliJfjgajnlbDjgarjgotcbiAgICAgKi9cbiAgICBwdWJsaWMgaXNFcXVhbChzOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICAgIHJldHVybiB0aGlzLnMgPT0gcztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDmloflrZfliJfjgYznqbrjgYvjganjgYbjgYtcbiAgICAgKiBAcmV0dXJuIHRydWU6IOepuuOBruaWh+Wtl+WIl1xuICAgICAqIEByZXR1cm4gZmFsc2U6IOWApOOBjOioreWumuOBleOCjOOBpuOBhOOCi1xuICAgICAqL1xuICAgIHB1YmxpYyBpc0VtcHR5KCk6IGJvb2xlYW4ge1xuICAgICAgcmV0dXJuIHRoaXMucy5sZW5ndGggPT0gMDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlvJXmlbDku5jjgY3jgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICAgKi9cbiAgICBwdWJsaWMgY29uc3RydWN0b3Ioczogc3RyaW5nKSB7XG4gICAgICB0aGlzLnMgPSBzO1xuICAgIH1cblxuICAgIHM6IHN0cmluZztcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOztBQU9BO0FBQUE7QUFJQTtBQW1GQTtBQUNBO0FBQ0E7QUE5RUE7QUFDQTtBQUVBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFVQTtBQUFBO0FBeEZBO0FBeUZBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Framework/src/type/csmstring.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/type/csmvector.ts\":\n      /*!*****************************************!*\\\n        !*** ./Framework/src/type/csmvector.ts ***!\n        \\*****************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var csmVector = (function () {\\r\\n        function csmVector(initialCapacity) {\\r\\n            if (initialCapacity === void 0) { initialCapacity = 0; }\\r\\n            if (initialCapacity < 1) {\\r\\n                this._ptr = [];\\r\\n                this._capacity = 0;\\r\\n                this._size = 0;\\r\\n            }\\r\\n            else {\\r\\n                this._ptr = new Array(initialCapacity);\\r\\n                this._capacity = initialCapacity;\\r\\n                this._size = 0;\\r\\n            }\\r\\n        }\\r\\n        csmVector.prototype.at = function (index) {\\r\\n            return this._ptr[index];\\r\\n        };\\r\\n        csmVector.prototype.set = function (index, value) {\\r\\n            this._ptr[index] = value;\\r\\n        };\\r\\n        csmVector.prototype.get = function (offset) {\\r\\n            if (offset === void 0) { offset = 0; }\\r\\n            var ret = new Array();\\r\\n            for (var i = offset; i < this._size; i++) {\\r\\n                ret.push(this._ptr[i]);\\r\\n            }\\r\\n            return ret;\\r\\n        };\\r\\n        csmVector.prototype.pushBack = function (value) {\\r\\n            if (this._size >= this._capacity) {\\r\\n                this.prepareCapacity(this._capacity == 0 ? csmVector.s_defaultSize : this._capacity * 2);\\r\\n            }\\r\\n            this._ptr[this._size++] = value;\\r\\n        };\\r\\n        csmVector.prototype.clear = function () {\\r\\n            this._ptr.length = 0;\\r\\n            this._size = 0;\\r\\n        };\\r\\n        csmVector.prototype.getSize = function () {\\r\\n            return this._size;\\r\\n        };\\r\\n        csmVector.prototype.assign = function (newSize, value) {\\r\\n            var curSize = this._size;\\r\\n            if (curSize < newSize) {\\r\\n                this.prepareCapacity(newSize);\\r\\n            }\\r\\n            for (var i = 0; i < newSize; i++) {\\r\\n                this._ptr[i] = value;\\r\\n            }\\r\\n            this._size = newSize;\\r\\n        };\\r\\n        csmVector.prototype.resize = function (newSize, value) {\\r\\n            if (value === void 0) { value = null; }\\r\\n            this.updateSize(newSize, value, true);\\r\\n        };\\r\\n        csmVector.prototype.updateSize = function (newSize, value, callPlacementNew) {\\r\\n            if (value === void 0) { value = null; }\\r\\n            if (callPlacementNew === void 0) { callPlacementNew = true; }\\r\\n            var curSize = this._size;\\r\\n            if (curSize < newSize) {\\r\\n                this.prepareCapacity(newSize);\\r\\n                if (callPlacementNew) {\\r\\n                    for (var i = this._size; i < newSize; i++) {\\r\\n                        if (typeof value == 'function') {\\r\\n                            this._ptr[i] = JSON.parse(JSON.stringify(new value()));\\r\\n                        }\\r\\n                        else {\\r\\n                            this._ptr[i] = value;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                else {\\r\\n                    for (var i = this._size; i < newSize; i++) {\\r\\n                        this._ptr[i] = value;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                var sub = this._size - newSize;\\r\\n                this._ptr.splice(this._size - sub, sub);\\r\\n            }\\r\\n            this._size = newSize;\\r\\n        };\\r\\n        csmVector.prototype.insert = function (position, begin, end) {\\r\\n            var dstSi = position._index;\\r\\n            var srcSi = begin._index;\\r\\n            var srcEi = end._index;\\r\\n            var addCount = srcEi - srcSi;\\r\\n            this.prepareCapacity(this._size + addCount);\\r\\n            var addSize = this._size - dstSi;\\r\\n            if (addSize > 0) {\\r\\n                for (var i = 0; i < addSize; i++) {\\r\\n                    this._ptr.splice(dstSi + i, 0, null);\\r\\n                }\\r\\n            }\\r\\n            for (var i = srcSi; i < srcEi; i++, dstSi++) {\\r\\n                this._ptr[dstSi] = begin._vector._ptr[i];\\r\\n            }\\r\\n            this._size = this._size + addCount;\\r\\n        };\\r\\n        csmVector.prototype.remove = function (index) {\\r\\n            if (index < 0 || this._size <= index) {\\r\\n                return false;\\r\\n            }\\r\\n            this._ptr.splice(index, 1);\\r\\n            --this._size;\\r\\n            return true;\\r\\n        };\\r\\n        csmVector.prototype.erase = function (ite) {\\r\\n            var index = ite._index;\\r\\n            if (index < 0 || this._size <= index) {\\r\\n                return ite;\\r\\n            }\\r\\n            this._ptr.splice(index, 1);\\r\\n            --this._size;\\r\\n            var ite2 = new iterator(this, index);\\r\\n            return ite2;\\r\\n        };\\r\\n        csmVector.prototype.prepareCapacity = function (newSize) {\\r\\n            if (newSize > this._capacity) {\\r\\n                if (this._capacity == 0) {\\r\\n                    this._ptr = new Array(newSize);\\r\\n                    this._capacity = newSize;\\r\\n                }\\r\\n                else {\\r\\n                    this._ptr.length = newSize;\\r\\n                    this._capacity = newSize;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        csmVector.prototype.begin = function () {\\r\\n            var ite = this._size == 0 ? this.end() : new iterator(this, 0);\\r\\n            return ite;\\r\\n        };\\r\\n        csmVector.prototype.end = function () {\\r\\n            var ite = new iterator(this, this._size);\\r\\n            return ite;\\r\\n        };\\r\\n        csmVector.prototype.getOffset = function (offset) {\\r\\n            var newVector = new csmVector();\\r\\n            newVector._ptr = this.get(offset);\\r\\n            newVector._size = this.get(offset).length;\\r\\n            newVector._capacity = this.get(offset).length;\\r\\n            return newVector;\\r\\n        };\\r\\n        csmVector.s_defaultSize = 10;\\r\\n        return csmVector;\\r\\n    }());\\r\\n    Live2DCubismFramework.csmVector = csmVector;\\r\\n    var iterator = (function () {\\r\\n        function iterator(v, index) {\\r\\n            this._vector = v != undefined ? v : null;\\r\\n            this._index = index != undefined ? index : 0;\\r\\n        }\\r\\n        iterator.prototype.set = function (ite) {\\r\\n            this._index = ite._index;\\r\\n            this._vector = ite._vector;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.preIncrement = function () {\\r\\n            ++this._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.preDecrement = function () {\\r\\n            --this._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.increment = function () {\\r\\n            var iteold = new iterator(this._vector, this._index++);\\r\\n            this._vector = iteold._vector;\\r\\n            this._index = iteold._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.decrement = function () {\\r\\n            var iteold = new iterator(this._vector, this._index--);\\r\\n            this._vector = iteold._vector;\\r\\n            this._index = iteold._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.ptr = function () {\\r\\n            return this._vector._ptr[this._index];\\r\\n        };\\r\\n        iterator.prototype.substitution = function (ite) {\\r\\n            this._index = ite._index;\\r\\n            this._vector = ite._vector;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.notEqual = function (ite) {\\r\\n            return this._index != ite._index || this._vector != ite._vector;\\r\\n        };\\r\\n        return iterator;\\r\\n    }());\\r\\n    Live2DCubismFramework.iterator = iterator;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/type/csmvector.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/utils/cubismdebug.ts\":\n      /*!********************************************!*\\\n        !*** ./Framework/src/utils/cubismdebug.ts ***!\n        \\********************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar cubismframeworkconfig_1 = __webpack_require__(/*! ../cubismframeworkconfig */ \\\"./Framework/src/cubismframeworkconfig.ts\\\");\\r\\nexports.CubismLogPrint = function (level, fmt, args) {\\r\\n    Live2DCubismFramework.CubismDebug.print(level, '[CSM]' + fmt, args);\\r\\n};\\r\\nexports.CubismLogPrintIn = function (level, fmt, args) {\\r\\n    exports.CubismLogPrint(level, fmt + '\\\\n', args);\\r\\n};\\r\\nexports.CSM_ASSERT = function (expr) {\\r\\n    console.assert(expr);\\r\\n};\\r\\nif (cubismframeworkconfig_1.CSM_LOG_LEVEL <= cubismframeworkconfig_1.CSM_LOG_LEVEL_VERBOSE) {\\r\\n    exports.CubismLogVerbose = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Verbose, '[V]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogDebug = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Debug, '[D]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogInfo = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Info, '[I]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogWarning = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Warning, '[W]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogError = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Error, '[E]' + fmt, args);\\r\\n    };\\r\\n}\\r\\nelse if (cubismframeworkconfig_1.CSM_LOG_LEVEL == cubismframeworkconfig_1.CSM_LOG_LEVEL_DEBUG) {\\r\\n    exports.CubismLogDebug = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Debug, '[D]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogInfo = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Info, '[I]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogWarning = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Warning, '[W]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogError = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Error, '[E]' + fmt, args);\\r\\n    };\\r\\n}\\r\\nelse if (cubismframeworkconfig_1.CSM_LOG_LEVEL == cubismframeworkconfig_1.CSM_LOG_LEVEL_INFO) {\\r\\n    exports.CubismLogInfo = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Info, '[I]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogWarning = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Warning, '[W]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogError = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Error, '[E]' + fmt, args);\\r\\n    };\\r\\n}\\r\\nelse if (cubismframeworkconfig_1.CSM_LOG_LEVEL == cubismframeworkconfig_1.CSM_LOG_LEVEL_WARNING) {\\r\\n    exports.CubismLogWarning = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Warning, '[W]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogError = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Error, '[E]' + fmt, args);\\r\\n    };\\r\\n}\\r\\nelse if (cubismframeworkconfig_1.CSM_LOG_LEVEL == cubismframeworkconfig_1.CSM_LOG_LEVEL_ERROR) {\\r\\n    exports.CubismLogError = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Error, '[E]' + fmt, args);\\r\\n    };\\r\\n}\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismDebug = (function () {\\r\\n        function CubismDebug() {\\r\\n        }\\r\\n        CubismDebug.print = function (logLevel, format, args) {\\r\\n            if (logLevel < live2dcubismframework_1.Live2DCubismFramework.CubismFramework.getLoggingLevel()) {\\r\\n                return;\\r\\n            }\\r\\n            var logPrint = live2dcubismframework_1.Live2DCubismFramework.CubismFramework.coreLogFunction;\\r\\n            if (!logPrint)\\r\\n                return;\\r\\n            var buffer = format.replace(/\\\\{(\\\\d+)\\\\}/g, function (m, k) {\\r\\n                return args[k];\\r\\n            });\\r\\n            logPrint(buffer);\\r\\n        };\\r\\n        CubismDebug.dumpBytes = function (logLevel, data, length) {\\r\\n            for (var i = 0; i < length; i++) {\\r\\n                if (i % 16 == 0 && i > 0)\\r\\n                    this.print(logLevel, '\\\\n');\\r\\n                else if (i % 8 == 0 && i > 0)\\r\\n                    this.print(logLevel, '  ');\\r\\n                this.print(logLevel, '{0} ', [data[i] & 0xff]);\\r\\n            }\\r\\n            this.print(logLevel, '\\\\n');\\r\\n        };\\r\\n        return CubismDebug;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismDebug = CubismDebug;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/utils/cubismdebug.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./Framework/src/utils/cubismjson.ts\":\n      /*!*******************************************!*\\\n        !*** ./Framework/src/utils/cubismjson.ts ***!\n        \\*******************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar csmstring_1 = __webpack_require__(/*! ../type/csmstring */ \\\"./Framework/src/type/csmstring.ts\\\");\\r\\nvar csmmap_1 = __webpack_require__(/*! ../type/csmmap */ \\\"./Framework/src/type/csmmap.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ./cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar csmMap = csmmap_1.Live2DCubismFramework.csmMap;\\r\\nvar csmString = csmstring_1.Live2DCubismFramework.csmString;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CSM_JSON_ERROR_TYPE_MISMATCH = 'Error: type mismatch';\\r\\n    var CSM_JSON_ERROR_INDEX_OF_BOUNDS = 'Error: index out of bounds';\\r\\n    var Value = (function () {\\r\\n        function Value() {\\r\\n        }\\r\\n        Value.prototype.getRawString = function (defaultValue, indent) {\\r\\n            return this.getString(defaultValue, indent);\\r\\n        };\\r\\n        Value.prototype.toInt = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = 0; }\\r\\n            return defaultValue;\\r\\n        };\\r\\n        Value.prototype.toFloat = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = 0; }\\r\\n            return defaultValue;\\r\\n        };\\r\\n        Value.prototype.toBoolean = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = false; }\\r\\n            return defaultValue;\\r\\n        };\\r\\n        Value.prototype.getSize = function () {\\r\\n            return 0;\\r\\n        };\\r\\n        Value.prototype.getArray = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = null; }\\r\\n            return defaultValue;\\r\\n        };\\r\\n        Value.prototype.getVector = function (defaultValue) {\\r\\n            return defaultValue;\\r\\n        };\\r\\n        Value.prototype.getMap = function (defaultValue) {\\r\\n            return defaultValue;\\r\\n        };\\r\\n        Value.prototype.getValueByIndex = function (index) {\\r\\n            return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\\r\\n        };\\r\\n        Value.prototype.getValueByString = function (s) {\\r\\n            return Value.nullValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\\r\\n        };\\r\\n        Value.prototype.getKeys = function () {\\r\\n            return Value.s_dummyKeys;\\r\\n        };\\r\\n        Value.prototype.isError = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.isNull = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.isBool = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.isFloat = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.isString = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.isArray = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.isMap = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.equals = function (value) {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.isStatic = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.setErrorNotForClientCall = function (errorStr) {\\r\\n            return JsonError.errorValue;\\r\\n        };\\r\\n        Value.staticInitializeNotForClientCall = function () {\\r\\n            JsonBoolean.trueValue = new JsonBoolean(true);\\r\\n            JsonBoolean.falseValue = new JsonBoolean(false);\\r\\n            JsonError.errorValue = new JsonError('ERROR', true);\\r\\n            this.nullValue = new JsonNullvalue();\\r\\n            Value.s_dummyKeys = new csmVector();\\r\\n        };\\r\\n        Value.staticReleaseNotForClientCall = function () {\\r\\n            JsonBoolean.trueValue = null;\\r\\n            JsonBoolean.falseValue = null;\\r\\n            JsonError.errorValue = null;\\r\\n            Value.nullValue = null;\\r\\n            Value.s_dummyKeys = null;\\r\\n            JsonBoolean.trueValue = null;\\r\\n            JsonBoolean.falseValue = null;\\r\\n            JsonError.errorValue = null;\\r\\n            Value.nullValue = null;\\r\\n            Value.s_dummyKeys = null;\\r\\n        };\\r\\n        return Value;\\r\\n    }());\\r\\n    Live2DCubismFramework.Value = Value;\\r\\n    var CubismJson = (function () {\\r\\n        function CubismJson(buffer, length) {\\r\\n            this._error = null;\\r\\n            this._lineCount = 0;\\r\\n            this._root = null;\\r\\n            if (buffer != undefined) {\\r\\n                this.parseBytes(buffer, length);\\r\\n            }\\r\\n        }\\r\\n        CubismJson.create = function (buffer, size) {\\r\\n            var json = new CubismJson();\\r\\n            var succeeded = json.parseBytes(buffer, size);\\r\\n            if (!succeeded) {\\r\\n                CubismJson.delete(json);\\r\\n                return null;\\r\\n            }\\r\\n            else {\\r\\n                return json;\\r\\n            }\\r\\n        };\\r\\n        CubismJson.delete = function (instance) {\\r\\n            instance = null;\\r\\n        };\\r\\n        CubismJson.prototype.getRoot = function () {\\r\\n            return this._root;\\r\\n        };\\r\\n        CubismJson.prototype.arrayBufferToString = function (buffer) {\\r\\n            var uint8Array = new Uint8Array(buffer);\\r\\n            var str = '';\\r\\n            for (var i = 0, len = uint8Array.length; i < len; ++i) {\\r\\n                str += '%' + this.pad(uint8Array[i].toString(16));\\r\\n            }\\r\\n            str = decodeURIComponent(str);\\r\\n            return str;\\r\\n        };\\r\\n        CubismJson.prototype.pad = function (n) {\\r\\n            return n.length < 2 ? '0' + n : n;\\r\\n        };\\r\\n        CubismJson.prototype.parseBytes = function (buffer, size) {\\r\\n            var endPos = new Array(1);\\r\\n            var decodeBuffer = this.arrayBufferToString(buffer);\\r\\n            this._root = this.parseValue(decodeBuffer, size, 0, endPos);\\r\\n            if (this._error) {\\r\\n                var strbuf = '\\\\0';\\r\\n                strbuf = 'Json parse error : @line ' + (this._lineCount + 1) + '\\\\n';\\r\\n                this._root = new JsonString(strbuf);\\r\\n                cubismdebug_1.CubismLogInfo('{0}', this._root.getRawString());\\r\\n                return false;\\r\\n            }\\r\\n            else if (this._root == null) {\\r\\n                this._root = new JsonError(new csmString(this._error), false);\\r\\n                return false;\\r\\n            }\\r\\n            return true;\\r\\n        };\\r\\n        CubismJson.prototype.getParseError = function () {\\r\\n            return this._error;\\r\\n        };\\r\\n        CubismJson.prototype.checkEndOfFile = function () {\\r\\n            return this._root.getArray()[1].equals('EOF');\\r\\n        };\\r\\n        CubismJson.prototype.parseValue = function (buffer, length, begin, outEndPos) {\\r\\n            if (this._error)\\r\\n                return null;\\r\\n            var o = null;\\r\\n            var i = begin;\\r\\n            var f;\\r\\n            for (; i < length; i++) {\\r\\n                var c = buffer[i];\\r\\n                switch (c) {\\r\\n                    case '-':\\r\\n                    case '.':\\r\\n                    case '0':\\r\\n                    case '1':\\r\\n                    case '2':\\r\\n                    case '3':\\r\\n                    case '4':\\r\\n                    case '5':\\r\\n                    case '6':\\r\\n                    case '7':\\r\\n                    case '8':\\r\\n                    case '9': {\\r\\n                        var afterString = new Array(1);\\r\\n                        f = live2dcubismframework_1.strtod(buffer.slice(i), afterString);\\r\\n                        outEndPos[0] = buffer.indexOf(afterString[0]);\\r\\n                        return new JsonFloat(f);\\r\\n                    }\\r\\n                    case '\\\"':\\r\\n                        return new JsonString(this.parseString(buffer, length, i + 1, outEndPos));\\r\\n                    case '[':\\r\\n                        o = this.parseArray(buffer, length, i + 1, outEndPos);\\r\\n                        return o;\\r\\n                    case '{':\\r\\n                        o = this.parseObject(buffer, length, i + 1, outEndPos);\\r\\n                        return o;\\r\\n                    case 'n':\\r\\n                        if (i + 3 < length) {\\r\\n                            o = new JsonNullvalue();\\r\\n                            outEndPos[0] = i + 4;\\r\\n                        }\\r\\n                        else {\\r\\n                            this._error = 'parse null';\\r\\n                        }\\r\\n                        return o;\\r\\n                    case 't':\\r\\n                        if (i + 3 < length) {\\r\\n                            o = JsonBoolean.trueValue;\\r\\n                            outEndPos[0] = i + 4;\\r\\n                        }\\r\\n                        else {\\r\\n                            this._error = 'parse true';\\r\\n                        }\\r\\n                        return o;\\r\\n                    case 'f':\\r\\n                        if (i + 4 < length) {\\r\\n                            o = JsonBoolean.falseValue;\\r\\n                            outEndPos[0] = i + 5;\\r\\n                        }\\r\\n                        else {\\r\\n                            this._error = \\\"illegal ',' position\\\";\\r\\n                        }\\r\\n                        return o;\\r\\n                    case ',':\\r\\n                        this._error = \\\"illegal ',' position\\\";\\r\\n                        return null;\\r\\n                    case ']':\\r\\n                        outEndPos[0] = i;\\r\\n                        return null;\\r\\n                    case '\\\\n':\\r\\n                        this._lineCount++;\\r\\n                    case ' ':\\r\\n                    case '\\\\t':\\r\\n                    case '\\\\r':\\r\\n                    default:\\r\\n                        break;\\r\\n                }\\r\\n            }\\r\\n            this._error = 'illegal end of value';\\r\\n            return null;\\r\\n        };\\r\\n        CubismJson.prototype.parseString = function (string, length, begin, outEndPos) {\\r\\n            if (this._error)\\r\\n                return null;\\r\\n            var i = begin;\\r\\n            var c, c2;\\r\\n            var ret = new csmString('');\\r\\n            var bufStart = begin;\\r\\n            for (; i < length; i++) {\\r\\n                c = string[i];\\r\\n                switch (c) {\\r\\n                    case '\\\"': {\\r\\n                        outEndPos[0] = i + 1;\\r\\n                        ret.append(string.slice(bufStart), i - bufStart);\\r\\n                        return ret.s;\\r\\n                    }\\r\\n                    case '//': {\\r\\n                        i++;\\r\\n                        if (i - 1 > bufStart) {\\r\\n                            ret.append(string.slice(bufStart), i - bufStart);\\r\\n                        }\\r\\n                        bufStart = i + 1;\\r\\n                        if (i < length) {\\r\\n                            c2 = string[i];\\r\\n                            switch (c2) {\\r\\n                                case '\\\\\\\\':\\r\\n                                    ret.expansion(1, '\\\\\\\\');\\r\\n                                    break;\\r\\n                                case '\\\"':\\r\\n                                    ret.expansion(1, '\\\"');\\r\\n                                    break;\\r\\n                                case '/':\\r\\n                                    ret.expansion(1, '/');\\r\\n                                    break;\\r\\n                                case 'b':\\r\\n                                    ret.expansion(1, '\\\\b');\\r\\n                                    break;\\r\\n                                case 'f':\\r\\n                                    ret.expansion(1, '\\\\f');\\r\\n                                    break;\\r\\n                                case 'n':\\r\\n                                    ret.expansion(1, '\\\\n');\\r\\n                                    break;\\r\\n                                case 'r':\\r\\n                                    ret.expansion(1, '\\\\r');\\r\\n                                    break;\\r\\n                                case 't':\\r\\n                                    ret.expansion(1, '\\\\t');\\r\\n                                    break;\\r\\n                                case 'u':\\r\\n                                    this._error = 'parse string/unicord escape not supported';\\r\\n                                    break;\\r\\n                                default:\\r\\n                                    break;\\r\\n                            }\\r\\n                        }\\r\\n                        else {\\r\\n                            this._error = 'parse string/escape error';\\r\\n                        }\\r\\n                    }\\r\\n                    default: {\\r\\n                        break;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            this._error = 'parse string/illegal end';\\r\\n            return null;\\r\\n        };\\r\\n        CubismJson.prototype.parseObject = function (buffer, length, begin, outEndPos) {\\r\\n            if (this._error)\\r\\n                return null;\\r\\n            var ret = new JsonMap();\\r\\n            var key = '';\\r\\n            var i = begin;\\r\\n            var c = '';\\r\\n            var localRetEndPos2 = Array(1);\\r\\n            var ok = false;\\r\\n            for (; i < length; i++) {\\r\\n                FOR_LOOP: for (; i < length; i++) {\\r\\n                    c = buffer[i];\\r\\n                    switch (c) {\\r\\n                        case '\\\"':\\r\\n                            key = this.parseString(buffer, length, i + 1, localRetEndPos2);\\r\\n                            if (this._error) {\\r\\n                                return null;\\r\\n                            }\\r\\n                            i = localRetEndPos2[0];\\r\\n                            ok = true;\\r\\n                            break FOR_LOOP;\\r\\n                        case '}':\\r\\n                            outEndPos[0] = i + 1;\\r\\n                            return ret;\\r\\n                        case ':':\\r\\n                            this._error = \\\"illegal ':' position\\\";\\r\\n                            break;\\r\\n                        case '\\\\n':\\r\\n                            this._lineCount++;\\r\\n                        default:\\r\\n                            break;\\r\\n                    }\\r\\n                }\\r\\n                if (!ok) {\\r\\n                    this._error = 'key not found';\\r\\n                    return null;\\r\\n                }\\r\\n                ok = false;\\r\\n                FOR_LOOP2: for (; i < length; i++) {\\r\\n                    c = buffer[i];\\r\\n                    switch (c) {\\r\\n                        case ':':\\r\\n                            ok = true;\\r\\n                            i++;\\r\\n                            break FOR_LOOP2;\\r\\n                        case '}':\\r\\n                            this._error = \\\"illegal '}' position\\\";\\r\\n                            break;\\r\\n                        case '\\\\n':\\r\\n                            this._lineCount++;\\r\\n                        default:\\r\\n                            break;\\r\\n                    }\\r\\n                }\\r\\n                if (!ok) {\\r\\n                    this._error = \\\"':' not found\\\";\\r\\n                    return null;\\r\\n                }\\r\\n                var value = this.parseValue(buffer, length, i, localRetEndPos2);\\r\\n                if (this._error) {\\r\\n                    return null;\\r\\n                }\\r\\n                i = localRetEndPos2[0];\\r\\n                ret.put(key, value);\\r\\n                FOR_LOOP3: for (; i < length; i++) {\\r\\n                    c = buffer[i];\\r\\n                    switch (c) {\\r\\n                        case ',':\\r\\n                            break FOR_LOOP3;\\r\\n                        case '}':\\r\\n                            outEndPos[0] = i + 1;\\r\\n                            return ret;\\r\\n                        case '\\\\n':\\r\\n                            this._lineCount++;\\r\\n                        default:\\r\\n                            break;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            this._error = 'illegal end of perseObject';\\r\\n            return null;\\r\\n        };\\r\\n        CubismJson.prototype.parseArray = function (buffer, length, begin, outEndPos) {\\r\\n            if (this._error)\\r\\n                return null;\\r\\n            var ret = new JsonArray();\\r\\n            var i = begin;\\r\\n            var c;\\r\\n            var localRetEndpos2 = new Array(1);\\r\\n            for (; i < length; i++) {\\r\\n                var value = this.parseValue(buffer, length, i, localRetEndpos2);\\r\\n                if (this._error) {\\r\\n                    return null;\\r\\n                }\\r\\n                i = localRetEndpos2[0];\\r\\n                if (value) {\\r\\n                    ret.add(value);\\r\\n                }\\r\\n                FOR_LOOP: for (; i < length; i++) {\\r\\n                    c = buffer[i];\\r\\n                    switch (c) {\\r\\n                        case ',':\\r\\n                            break FOR_LOOP;\\r\\n                        case ']':\\r\\n                            outEndPos[0] = i + 1;\\r\\n                            return ret;\\r\\n                        case '\\\\n':\\r\\n                            ++this._lineCount;\\r\\n                        default:\\r\\n                            break;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            ret = void 0;\\r\\n            this._error = 'illegal end of parseObject';\\r\\n            return null;\\r\\n        };\\r\\n        return CubismJson;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismJson = CubismJson;\\r\\n    var JsonFloat = (function (_super) {\\r\\n        __extends(JsonFloat, _super);\\r\\n        function JsonFloat(v) {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._value = v;\\r\\n            return _this;\\r\\n        }\\r\\n        JsonFloat.prototype.isFloat = function () {\\r\\n            return true;\\r\\n        };\\r\\n        JsonFloat.prototype.getString = function (defaultValue, indent) {\\r\\n            var strbuf = '\\\\0';\\r\\n            this._value = parseFloat(strbuf);\\r\\n            this._stringBuffer = strbuf;\\r\\n            return this._stringBuffer;\\r\\n        };\\r\\n        JsonFloat.prototype.toInt = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = 0; }\\r\\n            return parseInt(this._value.toString());\\r\\n        };\\r\\n        JsonFloat.prototype.toFloat = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = 0.0; }\\r\\n            return this._value;\\r\\n        };\\r\\n        JsonFloat.prototype.equals = function (value) {\\r\\n            if ('number' === typeof value) {\\r\\n                if (Math.round(value)) {\\r\\n                    return false;\\r\\n                }\\r\\n                else {\\r\\n                    return value == this._value;\\r\\n                }\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        return JsonFloat;\\r\\n    }(Value));\\r\\n    Live2DCubismFramework.JsonFloat = JsonFloat;\\r\\n    var JsonBoolean = (function (_super) {\\r\\n        __extends(JsonBoolean, _super);\\r\\n        function JsonBoolean(v) {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._boolValue = v;\\r\\n            return _this;\\r\\n        }\\r\\n        JsonBoolean.prototype.isBool = function () {\\r\\n            return true;\\r\\n        };\\r\\n        JsonBoolean.prototype.toBoolean = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = false; }\\r\\n            return this._boolValue;\\r\\n        };\\r\\n        JsonBoolean.prototype.getString = function (defaultValue, indent) {\\r\\n            this._stringBuffer = this._boolValue ? 'true' : 'false';\\r\\n            return this._stringBuffer;\\r\\n        };\\r\\n        JsonBoolean.prototype.equals = function (value) {\\r\\n            if ('boolean' === typeof value) {\\r\\n                return value == this._boolValue;\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        JsonBoolean.prototype.isStatic = function () {\\r\\n            return true;\\r\\n        };\\r\\n        return JsonBoolean;\\r\\n    }(Value));\\r\\n    Live2DCubismFramework.JsonBoolean = JsonBoolean;\\r\\n    var JsonString = (function (_super) {\\r\\n        __extends(JsonString, _super);\\r\\n        function JsonString(s) {\\r\\n            var _this = _super.call(this) || this;\\r\\n            if ('string' === typeof s) {\\r\\n                _this._stringBuffer = s;\\r\\n            }\\r\\n            if (s instanceof csmString) {\\r\\n                _this._stringBuffer = s.s;\\r\\n            }\\r\\n            return _this;\\r\\n        }\\r\\n        JsonString.prototype.isString = function () {\\r\\n            return true;\\r\\n        };\\r\\n        JsonString.prototype.getString = function (defaultValue, indent) {\\r\\n            return this._stringBuffer;\\r\\n        };\\r\\n        JsonString.prototype.equals = function (value) {\\r\\n            if ('string' === typeof value) {\\r\\n                return this._stringBuffer == value;\\r\\n            }\\r\\n            if (value instanceof csmString) {\\r\\n                return this._stringBuffer == value.s;\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        return JsonString;\\r\\n    }(Value));\\r\\n    Live2DCubismFramework.JsonString = JsonString;\\r\\n    var JsonError = (function (_super) {\\r\\n        __extends(JsonError, _super);\\r\\n        function JsonError(s, isStatic) {\\r\\n            var _this = this;\\r\\n            if ('string' === typeof s) {\\r\\n                _this = _super.call(this, s) || this;\\r\\n            }\\r\\n            else {\\r\\n                _this = _super.call(this, s) || this;\\r\\n            }\\r\\n            _this._isStatic = isStatic;\\r\\n            return _this;\\r\\n        }\\r\\n        JsonError.prototype.isStatic = function () {\\r\\n            return this._isStatic;\\r\\n        };\\r\\n        JsonError.prototype.setErrorNotForClientCall = function (s) {\\r\\n            this._stringBuffer = s;\\r\\n            return this;\\r\\n        };\\r\\n        JsonError.prototype.isError = function () {\\r\\n            return true;\\r\\n        };\\r\\n        return JsonError;\\r\\n    }(JsonString));\\r\\n    Live2DCubismFramework.JsonError = JsonError;\\r\\n    var JsonNullvalue = (function (_super) {\\r\\n        __extends(JsonNullvalue, _super);\\r\\n        function JsonNullvalue() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._stringBuffer = 'NullValue';\\r\\n            return _this;\\r\\n        }\\r\\n        JsonNullvalue.prototype.isNull = function () {\\r\\n            return true;\\r\\n        };\\r\\n        JsonNullvalue.prototype.getString = function (defaultValue, indent) {\\r\\n            return this._stringBuffer;\\r\\n        };\\r\\n        JsonNullvalue.prototype.isStatic = function () {\\r\\n            return true;\\r\\n        };\\r\\n        return JsonNullvalue;\\r\\n    }(Value));\\r\\n    Live2DCubismFramework.JsonNullvalue = JsonNullvalue;\\r\\n    var JsonArray = (function (_super) {\\r\\n        __extends(JsonArray, _super);\\r\\n        function JsonArray() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._array = new csmVector();\\r\\n            return _this;\\r\\n        }\\r\\n        JsonArray.prototype.release = function () {\\r\\n            for (var ite = this._array.begin(); ite.notEqual(this._array.end()); ite.preIncrement()) {\\r\\n                var v = ite.ptr();\\r\\n                if (v && !v.isStatic()) {\\r\\n                    v = void 0;\\r\\n                    v = null;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        JsonArray.prototype.isArray = function () {\\r\\n            return true;\\r\\n        };\\r\\n        JsonArray.prototype.getValueByIndex = function (index) {\\r\\n            if (index < 0 || this._array.getSize() <= index) {\\r\\n                return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_INDEX_OF_BOUNDS);\\r\\n            }\\r\\n            var v = this._array.at(index);\\r\\n            if (v == null) {\\r\\n                return Value.nullValue;\\r\\n            }\\r\\n            return v;\\r\\n        };\\r\\n        JsonArray.prototype.getValueByString = function (s) {\\r\\n            return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\\r\\n        };\\r\\n        JsonArray.prototype.getString = function (defaultValue, indent) {\\r\\n            var stringBuffer = indent + '[\\\\n';\\r\\n            for (var ite = this._array.begin(); ite.notEqual(this._array.end()); ite.increment()) {\\r\\n                var v = ite.ptr();\\r\\n                this._stringBuffer += indent + '' + v.getString(indent + ' ') + '\\\\n';\\r\\n            }\\r\\n            this._stringBuffer = stringBuffer + indent + ']\\\\n';\\r\\n            return this._stringBuffer;\\r\\n        };\\r\\n        JsonArray.prototype.add = function (v) {\\r\\n            this._array.pushBack(v);\\r\\n        };\\r\\n        JsonArray.prototype.getVector = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = null; }\\r\\n            return this._array;\\r\\n        };\\r\\n        JsonArray.prototype.getSize = function () {\\r\\n            return this._array.getSize();\\r\\n        };\\r\\n        return JsonArray;\\r\\n    }(Value));\\r\\n    Live2DCubismFramework.JsonArray = JsonArray;\\r\\n    var JsonMap = (function (_super) {\\r\\n        __extends(JsonMap, _super);\\r\\n        function JsonMap() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._map = new csmMap();\\r\\n            return _this;\\r\\n        }\\r\\n        JsonMap.prototype.release = function () {\\r\\n            var ite = this._map.begin();\\r\\n            while (ite.notEqual(this._map.end())) {\\r\\n                var v = ite.ptr().second;\\r\\n                if (v && !v.isStatic()) {\\r\\n                    v = void 0;\\r\\n                    v = null;\\r\\n                }\\r\\n                ite.preIncrement();\\r\\n            }\\r\\n        };\\r\\n        JsonMap.prototype.isMap = function () {\\r\\n            return true;\\r\\n        };\\r\\n        JsonMap.prototype.getValueByString = function (s) {\\r\\n            if (s instanceof csmString) {\\r\\n                var ret = this._map.getValue(s.s);\\r\\n                if (ret == null) {\\r\\n                    return Value.nullValue;\\r\\n                }\\r\\n                return ret;\\r\\n            }\\r\\n            for (var iter = this._map.begin(); iter.notEqual(this._map.end()); iter.preIncrement()) {\\r\\n                if (iter.ptr().first == s) {\\r\\n                    if (iter.ptr().second == null) {\\r\\n                        return Value.nullValue;\\r\\n                    }\\r\\n                    return iter.ptr().second;\\r\\n                }\\r\\n            }\\r\\n            return Value.nullValue;\\r\\n        };\\r\\n        JsonMap.prototype.getValueByIndex = function (index) {\\r\\n            return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\\r\\n        };\\r\\n        JsonMap.prototype.getString = function (defaultValue, indent) {\\r\\n            this._stringBuffer = indent + '{\\\\n';\\r\\n            var ite = this._map.begin();\\r\\n            while (ite.notEqual(this._map.end())) {\\r\\n                var key = ite.ptr().first;\\r\\n                var v = ite.ptr().second;\\r\\n                this._stringBuffer +=\\r\\n                    indent + ' ' + key + ' : ' + v.getString(indent + '   ') + ' \\\\n';\\r\\n                ite.preIncrement();\\r\\n            }\\r\\n            this._stringBuffer += indent + '}\\\\n';\\r\\n            return this._stringBuffer;\\r\\n        };\\r\\n        JsonMap.prototype.getMap = function (defaultValue) {\\r\\n            return this._map;\\r\\n        };\\r\\n        JsonMap.prototype.put = function (key, v) {\\r\\n            this._map.setValue(key, v);\\r\\n        };\\r\\n        JsonMap.prototype.getKeys = function () {\\r\\n            if (!this._keys) {\\r\\n                this._keys = new csmVector();\\r\\n                var ite = this._map.begin();\\r\\n                while (ite.notEqual(this._map.end())) {\\r\\n                    var key = ite.ptr().first;\\r\\n                    this._keys.pushBack(key);\\r\\n                    ite.preIncrement();\\r\\n                }\\r\\n            }\\r\\n            return this._keys;\\r\\n        };\\r\\n        JsonMap.prototype.getSize = function () {\\r\\n            return this._keys.getSize();\\r\\n        };\\r\\n        return JsonMap;\\r\\n    }(Value));\\r\\n    Live2DCubismFramework.JsonMap = JsonMap;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/utils/cubismjson.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./node_modules/css-loader/dist/cjs.js!./src/asset/index.css\":\n      /*!*******************************************************************!*\\\n        !*** ./node_modules/css-loader/dist/cjs.js!./src/asset/index.css ***!\n        \\*******************************************************************/\n      /*! exports provided: default */\n      /***/\n      function (module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \\\"./node_modules/css-loader/dist/runtime/api.js\\\");\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\\n// Imports\\n\\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\\n// Module\\n___CSS_LOADER_EXPORT___.push([module.i, \\\"@font-face {\\\\r\\\\n    font-family: 'iconfont';  /* project id 1168737 */\\\\r\\\\n    src: url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.eot');\\\\r\\\\n    src: url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.eot?#iefix') format('embedded-opentype'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.woff2') format('woff2'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.woff') format('woff'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.ttf') format('truetype'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.svg#iconfont') format('svg');\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n.iconfont{\\\\r\\\\n    font-family:\\\\\\\"iconfont\\\\\\\" !important;\\\\r\\\\n    font-size:16px;font-style:normal;\\\\r\\\\n    -webkit-font-smoothing: antialiased;\\\\r\\\\n    -webkit-text-stroke-width: 0.2px;\\\\r\\\\n    -moz-osx-font-smoothing: grayscale;\\\\r\\\\n    cursor: pointer;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n\\\", \\\"\\\",{\\\"version\\\":3,\\\"sources\\\":[\\\"webpack://src/asset/index.css\\\"],\\\"names\\\":[],\\\"mappings\\\":\\\"AAAA;IACI,uBAAuB,GAAG,uBAAuB;IACjD,yDAAyD;IACzD;;;;+EAI2E;EAC7E;;AAEF;IACI,iCAAiC;IACjC,cAAc,CAAC,iBAAiB;IAChC,mCAAmC;IACnC,gCAAgC;IAChC,kCAAkC;IAClC,eAAe;AACnB\\\",\\\"sourcesContent\\\":[\\\"@font-face {\\\\r\\\\n    font-family: 'iconfont';  /* project id 1168737 */\\\\r\\\\n    src: url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.eot');\\\\r\\\\n    src: url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.eot?#iefix') format('embedded-opentype'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.woff2') format('woff2'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.woff') format('woff'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.ttf') format('truetype'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.svg#iconfont') format('svg');\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n.iconfont{\\\\r\\\\n    font-family:\\\\\\\"iconfont\\\\\\\" !important;\\\\r\\\\n    font-size:16px;font-style:normal;\\\\r\\\\n    -webkit-font-smoothing: antialiased;\\\\r\\\\n    -webkit-text-stroke-width: 0.2px;\\\\r\\\\n    -moz-osx-font-smoothing: grayscale;\\\\r\\\\n    cursor: pointer;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n\\\"],\\\"sourceRoot\\\":\\\"\\\"}]);\\n// Exports\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (___CSS_LOADER_EXPORT___);\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3NyYy9hc3NldC9pbmRleC5jc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saXZlMmQvLi9zcmMvYXNzZXQvaW5kZXguY3NzPzhhYWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGZvbnQtZmFjZSB7XFxyXFxuICAgIGZvbnQtZmFtaWx5OiAnaWNvbmZvbnQnOyAgLyogcHJvamVjdCBpZCAxMTY4NzM3ICovXFxyXFxuICAgIHNyYzogdXJsKCcvL2F0LmFsaWNkbi5jb20vdC9mb250XzExNjg3MzdfajZhaGxzeDFkay5lb3QnKTtcXHJcXG4gICAgc3JjOiB1cmwoJy8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfMTE2ODczN19qNmFobHN4MWRrLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxyXFxuICAgIHVybCgnLy9hdC5hbGljZG4uY29tL3QvZm9udF8xMTY4NzM3X2o2YWhsc3gxZGsud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXFxyXFxuICAgIHVybCgnLy9hdC5hbGljZG4uY29tL3QvZm9udF8xMTY4NzM3X2o2YWhsc3gxZGsud29mZicpIGZvcm1hdCgnd29mZicpLFxcclxcbiAgICB1cmwoJy8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfMTE2ODczN19qNmFobHN4MWRrLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcXHJcXG4gICAgdXJsKCcvL2F0LmFsaWNkbi5jb20vdC9mb250XzExNjg3MzdfajZhaGxzeDFkay5zdmcjaWNvbmZvbnQnKSBmb3JtYXQoJ3N2ZycpO1xcclxcbiAgfVxcclxcblxcclxcbi5pY29uZm9udHtcXHJcXG4gICAgZm9udC1mYW1pbHk6XFxcImljb25mb250XFxcIiAhaW1wb3J0YW50O1xcclxcbiAgICBmb250LXNpemU6MTZweDtmb250LXN0eWxlOm5vcm1hbDtcXHJcXG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XFxyXFxuICAgIC13ZWJraXQtdGV4dC1zdHJva2Utd2lkdGg6IDAuMnB4O1xcclxcbiAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly9zcmMvYXNzZXQvaW5kZXguY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksdUJBQXVCLEdBQUcsdUJBQXVCO0lBQ2pELHlEQUF5RDtJQUN6RDs7OzsrRUFJMkU7RUFDN0U7O0FBRUY7SUFDSSxpQ0FBaUM7SUFDakMsY0FBYyxDQUFDLGlCQUFpQjtJQUNoQyxtQ0FBbUM7SUFDbkMsZ0NBQWdDO0lBQ2hDLGtDQUFrQztJQUNsQyxlQUFlO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBmb250LWZhY2Uge1xcclxcbiAgICBmb250LWZhbWlseTogJ2ljb25mb250JzsgIC8qIHByb2plY3QgaWQgMTE2ODczNyAqL1xcclxcbiAgICBzcmM6IHVybCgnLy9hdC5hbGljZG4uY29tL3QvZm9udF8xMTY4NzM3X2o2YWhsc3gxZGsuZW90Jyk7XFxyXFxuICAgIHNyYzogdXJsKCcvL2F0LmFsaWNkbi5jb20vdC9mb250XzExNjg3MzdfajZhaGxzeDFkay5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxcclxcbiAgICB1cmwoJy8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfMTE2ODczN19qNmFobHN4MWRrLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcclxcbiAgICB1cmwoJy8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfMTE2ODczN19qNmFobHN4MWRrLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcXHJcXG4gICAgdXJsKCcvL2F0LmFsaWNkbi5jb20vdC9mb250XzExNjg3MzdfajZhaGxzeDFkay50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksXFxyXFxuICAgIHVybCgnLy9hdC5hbGljZG4uY29tL3QvZm9udF8xMTY4NzM3X2o2YWhsc3gxZGsuc3ZnI2ljb25mb250JykgZm9ybWF0KCdzdmcnKTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4uaWNvbmZvbnR7XFxyXFxuICAgIGZvbnQtZmFtaWx5OlxcXCJpY29uZm9udFxcXCIgIWltcG9ydGFudDtcXHJcXG4gICAgZm9udC1zaXplOjE2cHg7Zm9udC1zdHlsZTpub3JtYWw7XFxyXFxuICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xcclxcbiAgICAtd2Via2l0LXRleHQtc3Ryb2tlLXdpZHRoOiAwLjJweDtcXHJcXG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js!./src/asset/index.css\\n\");\n\n        /***/\n      },\n\n      /***/\"./node_modules/css-loader/dist/runtime/api.js\":\n      /*!*****************************************************!*\\\n        !*** ./node_modules/css-loader/dist/runtime/api.js ***!\n        \\*****************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\n\\n/*\\n  MIT License http://www.opensource.org/licenses/mit-license.php\\n  Author Tobias Koppers @sokra\\n*/\\n// css base code, injected by the css-loader\\n// eslint-disable-next-line func-names\\nmodule.exports = function (useSourceMap) {\\n  var list = []; // return the list of modules as css string\\n\\n  list.toString = function toString() {\\n    return this.map(function (item) {\\n      var content = cssWithMappingToString(item, useSourceMap);\\n\\n      if (item[2]) {\\n        return \\\"@media \\\".concat(item[2], \\\" {\\\").concat(content, \\\"}\\\");\\n      }\\n\\n      return content;\\n    }).join('');\\n  }; // import a list of modules into the list\\n  // eslint-disable-next-line func-names\\n\\n\\n  list.i = function (modules, mediaQuery, dedupe) {\\n    if (typeof modules === 'string') {\\n      // eslint-disable-next-line no-param-reassign\\n      modules = [[null, modules, '']];\\n    }\\n\\n    var alreadyImportedModules = {};\\n\\n    if (dedupe) {\\n      for (var i = 0; i < this.length; i++) {\\n        // eslint-disable-next-line prefer-destructuring\\n        var id = this[i][0];\\n\\n        if (id != null) {\\n          alreadyImportedModules[id] = true;\\n        }\\n      }\\n    }\\n\\n    for (var _i = 0; _i < modules.length; _i++) {\\n      var item = [].concat(modules[_i]);\\n\\n      if (dedupe && alreadyImportedModules[item[0]]) {\\n        // eslint-disable-next-line no-continue\\n        continue;\\n      }\\n\\n      if (mediaQuery) {\\n        if (!item[2]) {\\n          item[2] = mediaQuery;\\n        } else {\\n          item[2] = \\\"\\\".concat(mediaQuery, \\\" and \\\").concat(item[2]);\\n        }\\n      }\\n\\n      list.push(item);\\n    }\\n  };\\n\\n  return list;\\n};\\n\\nfunction cssWithMappingToString(item, useSourceMap) {\\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\\n\\n  var cssMapping = item[3];\\n\\n  if (!cssMapping) {\\n    return content;\\n  }\\n\\n  if (useSourceMap && typeof btoa === 'function') {\\n    var sourceMapping = toComment(cssMapping);\\n    var sourceURLs = cssMapping.sources.map(function (source) {\\n      return \\\"/*# sourceURL=\\\".concat(cssMapping.sourceRoot || '').concat(source, \\\" */\\\");\\n    });\\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\\\n');\\n  }\\n\\n  return [content].join('\\\\n');\\n} // Adapted from convert-source-map (MIT)\\n\\n\\nfunction toComment(sourceMap) {\\n  // eslint-disable-next-line no-undef\\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\\n  var data = \\\"sourceMappingURL=data:application/json;charset=utf-8;base64,\\\".concat(base64);\\n  return \\\"/*# \\\".concat(data, \\\" */\\\");\\n}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcz8yNGZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCAnJ11dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuXG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcblxuXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICByZXR1cm4gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/api.js\\n\");\n\n        /***/\n      },\n\n      /***/\"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\":\n      /*!****************************************************************************!*\\\n        !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!\n        \\****************************************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\n\\nvar isOldIE = function isOldIE() {\\n  var memo;\\n  return function memorize() {\\n    if (typeof memo === 'undefined') {\\n      // Test for IE <= 9 as proposed by Browserhacks\\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\\n      // Tests for existence of standard globals is to allow style-loader\\n      // to operate correctly into non-standard environments\\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\\n      memo = Boolean(window && document && document.all && !window.atob);\\n    }\\n\\n    return memo;\\n  };\\n}();\\n\\nvar getTarget = function getTarget() {\\n  var memo = {};\\n  return function memorize(target) {\\n    if (typeof memo[target] === 'undefined') {\\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\\n\\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\\n        try {\\n          // This will throw an exception if access to iframe is blocked\\n          // due to cross-origin restrictions\\n          styleTarget = styleTarget.contentDocument.head;\\n        } catch (e) {\\n          // istanbul ignore next\\n          styleTarget = null;\\n        }\\n      }\\n\\n      memo[target] = styleTarget;\\n    }\\n\\n    return memo[target];\\n  };\\n}();\\n\\nvar stylesInDom = [];\\n\\nfunction getIndexByIdentifier(identifier) {\\n  var result = -1;\\n\\n  for (var i = 0; i < stylesInDom.length; i++) {\\n    if (stylesInDom[i].identifier === identifier) {\\n      result = i;\\n      break;\\n    }\\n  }\\n\\n  return result;\\n}\\n\\nfunction modulesToDom(list, options) {\\n  var idCountMap = {};\\n  var identifiers = [];\\n\\n  for (var i = 0; i < list.length; i++) {\\n    var item = list[i];\\n    var id = options.base ? item[0] + options.base : item[0];\\n    var count = idCountMap[id] || 0;\\n    var identifier = \\\"\\\".concat(id, \\\" \\\").concat(count);\\n    idCountMap[id] = count + 1;\\n    var index = getIndexByIdentifier(identifier);\\n    var obj = {\\n      css: item[1],\\n      media: item[2],\\n      sourceMap: item[3]\\n    };\\n\\n    if (index !== -1) {\\n      stylesInDom[index].references++;\\n      stylesInDom[index].updater(obj);\\n    } else {\\n      stylesInDom.push({\\n        identifier: identifier,\\n        updater: addStyle(obj, options),\\n        references: 1\\n      });\\n    }\\n\\n    identifiers.push(identifier);\\n  }\\n\\n  return identifiers;\\n}\\n\\nfunction insertStyleElement(options) {\\n  var style = document.createElement('style');\\n  var attributes = options.attributes || {};\\n\\n  if (typeof attributes.nonce === 'undefined') {\\n    var nonce =  true ? __webpack_require__.nc : undefined;\\n\\n    if (nonce) {\\n      attributes.nonce = nonce;\\n    }\\n  }\\n\\n  Object.keys(attributes).forEach(function (key) {\\n    style.setAttribute(key, attributes[key]);\\n  });\\n\\n  if (typeof options.insert === 'function') {\\n    options.insert(style);\\n  } else {\\n    var target = getTarget(options.insert || 'head');\\n\\n    if (!target) {\\n      throw new Error(\\\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\\\");\\n    }\\n\\n    target.appendChild(style);\\n  }\\n\\n  return style;\\n}\\n\\nfunction removeStyleElement(style) {\\n  // istanbul ignore if\\n  if (style.parentNode === null) {\\n    return false;\\n  }\\n\\n  style.parentNode.removeChild(style);\\n}\\n/* istanbul ignore next  */\\n\\n\\nvar replaceText = function replaceText() {\\n  var textStore = [];\\n  return function replace(index, replacement) {\\n    textStore[index] = replacement;\\n    return textStore.filter(Boolean).join('\\\\n');\\n  };\\n}();\\n\\nfunction applyToSingletonTag(style, index, remove, obj) {\\n  var css = remove ? '' : obj.media ? \\\"@media \\\".concat(obj.media, \\\" {\\\").concat(obj.css, \\\"}\\\") : obj.css; // For old IE\\n\\n  /* istanbul ignore if  */\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = replaceText(index, css);\\n  } else {\\n    var cssNode = document.createTextNode(css);\\n    var childNodes = style.childNodes;\\n\\n    if (childNodes[index]) {\\n      style.removeChild(childNodes[index]);\\n    }\\n\\n    if (childNodes.length) {\\n      style.insertBefore(cssNode, childNodes[index]);\\n    } else {\\n      style.appendChild(cssNode);\\n    }\\n  }\\n}\\n\\nfunction applyToTag(style, options, obj) {\\n  var css = obj.css;\\n  var media = obj.media;\\n  var sourceMap = obj.sourceMap;\\n\\n  if (media) {\\n    style.setAttribute('media', media);\\n  } else {\\n    style.removeAttribute('media');\\n  }\\n\\n  if (sourceMap && btoa) {\\n    css += \\\"\\\\n/*# sourceMappingURL=data:application/json;base64,\\\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \\\" */\\\");\\n  } // For old IE\\n\\n  /* istanbul ignore if  */\\n\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    while (style.firstChild) {\\n      style.removeChild(style.firstChild);\\n    }\\n\\n    style.appendChild(document.createTextNode(css));\\n  }\\n}\\n\\nvar singleton = null;\\nvar singletonCounter = 0;\\n\\nfunction addStyle(obj, options) {\\n  var style;\\n  var update;\\n  var remove;\\n\\n  if (options.singleton) {\\n    var styleIndex = singletonCounter++;\\n    style = singleton || (singleton = insertStyleElement(options));\\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\\n  } else {\\n    style = insertStyleElement(options);\\n    update = applyToTag.bind(null, style, options);\\n\\n    remove = function remove() {\\n      removeStyleElement(style);\\n    };\\n  }\\n\\n  update(obj);\\n  return function updateStyle(newObj) {\\n    if (newObj) {\\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\\n        return;\\n      }\\n\\n      update(obj = newObj);\\n    } else {\\n      remove();\\n    }\\n  };\\n}\\n\\nmodule.exports = function (list, options) {\\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\\n  // tags it will allow on a page\\n\\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\\n    options.singleton = isOldIE();\\n  }\\n\\n  list = list || [];\\n  var lastIdentifiers = modulesToDom(list, options);\\n  return function update(newList) {\\n    newList = newList || [];\\n\\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\\n      return;\\n    }\\n\\n    for (var i = 0; i < lastIdentifiers.length; i++) {\\n      var identifier = lastIdentifiers[i];\\n      var index = getIndexByIdentifier(identifier);\\n      stylesInDom[index].references--;\\n    }\\n\\n    var newLastIdentifiers = modulesToDom(newList, options);\\n\\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\\n      var _identifier = lastIdentifiers[_i];\\n\\n      var _index = getIndexByIdentifier(_identifier);\\n\\n      if (stylesInDom[_index].references === 0) {\\n        stylesInDom[_index].updater();\\n\\n        stylesInDom.splice(_index, 1);\\n      }\\n    }\\n\\n    lastIdentifiers = newLastIdentifiers;\\n  };\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\\n\");\n\n        /***/\n      },\n\n      /***/\"./node_modules/whatwg-fetch/fetch.js\":\n      /*!********************************************!*\\\n        !*** ./node_modules/whatwg-fetch/fetch.js ***!\n        \\********************************************/\n      /*! exports provided: Headers, Request, Response, DOMException, fetch */\n      /***/\n      function (module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Headers\\\", function() { return Headers; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Request\\\", function() { return Request; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Response\\\", function() { return Response; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"DOMException\\\", function() { return DOMException; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fetch\\\", function() { return fetch; });\\nvar support = {\\n  searchParams: 'URLSearchParams' in self,\\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\\n  blob:\\n    'FileReader' in self &&\\n    'Blob' in self &&\\n    (function() {\\n      try {\\n        new Blob()\\n        return true\\n      } catch (e) {\\n        return false\\n      }\\n    })(),\\n  formData: 'FormData' in self,\\n  arrayBuffer: 'ArrayBuffer' in self\\n}\\n\\nfunction isDataView(obj) {\\n  return obj && DataView.prototype.isPrototypeOf(obj)\\n}\\n\\nif (support.arrayBuffer) {\\n  var viewClasses = [\\n    '[object Int8Array]',\\n    '[object Uint8Array]',\\n    '[object Uint8ClampedArray]',\\n    '[object Int16Array]',\\n    '[object Uint16Array]',\\n    '[object Int32Array]',\\n    '[object Uint32Array]',\\n    '[object Float32Array]',\\n    '[object Float64Array]'\\n  ]\\n\\n  var isArrayBufferView =\\n    ArrayBuffer.isView ||\\n    function(obj) {\\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\\n    }\\n}\\n\\nfunction normalizeName(name) {\\n  if (typeof name !== 'string') {\\n    name = String(name)\\n  }\\n  if (/[^a-z0-9\\\\-#$%&'*+.^_`|~]/i.test(name)) {\\n    throw new TypeError('Invalid character in header field name')\\n  }\\n  return name.toLowerCase()\\n}\\n\\nfunction normalizeValue(value) {\\n  if (typeof value !== 'string') {\\n    value = String(value)\\n  }\\n  return value\\n}\\n\\n// Build a destructive iterator for the value list\\nfunction iteratorFor(items) {\\n  var iterator = {\\n    next: function() {\\n      var value = items.shift()\\n      return {done: value === undefined, value: value}\\n    }\\n  }\\n\\n  if (support.iterable) {\\n    iterator[Symbol.iterator] = function() {\\n      return iterator\\n    }\\n  }\\n\\n  return iterator\\n}\\n\\nfunction Headers(headers) {\\n  this.map = {}\\n\\n  if (headers instanceof Headers) {\\n    headers.forEach(function(value, name) {\\n      this.append(name, value)\\n    }, this)\\n  } else if (Array.isArray(headers)) {\\n    headers.forEach(function(header) {\\n      this.append(header[0], header[1])\\n    }, this)\\n  } else if (headers) {\\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\\n      this.append(name, headers[name])\\n    }, this)\\n  }\\n}\\n\\nHeaders.prototype.append = function(name, value) {\\n  name = normalizeName(name)\\n  value = normalizeValue(value)\\n  var oldValue = this.map[name]\\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\\n}\\n\\nHeaders.prototype['delete'] = function(name) {\\n  delete this.map[normalizeName(name)]\\n}\\n\\nHeaders.prototype.get = function(name) {\\n  name = normalizeName(name)\\n  return this.has(name) ? this.map[name] : null\\n}\\n\\nHeaders.prototype.has = function(name) {\\n  return this.map.hasOwnProperty(normalizeName(name))\\n}\\n\\nHeaders.prototype.set = function(name, value) {\\n  this.map[normalizeName(name)] = normalizeValue(value)\\n}\\n\\nHeaders.prototype.forEach = function(callback, thisArg) {\\n  for (var name in this.map) {\\n    if (this.map.hasOwnProperty(name)) {\\n      callback.call(thisArg, this.map[name], name, this)\\n    }\\n  }\\n}\\n\\nHeaders.prototype.keys = function() {\\n  var items = []\\n  this.forEach(function(value, name) {\\n    items.push(name)\\n  })\\n  return iteratorFor(items)\\n}\\n\\nHeaders.prototype.values = function() {\\n  var items = []\\n  this.forEach(function(value) {\\n    items.push(value)\\n  })\\n  return iteratorFor(items)\\n}\\n\\nHeaders.prototype.entries = function() {\\n  var items = []\\n  this.forEach(function(value, name) {\\n    items.push([name, value])\\n  })\\n  return iteratorFor(items)\\n}\\n\\nif (support.iterable) {\\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\\n}\\n\\nfunction consumed(body) {\\n  if (body.bodyUsed) {\\n    return Promise.reject(new TypeError('Already read'))\\n  }\\n  body.bodyUsed = true\\n}\\n\\nfunction fileReaderReady(reader) {\\n  return new Promise(function(resolve, reject) {\\n    reader.onload = function() {\\n      resolve(reader.result)\\n    }\\n    reader.onerror = function() {\\n      reject(reader.error)\\n    }\\n  })\\n}\\n\\nfunction readBlobAsArrayBuffer(blob) {\\n  var reader = new FileReader()\\n  var promise = fileReaderReady(reader)\\n  reader.readAsArrayBuffer(blob)\\n  return promise\\n}\\n\\nfunction readBlobAsText(blob) {\\n  var reader = new FileReader()\\n  var promise = fileReaderReady(reader)\\n  reader.readAsText(blob)\\n  return promise\\n}\\n\\nfunction readArrayBufferAsText(buf) {\\n  var view = new Uint8Array(buf)\\n  var chars = new Array(view.length)\\n\\n  for (var i = 0; i < view.length; i++) {\\n    chars[i] = String.fromCharCode(view[i])\\n  }\\n  return chars.join('')\\n}\\n\\nfunction bufferClone(buf) {\\n  if (buf.slice) {\\n    return buf.slice(0)\\n  } else {\\n    var view = new Uint8Array(buf.byteLength)\\n    view.set(new Uint8Array(buf))\\n    return view.buffer\\n  }\\n}\\n\\nfunction Body() {\\n  this.bodyUsed = false\\n\\n  this._initBody = function(body) {\\n    this._bodyInit = body\\n    if (!body) {\\n      this._bodyText = ''\\n    } else if (typeof body === 'string') {\\n      this._bodyText = body\\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\\n      this._bodyBlob = body\\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\\n      this._bodyFormData = body\\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\\n      this._bodyText = body.toString()\\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\\n      this._bodyArrayBuffer = bufferClone(body.buffer)\\n      // IE 10-11 can't handle a DataView body.\\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\\n      this._bodyArrayBuffer = bufferClone(body)\\n    } else {\\n      this._bodyText = body = Object.prototype.toString.call(body)\\n    }\\n\\n    if (!this.headers.get('content-type')) {\\n      if (typeof body === 'string') {\\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\\n      } else if (this._bodyBlob && this._bodyBlob.type) {\\n        this.headers.set('content-type', this._bodyBlob.type)\\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\\n      }\\n    }\\n  }\\n\\n  if (support.blob) {\\n    this.blob = function() {\\n      var rejected = consumed(this)\\n      if (rejected) {\\n        return rejected\\n      }\\n\\n      if (this._bodyBlob) {\\n        return Promise.resolve(this._bodyBlob)\\n      } else if (this._bodyArrayBuffer) {\\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\\n      } else if (this._bodyFormData) {\\n        throw new Error('could not read FormData body as blob')\\n      } else {\\n        return Promise.resolve(new Blob([this._bodyText]))\\n      }\\n    }\\n\\n    this.arrayBuffer = function() {\\n      if (this._bodyArrayBuffer) {\\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\\n      } else {\\n        return this.blob().then(readBlobAsArrayBuffer)\\n      }\\n    }\\n  }\\n\\n  this.text = function() {\\n    var rejected = consumed(this)\\n    if (rejected) {\\n      return rejected\\n    }\\n\\n    if (this._bodyBlob) {\\n      return readBlobAsText(this._bodyBlob)\\n    } else if (this._bodyArrayBuffer) {\\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\\n    } else if (this._bodyFormData) {\\n      throw new Error('could not read FormData body as text')\\n    } else {\\n      return Promise.resolve(this._bodyText)\\n    }\\n  }\\n\\n  if (support.formData) {\\n    this.formData = function() {\\n      return this.text().then(decode)\\n    }\\n  }\\n\\n  this.json = function() {\\n    return this.text().then(JSON.parse)\\n  }\\n\\n  return this\\n}\\n\\n// HTTP methods whose capitalization should be normalized\\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\\n\\nfunction normalizeMethod(method) {\\n  var upcased = method.toUpperCase()\\n  return methods.indexOf(upcased) > -1 ? upcased : method\\n}\\n\\nfunction Request(input, options) {\\n  options = options || {}\\n  var body = options.body\\n\\n  if (input instanceof Request) {\\n    if (input.bodyUsed) {\\n      throw new TypeError('Already read')\\n    }\\n    this.url = input.url\\n    this.credentials = input.credentials\\n    if (!options.headers) {\\n      this.headers = new Headers(input.headers)\\n    }\\n    this.method = input.method\\n    this.mode = input.mode\\n    this.signal = input.signal\\n    if (!body && input._bodyInit != null) {\\n      body = input._bodyInit\\n      input.bodyUsed = true\\n    }\\n  } else {\\n    this.url = String(input)\\n  }\\n\\n  this.credentials = options.credentials || this.credentials || 'same-origin'\\n  if (options.headers || !this.headers) {\\n    this.headers = new Headers(options.headers)\\n  }\\n  this.method = normalizeMethod(options.method || this.method || 'GET')\\n  this.mode = options.mode || this.mode || null\\n  this.signal = options.signal || this.signal\\n  this.referrer = null\\n\\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\\n    throw new TypeError('Body not allowed for GET or HEAD requests')\\n  }\\n  this._initBody(body)\\n}\\n\\nRequest.prototype.clone = function() {\\n  return new Request(this, {body: this._bodyInit})\\n}\\n\\nfunction decode(body) {\\n  var form = new FormData()\\n  body\\n    .trim()\\n    .split('&')\\n    .forEach(function(bytes) {\\n      if (bytes) {\\n        var split = bytes.split('=')\\n        var name = split.shift().replace(/\\\\+/g, ' ')\\n        var value = split.join('=').replace(/\\\\+/g, ' ')\\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\\n      }\\n    })\\n  return form\\n}\\n\\nfunction parseHeaders(rawHeaders) {\\n  var headers = new Headers()\\n  // Replace instances of \\\\r\\\\n and \\\\n followed by at least one space or horizontal tab with a space\\n  // https://tools.ietf.org/html/rfc7230#section-3.2\\n  var preProcessedHeaders = rawHeaders.replace(/\\\\r?\\\\n[\\\\t ]+/g, ' ')\\n  preProcessedHeaders.split(/\\\\r?\\\\n/).forEach(function(line) {\\n    var parts = line.split(':')\\n    var key = parts.shift().trim()\\n    if (key) {\\n      var value = parts.join(':').trim()\\n      headers.append(key, value)\\n    }\\n  })\\n  return headers\\n}\\n\\nBody.call(Request.prototype)\\n\\nfunction Response(bodyInit, options) {\\n  if (!options) {\\n    options = {}\\n  }\\n\\n  this.type = 'default'\\n  this.status = options.status === undefined ? 200 : options.status\\n  this.ok = this.status >= 200 && this.status < 300\\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\\n  this.headers = new Headers(options.headers)\\n  this.url = options.url || ''\\n  this._initBody(bodyInit)\\n}\\n\\nBody.call(Response.prototype)\\n\\nResponse.prototype.clone = function() {\\n  return new Response(this._bodyInit, {\\n    status: this.status,\\n    statusText: this.statusText,\\n    headers: new Headers(this.headers),\\n    url: this.url\\n  })\\n}\\n\\nResponse.error = function() {\\n  var response = new Response(null, {status: 0, statusText: ''})\\n  response.type = 'error'\\n  return response\\n}\\n\\nvar redirectStatuses = [301, 302, 303, 307, 308]\\n\\nResponse.redirect = function(url, status) {\\n  if (redirectStatuses.indexOf(status) === -1) {\\n    throw new RangeError('Invalid status code')\\n  }\\n\\n  return new Response(null, {status: status, headers: {location: url}})\\n}\\n\\nvar DOMException = self.DOMException\\ntry {\\n  new DOMException()\\n} catch (err) {\\n  DOMException = function(message, name) {\\n    this.message = message\\n    this.name = name\\n    var error = Error(message)\\n    this.stack = error.stack\\n  }\\n  DOMException.prototype = Object.create(Error.prototype)\\n  DOMException.prototype.constructor = DOMException\\n}\\n\\nfunction fetch(input, init) {\\n  return new Promise(function(resolve, reject) {\\n    var request = new Request(input, init)\\n\\n    if (request.signal && request.signal.aborted) {\\n      return reject(new DOMException('Aborted', 'AbortError'))\\n    }\\n\\n    var xhr = new XMLHttpRequest()\\n\\n    function abortXhr() {\\n      xhr.abort()\\n    }\\n\\n    xhr.onload = function() {\\n      var options = {\\n        status: xhr.status,\\n        statusText: xhr.statusText,\\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\\n      }\\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\\n      resolve(new Response(body, options))\\n    }\\n\\n    xhr.onerror = function() {\\n      reject(new TypeError('Network request failed'))\\n    }\\n\\n    xhr.ontimeout = function() {\\n      reject(new TypeError('Network request failed'))\\n    }\\n\\n    xhr.onabort = function() {\\n      reject(new DOMException('Aborted', 'AbortError'))\\n    }\\n\\n    xhr.open(request.method, request.url, true)\\n\\n    if (request.credentials === 'include') {\\n      xhr.withCredentials = true\\n    } else if (request.credentials === 'omit') {\\n      xhr.withCredentials = false\\n    }\\n\\n    if ('responseType' in xhr && support.blob) {\\n      xhr.responseType = 'blob'\\n    }\\n\\n    request.headers.forEach(function(value, name) {\\n      xhr.setRequestHeader(name, value)\\n    })\\n\\n    if (request.signal) {\\n      request.signal.addEventListener('abort', abortXhr)\\n\\n      xhr.onreadystatechange = function() {\\n        // DONE (success or failure)\\n        if (xhr.readyState === 4) {\\n          request.signal.removeEventListener('abort', abortXhr)\\n        }\\n      }\\n    }\\n\\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\\n  })\\n}\\n\\nfetch.polyfill = true\\n\\nif (!self.fetch) {\\n  self.fetch = fetch\\n  self.Headers = Headers\\n  self.Request = Request\\n  self.Response = Response\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2hhdHdnLWZldGNoL2ZldGNoLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vbm9kZV9tb2R1bGVzL3doYXR3Zy1mZXRjaC9mZXRjaC5qcz82ZDkzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBzdXBwb3J0ID0ge1xuICBzZWFyY2hQYXJhbXM6ICdVUkxTZWFyY2hQYXJhbXMnIGluIHNlbGYsXG4gIGl0ZXJhYmxlOiAnU3ltYm9sJyBpbiBzZWxmICYmICdpdGVyYXRvcicgaW4gU3ltYm9sLFxuICBibG9iOlxuICAgICdGaWxlUmVhZGVyJyBpbiBzZWxmICYmXG4gICAgJ0Jsb2InIGluIHNlbGYgJiZcbiAgICAoZnVuY3Rpb24oKSB7XG4gICAgICB0cnkge1xuICAgICAgICBuZXcgQmxvYigpXG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgfVxuICAgIH0pKCksXG4gIGZvcm1EYXRhOiAnRm9ybURhdGEnIGluIHNlbGYsXG4gIGFycmF5QnVmZmVyOiAnQXJyYXlCdWZmZXInIGluIHNlbGZcbn1cblxuZnVuY3Rpb24gaXNEYXRhVmlldyhvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBEYXRhVmlldy5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihvYmopXG59XG5cbmlmIChzdXBwb3J0LmFycmF5QnVmZmVyKSB7XG4gIHZhciB2aWV3Q2xhc3NlcyA9IFtcbiAgICAnW29iamVjdCBJbnQ4QXJyYXldJyxcbiAgICAnW29iamVjdCBVaW50OEFycmF5XScsXG4gICAgJ1tvYmplY3QgVWludDhDbGFtcGVkQXJyYXldJyxcbiAgICAnW29iamVjdCBJbnQxNkFycmF5XScsXG4gICAgJ1tvYmplY3QgVWludDE2QXJyYXldJyxcbiAgICAnW29iamVjdCBJbnQzMkFycmF5XScsXG4gICAgJ1tvYmplY3QgVWludDMyQXJyYXldJyxcbiAgICAnW29iamVjdCBGbG9hdDMyQXJyYXldJyxcbiAgICAnW29iamVjdCBGbG9hdDY0QXJyYXldJ1xuICBdXG5cbiAgdmFyIGlzQXJyYXlCdWZmZXJWaWV3ID1cbiAgICBBcnJheUJ1ZmZlci5pc1ZpZXcgfHxcbiAgICBmdW5jdGlvbihvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgdmlld0NsYXNzZXMuaW5kZXhPZihPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKSkgPiAtMVxuICAgIH1cbn1cblxuZnVuY3Rpb24gbm9ybWFsaXplTmFtZShuYW1lKSB7XG4gIGlmICh0eXBlb2YgbmFtZSAhPT0gJ3N0cmluZycpIHtcbiAgICBuYW1lID0gU3RyaW5nKG5hbWUpXG4gIH1cbiAgaWYgKC9bXmEtejAtOVxcLSMkJSYnKisuXl9gfH5dL2kudGVzdChuYW1lKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgY2hhcmFjdGVyIGluIGhlYWRlciBmaWVsZCBuYW1lJylcbiAgfVxuICByZXR1cm4gbmFtZS50b0xvd2VyQ2FzZSgpXG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZVZhbHVlKHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnKSB7XG4gICAgdmFsdWUgPSBTdHJpbmcodmFsdWUpXG4gIH1cbiAgcmV0dXJuIHZhbHVlXG59XG5cbi8vIEJ1aWxkIGEgZGVzdHJ1Y3RpdmUgaXRlcmF0b3IgZm9yIHRoZSB2YWx1ZSBsaXN0XG5mdW5jdGlvbiBpdGVyYXRvckZvcihpdGVtcykge1xuICB2YXIgaXRlcmF0b3IgPSB7XG4gICAgbmV4dDogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdmFsdWUgPSBpdGVtcy5zaGlmdCgpXG4gICAgICByZXR1cm4ge2RvbmU6IHZhbHVlID09PSB1bmRlZmluZWQsIHZhbHVlOiB2YWx1ZX1cbiAgICB9XG4gIH1cblxuICBpZiAoc3VwcG9ydC5pdGVyYWJsZSkge1xuICAgIGl0ZXJhdG9yW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBpdGVyYXRvclxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBpdGVyYXRvclxufVxuXG5leHBvcnQgZnVuY3Rpb24gSGVhZGVycyhoZWFkZXJzKSB7XG4gIHRoaXMubWFwID0ge31cblxuICBpZiAoaGVhZGVycyBpbnN0YW5jZW9mIEhlYWRlcnMpIHtcbiAgICBoZWFkZXJzLmZvckVhY2goZnVuY3Rpb24odmFsdWUsIG5hbWUpIHtcbiAgICAgIHRoaXMuYXBwZW5kKG5hbWUsIHZhbHVlKVxuICAgIH0sIHRoaXMpXG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShoZWFkZXJzKSkge1xuICAgIGhlYWRlcnMuZm9yRWFjaChmdW5jdGlvbihoZWFkZXIpIHtcbiAgICAgIHRoaXMuYXBwZW5kKGhlYWRlclswXSwgaGVhZGVyWzFdKVxuICAgIH0sIHRoaXMpXG4gIH0gZWxzZSBpZiAoaGVhZGVycykge1xuICAgIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGhlYWRlcnMpLmZvckVhY2goZnVuY3Rpb24obmFtZSkge1xuICAgICAgdGhpcy5hcHBlbmQobmFtZSwgaGVhZGVyc1tuYW1lXSlcbiAgICB9LCB0aGlzKVxuICB9XG59XG5cbkhlYWRlcnMucHJvdG90eXBlLmFwcGVuZCA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIG5hbWUgPSBub3JtYWxpemVOYW1lKG5hbWUpXG4gIHZhbHVlID0gbm9ybWFsaXplVmFsdWUodmFsdWUpXG4gIHZhciBvbGRWYWx1ZSA9IHRoaXMubWFwW25hbWVdXG4gIHRoaXMubWFwW25hbWVdID0gb2xkVmFsdWUgPyBvbGRWYWx1ZSArICcsICcgKyB2YWx1ZSA6IHZhbHVlXG59XG5cbkhlYWRlcnMucHJvdG90eXBlWydkZWxldGUnXSA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgZGVsZXRlIHRoaXMubWFwW25vcm1hbGl6ZU5hbWUobmFtZSldXG59XG5cbkhlYWRlcnMucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgbmFtZSA9IG5vcm1hbGl6ZU5hbWUobmFtZSlcbiAgcmV0dXJuIHRoaXMuaGFzKG5hbWUpID8gdGhpcy5tYXBbbmFtZV0gOiBudWxsXG59XG5cbkhlYWRlcnMucHJvdG90eXBlLmhhcyA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgcmV0dXJuIHRoaXMubWFwLmhhc093blByb3BlcnR5KG5vcm1hbGl6ZU5hbWUobmFtZSkpXG59XG5cbkhlYWRlcnMucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHRoaXMubWFwW25vcm1hbGl6ZU5hbWUobmFtZSldID0gbm9ybWFsaXplVmFsdWUodmFsdWUpXG59XG5cbkhlYWRlcnMucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbihjYWxsYmFjaywgdGhpc0FyZykge1xuICBmb3IgKHZhciBuYW1lIGluIHRoaXMubWFwKSB7XG4gICAgaWYgKHRoaXMubWFwLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgICBjYWxsYmFjay5jYWxsKHRoaXNBcmcsIHRoaXMubWFwW25hbWVdLCBuYW1lLCB0aGlzKVxuICAgIH1cbiAgfVxufVxuXG5IZWFkZXJzLnByb3RvdHlwZS5rZXlzID0gZnVuY3Rpb24oKSB7XG4gIHZhciBpdGVtcyA9IFtdXG4gIHRoaXMuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSwgbmFtZSkge1xuICAgIGl0ZW1zLnB1c2gobmFtZSlcbiAgfSlcbiAgcmV0dXJuIGl0ZXJhdG9yRm9yKGl0ZW1zKVxufVxuXG5IZWFkZXJzLnByb3RvdHlwZS52YWx1ZXMgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGl0ZW1zID0gW11cbiAgdGhpcy5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgaXRlbXMucHVzaCh2YWx1ZSlcbiAgfSlcbiAgcmV0dXJuIGl0ZXJhdG9yRm9yKGl0ZW1zKVxufVxuXG5IZWFkZXJzLnByb3RvdHlwZS5lbnRyaWVzID0gZnVuY3Rpb24oKSB7XG4gIHZhciBpdGVtcyA9IFtdXG4gIHRoaXMuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSwgbmFtZSkge1xuICAgIGl0ZW1zLnB1c2goW25hbWUsIHZhbHVlXSlcbiAgfSlcbiAgcmV0dXJuIGl0ZXJhdG9yRm9yKGl0ZW1zKVxufVxuXG5pZiAoc3VwcG9ydC5pdGVyYWJsZSkge1xuICBIZWFkZXJzLnByb3RvdHlwZVtTeW1ib2wuaXRlcmF0b3JdID0gSGVhZGVycy5wcm90b3R5cGUuZW50cmllc1xufVxuXG5mdW5jdGlvbiBjb25zdW1lZChib2R5KSB7XG4gIGlmIChib2R5LmJvZHlVc2VkKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBUeXBlRXJyb3IoJ0FscmVhZHkgcmVhZCcpKVxuICB9XG4gIGJvZHkuYm9keVVzZWQgPSB0cnVlXG59XG5cbmZ1bmN0aW9uIGZpbGVSZWFkZXJSZWFkeShyZWFkZXIpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJlc29sdmUocmVhZGVyLnJlc3VsdClcbiAgICB9XG4gICAgcmVhZGVyLm9uZXJyb3IgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJlamVjdChyZWFkZXIuZXJyb3IpXG4gICAgfVxuICB9KVxufVxuXG5mdW5jdGlvbiByZWFkQmxvYkFzQXJyYXlCdWZmZXIoYmxvYikge1xuICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKVxuICB2YXIgcHJvbWlzZSA9IGZpbGVSZWFkZXJSZWFkeShyZWFkZXIpXG4gIHJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcihibG9iKVxuICByZXR1cm4gcHJvbWlzZVxufVxuXG5mdW5jdGlvbiByZWFkQmxvYkFzVGV4dChibG9iKSB7XG4gIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpXG4gIHZhciBwcm9taXNlID0gZmlsZVJlYWRlclJlYWR5KHJlYWRlcilcbiAgcmVhZGVyLnJlYWRBc1RleHQoYmxvYilcbiAgcmV0dXJuIHByb21pc2Vcbn1cblxuZnVuY3Rpb24gcmVhZEFycmF5QnVmZmVyQXNUZXh0KGJ1Zikge1xuICB2YXIgdmlldyA9IG5ldyBVaW50OEFycmF5KGJ1ZilcbiAgdmFyIGNoYXJzID0gbmV3IEFycmF5KHZpZXcubGVuZ3RoKVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdmlldy5sZW5ndGg7IGkrKykge1xuICAgIGNoYXJzW2ldID0gU3RyaW5nLmZyb21DaGFyQ29kZSh2aWV3W2ldKVxuICB9XG4gIHJldHVybiBjaGFycy5qb2luKCcnKVxufVxuXG5mdW5jdGlvbiBidWZmZXJDbG9uZShidWYpIHtcbiAgaWYgKGJ1Zi5zbGljZSkge1xuICAgIHJldHVybiBidWYuc2xpY2UoMClcbiAgfSBlbHNlIHtcbiAgICB2YXIgdmlldyA9IG5ldyBVaW50OEFycmF5KGJ1Zi5ieXRlTGVuZ3RoKVxuICAgIHZpZXcuc2V0KG5ldyBVaW50OEFycmF5KGJ1ZikpXG4gICAgcmV0dXJuIHZpZXcuYnVmZmVyXG4gIH1cbn1cblxuZnVuY3Rpb24gQm9keSgpIHtcbiAgdGhpcy5ib2R5VXNlZCA9IGZhbHNlXG5cbiAgdGhpcy5faW5pdEJvZHkgPSBmdW5jdGlvbihib2R5KSB7XG4gICAgdGhpcy5fYm9keUluaXQgPSBib2R5XG4gICAgaWYgKCFib2R5KSB7XG4gICAgICB0aGlzLl9ib2R5VGV4dCA9ICcnXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgYm9keSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRoaXMuX2JvZHlUZXh0ID0gYm9keVxuICAgIH0gZWxzZSBpZiAoc3VwcG9ydC5ibG9iICYmIEJsb2IucHJvdG90eXBlLmlzUHJvdG90eXBlT2YoYm9keSkpIHtcbiAgICAgIHRoaXMuX2JvZHlCbG9iID0gYm9keVxuICAgIH0gZWxzZSBpZiAoc3VwcG9ydC5mb3JtRGF0YSAmJiBGb3JtRGF0YS5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihib2R5KSkge1xuICAgICAgdGhpcy5fYm9keUZvcm1EYXRhID0gYm9keVxuICAgIH0gZWxzZSBpZiAoc3VwcG9ydC5zZWFyY2hQYXJhbXMgJiYgVVJMU2VhcmNoUGFyYW1zLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGJvZHkpKSB7XG4gICAgICB0aGlzLl9ib2R5VGV4dCA9IGJvZHkudG9TdHJpbmcoKVxuICAgIH0gZWxzZSBpZiAoc3VwcG9ydC5hcnJheUJ1ZmZlciAmJiBzdXBwb3J0LmJsb2IgJiYgaXNEYXRhVmlldyhib2R5KSkge1xuICAgICAgdGhpcy5fYm9keUFycmF5QnVmZmVyID0gYnVmZmVyQ2xvbmUoYm9keS5idWZmZXIpXG4gICAgICAvLyBJRSAxMC0xMSBjYW4ndCBoYW5kbGUgYSBEYXRhVmlldyBib2R5LlxuICAgICAgdGhpcy5fYm9keUluaXQgPSBuZXcgQmxvYihbdGhpcy5fYm9keUFycmF5QnVmZmVyXSlcbiAgICB9IGVsc2UgaWYgKHN1cHBvcnQuYXJyYXlCdWZmZXIgJiYgKEFycmF5QnVmZmVyLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGJvZHkpIHx8IGlzQXJyYXlCdWZmZXJWaWV3KGJvZHkpKSkge1xuICAgICAgdGhpcy5fYm9keUFycmF5QnVmZmVyID0gYnVmZmVyQ2xvbmUoYm9keSlcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fYm9keVRleHQgPSBib2R5ID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGJvZHkpXG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLmhlYWRlcnMuZ2V0KCdjb250ZW50LXR5cGUnKSkge1xuICAgICAgaWYgKHR5cGVvZiBib2R5ID09PSAnc3RyaW5nJykge1xuICAgICAgICB0aGlzLmhlYWRlcnMuc2V0KCdjb250ZW50LXR5cGUnLCAndGV4dC9wbGFpbjtjaGFyc2V0PVVURi04JylcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5fYm9keUJsb2IgJiYgdGhpcy5fYm9keUJsb2IudHlwZSkge1xuICAgICAgICB0aGlzLmhlYWRlcnMuc2V0KCdjb250ZW50LXR5cGUnLCB0aGlzLl9ib2R5QmxvYi50eXBlKVxuICAgICAgfSBlbHNlIGlmIChzdXBwb3J0LnNlYXJjaFBhcmFtcyAmJiBVUkxTZWFyY2hQYXJhbXMucHJvdG90eXBlLmlzUHJvdG90eXBlT2YoYm9keSkpIHtcbiAgICAgICAgdGhpcy5oZWFkZXJzLnNldCgnY29udGVudC10eXBlJywgJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PVVURi04JylcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpZiAoc3VwcG9ydC5ibG9iKSB7XG4gICAgdGhpcy5ibG9iID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgcmVqZWN0ZWQgPSBjb25zdW1lZCh0aGlzKVxuICAgICAgaWYgKHJlamVjdGVkKSB7XG4gICAgICAgIHJldHVybiByZWplY3RlZFxuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fYm9keUJsb2IpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLl9ib2R5QmxvYilcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5fYm9keUFycmF5QnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobmV3IEJsb2IoW3RoaXMuX2JvZHlBcnJheUJ1ZmZlcl0pKVxuICAgICAgfSBlbHNlIGlmICh0aGlzLl9ib2R5Rm9ybURhdGEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdjb3VsZCBub3QgcmVhZCBGb3JtRGF0YSBib2R5IGFzIGJsb2InKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXcgQmxvYihbdGhpcy5fYm9keVRleHRdKSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmFycmF5QnVmZmVyID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAodGhpcy5fYm9keUFycmF5QnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBjb25zdW1lZCh0aGlzKSB8fCBQcm9taXNlLnJlc29sdmUodGhpcy5fYm9keUFycmF5QnVmZmVyKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYmxvYigpLnRoZW4ocmVhZEJsb2JBc0FycmF5QnVmZmVyKVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHRoaXMudGV4dCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciByZWplY3RlZCA9IGNvbnN1bWVkKHRoaXMpXG4gICAgaWYgKHJlamVjdGVkKSB7XG4gICAgICByZXR1cm4gcmVqZWN0ZWRcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fYm9keUJsb2IpIHtcbiAgICAgIHJldHVybiByZWFkQmxvYkFzVGV4dCh0aGlzLl9ib2R5QmxvYilcbiAgICB9IGVsc2UgaWYgKHRoaXMuX2JvZHlBcnJheUJ1ZmZlcikge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShyZWFkQXJyYXlCdWZmZXJBc1RleHQodGhpcy5fYm9keUFycmF5QnVmZmVyKSlcbiAgICB9IGVsc2UgaWYgKHRoaXMuX2JvZHlGb3JtRGF0YSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdjb3VsZCBub3QgcmVhZCBGb3JtRGF0YSBib2R5IGFzIHRleHQnKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuX2JvZHlUZXh0KVxuICAgIH1cbiAgfVxuXG4gIGlmIChzdXBwb3J0LmZvcm1EYXRhKSB7XG4gICAgdGhpcy5mb3JtRGF0YSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMudGV4dCgpLnRoZW4oZGVjb2RlKVxuICAgIH1cbiAgfVxuXG4gIHRoaXMuanNvbiA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnRleHQoKS50aGVuKEpTT04ucGFyc2UpXG4gIH1cblxuICByZXR1cm4gdGhpc1xufVxuXG4vLyBIVFRQIG1ldGhvZHMgd2hvc2UgY2FwaXRhbGl6YXRpb24gc2hvdWxkIGJlIG5vcm1hbGl6ZWRcbnZhciBtZXRob2RzID0gWydERUxFVEUnLCAnR0VUJywgJ0hFQUQnLCAnT1BUSU9OUycsICdQT1NUJywgJ1BVVCddXG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZU1ldGhvZChtZXRob2QpIHtcbiAgdmFyIHVwY2FzZWQgPSBtZXRob2QudG9VcHBlckNhc2UoKVxuICByZXR1cm4gbWV0aG9kcy5pbmRleE9mKHVwY2FzZWQpID4gLTEgPyB1cGNhc2VkIDogbWV0aG9kXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBSZXF1ZXN0KGlucHV0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG4gIHZhciBib2R5ID0gb3B0aW9ucy5ib2R5XG5cbiAgaWYgKGlucHV0IGluc3RhbmNlb2YgUmVxdWVzdCkge1xuICAgIGlmIChpbnB1dC5ib2R5VXNlZCkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQWxyZWFkeSByZWFkJylcbiAgICB9XG4gICAgdGhpcy51cmwgPSBpbnB1dC51cmxcbiAgICB0aGlzLmNyZWRlbnRpYWxzID0gaW5wdXQuY3JlZGVudGlhbHNcbiAgICBpZiAoIW9wdGlvbnMuaGVhZGVycykge1xuICAgICAgdGhpcy5oZWFkZXJzID0gbmV3IEhlYWRlcnMoaW5wdXQuaGVhZGVycylcbiAgICB9XG4gICAgdGhpcy5tZXRob2QgPSBpbnB1dC5tZXRob2RcbiAgICB0aGlzLm1vZGUgPSBpbnB1dC5tb2RlXG4gICAgdGhpcy5zaWduYWwgPSBpbnB1dC5zaWduYWxcbiAgICBpZiAoIWJvZHkgJiYgaW5wdXQuX2JvZHlJbml0ICE9IG51bGwpIHtcbiAgICAgIGJvZHkgPSBpbnB1dC5fYm9keUluaXRcbiAgICAgIGlucHV0LmJvZHlVc2VkID0gdHJ1ZVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB0aGlzLnVybCA9IFN0cmluZyhpbnB1dClcbiAgfVxuXG4gIHRoaXMuY3JlZGVudGlhbHMgPSBvcHRpb25zLmNyZWRlbnRpYWxzIHx8IHRoaXMuY3JlZGVudGlhbHMgfHwgJ3NhbWUtb3JpZ2luJ1xuICBpZiAob3B0aW9ucy5oZWFkZXJzIHx8ICF0aGlzLmhlYWRlcnMpIHtcbiAgICB0aGlzLmhlYWRlcnMgPSBuZXcgSGVhZGVycyhvcHRpb25zLmhlYWRlcnMpXG4gIH1cbiAgdGhpcy5tZXRob2QgPSBub3JtYWxpemVNZXRob2Qob3B0aW9ucy5tZXRob2QgfHwgdGhpcy5tZXRob2QgfHwgJ0dFVCcpXG4gIHRoaXMubW9kZSA9IG9wdGlvbnMubW9kZSB8fCB0aGlzLm1vZGUgfHwgbnVsbFxuICB0aGlzLnNpZ25hbCA9IG9wdGlvbnMuc2lnbmFsIHx8IHRoaXMuc2lnbmFsXG4gIHRoaXMucmVmZXJyZXIgPSBudWxsXG5cbiAgaWYgKCh0aGlzLm1ldGhvZCA9PT0gJ0dFVCcgfHwgdGhpcy5tZXRob2QgPT09ICdIRUFEJykgJiYgYm9keSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0JvZHkgbm90IGFsbG93ZWQgZm9yIEdFVCBvciBIRUFEIHJlcXVlc3RzJylcbiAgfVxuICB0aGlzLl9pbml0Qm9keShib2R5KVxufVxuXG5SZXF1ZXN0LnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFJlcXVlc3QodGhpcywge2JvZHk6IHRoaXMuX2JvZHlJbml0fSlcbn1cblxuZnVuY3Rpb24gZGVjb2RlKGJvZHkpIHtcbiAgdmFyIGZvcm0gPSBuZXcgRm9ybURhdGEoKVxuICBib2R5XG4gICAgLnRyaW0oKVxuICAgIC5zcGxpdCgnJicpXG4gICAgLmZvckVhY2goZnVuY3Rpb24oYnl0ZXMpIHtcbiAgICAgIGlmIChieXRlcykge1xuICAgICAgICB2YXIgc3BsaXQgPSBieXRlcy5zcGxpdCgnPScpXG4gICAgICAgIHZhciBuYW1lID0gc3BsaXQuc2hpZnQoKS5yZXBsYWNlKC9cXCsvZywgJyAnKVxuICAgICAgICB2YXIgdmFsdWUgPSBzcGxpdC5qb2luKCc9JykucmVwbGFjZSgvXFwrL2csICcgJylcbiAgICAgICAgZm9ybS5hcHBlbmQoZGVjb2RlVVJJQ29tcG9uZW50KG5hbWUpLCBkZWNvZGVVUklDb21wb25lbnQodmFsdWUpKVxuICAgICAgfVxuICAgIH0pXG4gIHJldHVybiBmb3JtXG59XG5cbmZ1bmN0aW9uIHBhcnNlSGVhZGVycyhyYXdIZWFkZXJzKSB7XG4gIHZhciBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKVxuICAvLyBSZXBsYWNlIGluc3RhbmNlcyBvZiBcXHJcXG4gYW5kIFxcbiBmb2xsb3dlZCBieSBhdCBsZWFzdCBvbmUgc3BhY2Ugb3IgaG9yaXpvbnRhbCB0YWIgd2l0aCBhIHNwYWNlXG4gIC8vIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM3MjMwI3NlY3Rpb24tMy4yXG4gIHZhciBwcmVQcm9jZXNzZWRIZWFkZXJzID0gcmF3SGVhZGVycy5yZXBsYWNlKC9cXHI/XFxuW1xcdCBdKy9nLCAnICcpXG4gIHByZVByb2Nlc3NlZEhlYWRlcnMuc3BsaXQoL1xccj9cXG4vKS5mb3JFYWNoKGZ1bmN0aW9uKGxpbmUpIHtcbiAgICB2YXIgcGFydHMgPSBsaW5lLnNwbGl0KCc6JylcbiAgICB2YXIga2V5ID0gcGFydHMuc2hpZnQoKS50cmltKClcbiAgICBpZiAoa2V5KSB7XG4gICAgICB2YXIgdmFsdWUgPSBwYXJ0cy5qb2luKCc6JykudHJpbSgpXG4gICAgICBoZWFkZXJzLmFwcGVuZChrZXksIHZhbHVlKVxuICAgIH1cbiAgfSlcbiAgcmV0dXJuIGhlYWRlcnNcbn1cblxuQm9keS5jYWxsKFJlcXVlc3QucHJvdG90eXBlKVxuXG5leHBvcnQgZnVuY3Rpb24gUmVzcG9uc2UoYm9keUluaXQsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9XG4gIH1cblxuICB0aGlzLnR5cGUgPSAnZGVmYXVsdCdcbiAgdGhpcy5zdGF0dXMgPSBvcHRpb25zLnN0YXR1cyA9PT0gdW5kZWZpbmVkID8gMjAwIDogb3B0aW9ucy5zdGF0dXNcbiAgdGhpcy5vayA9IHRoaXMuc3RhdHVzID49IDIwMCAmJiB0aGlzLnN0YXR1cyA8IDMwMFxuICB0aGlzLnN0YXR1c1RleHQgPSAnc3RhdHVzVGV4dCcgaW4gb3B0aW9ucyA/IG9wdGlvbnMuc3RhdHVzVGV4dCA6ICdPSydcbiAgdGhpcy5oZWFkZXJzID0gbmV3IEhlYWRlcnMob3B0aW9ucy5oZWFkZXJzKVxuICB0aGlzLnVybCA9IG9wdGlvbnMudXJsIHx8ICcnXG4gIHRoaXMuX2luaXRCb2R5KGJvZHlJbml0KVxufVxuXG5Cb2R5LmNhbGwoUmVzcG9uc2UucHJvdG90eXBlKVxuXG5SZXNwb25zZS5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBSZXNwb25zZSh0aGlzLl9ib2R5SW5pdCwge1xuICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXG4gICAgc3RhdHVzVGV4dDogdGhpcy5zdGF0dXNUZXh0LFxuICAgIGhlYWRlcnM6IG5ldyBIZWFkZXJzKHRoaXMuaGVhZGVycyksXG4gICAgdXJsOiB0aGlzLnVybFxuICB9KVxufVxuXG5SZXNwb25zZS5lcnJvciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2UobnVsbCwge3N0YXR1czogMCwgc3RhdHVzVGV4dDogJyd9KVxuICByZXNwb25zZS50eXBlID0gJ2Vycm9yJ1xuICByZXR1cm4gcmVzcG9uc2Vcbn1cblxudmFyIHJlZGlyZWN0U3RhdHVzZXMgPSBbMzAxLCAzMDIsIDMwMywgMzA3LCAzMDhdXG5cblJlc3BvbnNlLnJlZGlyZWN0ID0gZnVuY3Rpb24odXJsLCBzdGF0dXMpIHtcbiAgaWYgKHJlZGlyZWN0U3RhdHVzZXMuaW5kZXhPZihzdGF0dXMpID09PSAtMSkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdJbnZhbGlkIHN0YXR1cyBjb2RlJylcbiAgfVxuXG4gIHJldHVybiBuZXcgUmVzcG9uc2UobnVsbCwge3N0YXR1czogc3RhdHVzLCBoZWFkZXJzOiB7bG9jYXRpb246IHVybH19KVxufVxuXG5leHBvcnQgdmFyIERPTUV4Y2VwdGlvbiA9IHNlbGYuRE9NRXhjZXB0aW9uXG50cnkge1xuICBuZXcgRE9NRXhjZXB0aW9uKClcbn0gY2F0Y2ggKGVycikge1xuICBET01FeGNlcHRpb24gPSBmdW5jdGlvbihtZXNzYWdlLCBuYW1lKSB7XG4gICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZVxuICAgIHRoaXMubmFtZSA9IG5hbWVcbiAgICB2YXIgZXJyb3IgPSBFcnJvcihtZXNzYWdlKVxuICAgIHRoaXMuc3RhY2sgPSBlcnJvci5zdGFja1xuICB9XG4gIERPTUV4Y2VwdGlvbi5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVycm9yLnByb3RvdHlwZSlcbiAgRE9NRXhjZXB0aW9uLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IERPTUV4Y2VwdGlvblxufVxuXG5leHBvcnQgZnVuY3Rpb24gZmV0Y2goaW5wdXQsIGluaXQpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciByZXF1ZXN0ID0gbmV3IFJlcXVlc3QoaW5wdXQsIGluaXQpXG5cbiAgICBpZiAocmVxdWVzdC5zaWduYWwgJiYgcmVxdWVzdC5zaWduYWwuYWJvcnRlZCkge1xuICAgICAgcmV0dXJuIHJlamVjdChuZXcgRE9NRXhjZXB0aW9uKCdBYm9ydGVkJywgJ0Fib3J0RXJyb3InKSlcbiAgICB9XG5cbiAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KClcblxuICAgIGZ1bmN0aW9uIGFib3J0WGhyKCkge1xuICAgICAgeGhyLmFib3J0KClcbiAgICB9XG5cbiAgICB4aHIub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IHtcbiAgICAgICAgc3RhdHVzOiB4aHIuc3RhdHVzLFxuICAgICAgICBzdGF0dXNUZXh0OiB4aHIuc3RhdHVzVGV4dCxcbiAgICAgICAgaGVhZGVyczogcGFyc2VIZWFkZXJzKHhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSB8fCAnJylcbiAgICAgIH1cbiAgICAgIG9wdGlvbnMudXJsID0gJ3Jlc3BvbnNlVVJMJyBpbiB4aHIgPyB4aHIucmVzcG9uc2VVUkwgOiBvcHRpb25zLmhlYWRlcnMuZ2V0KCdYLVJlcXVlc3QtVVJMJylcbiAgICAgIHZhciBib2R5ID0gJ3Jlc3BvbnNlJyBpbiB4aHIgPyB4aHIucmVzcG9uc2UgOiB4aHIucmVzcG9uc2VUZXh0XG4gICAgICByZXNvbHZlKG5ldyBSZXNwb25zZShib2R5LCBvcHRpb25zKSlcbiAgICB9XG5cbiAgICB4aHIub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmVqZWN0KG5ldyBUeXBlRXJyb3IoJ05ldHdvcmsgcmVxdWVzdCBmYWlsZWQnKSlcbiAgICB9XG5cbiAgICB4aHIub250aW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZWplY3QobmV3IFR5cGVFcnJvcignTmV0d29yayByZXF1ZXN0IGZhaWxlZCcpKVxuICAgIH1cblxuICAgIHhoci5vbmFib3J0ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZWplY3QobmV3IERPTUV4Y2VwdGlvbignQWJvcnRlZCcsICdBYm9ydEVycm9yJykpXG4gICAgfVxuXG4gICAgeGhyLm9wZW4ocmVxdWVzdC5tZXRob2QsIHJlcXVlc3QudXJsLCB0cnVlKVxuXG4gICAgaWYgKHJlcXVlc3QuY3JlZGVudGlhbHMgPT09ICdpbmNsdWRlJykge1xuICAgICAgeGhyLndpdGhDcmVkZW50aWFscyA9IHRydWVcbiAgICB9IGVsc2UgaWYgKHJlcXVlc3QuY3JlZGVudGlhbHMgPT09ICdvbWl0Jykge1xuICAgICAgeGhyLndpdGhDcmVkZW50aWFscyA9IGZhbHNlXG4gICAgfVxuXG4gICAgaWYgKCdyZXNwb25zZVR5cGUnIGluIHhociAmJiBzdXBwb3J0LmJsb2IpIHtcbiAgICAgIHhoci5yZXNwb25zZVR5cGUgPSAnYmxvYidcbiAgICB9XG5cbiAgICByZXF1ZXN0LmhlYWRlcnMuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSwgbmFtZSkge1xuICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIobmFtZSwgdmFsdWUpXG4gICAgfSlcblxuICAgIGlmIChyZXF1ZXN0LnNpZ25hbCkge1xuICAgICAgcmVxdWVzdC5zaWduYWwuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBhYm9ydFhocilcblxuICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAvLyBET05FIChzdWNjZXNzIG9yIGZhaWx1cmUpXG4gICAgICAgIGlmICh4aHIucmVhZHlTdGF0ZSA9PT0gNCkge1xuICAgICAgICAgIHJlcXVlc3Quc2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgYWJvcnRYaHIpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICB4aHIuc2VuZCh0eXBlb2YgcmVxdWVzdC5fYm9keUluaXQgPT09ICd1bmRlZmluZWQnID8gbnVsbCA6IHJlcXVlc3QuX2JvZHlJbml0KVxuICB9KVxufVxuXG5mZXRjaC5wb2x5ZmlsbCA9IHRydWVcblxuaWYgKCFzZWxmLmZldGNoKSB7XG4gIHNlbGYuZmV0Y2ggPSBmZXRjaFxuICBzZWxmLkhlYWRlcnMgPSBIZWFkZXJzXG4gIHNlbGYuUmVxdWVzdCA9IFJlcXVlc3RcbiAgc2VsZi5SZXNwb25zZSA9IFJlc3BvbnNlXG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./node_modules/whatwg-fetch/fetch.js\\n\");\n\n        /***/\n      },\n\n      /***/\"./src/asset/index.css\":\n      /*!*****************************!*\\\n        !*** ./src/asset/index.css ***!\n        \\*****************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        eval(\"var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \\\"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\\\");\\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./index.css */ \\\"./node_modules/css-loader/dist/cjs.js!./src/asset/index.css\\\");\\n\\n            content = content.__esModule ? content.default : content;\\n\\n            if (typeof content === 'string') {\\n              content = [[module.i, content, '']];\\n            }\\n\\nvar options = {};\\n\\noptions.insert = \\\"head\\\";\\noptions.singleton = false;\\n\\nvar update = api(content, options);\\n\\n\\n\\nmodule.exports = content.locals || {};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXQvaW5kZXguY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vc3JjL2Fzc2V0L2luZGV4LmNzcz83YTQ1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./src/asset/index.css\\n\");\n\n        /***/\n      },\n\n      /***/\"./src/index.js\":\n      /*!**********************!*\\\n        !*** ./src/index.js ***!\n        \\**********************/\n      /*! exports provided: default */\n      /***/\n      function (module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _lappdelegate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lappdelegate */ \\\"./src/lappdelegate.ts\\\");\\n/* harmony import */ var _lappdelegate__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lappdelegate__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lapplive2dmanager */ \\\"./src/lapplive2dmanager.ts\\\");\\n/* harmony import */ var _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lapplive2dmanager__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _lappdefine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lappdefine */ \\\"./src/lappdefine.ts\\\");\\n/* harmony import */ var _lappdefine__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_lappdefine__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \\\"react\\\");\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\\n/* harmony import */ var _asset_index_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./asset/index.css */ \\\"./src/asset/index.css\\\");\\n/* harmony import */ var _asset_index_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_asset_index_css__WEBPACK_IMPORTED_MODULE_4__);\\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\\n\\nfunction _nonIterableRest() { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\"); }\\n\\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \\\"string\\\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \\\"Object\\\" && o.constructor) n = o.constructor.name; if (n === \\\"Map\\\" || n === \\\"Set\\\") return Array.from(o); if (n === \\\"Arguments\\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\\n\\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\\n\\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \\\"undefined\\\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"] != null) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\n\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\n\\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\\n\\n\\n\\n\\n\\n\\n\\nfunction ReactLive2d(props) {\\n  // 好看颜色列表\\n  // green: '#B4DEAE',\\n  // DeepBlue: '#5B8DBE',\\n  // LightBlue: '#C8E6FE',\\n  // pink: '#F9B8BE'\\n  // 容器样式\\n  var containerStyle = {\\n    position: 'relative',\\n    top: 'props.top' ? props.top : '',\\n    right: props.right ? props.right : '0',\\n    bottom: props.bottom ? props.bottom : '0',\\n    left: props.left ? props.left : ''\\n  }; // canvas样式\\n\\n  var canvasStyle = {\\n    position: 'relative',\\n    top: props.top ? props.top : '',\\n    right: props.right ? props.right : '0',\\n    bottom: props.bottom ? props.bottom : '0',\\n    left: props.left ? props.left : ''\\n  }; // 对话框样式\\n\\n  var printStyle = _defineProperty({\\n    position: 'absolute',\\n    width: props.width > 300 ? props.width / 2 : '150px',\\n    left: props.width > 300 ? (props.width - props.width / 2) / 2 + 'px' : (props.width - 150) / 2 + 'px',\\n    top: '0',\\n    minHeight: '20px',\\n    display: 'block',\\n    borderRadius: '5px',\\n    border: '1px dashed #ccc',\\n    padding: '5px',\\n    background: props.color ? props.color : '#C8E6FE'\\n  }, \\\"display\\\", 'none'); // 面板主题样式\\n\\n\\n  var Theme = {\\n    color: props.color ? props.color : '#C8E6FE',\\n    width: '30px',\\n    height: '30px'\\n  };\\n  var timer = null;\\n\\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\\\"useState\\\"])(false),\\n      _useState2 = _slicedToArray(_useState, 2),\\n      controllerOn = _useState2[0],\\n      setControllerOn = _useState2[1];\\n\\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\\\"useState\\\"])(false),\\n      _useState4 = _slicedToArray(_useState3, 2),\\n      controllerIn = _useState4[0],\\n      setControllerIn = _useState4[1];\\n\\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\\\"useState\\\"])(false),\\n      _useState6 = _slicedToArray(_useState5, 2),\\n      printMenu = _useState6[0],\\n      setPrintMenu = _useState6[1]; // 进入显示控制台\\n\\n\\n  function cvMouseOver() {\\n    setControllerOn(true);\\n  }\\n\\n  function cvMouseOut() {\\n    timer = setTimeout(function () {\\n      // 0.01秒内没有进入点击面板，说明已经鼠标离开\\n      if (!controllerIn) {\\n        setControllerOn(false);\\n        setControllerIn(false);\\n      }\\n    }, 10);\\n  } // 进入选择菜单\\n\\n\\n  function ctMouseOver() {\\n    setControllerIn(true);\\n    clearTimeout(timer);\\n  } // 离开选择菜单\\n\\n\\n  function ctMouseOut() {\\n    setControllerIn(false);\\n  } //切换\\n\\n\\n  function ctTab() {\\n    _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_1__[\\\"LAppLive2DManager\\\"].getInstance().nextScene();\\n  } // 悬停菜单时的对白\\n\\n\\n  function talkPrint(print) {\\n    var printNow = document.getElementById('live2d-print');\\n    printNow.innerHTML = print;\\n    printNow.style.display = 'block';\\n  }\\n\\n  function cancelPrint() {\\n    var printNow = document.getElementById('live2d-print');\\n    printNow.innerHTML = '';\\n    printNow.style.display = 'none';\\n  }\\n\\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\\\"useEffect\\\"])(function () {\\n    console.log('props', props);\\n    props.ModelList ? _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setModelDir(props.ModelList) : _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setModelDir([]);\\n    props.TouchBody ? _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setHitBody(props.TouchBody) : _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setHitBody([]);\\n    props.TouchHead ? _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setHitHead(props.TouchHead) : _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setHitHead([]);\\n    props.TouchDefault ? _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setHitDefault(props.TouchDefault) : _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setHitDefault([]);\\n    props.PathFull ? _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setPathFull(props.PathFull) : _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setPathFull('');\\n\\n    if (!navigator.userAgent.match(/mobile/i) || props.MobileShow == true) {\\n      if (_lappdelegate__WEBPACK_IMPORTED_MODULE_0__[\\\"LAppDelegate\\\"].getInstance().initialize() == false) {\\n        return;\\n      }\\n\\n      _lappdelegate__WEBPACK_IMPORTED_MODULE_0__[\\\"LAppDelegate\\\"].getInstance().run(); // window.onbeforeunload = () => LAppDelegate.releaseInstance();\\n    }\\n  }, []);\\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\\\"useEffect\\\"])(function () {\\n    if (props.release == true) {\\n      _lappdelegate__WEBPACK_IMPORTED_MODULE_0__[\\\"LAppDelegate\\\"].releaseInstance();\\n    }\\n  }, [props.release]);\\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\\\"div\\\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\\\"div\\\", {\\n    style: containerStyle,\\n    width: props.width ? props.width : '300',\\n    height: props.height ? props.height : '500',\\n    id: \\\"live2d-container\\\"\\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\\\"div\\\", {\\n    id: \\\"live2d-hidden\\\",\\n    style: {\\n      width: '100%',\\n      height: '100%',\\n      position: 'absolute',\\n      top: '0',\\n      left: '0',\\n      zIndex: '2'\\n    }\\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\\\"div\\\", {\\n    id: \\\"live2d-print\\\",\\n    style: printStyle\\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\\\"canvas\\\", {\\n    id: \\\"live2d\\\",\\n    style: canvasStyle,\\n    width: props.width ? props.width : '300',\\n    height: props.height ? props.height : '500',\\n    className: \\\"live2d\\\",\\n    onMouseEnter: cvMouseOver,\\n    onMouseLeave: cvMouseOut\\n  }), controllerOn && (!props.menuList || props.menuList.length > 0) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\\\"div\\\", {\\n    className: \\\"live2d-controller\\\",\\n    style: {\\n      position: 'absolute',\\n      top: '20px',\\n      left: '20px'\\n    },\\n    onMouseEnter: ctMouseOver,\\n    onMouseLeave: ctMouseOut\\n  }, (!props.menuList || props.menuList.indexOf('Mtab') > -1) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\\\"div\\\", {\\n    className: \\\"iconfont\\\",\\n    style: Theme,\\n    onClick: ctTab,\\n    onMouseEnter: function onMouseEnter() {\\n      return talkPrint('你想要换一个看板娘吗？看kan');\\n    },\\n    onMouseLeave: cancelPrint\\n  }, \\\"\\\\uE7CA\\\"))));\\n}\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (ReactLive2d);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./src/index.js\\n\");\n\n        /***/\n      },\n\n      /***/\"./src/lappdefine.ts\":\n      /*!***************************!*\\\n        !*** ./src/lappdefine.ts ***!\n        \\***************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../Framework/src/live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nexports.ViewMaxScale = 2.0;\\r\\nexports.ViewMinScale = 0.8;\\r\\nexports.ViewLogicalLeft = -1.0;\\r\\nexports.ViewLogicalRight = 1.0;\\r\\nexports.ViewLogicalMaxLeft = -2.0;\\r\\nexports.ViewLogicalMaxRight = 2.0;\\r\\nexports.ViewLogicalMaxBottom = -2.0;\\r\\nexports.ViewLogicalMaxTop = 2.0;\\r\\nexports.ResourcesPath = './Resources/';\\r\\nexports.BackImageName = 'back_class_normal.png';\\r\\nexports.GearImageName = 'icon_gear.png';\\r\\nexports.PowerImageName = 'CloseNormal.png';\\r\\nexports.ModelDir = ['Hiyori', 'Haru', 'Rice'];\\r\\nexports.MotionGroupDefault = '';\\r\\nexports.MotionGroupIdle = 'Idle';\\r\\nexports.MotionGroupTapBody = 'TapBody';\\r\\nexports.HitAreaNameHead = 'Head';\\r\\nexports.HitAreaNameBody = 'Body';\\r\\nexports.HitBodyList = ['啊呀，你的手在摸哪里嘛~', '哼，坏人'];\\r\\nexports.HitHeadList = ['讨厌~不要掐人家的脸嘛~', '希望明天也能感受到你的触摸呢'];\\r\\nexports.HitDefaultList = ['今天又是开心的一天呢~', '真是元气满满呀'];\\r\\nexports.PriorityNone = 0;\\r\\nexports.PriorityIdle = 1;\\r\\nexports.PriorityNormal = 2;\\r\\nexports.PriorityForce = 3;\\r\\nexports.DebugLogEnable = true;\\r\\nexports.DebugTouchLogEnable = false;\\r\\nexports.CubismLoggingLevel = live2dcubismframework_1.LogLevel.LogLevel_Verbose;\\r\\nexports.RenderTargetWidth = 1900;\\r\\nexports.RenderTargetHeight = 1000;\\r\\nvar lappdefineSet = (function () {\\r\\n    function lappdefineSet() {\\r\\n    }\\r\\n    lappdefineSet.setModelDir = function (modelDir) {\\r\\n        exports.ModelDir = modelDir.length > 0 ? modelDir : exports.ModelDir;\\r\\n    };\\r\\n    lappdefineSet.setHitBody = function (hitBodyList) {\\r\\n        exports.HitBodyList = hitBodyList.length > 0 ? hitBodyList : exports.HitBodyList;\\r\\n    };\\r\\n    lappdefineSet.setHitHead = function (hitHeadList) {\\r\\n        exports.HitHeadList = hitHeadList.length > 0 ? hitHeadList : exports.HitHeadList;\\r\\n    };\\r\\n    lappdefineSet.setHitDefault = function (hitDefaultList) {\\r\\n        exports.HitDefaultList = hitDefaultList.length > 0 ? hitDefaultList : exports.HitDefaultList;\\r\\n    };\\r\\n    lappdefineSet.setPathFull = function (pathfull) {\\r\\n        exports.ResourcesPath = pathfull.length > 0 ? pathfull : exports.ResourcesPath;\\r\\n    };\\r\\n    return lappdefineSet;\\r\\n}());\\r\\nexports.lappdefineSet = lappdefineSet;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGFwcGRlZmluZS50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL3NyYy9sYXBwZGVmaW5lLnRzPzFjM2IiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgTG9nTGV2ZWwgfSBmcm9tICcuLi9GcmFtZXdvcmsvc3JjL2xpdmUyZGN1YmlzbWZyYW1ld29yaydcblxuLyoqXG4gKiBTYW1wbGUgQXBw44Gn5L2/55So44GZ44KL5a6a5pWwXG4gKi9cbi8vIOeUu+mdolxuZXhwb3J0IGNvbnN0IFZpZXdNYXhTY2FsZSA9IDIuMDtcbmV4cG9ydCBjb25zdCBWaWV3TWluU2NhbGUgPSAwLjg7XG5cbmV4cG9ydCBjb25zdCBWaWV3TG9naWNhbExlZnQgPSAtMS4wO1xuZXhwb3J0IGNvbnN0IFZpZXdMb2dpY2FsUmlnaHQgPSAxLjA7XG5cbmV4cG9ydCBjb25zdCBWaWV3TG9naWNhbE1heExlZnQgPSAtMi4wO1xuZXhwb3J0IGNvbnN0IFZpZXdMb2dpY2FsTWF4UmlnaHQgPSAyLjA7XG5leHBvcnQgY29uc3QgVmlld0xvZ2ljYWxNYXhCb3R0b20gPSAtMi4wO1xuZXhwb3J0IGNvbnN0IFZpZXdMb2dpY2FsTWF4VG9wID0gMi4wO1xuXG4vLyDnm7jlr77jg5HjgrlcbmV4cG9ydCBsZXQgUmVzb3VyY2VzUGF0aCA9ICcuL1Jlc291cmNlcy8nO1xuLy8g57ud5a+56Lev5b6E77yM5o+Q5L6b57uZU1NS57G75Z6L6aG555uuXG4vLyBleHBvcnQgbGV0IFJlc291cmNlc1BhdGhGdWxsID0gJyc7XG5cbi8vIOODouODh+ODq+OBruW+jOOCjeOBq+OBguOCi+iDjOaZr+OBrueUu+WDj+ODleOCoeOCpOODq1xuZXhwb3J0IGNvbnN0IEJhY2tJbWFnZU5hbWUgPSAnYmFja19jbGFzc19ub3JtYWwucG5nJztcblxuLy8g5YiH5o2iXG5leHBvcnQgY29uc3QgR2VhckltYWdlTmFtZSA9ICdpY29uX2dlYXIucG5nJztcblxuLy8g57WC5LqG44Oc44K/44OzXG5leHBvcnQgY29uc3QgUG93ZXJJbWFnZU5hbWUgPSAnQ2xvc2VOb3JtYWwucG5nJztcblxuLy8g44Oi44OH44Or5a6a576pLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyDjg6Ljg4fjg6vjgpLphY3nva7jgZfjgZ/jg4fjgqPjg6zjgq/jg4jjg6rlkI3jga7phY3liJdcbi8vIOODh+OCo+ODrOOCr+ODiOODquWQjeOBqG1vZGVsMy5qc29u44Gu5ZCN5YmN44KS5LiA6Ie044GV44Gb44Gm44GK44GP44GT44GoXG5leHBvcnQgbGV0IE1vZGVsRGlyOiBzdHJpbmdbXSA9IFsnSGl5b3JpJywgJ0hhcnUnLCAnUmljZSddO1xuXG4vLyDlpJbpg6jlrprnvqnjg5XjgqHjgqTjg6vvvIhqc29u77yJ44Go5ZCI44KP44Gb44KLXG5leHBvcnQgY29uc3QgTW90aW9uR3JvdXBEZWZhdWx0ID0gJyc7IC8vIOm7mOiupOeahOWFtuS7luaooeWei1xuZXhwb3J0IGNvbnN0IE1vdGlvbkdyb3VwSWRsZSA9ICdJZGxlJzsgLy8g44Ki44Kk44OJ44Oq44Oz44KwXG5leHBvcnQgY29uc3QgTW90aW9uR3JvdXBUYXBCb2R5ID0gJ1RhcEJvZHknOyAvLyDkvZPjgpLjgr/jg4Pjg5fjgZfjgZ/jgajjgY1cblxuLy8g5aSW6YOo5a6a576p44OV44Kh44Kk44Or77yIanNvbu+8ieOBqOWQiOOCj+OBm+OCi1xuZXhwb3J0IGNvbnN0IEhpdEFyZWFOYW1lSGVhZCA9ICdIZWFkJztcbmV4cG9ydCBjb25zdCBIaXRBcmVhTmFtZUJvZHkgPSAnQm9keSc7XG5cbi8vIOWvueivneWGheWuuVxuZXhwb3J0IGxldCBIaXRCb2R5TGlzdDogc3RyaW5nW10gPSBbJ+WViuWRgO+8jOS9oOeahOaJi+WcqOaRuOWTqumHjOWYm34nLCflk7zvvIzlnY/kuronXTtcbmV4cG9ydCBsZXQgSGl0SGVhZExpc3Q6IHN0cmluZ1tdID0gWyforqjljox+5LiN6KaB5o6Q5Lq65a6255qE6IS45ZibficsJ+W4jOacm+aYjuWkqeS5n+iDveaEn+WPl+WIsOS9oOeahOinpuaRuOWRoiddO1xuZXhwb3J0IGxldCBIaXREZWZhdWx0TGlzdDogc3RyaW5nW10gPSBbJ+S7iuWkqeWPiOaYr+W8gOW/g+eahOS4gOWkqeWRon4nLCfnnJ/mmK/lhYPmsJTmu6Hmu6HlkYAnXTtcblxuLy8g44Oi44O844K344On44Oz44Gu5YSq5YWI5bqm5a6a5pWwXG5leHBvcnQgY29uc3QgUHJpb3JpdHlOb25lID0gMDtcbmV4cG9ydCBjb25zdCBQcmlvcml0eUlkbGUgPSAxO1xuZXhwb3J0IGNvbnN0IFByaW9yaXR5Tm9ybWFsID0gMjtcbmV4cG9ydCBjb25zdCBQcmlvcml0eUZvcmNlID0gMztcblxuLy8g44OH44OQ44OD44Kw55So44Ot44Kw44Gu6KGo56S644Kq44OX44K344On44OzXG5leHBvcnQgY29uc3QgRGVidWdMb2dFbmFibGUgPSB0cnVlO1xuZXhwb3J0IGNvbnN0IERlYnVnVG91Y2hMb2dFbmFibGUgPSBmYWxzZTtcblxuLy8gRnJhbWV3b3Jr44GL44KJ5Ye65Yqb44GZ44KL44Ot44Kw44Gu44Os44OZ44Or6Kit5a6aXG5leHBvcnQgY29uc3QgQ3ViaXNtTG9nZ2luZ0xldmVsOiBMb2dMZXZlbCA9IExvZ0xldmVsLkxvZ0xldmVsX1ZlcmJvc2U7XG5cbi8vIOODh+ODleOCqeODq+ODiOOBruODrOODs+ODgOODvOOCv+ODvOOCsuODg+ODiOOCteOCpOOCulxuZXhwb3J0IGNvbnN0IFJlbmRlclRhcmdldFdpZHRoID0gMTkwMDtcbmV4cG9ydCBjb25zdCBSZW5kZXJUYXJnZXRIZWlnaHQgPSAxMDAwO1xuXG4vLyDlpJbpg6jkvKDlhaXliqjmgIHlj4LmlbBcbmV4cG9ydCBjbGFzcyBsYXBwZGVmaW5lU2V0IHtcbiAgICAvLyDmqKHlnovliJfooahcbiAgICBwdWJsaWMgc3RhdGljIHNldE1vZGVsRGlyKG1vZGVsRGlyOkFycmF5PHN0cmluZz4pOiB2b2lkIHtcbiAgICAgICAgTW9kZWxEaXIgPSBtb2RlbERpci5sZW5ndGg+MCA/IG1vZGVsRGlyIDogTW9kZWxEaXJcbiAgICB9XG4gICAgLy8g6Lqr5L2T54K55Ye76K+t6KiAXG4gICAgcHVibGljIHN0YXRpYyBzZXRIaXRCb2R5KGhpdEJvZHlMaXN0OkFycmF5PHN0cmluZz4pOiB2b2lkIHtcbiAgICAgICAgSGl0Qm9keUxpc3QgPSBoaXRCb2R5TGlzdC5sZW5ndGg+MCA/IGhpdEJvZHlMaXN0IDogSGl0Qm9keUxpc3RcbiAgICB9XG4gICAgLy8g5aS06YOo54K55Ye76K+t6KiAXG4gICAgcHVibGljIHN0YXRpYyBzZXRIaXRIZWFkKGhpdEhlYWRMaXN0OkFycmF5PHN0cmluZz4pOiB2b2lkIHtcbiAgICAgICAgSGl0SGVhZExpc3QgPSBoaXRIZWFkTGlzdC5sZW5ndGg+MCA/IGhpdEhlYWRMaXN0IDogSGl0SGVhZExpc3RcbiAgICB9XG4gICAgLy8g6buY6K6k54K55Ye76K+t6KiAXG4gICAgcHVibGljIHN0YXRpYyBzZXRIaXREZWZhdWx0KGhpdERlZmF1bHRMaXN0OkFycmF5PHN0cmluZz4pOiB2b2lkIHtcbiAgICAgICAgSGl0RGVmYXVsdExpc3QgPSBoaXREZWZhdWx0TGlzdC5sZW5ndGg+MCA/IGhpdERlZmF1bHRMaXN0IDogSGl0RGVmYXVsdExpc3RcbiAgICB9XG4gICAgLy8g5qih5Z6L57ud5a+56Lev5b6EXG4gICAgcHVibGljIHN0YXRpYyBzZXRQYXRoRnVsbChwYXRoZnVsbDpzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgUmVzb3VyY2VzUGF0aCA9IHBhdGhmdWxsLmxlbmd0aD4wID8gcGF0aGZ1bGwgOiBSZXNvdXJjZXNQYXRoXG4gICAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOztBQU9BO0FBTUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBS0E7QUFHQTtBQUdBO0FBS0E7QUFHQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBR0E7QUFHQTtBQUNBO0FBR0E7QUFBQTtBQXFCQTtBQW5CQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBckJBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./src/lappdefine.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./src/lappdelegate.ts\":\n      /*!*****************************!*\\\n        !*** ./src/lappdelegate.ts ***!\n        \\*****************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nvar __importStar = (this && this.__importStar) || function (mod) {\\r\\n    if (mod && mod.__esModule) return mod;\\r\\n    var result = {};\\r\\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\\r\\n    result[\\\"default\\\"] = mod;\\r\\n    return result;\\r\\n};\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../Framework/src/live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar Csm_CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar lappview_1 = __webpack_require__(/*! ./lappview */ \\\"./src/lappview.ts\\\");\\r\\nvar lapppal_1 = __webpack_require__(/*! ./lapppal */ \\\"./src/lapppal.ts\\\");\\r\\nvar lapptexturemanager_1 = __webpack_require__(/*! ./lapptexturemanager */ \\\"./src/lapptexturemanager.ts\\\");\\r\\nvar lapplive2dmanager_1 = __webpack_require__(/*! ./lapplive2dmanager */ \\\"./src/lapplive2dmanager.ts\\\");\\r\\nvar LAppDefine = __importStar(__webpack_require__(/*! ./lappdefine */ \\\"./src/lappdefine.ts\\\"));\\r\\nexports.canvas = null;\\r\\nexports.s_instance = null;\\r\\nexports.gl = null;\\r\\nexports.frameBuffer = null;\\r\\nvar LAppDelegate = (function () {\\r\\n    function LAppDelegate() {\\r\\n        this._captured = false;\\r\\n        this._mouseX = 0.0;\\r\\n        this._mouseY = 0.0;\\r\\n        this._isEnd = false;\\r\\n        this._cubismOption = new live2dcubismframework_1.Option();\\r\\n        this._view = new lappview_1.LAppView();\\r\\n        this._textureManager = new lapptexturemanager_1.LAppTextureManager();\\r\\n    }\\r\\n    LAppDelegate.getInstance = function () {\\r\\n        if (exports.s_instance == null) {\\r\\n            exports.s_instance = new LAppDelegate();\\r\\n        }\\r\\n        return exports.s_instance;\\r\\n    };\\r\\n    LAppDelegate.releaseInstance = function () {\\r\\n        console.log(\\\"释放实例\\\");\\r\\n        if (exports.s_instance != null) {\\r\\n            exports.s_instance.release();\\r\\n        }\\r\\n        exports.s_instance = null;\\r\\n    };\\r\\n    LAppDelegate.prototype.initialize = function () {\\r\\n        exports.canvas = document.getElementById(\\\"live2d\\\");\\r\\n        document.addEventListener(\\\"mousemove\\\", function (e) {\\r\\n            if (!LAppDelegate.getInstance()._view) {\\r\\n                lapppal_1.LAppPal.printMessage(\\\"view notfound\\\");\\r\\n                return;\\r\\n            }\\r\\n            else {\\r\\n            }\\r\\n            if (document.getElementById(\\\"live2d\\\")) {\\r\\n                var rect = document.getElementById(\\\"live2d\\\").getBoundingClientRect();\\r\\n                var posX = e.clientX - rect.left;\\r\\n                var posY = e.clientY - rect.top;\\r\\n                LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\\r\\n            }\\r\\n        }, false);\\r\\n        document.addEventListener(\\\"mouseout\\\", function (e) {\\r\\n            var live2DManager = lapplive2dmanager_1.LAppLive2DManager.getInstance();\\r\\n            live2DManager.onDrag(0.0, 0.0);\\r\\n        }, false);\\r\\n        exports.canvas.addEventListener(\\\"click\\\", function (e) {\\r\\n            if (!LAppDelegate.getInstance()._view) {\\r\\n                lapppal_1.LAppPal.printMessage(\\\"view notfound\\\");\\r\\n                return;\\r\\n            }\\r\\n            var rect = exports.canvas.getBoundingClientRect();\\r\\n            var posX = e.clientX - rect.left;\\r\\n            var posY = e.clientY - rect.top;\\r\\n            LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\\r\\n            LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\\r\\n        }, false);\\r\\n        exports.gl = exports.canvas.getContext('webgl') || exports.canvas.getContext('experimental-webgl');\\r\\n        if (!exports.gl) {\\r\\n            alert('Cannot initialize WebGL. This browser does not support.');\\r\\n            exports.gl = null;\\r\\n            document.body.innerHTML =\\r\\n                'This browser does not support the <code>&lt;canvas&gt;</code> element.';\\r\\n            return false;\\r\\n        }\\r\\n        if (!exports.frameBuffer) {\\r\\n            exports.frameBuffer = exports.gl.getParameter(exports.gl.FRAMEBUFFER_BINDING);\\r\\n        }\\r\\n        exports.gl.enable(exports.gl.BLEND);\\r\\n        exports.gl.blendFunc(exports.gl.SRC_ALPHA, exports.gl.ONE_MINUS_SRC_ALPHA);\\r\\n        var supportTouch = 'ontouchend' in exports.canvas;\\r\\n        if (supportTouch) {\\r\\n            exports.canvas.ontouchstart = onTouchBegan;\\r\\n            exports.canvas.ontouchmove = onTouchMoved;\\r\\n            exports.canvas.ontouchend = onTouchEnded;\\r\\n            exports.canvas.ontouchcancel = onTouchCancel;\\r\\n        }\\r\\n        else {\\r\\n        }\\r\\n        this._view.initialize();\\r\\n        this.initializeCubism();\\r\\n        return true;\\r\\n    };\\r\\n    LAppDelegate.prototype.release = function () {\\r\\n        this._textureManager.release();\\r\\n        this._textureManager = null;\\r\\n        this._view.release();\\r\\n        this._view = null;\\r\\n        lapplive2dmanager_1.LAppLive2DManager.releaseInstance();\\r\\n        Csm_CubismFramework.dispose();\\r\\n    };\\r\\n    LAppDelegate.prototype.run = function () {\\r\\n        var _this = this;\\r\\n        var loop = function () {\\r\\n            if (exports.s_instance == null) {\\r\\n                return;\\r\\n            }\\r\\n            lapppal_1.LAppPal.updateTime();\\r\\n            exports.gl.clearColor(0.0, 0.0, 0.0, 0.0);\\r\\n            exports.gl.enable(exports.gl.DEPTH_TEST);\\r\\n            exports.gl.depthFunc(exports.gl.LEQUAL);\\r\\n            exports.gl.clear(exports.gl.COLOR_BUFFER_BIT | exports.gl.DEPTH_BUFFER_BIT);\\r\\n            exports.gl.clearDepth(1.0);\\r\\n            exports.gl.enable(exports.gl.BLEND);\\r\\n            exports.gl.blendFunc(exports.gl.SRC_ALPHA, exports.gl.ONE_MINUS_SRC_ALPHA);\\r\\n            _this._view.render();\\r\\n            requestAnimationFrame(loop);\\r\\n        };\\r\\n        loop();\\r\\n    };\\r\\n    LAppDelegate.prototype.createShader = function () {\\r\\n        var vertexShaderId = exports.gl.createShader(exports.gl.VERTEX_SHADER);\\r\\n        if (vertexShaderId == null) {\\r\\n            lapppal_1.LAppPal.printMessage('failed to create vertexShader');\\r\\n            return null;\\r\\n        }\\r\\n        var vertexShader = 'precision mediump float;' +\\r\\n            'attribute vec3 position;' +\\r\\n            'attribute vec2 uv;' +\\r\\n            'varying vec2 vuv;' +\\r\\n            'void main(void)' +\\r\\n            '{' +\\r\\n            '   gl_Position = vec4(position, 1.0);' +\\r\\n            '   vuv = uv;' +\\r\\n            '}';\\r\\n        exports.gl.shaderSource(vertexShaderId, vertexShader);\\r\\n        exports.gl.compileShader(vertexShaderId);\\r\\n        var fragmentShaderId = exports.gl.createShader(exports.gl.FRAGMENT_SHADER);\\r\\n        if (fragmentShaderId == null) {\\r\\n            lapppal_1.LAppPal.printMessage('failed to create fragmentShader');\\r\\n            return null;\\r\\n        }\\r\\n        var fragmentShader = 'precision mediump float;' +\\r\\n            'varying vec2 vuv;' +\\r\\n            'uniform sampler2D texture;' +\\r\\n            'void main(void)' +\\r\\n            '{' +\\r\\n            '   gl_FragColor = texture2D(texture, vuv);' +\\r\\n            '}';\\r\\n        exports.gl.shaderSource(fragmentShaderId, fragmentShader);\\r\\n        exports.gl.compileShader(fragmentShaderId);\\r\\n        var programId = exports.gl.createProgram();\\r\\n        exports.gl.attachShader(programId, vertexShaderId);\\r\\n        exports.gl.attachShader(programId, fragmentShaderId);\\r\\n        exports.gl.deleteShader(vertexShaderId);\\r\\n        exports.gl.deleteShader(fragmentShaderId);\\r\\n        exports.gl.linkProgram(programId);\\r\\n        exports.gl.useProgram(programId);\\r\\n        return programId;\\r\\n    };\\r\\n    LAppDelegate.prototype.getView = function () {\\r\\n        return this._view;\\r\\n    };\\r\\n    LAppDelegate.prototype.getTextureManager = function () {\\r\\n        return this._textureManager;\\r\\n    };\\r\\n    LAppDelegate.prototype.initializeCubism = function () {\\r\\n        this._cubismOption.logFunction = lapppal_1.LAppPal.printMessage;\\r\\n        this._cubismOption.loggingLevel = LAppDefine.CubismLoggingLevel;\\r\\n        Csm_CubismFramework.startUp(this._cubismOption);\\r\\n        Csm_CubismFramework.initialize();\\r\\n        lapplive2dmanager_1.LAppLive2DManager.getInstance();\\r\\n        lapppal_1.LAppPal.updateTime();\\r\\n        this._view.initializeSprite();\\r\\n    };\\r\\n    return LAppDelegate;\\r\\n}());\\r\\nexports.LAppDelegate = LAppDelegate;\\r\\nfunction onClickBegan(e) {\\r\\n    if (!LAppDelegate.getInstance()._view) {\\r\\n        lapppal_1.LAppPal.printMessage('view notfound');\\r\\n        return;\\r\\n    }\\r\\n    LAppDelegate.getInstance()._captured = true;\\r\\n    var posX = e.pageX;\\r\\n    var posY = e.pageY;\\r\\n    LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\\r\\n}\\r\\nfunction onMouseMoved(e) {\\r\\n    if (!LAppDelegate.getInstance()._captured) {\\r\\n        return;\\r\\n    }\\r\\n    if (!LAppDelegate.getInstance()._view) {\\r\\n        lapppal_1.LAppPal.printMessage('view notfound');\\r\\n        return;\\r\\n    }\\r\\n    var rect = e.target.getBoundingClientRect();\\r\\n    var posX = e.clientX - rect.left;\\r\\n    var posY = e.clientY - rect.top;\\r\\n    LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\\r\\n}\\r\\nfunction onClickEnded(e) {\\r\\n    LAppDelegate.getInstance()._captured = false;\\r\\n    if (!LAppDelegate.getInstance()._view) {\\r\\n        lapppal_1.LAppPal.printMessage('view notfound');\\r\\n        return;\\r\\n    }\\r\\n    var rect = e.target.getBoundingClientRect();\\r\\n    var posX = e.clientX - rect.left;\\r\\n    var posY = e.clientY - rect.top;\\r\\n    LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\\r\\n}\\r\\nfunction onTouchBegan(e) {\\r\\n    if (!LAppDelegate.getInstance()._view) {\\r\\n        lapppal_1.LAppPal.printMessage('view notfound');\\r\\n        return;\\r\\n    }\\r\\n    LAppDelegate.getInstance()._captured = true;\\r\\n    var posX = e.changedTouches[0].pageX;\\r\\n    var posY = e.changedTouches[0].pageY;\\r\\n    LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\\r\\n}\\r\\nfunction onTouchMoved(e) {\\r\\n    if (!LAppDelegate.getInstance()._captured) {\\r\\n        return;\\r\\n    }\\r\\n    if (!LAppDelegate.getInstance()._view) {\\r\\n        lapppal_1.LAppPal.printMessage('view notfound');\\r\\n        return;\\r\\n    }\\r\\n    var rect = e.target.getBoundingClientRect();\\r\\n    var posX = e.changedTouches[0].clientX - rect.left;\\r\\n    var posY = e.changedTouches[0].clientY - rect.top;\\r\\n    LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\\r\\n}\\r\\nfunction onTouchEnded(e) {\\r\\n    LAppDelegate.getInstance()._captured = false;\\r\\n    if (!LAppDelegate.getInstance()._view) {\\r\\n        lapppal_1.LAppPal.printMessage('view notfound');\\r\\n        return;\\r\\n    }\\r\\n    var rect = e.target.getBoundingClientRect();\\r\\n    var posX = e.changedTouches[0].clientX - rect.left;\\r\\n    var posY = e.changedTouches[0].clientY - rect.top;\\r\\n    LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\\r\\n}\\r\\nfunction onTouchCancel(e) {\\r\\n    LAppDelegate.getInstance()._captured = false;\\r\\n    if (!LAppDelegate.getInstance()._view) {\\r\\n        lapppal_1.LAppPal.printMessage('view notfound');\\r\\n        return;\\r\\n    }\\r\\n    var rect = e.target.getBoundingClientRect();\\r\\n    var posX = e.changedTouches[0].clientX - rect.left;\\r\\n    var posY = e.changedTouches[0].clientY - rect.top;\\r\\n    LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\\r\\n}\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./src/lappdelegate.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./src/lapplive2dmanager.ts\":\n      /*!**********************************!*\\\n        !*** ./src/lapplive2dmanager.ts ***!\n        \\**********************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nvar __importStar = (this && this.__importStar) || function (mod) {\\r\\n    if (mod && mod.__esModule) return mod;\\r\\n    var result = {};\\r\\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\\r\\n    result[\\\"default\\\"] = mod;\\r\\n    return result;\\r\\n};\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmatrix44_1 = __webpack_require__(/*! ../Framework/src/math/cubismmatrix44 */ \\\"./Framework/src/math/cubismmatrix44.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../Framework/src/type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar Csm_csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar Csm_CubismMatrix44 = cubismmatrix44_1.Live2DCubismFramework.CubismMatrix44;\\r\\nvar lappmodel_1 = __webpack_require__(/*! ./lappmodel */ \\\"./src/lappmodel.ts\\\");\\r\\nvar lapppal_1 = __webpack_require__(/*! ./lapppal */ \\\"./src/lapppal.ts\\\");\\r\\nvar lappdelegate_1 = __webpack_require__(/*! ./lappdelegate */ \\\"./src/lappdelegate.ts\\\");\\r\\nvar LAppDefine = __importStar(__webpack_require__(/*! ./lappdefine */ \\\"./src/lappdefine.ts\\\"));\\r\\nexports.s_instance = null;\\r\\nvar timer = null;\\r\\nvar LAppLive2DManager = (function () {\\r\\n    function LAppLive2DManager() {\\r\\n        this._finishedMotion = function (self) {\\r\\n            lapppal_1.LAppPal.printMessage('Motion Finished:');\\r\\n        };\\r\\n        this._viewMatrix = new Csm_CubismMatrix44();\\r\\n        this._models = new Csm_csmVector();\\r\\n        this._sceneIndex = 0;\\r\\n        this.changeScene(this._sceneIndex);\\r\\n    }\\r\\n    LAppLive2DManager.getInstance = function () {\\r\\n        if (exports.s_instance == null) {\\r\\n            exports.s_instance = new LAppLive2DManager();\\r\\n        }\\r\\n        return exports.s_instance;\\r\\n    };\\r\\n    LAppLive2DManager.releaseInstance = function () {\\r\\n        if (exports.s_instance != null) {\\r\\n            exports.s_instance = void 0;\\r\\n        }\\r\\n        exports.s_instance = null;\\r\\n    };\\r\\n    LAppLive2DManager.prototype.getModel = function (no) {\\r\\n        if (no < this._models.getSize()) {\\r\\n            return this._models.at(no);\\r\\n        }\\r\\n        return null;\\r\\n    };\\r\\n    LAppLive2DManager.prototype.releaseAllModel = function () {\\r\\n        for (var i = 0; i < this._models.getSize(); i++) {\\r\\n            this._models.at(i).release();\\r\\n            this._models.set(i, null);\\r\\n        }\\r\\n        this._models.clear();\\r\\n    };\\r\\n    LAppLive2DManager.prototype.onDrag = function (x, y) {\\r\\n        for (var i = 0; i < this._models.getSize(); i++) {\\r\\n            var model = this.getModel(i);\\r\\n            if (model) {\\r\\n                model.setDragging(x, y);\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    LAppLive2DManager.prototype.onTap = function (x, y) {\\r\\n        if (LAppDefine.DebugLogEnable) {\\r\\n            lapppal_1.LAppPal.printMessage(\\\"[APP]tap point: {x: \\\" + x.toFixed(2) + \\\" y: \\\" + y.toFixed(2) + \\\"}\\\");\\r\\n        }\\r\\n        for (var i = 0; i < this._models.getSize(); i++) {\\r\\n            if (this._models.at(i).hitTest(LAppDefine.HitAreaNameHead, x, y)) {\\r\\n                if (LAppDefine.DebugLogEnable) {\\r\\n                    lapppal_1.LAppPal.printMessage(\\\"[APP]hit area: [\\\" + LAppDefine.HitAreaNameHead + \\\"]\\\");\\r\\n                    this.talkPrint(LAppDefine.HitHeadList[Math.floor(Math.random() * LAppDefine.HitHeadList.length)]);\\r\\n                }\\r\\n                this._models.at(i).setRandomExpression();\\r\\n            }\\r\\n            else if (this._models.at(i).hitTest(LAppDefine.HitAreaNameBody, x, y)) {\\r\\n                if (LAppDefine.DebugLogEnable) {\\r\\n                    lapppal_1.LAppPal.printMessage(\\\"[APP]hit area: [\\\" + LAppDefine.HitAreaNameBody + \\\"]\\\");\\r\\n                    this.talkPrint(LAppDefine.HitBodyList[Math.floor(Math.random() * LAppDefine.HitBodyList.length)]);\\r\\n                }\\r\\n                this._models\\r\\n                    .at(i)\\r\\n                    .startRandomMotion(LAppDefine.MotionGroupTapBody, LAppDefine.PriorityNormal, this._finishedMotion);\\r\\n            }\\r\\n            else {\\r\\n                this._models\\r\\n                    .at(i)\\r\\n                    .startRandomMotion(LAppDefine.MotionGroupDefault, LAppDefine.PriorityNormal, this._finishedMotion);\\r\\n                this.talkPrint(LAppDefine.HitDefaultList[Math.floor(Math.random() * LAppDefine.HitDefaultList.length)]);\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    LAppLive2DManager.prototype.talkPrint = function (print) {\\r\\n        clearTimeout(timer);\\r\\n        var printNow = document.getElementById('live2d-print');\\r\\n        printNow.innerHTML = print;\\r\\n        printNow.style.display = 'block';\\r\\n        timer = setTimeout(function () {\\r\\n            printNow.innerHTML = '';\\r\\n            printNow.style.display = 'none';\\r\\n        }, 2000);\\r\\n    };\\r\\n    LAppLive2DManager.prototype.onUpdate = function () {\\r\\n        var projection = new Csm_CubismMatrix44();\\r\\n        var width = lappdelegate_1.canvas.width, height = lappdelegate_1.canvas.height;\\r\\n        projection.scale(1.0, width / height);\\r\\n        if (this._viewMatrix != null) {\\r\\n            projection.multiplyByMatrix(this._viewMatrix);\\r\\n        }\\r\\n        var saveProjection = projection.clone();\\r\\n        var modelCount = this._models.getSize();\\r\\n        for (var i = 0; i < modelCount; ++i) {\\r\\n            var model = this.getModel(i);\\r\\n            projection = saveProjection.clone();\\r\\n            model.update();\\r\\n            model.draw(projection);\\r\\n        }\\r\\n    };\\r\\n    LAppLive2DManager.prototype.nextScene = function () {\\r\\n        var no = (this._sceneIndex + 1) % LAppDefine.ModelDir.length;\\r\\n        this.changeScene(no);\\r\\n    };\\r\\n    LAppLive2DManager.prototype.changeScene = function (index) {\\r\\n        this._sceneIndex = index;\\r\\n        if (LAppDefine.DebugLogEnable) {\\r\\n            lapppal_1.LAppPal.printMessage(\\\"[APP]model index: \\\" + this._sceneIndex);\\r\\n        }\\r\\n        var model = LAppDefine.ModelDir[index];\\r\\n        var modelPath = LAppDefine.ResourcesPath + model + '/';\\r\\n        var modelJsonName = LAppDefine.ModelDir[index];\\r\\n        modelJsonName += '.model3.json';\\r\\n        this.releaseAllModel();\\r\\n        this._models.pushBack(new lappmodel_1.LAppModel());\\r\\n        this._models.at(0).loadAssets(modelPath, modelJsonName);\\r\\n    };\\r\\n    return LAppLive2DManager;\\r\\n}());\\r\\nexports.LAppLive2DManager = LAppLive2DManager;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./src/lapplive2dmanager.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./src/lappmodel.ts\":\n      /*!**************************!*\\\n        !*** ./src/lappmodel.ts ***!\n        \\**************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nvar __importStar = (this && this.__importStar) || function (mod) {\\r\\n    if (mod && mod.__esModule) return mod;\\r\\n    var result = {};\\r\\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\\r\\n    result[\\\"default\\\"] = mod;\\r\\n    return result;\\r\\n};\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../Framework/src/live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar cubismusermodel_1 = __webpack_require__(/*! ../Framework/src/model/cubismusermodel */ \\\"./Framework/src/model/cubismusermodel.ts\\\");\\r\\nvar cubismmodelsettingjson_1 = __webpack_require__(/*! ../Framework/src/cubismmodelsettingjson */ \\\"./Framework/src/cubismmodelsettingjson.ts\\\");\\r\\nvar cubismdefaultparameterid_1 = __webpack_require__(/*! ../Framework/src/cubismdefaultparameterid */ \\\"./Framework/src/cubismdefaultparameterid.ts\\\");\\r\\nvar acubismmotion_1 = __webpack_require__(/*! ../Framework/src/motion/acubismmotion */ \\\"./Framework/src/motion/acubismmotion.ts\\\");\\r\\nvar cubismeyeblink_1 = __webpack_require__(/*! ../Framework/src/effect/cubismeyeblink */ \\\"./Framework/src/effect/cubismeyeblink.ts\\\");\\r\\nvar cubismbreath_1 = __webpack_require__(/*! ../Framework/src/effect/cubismbreath */ \\\"./Framework/src/effect/cubismbreath.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../Framework/src/type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar csmmap_1 = __webpack_require__(/*! ../Framework/src/type/csmmap */ \\\"./Framework/src/type/csmmap.ts\\\");\\r\\nvar cubismmotionqueuemanager_1 = __webpack_require__(/*! ../Framework/src/motion/cubismmotionqueuemanager */ \\\"./Framework/src/motion/cubismmotionqueuemanager.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../Framework/src/utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar InvalidMotionQueueEntryHandleValue = cubismmotionqueuemanager_1.Live2DCubismFramework.InvalidMotionQueueEntryHandleValue;\\r\\nvar csmMap = csmmap_1.Live2DCubismFramework.csmMap;\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismBreath = cubismbreath_1.Live2DCubismFramework.CubismBreath;\\r\\nvar BreathParameterData = cubismbreath_1.Live2DCubismFramework.BreathParameterData;\\r\\nvar CubismEyeBlink = cubismeyeblink_1.Live2DCubismFramework.CubismEyeBlink;\\r\\nvar ACubismMotion = acubismmotion_1.Live2DCubismFramework.ACubismMotion;\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismUserModel = cubismusermodel_1.Live2DCubismFramework.CubismUserModel;\\r\\nvar CubismModelSettingJson = cubismmodelsettingjson_1.Live2DCubismFramework.CubismModelSettingJson;\\r\\nvar CubismDefaultParameterId = cubismdefaultparameterid_1.Live2DCubismFramework;\\r\\nvar lapppal_1 = __webpack_require__(/*! ./lapppal */ \\\"./src/lapppal.ts\\\");\\r\\nvar lappdelegate_1 = __webpack_require__(/*! ./lappdelegate */ \\\"./src/lappdelegate.ts\\\");\\r\\nvar LAppDefine = __importStar(__webpack_require__(/*! ./lappdefine */ \\\"./src/lappdefine.ts\\\"));\\r\\n__webpack_require__(/*! whatwg-fetch */ \\\"./node_modules/whatwg-fetch/fetch.js\\\");\\r\\nvar LoadStep;\\r\\n(function (LoadStep) {\\r\\n    LoadStep[LoadStep[\\\"LoadAssets\\\"] = 0] = \\\"LoadAssets\\\";\\r\\n    LoadStep[LoadStep[\\\"LoadModel\\\"] = 1] = \\\"LoadModel\\\";\\r\\n    LoadStep[LoadStep[\\\"WaitLoadModel\\\"] = 2] = \\\"WaitLoadModel\\\";\\r\\n    LoadStep[LoadStep[\\\"LoadExpression\\\"] = 3] = \\\"LoadExpression\\\";\\r\\n    LoadStep[LoadStep[\\\"WaitLoadExpression\\\"] = 4] = \\\"WaitLoadExpression\\\";\\r\\n    LoadStep[LoadStep[\\\"LoadPhysics\\\"] = 5] = \\\"LoadPhysics\\\";\\r\\n    LoadStep[LoadStep[\\\"WaitLoadPhysics\\\"] = 6] = \\\"WaitLoadPhysics\\\";\\r\\n    LoadStep[LoadStep[\\\"LoadPose\\\"] = 7] = \\\"LoadPose\\\";\\r\\n    LoadStep[LoadStep[\\\"WaitLoadPose\\\"] = 8] = \\\"WaitLoadPose\\\";\\r\\n    LoadStep[LoadStep[\\\"SetupEyeBlink\\\"] = 9] = \\\"SetupEyeBlink\\\";\\r\\n    LoadStep[LoadStep[\\\"SetupBreath\\\"] = 10] = \\\"SetupBreath\\\";\\r\\n    LoadStep[LoadStep[\\\"LoadUserData\\\"] = 11] = \\\"LoadUserData\\\";\\r\\n    LoadStep[LoadStep[\\\"WaitLoadUserData\\\"] = 12] = \\\"WaitLoadUserData\\\";\\r\\n    LoadStep[LoadStep[\\\"SetupEyeBlinkIds\\\"] = 13] = \\\"SetupEyeBlinkIds\\\";\\r\\n    LoadStep[LoadStep[\\\"SetupLipSyncIds\\\"] = 14] = \\\"SetupLipSyncIds\\\";\\r\\n    LoadStep[LoadStep[\\\"SetupLayout\\\"] = 15] = \\\"SetupLayout\\\";\\r\\n    LoadStep[LoadStep[\\\"LoadMotion\\\"] = 16] = \\\"LoadMotion\\\";\\r\\n    LoadStep[LoadStep[\\\"WaitLoadMotion\\\"] = 17] = \\\"WaitLoadMotion\\\";\\r\\n    LoadStep[LoadStep[\\\"CompleteInitialize\\\"] = 18] = \\\"CompleteInitialize\\\";\\r\\n    LoadStep[LoadStep[\\\"CompleteSetupModel\\\"] = 19] = \\\"CompleteSetupModel\\\";\\r\\n    LoadStep[LoadStep[\\\"LoadTexture\\\"] = 20] = \\\"LoadTexture\\\";\\r\\n    LoadStep[LoadStep[\\\"WaitLoadTexture\\\"] = 21] = \\\"WaitLoadTexture\\\";\\r\\n    LoadStep[LoadStep[\\\"CompleteSetup\\\"] = 22] = \\\"CompleteSetup\\\";\\r\\n})(LoadStep || (LoadStep = {}));\\r\\nvar LAppModel = (function (_super) {\\r\\n    __extends(LAppModel, _super);\\r\\n    function LAppModel() {\\r\\n        var _this = _super.call(this) || this;\\r\\n        _this._modelSetting = null;\\r\\n        _this._modelHomeDir = null;\\r\\n        _this._userTimeSeconds = 0.0;\\r\\n        _this._eyeBlinkIds = new csmVector();\\r\\n        _this._lipSyncIds = new csmVector();\\r\\n        _this._motions = new csmMap();\\r\\n        _this._expressions = new csmMap();\\r\\n        _this._hitArea = new csmVector();\\r\\n        _this._userArea = new csmVector();\\r\\n        _this._idParamAngleX = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamAngleX);\\r\\n        _this._idParamAngleY = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamAngleY);\\r\\n        _this._idParamAngleZ = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamAngleZ);\\r\\n        _this._idParamEyeBallX = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamEyeBallX);\\r\\n        _this._idParamEyeBallY = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamEyeBallY);\\r\\n        _this._idParamBodyAngleX = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamBodyAngleX);\\r\\n        _this._state = LoadStep.LoadAssets;\\r\\n        _this._expressionCount = 0;\\r\\n        _this._textureCount = 0;\\r\\n        _this._motionCount = 0;\\r\\n        _this._allMotionCount = 0;\\r\\n        return _this;\\r\\n    }\\r\\n    LAppModel.prototype.loadAssets = function (dir, fileName) {\\r\\n        var _this = this;\\r\\n        console.log('资源路径', dir);\\r\\n        this._modelHomeDir = dir;\\r\\n        fetch(\\\"\\\" + this._modelHomeDir + fileName)\\r\\n            .then(function (response) { return response.arrayBuffer(); })\\r\\n            .then(function (arrayBuffer) {\\r\\n            var setting = new CubismModelSettingJson(arrayBuffer, arrayBuffer.byteLength);\\r\\n            _this._state = LoadStep.LoadModel;\\r\\n            _this.setupModel(setting);\\r\\n        });\\r\\n    };\\r\\n    LAppModel.prototype.setupModel = function (setting) {\\r\\n        var _this = this;\\r\\n        this._updating = true;\\r\\n        this._initialized = false;\\r\\n        this._modelSetting = setting;\\r\\n        if (this._modelSetting.getModelFileName() != '') {\\r\\n            var modelFileName = this._modelSetting.getModelFileName();\\r\\n            fetch(\\\"\\\" + this._modelHomeDir + modelFileName)\\r\\n                .then(function (response) { return response.arrayBuffer(); })\\r\\n                .then(function (arrayBuffer) {\\r\\n                _this.loadModel(arrayBuffer);\\r\\n                _this._state = LoadStep.LoadExpression;\\r\\n                loadCubismExpression();\\r\\n            });\\r\\n            this._state = LoadStep.WaitLoadModel;\\r\\n        }\\r\\n        else {\\r\\n            lapppal_1.LAppPal.printMessage('Model data does not exist.');\\r\\n        }\\r\\n        var loadCubismExpression = function () {\\r\\n            if (_this._modelSetting.getExpressionCount() > 0) {\\r\\n                var count_1 = _this._modelSetting.getExpressionCount();\\r\\n                var _loop_1 = function (i) {\\r\\n                    var expressionName = _this._modelSetting.getExpressionName(i);\\r\\n                    var expressionFileName = _this._modelSetting.getExpressionFileName(i);\\r\\n                    fetch(\\\"\\\" + _this._modelHomeDir + expressionFileName)\\r\\n                        .then(function (response) { return response.arrayBuffer(); })\\r\\n                        .then(function (arrayBuffer) {\\r\\n                        var motion = _this.loadExpression(arrayBuffer, arrayBuffer.byteLength, expressionName);\\r\\n                        if (_this._expressions.getValue(expressionName) != null) {\\r\\n                            ACubismMotion.delete(_this._expressions.getValue(expressionName));\\r\\n                            _this._expressions.setValue(expressionName, null);\\r\\n                        }\\r\\n                        _this._expressions.setValue(expressionName, motion);\\r\\n                        _this._expressionCount++;\\r\\n                        if (_this._expressionCount >= count_1) {\\r\\n                            _this._state = LoadStep.LoadPhysics;\\r\\n                            loadCubismPhysics();\\r\\n                        }\\r\\n                    });\\r\\n                };\\r\\n                for (var i = 0; i < count_1; i++) {\\r\\n                    _loop_1(i);\\r\\n                }\\r\\n                _this._state = LoadStep.WaitLoadExpression;\\r\\n            }\\r\\n            else {\\r\\n                _this._state = LoadStep.LoadPhysics;\\r\\n                loadCubismPhysics();\\r\\n            }\\r\\n        };\\r\\n        var loadCubismPhysics = function () {\\r\\n            if (_this._modelSetting.getPhysicsFileName() != '') {\\r\\n                var physicsFileName = _this._modelSetting.getPhysicsFileName();\\r\\n                fetch(\\\"\\\" + _this._modelHomeDir + physicsFileName)\\r\\n                    .then(function (response) { return response.arrayBuffer(); })\\r\\n                    .then(function (arrayBuffer) {\\r\\n                    _this.loadPhysics(arrayBuffer, arrayBuffer.byteLength);\\r\\n                    _this._state = LoadStep.LoadPose;\\r\\n                    loadCubismPose();\\r\\n                });\\r\\n                _this._state = LoadStep.WaitLoadPhysics;\\r\\n            }\\r\\n            else {\\r\\n                _this._state = LoadStep.LoadPose;\\r\\n                loadCubismPose();\\r\\n            }\\r\\n        };\\r\\n        var loadCubismPose = function () {\\r\\n            if (_this._modelSetting.getPoseFileName() != '') {\\r\\n                var poseFileName = _this._modelSetting.getPoseFileName();\\r\\n                fetch(\\\"\\\" + _this._modelHomeDir + poseFileName)\\r\\n                    .then(function (response) { return response.arrayBuffer(); })\\r\\n                    .then(function (arrayBuffer) {\\r\\n                    _this.loadPose(arrayBuffer, arrayBuffer.byteLength);\\r\\n                    _this._state = LoadStep.SetupEyeBlink;\\r\\n                    setupEyeBlink();\\r\\n                });\\r\\n                _this._state = LoadStep.WaitLoadPose;\\r\\n            }\\r\\n            else {\\r\\n                _this._state = LoadStep.SetupEyeBlink;\\r\\n                setupEyeBlink();\\r\\n            }\\r\\n        };\\r\\n        var setupEyeBlink = function () {\\r\\n            if (_this._modelSetting.getEyeBlinkParameterCount() > 0) {\\r\\n                _this._eyeBlink = CubismEyeBlink.create(_this._modelSetting);\\r\\n                _this._state = LoadStep.SetupBreath;\\r\\n            }\\r\\n            setupBreath();\\r\\n        };\\r\\n        var setupBreath = function () {\\r\\n            _this._breath = CubismBreath.create();\\r\\n            var breathParameters = new csmVector();\\r\\n            breathParameters.pushBack(new BreathParameterData(_this._idParamAngleX, 0.0, 15.0, 6.5345, 0.5));\\r\\n            breathParameters.pushBack(new BreathParameterData(_this._idParamAngleY, 0.0, 8.0, 3.5345, 0.5));\\r\\n            breathParameters.pushBack(new BreathParameterData(_this._idParamAngleZ, 0.0, 10.0, 5.5345, 0.5));\\r\\n            breathParameters.pushBack(new BreathParameterData(_this._idParamBodyAngleX, 0.0, 4.0, 15.5345, 0.5));\\r\\n            breathParameters.pushBack(new BreathParameterData(CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamBreath), 0.0, 0.5, 3.2345, 0.5));\\r\\n            _this._breath.setParameters(breathParameters);\\r\\n            _this._state = LoadStep.LoadUserData;\\r\\n            loadUserData();\\r\\n        };\\r\\n        var loadUserData = function () {\\r\\n            if (_this._modelSetting.getUserDataFile() != '') {\\r\\n                var userDataFile = _this._modelSetting.getUserDataFile();\\r\\n                fetch(\\\"\\\" + _this._modelHomeDir + userDataFile)\\r\\n                    .then(function (response) { return response.arrayBuffer(); })\\r\\n                    .then(function (arrayBuffer) {\\r\\n                    _this.loadUserData(arrayBuffer, arrayBuffer.byteLength);\\r\\n                    _this._state = LoadStep.SetupEyeBlinkIds;\\r\\n                    setupEyeBlinkIds();\\r\\n                });\\r\\n                _this._state = LoadStep.WaitLoadUserData;\\r\\n            }\\r\\n            else {\\r\\n                _this._state = LoadStep.SetupEyeBlinkIds;\\r\\n                setupEyeBlinkIds();\\r\\n            }\\r\\n        };\\r\\n        var setupEyeBlinkIds = function () {\\r\\n            var eyeBlinkIdCount = _this._modelSetting.getEyeBlinkParameterCount();\\r\\n            for (var i = 0; i < eyeBlinkIdCount; ++i) {\\r\\n                _this._eyeBlinkIds.pushBack(_this._modelSetting.getEyeBlinkParameterId(i));\\r\\n            }\\r\\n            _this._state = LoadStep.SetupLipSyncIds;\\r\\n            setupLipSyncIds();\\r\\n        };\\r\\n        var setupLipSyncIds = function () {\\r\\n            var lipSyncIdCount = _this._modelSetting.getLipSyncParameterCount();\\r\\n            for (var i = 0; i < lipSyncIdCount; ++i) {\\r\\n                _this._lipSyncIds.pushBack(_this._modelSetting.getLipSyncParameterId(i));\\r\\n            }\\r\\n            _this._state = LoadStep.SetupLayout;\\r\\n            setupLayout();\\r\\n        };\\r\\n        var setupLayout = function () {\\r\\n            var layout = new csmMap();\\r\\n            _this._modelSetting.getLayoutMap(layout);\\r\\n            _this._modelMatrix.setupFromLayout(layout);\\r\\n            _this._state = LoadStep.LoadMotion;\\r\\n            loadCubismMotion();\\r\\n        };\\r\\n        var loadCubismMotion = function () {\\r\\n            document.getElementById('live2d-hidden').style.display = 'block';\\r\\n            _this._state = LoadStep.WaitLoadMotion;\\r\\n            _this._model.saveParameters();\\r\\n            _this._allMotionCount = 0;\\r\\n            _this._motionCount = 0;\\r\\n            var group = [];\\r\\n            var motionGroupCount = _this._modelSetting.getMotionGroupCount();\\r\\n            for (var i = 0; i < motionGroupCount; i++) {\\r\\n                group[i] = _this._modelSetting.getMotionGroupName(i);\\r\\n                _this._allMotionCount += _this._modelSetting.getMotionCount(group[i]);\\r\\n            }\\r\\n            for (var i = 0; i < motionGroupCount; i++) {\\r\\n                _this.preLoadMotionGroup(group[i]);\\r\\n            }\\r\\n            if (motionGroupCount == 0) {\\r\\n                _this._state = LoadStep.LoadTexture;\\r\\n                _this._motionManager.stopAllMotions();\\r\\n                _this._updating = false;\\r\\n                _this._initialized = true;\\r\\n                _this.createRenderer();\\r\\n                _this.setupTextures();\\r\\n                _this.getRenderer().startUp(lappdelegate_1.gl);\\r\\n            }\\r\\n        };\\r\\n    };\\r\\n    LAppModel.prototype.setupTextures = function () {\\r\\n        var _this = this;\\r\\n        var usePremultiply = true;\\r\\n        if (this._state == LoadStep.LoadTexture) {\\r\\n            var textureCount_1 = this._modelSetting.getTextureCount();\\r\\n            var _loop_2 = function (modelTextureNumber) {\\r\\n                if (this_1._modelSetting.getTextureFileName(modelTextureNumber) == '') {\\r\\n                    return \\\"continue\\\";\\r\\n                }\\r\\n                var texturePath = this_1._modelSetting.getTextureFileName(modelTextureNumber);\\r\\n                texturePath = this_1._modelHomeDir + texturePath;\\r\\n                var onLoad = function (textureInfo) {\\r\\n                    _this.getRenderer().bindTexture(modelTextureNumber, textureInfo.id);\\r\\n                    _this._textureCount++;\\r\\n                    if (_this._textureCount >= textureCount_1) {\\r\\n                        _this._state = LoadStep.CompleteSetup;\\r\\n                    }\\r\\n                };\\r\\n                lappdelegate_1.LAppDelegate.getInstance()\\r\\n                    .getTextureManager()\\r\\n                    .createTextureFromPngFile(texturePath, usePremultiply, onLoad);\\r\\n                this_1.getRenderer().setIsPremultipliedAlpha(usePremultiply);\\r\\n            };\\r\\n            var this_1 = this;\\r\\n            for (var modelTextureNumber = 0; modelTextureNumber < textureCount_1; modelTextureNumber++) {\\r\\n                _loop_2(modelTextureNumber);\\r\\n            }\\r\\n            this._state = LoadStep.WaitLoadTexture;\\r\\n        }\\r\\n    };\\r\\n    LAppModel.prototype.reloadRenderer = function () {\\r\\n        this.deleteRenderer();\\r\\n        this.createRenderer();\\r\\n        this.setupTextures();\\r\\n    };\\r\\n    LAppModel.prototype.update = function () {\\r\\n        if (this._state != LoadStep.CompleteSetup)\\r\\n            return;\\r\\n        var deltaTimeSeconds = lapppal_1.LAppPal.getDeltaTime();\\r\\n        this._userTimeSeconds += deltaTimeSeconds;\\r\\n        this._dragManager.update(deltaTimeSeconds);\\r\\n        this._dragX = this._dragManager.getX();\\r\\n        this._dragY = this._dragManager.getY();\\r\\n        var motionUpdated = false;\\r\\n        this._model.loadParameters();\\r\\n        if (this._motionManager.isFinished()) {\\r\\n            this.startRandomMotion(LAppDefine.MotionGroupIdle, LAppDefine.PriorityIdle);\\r\\n            var lucky = Math.floor(Math.random() * 1000 + 100);\\r\\n            if (lucky == 999) {\\r\\n                this.startRandomMotion(LAppDefine.MotionGroupIdle, LAppDefine.PriorityIdle);\\r\\n            }\\r\\n            else if (lucky == 888) {\\r\\n                this.startRandomMotion(LAppDefine.MotionGroupDefault, LAppDefine.PriorityIdle);\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            motionUpdated = this._motionManager.updateMotion(this._model, deltaTimeSeconds);\\r\\n        }\\r\\n        this._model.saveParameters();\\r\\n        if (!motionUpdated) {\\r\\n            if (this._eyeBlink != null) {\\r\\n                this._eyeBlink.updateParameters(this._model, deltaTimeSeconds);\\r\\n            }\\r\\n        }\\r\\n        if (this._expressionManager != null) {\\r\\n            this._expressionManager.updateMotion(this._model, deltaTimeSeconds);\\r\\n        }\\r\\n        this._model.addParameterValueById(this._idParamAngleX, this._dragX * 30);\\r\\n        this._model.addParameterValueById(this._idParamAngleY, this._dragY * 30);\\r\\n        this._model.addParameterValueById(this._idParamAngleZ, this._dragX * this._dragY * -30);\\r\\n        this._model.addParameterValueById(this._idParamBodyAngleX, this._dragX * 10);\\r\\n        this._model.addParameterValueById(this._idParamEyeBallX, this._dragX);\\r\\n        this._model.addParameterValueById(this._idParamEyeBallY, this._dragY);\\r\\n        if (this._breath != null) {\\r\\n            this._breath.updateParameters(this._model, deltaTimeSeconds);\\r\\n        }\\r\\n        if (this._physics != null) {\\r\\n            this._physics.evaluate(this._model, deltaTimeSeconds);\\r\\n        }\\r\\n        if (this._lipsync) {\\r\\n            var value = 0;\\r\\n            for (var i = 0; i < this._lipSyncIds.getSize(); ++i) {\\r\\n                this._model.addParameterValueById(this._lipSyncIds.at(i), value, 0.8);\\r\\n            }\\r\\n        }\\r\\n        if (this._pose != null) {\\r\\n            this._pose.updateParameters(this._model, deltaTimeSeconds);\\r\\n        }\\r\\n        this._model.update();\\r\\n    };\\r\\n    LAppModel.prototype.startMotion = function (group, no, priority, onFinishedMotionHandler) {\\r\\n        var _this = this;\\r\\n        if (priority == LAppDefine.PriorityForce) {\\r\\n            this._motionManager.setReservePriority(priority);\\r\\n        }\\r\\n        else if (!this._motionManager.reserveMotion(priority)) {\\r\\n            if (this._debugMode) {\\r\\n                lapppal_1.LAppPal.printMessage(\\\"[APP]can't start motion.\\\");\\r\\n            }\\r\\n            return InvalidMotionQueueEntryHandleValue;\\r\\n        }\\r\\n        var motionFileName = this._modelSetting.getMotionFileName(group, no);\\r\\n        var name = group + \\\"_\\\" + no;\\r\\n        var motion = this._motions.getValue(name);\\r\\n        var autoDelete = false;\\r\\n        if (motion == null) {\\r\\n            fetch(\\\"\\\" + this._modelHomeDir + motionFileName)\\r\\n                .then(function (response) { return response.arrayBuffer(); })\\r\\n                .then(function (arrayBuffer) {\\r\\n                motion = _this.loadMotion(arrayBuffer, arrayBuffer.byteLength, null, onFinishedMotionHandler);\\r\\n                var fadeTime = _this._modelSetting.getMotionFadeInTimeValue(group, no);\\r\\n                if (fadeTime >= 0.0) {\\r\\n                    motion.setFadeInTime(fadeTime);\\r\\n                }\\r\\n                fadeTime = _this._modelSetting.getMotionFadeOutTimeValue(group, no);\\r\\n                if (fadeTime >= 0.0) {\\r\\n                    motion.setFadeOutTime(fadeTime);\\r\\n                }\\r\\n                motion.setEffectIds(_this._eyeBlinkIds, _this._lipSyncIds);\\r\\n                autoDelete = true;\\r\\n            });\\r\\n        }\\r\\n        else {\\r\\n            motion.setFinishedMotionHandler(onFinishedMotionHandler);\\r\\n        }\\r\\n        if (this._debugMode) {\\r\\n            lapppal_1.LAppPal.printMessage(\\\"[APP]start motion: [\\\" + group + \\\"_\\\" + no);\\r\\n        }\\r\\n        return this._motionManager.startMotionPriority(motion, autoDelete, priority);\\r\\n    };\\r\\n    LAppModel.prototype.startRandomMotion = function (group, priority, onFinishedMotionHandler) {\\r\\n        if (this._modelSetting.getMotionCount(group) == 0) {\\r\\n            return InvalidMotionQueueEntryHandleValue;\\r\\n        }\\r\\n        var no = Math.floor(Math.random() * this._modelSetting.getMotionCount(group));\\r\\n        return this.startMotion(group, no, priority, onFinishedMotionHandler);\\r\\n    };\\r\\n    LAppModel.prototype.setExpression = function (expressionId) {\\r\\n        var motion = this._expressions.getValue(expressionId);\\r\\n        if (this._debugMode) {\\r\\n            lapppal_1.LAppPal.printMessage(\\\"[APP]expression: [\\\" + expressionId + \\\"]\\\");\\r\\n        }\\r\\n        if (motion != null) {\\r\\n            this._expressionManager.startMotionPriority(motion, false, LAppDefine.PriorityForce);\\r\\n        }\\r\\n        else {\\r\\n            if (this._debugMode) {\\r\\n                lapppal_1.LAppPal.printMessage(\\\"[APP]expression[\\\" + expressionId + \\\"] is null\\\");\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    LAppModel.prototype.setRandomExpression = function () {\\r\\n        if (this._expressions.getSize() == 0) {\\r\\n            return;\\r\\n        }\\r\\n        var no = Math.floor(Math.random() * this._expressions.getSize());\\r\\n        for (var i = 0; i < this._expressions.getSize(); i++) {\\r\\n            if (i == no) {\\r\\n                var name_1 = this._expressions._keyValues[i].first;\\r\\n                this.setExpression(name_1);\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    LAppModel.prototype.motionEventFired = function (eventValue) {\\r\\n        cubismdebug_1.CubismLogInfo('{0} is fired on LAppModel!!', eventValue.s);\\r\\n    };\\r\\n    LAppModel.prototype.hitTest = function (hitArenaName, x, y) {\\r\\n        if (this._opacity < 1) {\\r\\n            return false;\\r\\n        }\\r\\n        var count = this._modelSetting.getHitAreasCount();\\r\\n        for (var i = 0; i < count; i++) {\\r\\n            if (this._modelSetting.getHitAreaName(i) == hitArenaName) {\\r\\n                var drawId = this._modelSetting.getHitAreaId(i);\\r\\n                return this.isHit(drawId, x, y);\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    };\\r\\n    LAppModel.prototype.preLoadMotionGroup = function (group) {\\r\\n        var _this = this;\\r\\n        var _loop_3 = function (i) {\\r\\n            var motionFileName = this_2._modelSetting.getMotionFileName(group, i);\\r\\n            var name_2 = group + \\\"_\\\" + i;\\r\\n            if (this_2._debugMode) {\\r\\n                lapppal_1.LAppPal.printMessage(\\\"[APP]load motion: \\\" + motionFileName + \\\" => [\\\" + name_2 + \\\"]\\\");\\r\\n            }\\r\\n            fetch(\\\"\\\" + this_2._modelHomeDir + motionFileName)\\r\\n                .then(function (response) { return response.arrayBuffer(); })\\r\\n                .then(function (arrayBuffer) {\\r\\n                var tmpMotion = _this.loadMotion(arrayBuffer, arrayBuffer.byteLength, name_2);\\r\\n                var fadeTime = _this._modelSetting.getMotionFadeInTimeValue(group, i);\\r\\n                if (fadeTime >= 0.0) {\\r\\n                    tmpMotion.setFadeInTime(fadeTime);\\r\\n                }\\r\\n                fadeTime = _this._modelSetting.getMotionFadeOutTimeValue(group, i);\\r\\n                if (fadeTime >= 0.0) {\\r\\n                    tmpMotion.setFadeOutTime(fadeTime);\\r\\n                }\\r\\n                tmpMotion.setEffectIds(_this._eyeBlinkIds, _this._lipSyncIds);\\r\\n                if (_this._motions.getValue(name_2) != null) {\\r\\n                    ACubismMotion.delete(_this._motions.getValue(name_2));\\r\\n                }\\r\\n                _this._motions.setValue(name_2, tmpMotion);\\r\\n                _this._motionCount++;\\r\\n                if (_this._motionCount >= _this._allMotionCount) {\\r\\n                    _this._state = LoadStep.LoadTexture;\\r\\n                    document.getElementById('live2d-hidden').style.display = 'none';\\r\\n                    if (_this._motionManager) {\\r\\n                        _this._motionManager.stopAllMotions();\\r\\n                        _this.createRenderer();\\r\\n                        _this.setupTextures();\\r\\n                        _this.getRenderer().startUp(lappdelegate_1.gl);\\r\\n                    }\\r\\n                    _this._updating = false;\\r\\n                    _this._initialized = true;\\r\\n                    document.getElementById('live2d').style.visibility = 'visible';\\r\\n                }\\r\\n            });\\r\\n        };\\r\\n        var this_2 = this;\\r\\n        for (var i = 0; i < this._modelSetting.getMotionCount(group); i++) {\\r\\n            _loop_3(i);\\r\\n        }\\r\\n    };\\r\\n    LAppModel.prototype.releaseMotions = function () {\\r\\n        this._motions.clear();\\r\\n    };\\r\\n    LAppModel.prototype.releaseExpressions = function () {\\r\\n        this._expressions.clear();\\r\\n    };\\r\\n    LAppModel.prototype.doDraw = function () {\\r\\n        if (this._model == null)\\r\\n            return;\\r\\n        var viewport = [0, 0, lappdelegate_1.canvas.width, lappdelegate_1.canvas.height];\\r\\n        this.getRenderer().setRenderState(lappdelegate_1.frameBuffer, viewport);\\r\\n        this.getRenderer().drawModel();\\r\\n    };\\r\\n    LAppModel.prototype.draw = function (matrix) {\\r\\n        if (this._model == null) {\\r\\n            return;\\r\\n        }\\r\\n        if (this._state == LoadStep.CompleteSetup) {\\r\\n            matrix.multiplyByMatrix(this._modelMatrix);\\r\\n            this.getRenderer().setMvpMatrix(matrix);\\r\\n            this.doDraw();\\r\\n        }\\r\\n    };\\r\\n    return LAppModel;\\r\\n}(CubismUserModel));\\r\\nexports.LAppModel = LAppModel;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./src/lappmodel.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./src/lapppal.ts\":\n      /*!************************!*\\\n        !*** ./src/lapppal.ts ***!\n        \\************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar LAppPal = (function () {\\r\\n    function LAppPal() {\\r\\n    }\\r\\n    LAppPal.loadFileAsBytes = function (filePath, callback) {\\r\\n        fetch(filePath)\\r\\n            .then(function (response) { return response.arrayBuffer(); })\\r\\n            .then(function (arrayBuffer) { return callback(arrayBuffer, arrayBuffer.byteLength); });\\r\\n    };\\r\\n    LAppPal.getDeltaTime = function () {\\r\\n        return this.s_deltaTime;\\r\\n    };\\r\\n    LAppPal.updateTime = function () {\\r\\n        this.s_currentFrame = Date.now();\\r\\n        this.s_deltaTime = (this.s_currentFrame - this.s_lastFrame) / 1000;\\r\\n        this.s_lastFrame = this.s_currentFrame;\\r\\n    };\\r\\n    LAppPal.printMessage = function (message) {\\r\\n        console.log(message);\\r\\n    };\\r\\n    LAppPal.lastUpdate = Date.now();\\r\\n    LAppPal.s_currentFrame = 0.0;\\r\\n    LAppPal.s_lastFrame = 0.0;\\r\\n    LAppPal.s_deltaTime = 0.0;\\r\\n    return LAppPal;\\r\\n}());\\r\\nexports.LAppPal = LAppPal;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGFwcHBhbC50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL3NyYy9sYXBwcGFsLnRzP2QzNzAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuLyoqXG4gKiDjg5fjg6njg4Pjg4jjg5Xjgqnjg7zjg6Dkvp3lrZjmqZ/og73jgpLmir3osaHljJbjgZnjgosgQ3ViaXNtIFBsYXRmb3JtIEFic3RyYWN0aW9uIExheWVyLlxuICpcbiAqIOODleOCoeOCpOODq+iqreOBv+i+vOOBv+OChOaZguWIu+WPluW+l+etieOBruODl+ODqeODg+ODiOODleOCqeODvOODoOOBq+S+neWtmOOBmeOCi+mWouaVsOOCkuOBvuOBqOOCgeOCi+OAglxuICovXG5leHBvcnQgY2xhc3MgTEFwcFBhbCB7XG4gIC8qKlxuICAgKiDjg5XjgqHjgqTjg6vjgpLjg5DjgqTjg4jjg4fjg7zjgr/jgajjgZfjgaboqq3jgb/jgZPjgoBcbiAgICpcbiAgICogQHBhcmFtIGZpbGVQYXRoIOiqreOBv+i+vOOBv+WvvuixoeODleOCoeOCpOODq+OBruODkeOCuVxuICAgKiBAcmV0dXJuXG4gICAqIHtcbiAgICogICAgICBidWZmZXIsICAg6Kqt44G/6L6844KT44Gg44OQ44Kk44OI44OH44O844K/XG4gICAqICAgICAgc2l6ZSAgICAgICAg44OV44Kh44Kk44Or44K144Kk44K6XG4gICAqIH1cbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgbG9hZEZpbGVBc0J5dGVzKFxuICAgIGZpbGVQYXRoOiBzdHJpbmcsXG4gICAgY2FsbGJhY2s6IChhcnJheUJ1ZmZlcjogQXJyYXlCdWZmZXIsIHNpemU6IG51bWJlcikgPT4gdm9pZFxuICApOiB2b2lkIHtcbiAgICBmZXRjaChmaWxlUGF0aClcbiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmFycmF5QnVmZmVyKCkpXG4gICAgICAudGhlbihhcnJheUJ1ZmZlciA9PiBjYWxsYmFjayhhcnJheUJ1ZmZlciwgYXJyYXlCdWZmZXIuYnl0ZUxlbmd0aCkpO1xuICB9XG5cbiAgLyoqXG4gICAqIOODh+ODq+OCv+aZgumWk++8iOWJjeWbnuODleODrOODvOODoOOBqOOBruW3ruWIhu+8ieOCkuWPluW+l+OBmeOCi1xuICAgKiBAcmV0dXJuIOODh+ODq+OCv+aZgumWk1ttc11cbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgZ2V0RGVsdGFUaW1lKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuc19kZWx0YVRpbWU7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIHVwZGF0ZVRpbWUoKTogdm9pZCB7XG4gICAgdGhpcy5zX2N1cnJlbnRGcmFtZSA9IERhdGUubm93KCk7XG4gICAgdGhpcy5zX2RlbHRhVGltZSA9ICh0aGlzLnNfY3VycmVudEZyYW1lIC0gdGhpcy5zX2xhc3RGcmFtZSkgLyAxMDAwO1xuICAgIHRoaXMuc19sYXN0RnJhbWUgPSB0aGlzLnNfY3VycmVudEZyYW1lO1xuICB9XG5cbiAgLyoqXG4gICAqIOODoeODg+OCu+ODvOOCuOOCkuWHuuWKm+OBmeOCi1xuICAgKiBAcGFyYW0gbWVzc2FnZSDmloflrZfliJdcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgcHJpbnRNZXNzYWdlKG1lc3NhZ2U6IHN0cmluZyk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UpO1xuICB9XG5cbiAgc3RhdGljIGxhc3RVcGRhdGUgPSBEYXRlLm5vdygpO1xuXG4gIHN0YXRpYyBzX2N1cnJlbnRGcmFtZSA9IDAuMDtcbiAgc3RhdGljIHNfbGFzdEZyYW1lID0gMC4wO1xuICBzdGF0aWMgc19kZWx0YVRpbWUgPSAwLjA7XG59XG4iXSwibWFwcGluZ3MiOiI7O0FBWUE7QUFBQTtBQStDQTtBQXBDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQS9DQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./src/lapppal.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./src/lapptexturemanager.ts\":\n      /*!***********************************!*\\\n        !*** ./src/lapptexturemanager.ts ***!\n        \\***********************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar csmvector_1 = __webpack_require__(/*! ../Framework/src/type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar Csm_csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar lappdelegate_1 = __webpack_require__(/*! ./lappdelegate */ \\\"./src/lappdelegate.ts\\\");\\r\\nvar LAppTextureManager = (function () {\\r\\n    function LAppTextureManager() {\\r\\n        this._textures = new Csm_csmVector();\\r\\n    }\\r\\n    LAppTextureManager.prototype.release = function () {\\r\\n        for (var ite = this._textures.begin(); ite.notEqual(this._textures.end()); ite.preIncrement()) {\\r\\n            lappdelegate_1.gl.deleteTexture(ite.ptr().id);\\r\\n        }\\r\\n        this._textures = null;\\r\\n    };\\r\\n    LAppTextureManager.prototype.createTextureFromPngFile = function (fileName, usePremultiply, callback) {\\r\\n        var _this = this;\\r\\n        var _loop_1 = function (ite) {\\r\\n            if (ite.ptr().fileName == fileName &&\\r\\n                ite.ptr().usePremultply == usePremultiply) {\\r\\n                ite.ptr().img = new Image();\\r\\n                ite.ptr().img.onload = function () { return callback(ite.ptr()); };\\r\\n                ite.ptr().img.src = fileName;\\r\\n                return { value: void 0 };\\r\\n            }\\r\\n        };\\r\\n        for (var ite = this._textures.begin(); ite.notEqual(this._textures.end()); ite.preIncrement()) {\\r\\n            var state_1 = _loop_1(ite);\\r\\n            if (typeof state_1 === \\\"object\\\")\\r\\n                return state_1.value;\\r\\n        }\\r\\n        var img = new Image();\\r\\n        img.onload = function () {\\r\\n            var tex = lappdelegate_1.gl.createTexture();\\r\\n            lappdelegate_1.gl.bindTexture(lappdelegate_1.gl.TEXTURE_2D, tex);\\r\\n            lappdelegate_1.gl.texParameteri(lappdelegate_1.gl.TEXTURE_2D, lappdelegate_1.gl.TEXTURE_MIN_FILTER, lappdelegate_1.gl.LINEAR_MIPMAP_LINEAR);\\r\\n            lappdelegate_1.gl.texParameteri(lappdelegate_1.gl.TEXTURE_2D, lappdelegate_1.gl.TEXTURE_MAG_FILTER, lappdelegate_1.gl.LINEAR);\\r\\n            if (usePremultiply) {\\r\\n                lappdelegate_1.gl.pixelStorei(lappdelegate_1.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\\r\\n            }\\r\\n            lappdelegate_1.gl.texImage2D(lappdelegate_1.gl.TEXTURE_2D, 0, lappdelegate_1.gl.RGBA, lappdelegate_1.gl.RGBA, lappdelegate_1.gl.UNSIGNED_BYTE, img);\\r\\n            lappdelegate_1.gl.generateMipmap(lappdelegate_1.gl.TEXTURE_2D);\\r\\n            lappdelegate_1.gl.bindTexture(lappdelegate_1.gl.TEXTURE_2D, null);\\r\\n            var textureInfo = new TextureInfo();\\r\\n            if (textureInfo != null) {\\r\\n                textureInfo.fileName = fileName;\\r\\n                textureInfo.width = img.width;\\r\\n                textureInfo.height = img.height;\\r\\n                textureInfo.id = tex;\\r\\n                textureInfo.img = img;\\r\\n                textureInfo.usePremultply = usePremultiply;\\r\\n                _this._textures.pushBack(textureInfo);\\r\\n            }\\r\\n            callback(textureInfo);\\r\\n        };\\r\\n        img.src = fileName;\\r\\n        img.crossOrigin = \\\"anonymous\\\";\\r\\n    };\\r\\n    LAppTextureManager.prototype.releaseTextures = function () {\\r\\n        for (var i = 0; i < this._textures.getSize(); i++) {\\r\\n            this._textures.set(i, null);\\r\\n        }\\r\\n        this._textures.clear();\\r\\n    };\\r\\n    LAppTextureManager.prototype.releaseTextureByTexture = function (texture) {\\r\\n        for (var i = 0; i < this._textures.getSize(); i++) {\\r\\n            if (this._textures.at(i).id != texture) {\\r\\n                continue;\\r\\n            }\\r\\n            this._textures.set(i, null);\\r\\n            this._textures.remove(i);\\r\\n            break;\\r\\n        }\\r\\n    };\\r\\n    LAppTextureManager.prototype.releaseTextureByFilePath = function (fileName) {\\r\\n        for (var i = 0; i < this._textures.getSize(); i++) {\\r\\n            if (this._textures.at(i).fileName == fileName) {\\r\\n                this._textures.set(i, null);\\r\\n                this._textures.remove(i);\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    return LAppTextureManager;\\r\\n}());\\r\\nexports.LAppTextureManager = LAppTextureManager;\\r\\nvar TextureInfo = (function () {\\r\\n    function TextureInfo() {\\r\\n        this.id = null;\\r\\n        this.width = 0;\\r\\n        this.height = 0;\\r\\n    }\\r\\n    return TextureInfo;\\r\\n}());\\r\\nexports.TextureInfo = TextureInfo;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGFwcHRleHR1cmVtYW5hZ2VyLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vc3JjL2xhcHB0ZXh0dXJlbWFuYWdlci50cz8yYzBhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjc212ZWN0b3IgfSBmcm9tICcuLi9GcmFtZXdvcmsvc3JjL3R5cGUvY3NtdmVjdG9yJztcbmltcG9ydCBDc21fY3NtVmVjdG9yID0gY3NtdmVjdG9yLmNzbVZlY3RvcjtcbmltcG9ydCBjc21WZWN0b3JfaXRlcmF0b3IgPSBjc212ZWN0b3IuaXRlcmF0b3I7XG5pbXBvcnQgeyBnbCB9IGZyb20gJy4vbGFwcGRlbGVnYXRlJztcblxuLyoqXG4gKiDjg4bjgq/jgrnjg4Hjg6PnrqHnkIbjgq/jg6njgrlcbiAqIOeUu+WDj+iqreOBv+i+vOOBv+OAgeeuoeeQhuOCkuihjOOBhuOCr+ODqeOCueOAglxuICovXG5leHBvcnQgY2xhc3MgTEFwcFRleHR1cmVNYW5hZ2VyIHtcbiAgLyoqXG4gICAqIOOCs+ODs+OCueODiOODqeOCr+OCv1xuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5fdGV4dHVyZXMgPSBuZXcgQ3NtX2NzbVZlY3RvcjxUZXh0dXJlSW5mbz4oKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDop6PmlL7jgZnjgovjgIJcbiAgICovXG4gIHB1YmxpYyByZWxlYXNlKCk6IHZvaWQge1xuICAgIGZvciAoXG4gICAgICBsZXQgaXRlOiBjc21WZWN0b3JfaXRlcmF0b3I8VGV4dHVyZUluZm8+ID0gdGhpcy5fdGV4dHVyZXMuYmVnaW4oKTtcbiAgICAgIGl0ZS5ub3RFcXVhbCh0aGlzLl90ZXh0dXJlcy5lbmQoKSk7XG4gICAgICBpdGUucHJlSW5jcmVtZW50KClcbiAgICApIHtcbiAgICAgIGdsLmRlbGV0ZVRleHR1cmUoaXRlLnB0cigpLmlkKTtcbiAgICB9XG4gICAgdGhpcy5fdGV4dHVyZXMgPSBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqIOWbvuWDj+ivu+WPllxuICAgKlxuICAgKiBAcGFyYW0gZmlsZU5hbWUg6K+75Y+W55qE5Zu+5YOP5paH5Lu26Lev5b6E5ZCN56ewXG4gICAqIEBwYXJhbSB1c2VQcmVtdWx0aXBseSDmmK/lkKblkK/nlKhQcmVtaXVsdOWkhOeQhlxuICAgKiBAcmV0dXJuIOWbvuWDj+S/oeaBr+ivu+WPluWksei0peaXtui/lOWbnm51bGxcbiAgICovXG4gIHB1YmxpYyBjcmVhdGVUZXh0dXJlRnJvbVBuZ0ZpbGUoXG4gICAgZmlsZU5hbWU6IHN0cmluZyxcbiAgICB1c2VQcmVtdWx0aXBseTogYm9vbGVhbixcbiAgICBjYWxsYmFjazogKHRleHR1cmVJbmZvOiBUZXh0dXJlSW5mbykgPT4gdm9pZFxuICApOiB2b2lkIHtcbiAgICAvLyBzZWFyY2ggbG9hZGVkIHRleHR1cmUgYWxyZWFkeVxuICAgIGZvciAoXG4gICAgICBsZXQgaXRlOiBjc21WZWN0b3JfaXRlcmF0b3I8VGV4dHVyZUluZm8+ID0gdGhpcy5fdGV4dHVyZXMuYmVnaW4oKTtcbiAgICAgIGl0ZS5ub3RFcXVhbCh0aGlzLl90ZXh0dXJlcy5lbmQoKSk7XG4gICAgICBpdGUucHJlSW5jcmVtZW50KClcbiAgICApIHtcbiAgICAgIGlmIChcbiAgICAgICAgaXRlLnB0cigpLmZpbGVOYW1lID09IGZpbGVOYW1lICYmXG4gICAgICAgIGl0ZS5wdHIoKS51c2VQcmVtdWx0cGx5ID09IHVzZVByZW11bHRpcGx5XG4gICAgICApIHtcbiAgICAgICAgLy8g56ys5LqM5qyh5Lul5ZCO5L2/55So57yT5a2Y77yI5peg562J5b6F5pe26Ze077yJXG4gICAgICAgIC8vIOWcqFdlYktpdOS4re+8jOimgeWGjeasoeiwg+eUqOebuOWQjEltYWdl55qEb25sb2Fk77yM6ZyA6KaB5YaN5qyh5a6e5L6LXG4gICAgICAgIC8vIOips+e0sO+8mmh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS81MDI0MTgxXG4gICAgICAgIGl0ZS5wdHIoKS5pbWcgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgaXRlLnB0cigpLmltZy5vbmxvYWQgPSAoKTogdm9pZCA9PiBjYWxsYmFjayhpdGUucHRyKCkpO1xuICAgICAgICBpdGUucHRyKCkuaW1nLnNyYyA9IGZpbGVOYW1lO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8g44OH44O844K/44Gu44Kq44Oz44Ot44O844OJ44KS44OI44Oq44Ks44O844Gr44GZ44KLXG4gICAgY29uc3QgaW1nID0gbmV3IEltYWdlKCk7XG4gICAgaW1nLm9ubG9hZCA9ICgpOiB2b2lkID0+IHtcbiAgICAgIC8vIOODhuOCr+OCueODgeODo+OCquODluOCuOOCp+OCr+ODiOOBruS9nOaIkFxuICAgICAgY29uc3QgdGV4OiBXZWJHTFRleHR1cmUgPSBnbC5jcmVhdGVUZXh0dXJlKCk7XG5cbiAgICAgIC8vIOODhuOCr+OCueODgeODo+OCkumBuOaKnlxuICAgICAgZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCwgdGV4KTtcblxuICAgICAgLy8g44OG44Kv44K544OB44Oj44Gr44OU44Kv44K744Or44KS5pu444GN6L6844KAXG4gICAgICBnbC50ZXhQYXJhbWV0ZXJpKFxuICAgICAgICBnbC5URVhUVVJFXzJELFxuICAgICAgICBnbC5URVhUVVJFX01JTl9GSUxURVIsXG4gICAgICAgIGdsLkxJTkVBUl9NSVBNQVBfTElORUFSXG4gICAgICApO1xuICAgICAgZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELCBnbC5URVhUVVJFX01BR19GSUxURVIsIGdsLkxJTkVBUik7XG5cbiAgICAgIC8vIFByZW11bHTlh6bnkIbjgpLooYzjgo/jgZvjgotcbiAgICAgIGlmICh1c2VQcmVtdWx0aXBseSkge1xuICAgICAgICBnbC5waXhlbFN0b3JlaShnbC5VTlBBQ0tfUFJFTVVMVElQTFlfQUxQSEFfV0VCR0wsIDEpO1xuICAgICAgfVxuXG4gICAgICAvLyDjg4bjgq/jgrnjg4Hjg6Pjgavjg5Tjgq/jgrvjg6vjgpLmm7jjgY3ovrzjgoBcbiAgICAgIGdsLnRleEltYWdlMkQoZ2wuVEVYVFVSRV8yRCwgMCwgZ2wuUkdCQSwgZ2wuUkdCQSwgZ2wuVU5TSUdORURfQllURSwgaW1nKTtcblxuICAgICAgLy8g44Of44OD44OX44Oe44OD44OX44KS55Sf5oiQXG4gICAgICBnbC5nZW5lcmF0ZU1pcG1hcChnbC5URVhUVVJFXzJEKTtcblxuICAgICAgLy8g44OG44Kv44K544OB44Oj44KS44OQ44Kk44Oz44OJXG4gICAgICBnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELCBudWxsKTtcblxuICAgICAgY29uc3QgdGV4dHVyZUluZm86IFRleHR1cmVJbmZvID0gbmV3IFRleHR1cmVJbmZvKCk7XG4gICAgICBpZiAodGV4dHVyZUluZm8gIT0gbnVsbCkge1xuICAgICAgICB0ZXh0dXJlSW5mby5maWxlTmFtZSA9IGZpbGVOYW1lO1xuICAgICAgICB0ZXh0dXJlSW5mby53aWR0aCA9IGltZy53aWR0aDtcbiAgICAgICAgdGV4dHVyZUluZm8uaGVpZ2h0ID0gaW1nLmhlaWdodDtcbiAgICAgICAgdGV4dHVyZUluZm8uaWQgPSB0ZXg7XG4gICAgICAgIHRleHR1cmVJbmZvLmltZyA9IGltZztcbiAgICAgICAgdGV4dHVyZUluZm8udXNlUHJlbXVsdHBseSA9IHVzZVByZW11bHRpcGx5O1xuICAgICAgICB0aGlzLl90ZXh0dXJlcy5wdXNoQmFjayh0ZXh0dXJlSW5mbyk7XG4gICAgICB9XG5cbiAgICAgIGNhbGxiYWNrKHRleHR1cmVJbmZvKTtcbiAgICB9O1xuICAgIGltZy5zcmMgPSBmaWxlTmFtZTtcbiAgICAvLyAg5re75Yqg5YWB6K645Zu+54mH6LWE5rqQ6Leo5Z+f6K+35rGCXG4gICAgaW1nLmNyb3NzT3JpZ2luID0gXCJhbm9ueW1vdXNcIjtcbiAgfVxuXG4gIC8qKlxuICAgKiDnlLvlg4/jga7op6PmlL5cbiAgICpcbiAgICog6YWN5YiX44Gr5a2Y5Zyo44GZ44KL55S75YOP5YWo44Gm44KS6Kej5pS+44GZ44KL44CCXG4gICAqL1xuICBwdWJsaWMgcmVsZWFzZVRleHR1cmVzKCk6IHZvaWQge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fdGV4dHVyZXMuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgIHRoaXMuX3RleHR1cmVzLnNldChpLCBudWxsKTtcbiAgICB9XG5cbiAgICB0aGlzLl90ZXh0dXJlcy5jbGVhcigpO1xuICB9XG5cbiAgLyoqXG4gICAqIOeUu+WDj+OBruino+aUvlxuICAgKlxuICAgKiDmjIflrprjgZfjgZ/jg4bjgq/jgrnjg4Hjg6Pjga7nlLvlg4/jgpLop6PmlL7jgZnjgovjgIJcbiAgICogQHBhcmFtIHRleHR1cmUg6Kej5pS+44GZ44KL44OG44Kv44K544OB44OjXG4gICAqL1xuICBwdWJsaWMgcmVsZWFzZVRleHR1cmVCeVRleHR1cmUodGV4dHVyZTogV2ViR0xUZXh0dXJlKTogdm9pZCB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl90ZXh0dXJlcy5nZXRTaXplKCk7IGkrKykge1xuICAgICAgaWYgKHRoaXMuX3RleHR1cmVzLmF0KGkpLmlkICE9IHRleHR1cmUpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX3RleHR1cmVzLnNldChpLCBudWxsKTtcbiAgICAgIHRoaXMuX3RleHR1cmVzLnJlbW92ZShpKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDnlLvlg4/jga7op6PmlL5cbiAgICpcbiAgICog5oyH5a6a44GX44Gf5ZCN5YmN44Gu55S75YOP44KS6Kej5pS+44GZ44KL44CCXG4gICAqIEBwYXJhbSBmaWxlTmFtZSDop6PmlL7jgZnjgovnlLvlg4/jg5XjgqHjgqTjg6vjg5HjgrnlkI1cbiAgICovXG4gIHB1YmxpYyByZWxlYXNlVGV4dHVyZUJ5RmlsZVBhdGgoZmlsZU5hbWU6IHN0cmluZyk6IHZvaWQge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fdGV4dHVyZXMuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgIGlmICh0aGlzLl90ZXh0dXJlcy5hdChpKS5maWxlTmFtZSA9PSBmaWxlTmFtZSkge1xuICAgICAgICB0aGlzLl90ZXh0dXJlcy5zZXQoaSwgbnVsbCk7XG4gICAgICAgIHRoaXMuX3RleHR1cmVzLnJlbW92ZShpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgX3RleHR1cmVzOiBDc21fY3NtVmVjdG9yPFRleHR1cmVJbmZvPjtcbn1cblxuLyoqXG4gKiDnlLvlg4/mg4XloLHmp4vpgKDkvZNcbiAqL1xuZXhwb3J0IGNsYXNzIFRleHR1cmVJbmZvIHtcbiAgaW1nOiBIVE1MSW1hZ2VFbGVtZW50OyAvLyDnlLvlg49cbiAgaWQ6IFdlYkdMVGV4dHVyZSA9IG51bGw7IC8vIOODhuOCr+OCueODgeODo1xuICB3aWR0aCA9IDA7IC8vIOaoquW5hVxuICBoZWlnaHQgPSAwOyAvLyDpq5jjgZVcbiAgdXNlUHJlbXVsdHBseTogYm9vbGVhbjsgLy8gUHJlbXVsdOWHpueQhuOCkuacieWKueOBq+OBmeOCi+OBi1xuICBmaWxlTmFtZTogc3RyaW5nOyAvLyDjg5XjgqHjgqTjg6vlkI1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFPQTtBQUNBO0FBRUE7QUFNQTtBQUlBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQVNBO0FBQUE7QUFPQTtBQUlBO0FBRUE7QUFLQTtBQUNBO0FBQ0E7O0FBRUE7O0FBaEJBO0FBQ0E7OztBQWdCQTtBQUdBO0FBQ0E7QUFFQTtBQUdBO0FBR0E7QUFLQTtBQUdBO0FBQ0E7QUFDQTtBQUdBO0FBR0E7QUFHQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFBQTtBQXZKQTtBQTRKQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBR0E7QUFBQTtBQUFBO0FBUEE7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./src/lapptexturemanager.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./src/lappview.ts\":\n      /*!*************************!*\\\n        !*** ./src/lappview.ts ***!\n        \\*************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nvar __importStar = (this && this.__importStar) || function (mod) {\\r\\n    if (mod && mod.__esModule) return mod;\\r\\n    var result = {};\\r\\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\\r\\n    result[\\\"default\\\"] = mod;\\r\\n    return result;\\r\\n};\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmatrix44_1 = __webpack_require__(/*! ../Framework/src/math/cubismmatrix44 */ \\\"./Framework/src/math/cubismmatrix44.ts\\\");\\r\\nvar cubismviewmatrix_1 = __webpack_require__(/*! ../Framework/src/math/cubismviewmatrix */ \\\"./Framework/src/math/cubismviewmatrix.ts\\\");\\r\\nvar Csm_CubismViewMatrix = cubismviewmatrix_1.Live2DCubismFramework.CubismViewMatrix;\\r\\nvar Csm_CubismMatrix44 = cubismmatrix44_1.Live2DCubismFramework.CubismMatrix44;\\r\\nvar touchmanager_1 = __webpack_require__(/*! ./touchmanager */ \\\"./src/touchmanager.ts\\\");\\r\\nvar lapplive2dmanager_1 = __webpack_require__(/*! ./lapplive2dmanager */ \\\"./src/lapplive2dmanager.ts\\\");\\r\\nvar lappdelegate_1 = __webpack_require__(/*! ./lappdelegate */ \\\"./src/lappdelegate.ts\\\");\\r\\nvar lapppal_1 = __webpack_require__(/*! ./lapppal */ \\\"./src/lapppal.ts\\\");\\r\\nvar LAppDefine = __importStar(__webpack_require__(/*! ./lappdefine */ \\\"./src/lappdefine.ts\\\"));\\r\\nvar LAppView = (function () {\\r\\n    function LAppView() {\\r\\n        this._programId = null;\\r\\n        this._back = null;\\r\\n        this._gear = null;\\r\\n        this._touchManager = new touchmanager_1.TouchManager();\\r\\n        this._deviceToScreen = new Csm_CubismMatrix44();\\r\\n        this._viewMatrix = new Csm_CubismViewMatrix();\\r\\n    }\\r\\n    LAppView.prototype.initialize = function () {\\r\\n        var width = lappdelegate_1.canvas.width, height = lappdelegate_1.canvas.height;\\r\\n        var ratio = height / width;\\r\\n        var left = LAppDefine.ViewLogicalLeft;\\r\\n        var right = LAppDefine.ViewLogicalRight;\\r\\n        var bottom = -ratio;\\r\\n        var top = ratio;\\r\\n        this._viewMatrix.setScreenRect(left, right, bottom, top);\\r\\n        var screenW = Math.abs(left - right);\\r\\n        this._deviceToScreen.scaleRelative(screenW / width, -screenW / width);\\r\\n        this._deviceToScreen.translateRelative(-width * 0.5, -height * 0.5);\\r\\n        this._viewMatrix.setMaxScale(LAppDefine.ViewMaxScale);\\r\\n        this._viewMatrix.setMinScale(LAppDefine.ViewMinScale);\\r\\n        this._viewMatrix.setMaxScreenRect(LAppDefine.ViewLogicalMaxLeft, LAppDefine.ViewLogicalMaxRight, LAppDefine.ViewLogicalMaxBottom, LAppDefine.ViewLogicalMaxTop);\\r\\n    };\\r\\n    LAppView.prototype.release = function () {\\r\\n        this._viewMatrix = null;\\r\\n        this._touchManager = null;\\r\\n        this._deviceToScreen = null;\\r\\n        if (this._gear) {\\r\\n            this._gear.release();\\r\\n        }\\r\\n        this._gear = null;\\r\\n        if (this._back) {\\r\\n            this._back.release();\\r\\n        }\\r\\n        this._back = null;\\r\\n        lappdelegate_1.gl.deleteProgram(this._programId);\\r\\n        this._programId = null;\\r\\n    };\\r\\n    LAppView.prototype.render = function () {\\r\\n        lappdelegate_1.gl.useProgram(this._programId);\\r\\n        if (this._back) {\\r\\n            this._back.render(this._programId);\\r\\n        }\\r\\n        if (this._gear) {\\r\\n            this._gear.render(this._programId);\\r\\n        }\\r\\n        lappdelegate_1.gl.flush();\\r\\n        var live2DManager = lapplive2dmanager_1.LAppLive2DManager.getInstance();\\r\\n        live2DManager.onUpdate();\\r\\n    };\\r\\n    LAppView.prototype.initializeSprite = function () {\\r\\n        var width = lappdelegate_1.canvas.width;\\r\\n        var height = lappdelegate_1.canvas.height;\\r\\n        var textureManager = lappdelegate_1.LAppDelegate.getInstance().getTextureManager();\\r\\n        var resourcesPath = LAppDefine.ResourcesPath;\\r\\n        var imageName = '';\\r\\n    };\\r\\n    LAppView.prototype.onTouchesBegan = function (pointX, pointY) {\\r\\n        this._touchManager.touchesBegan(pointX, pointY);\\r\\n    };\\r\\n    LAppView.prototype.onTouchesMoved = function (pointX, pointY) {\\r\\n        var viewX = this.transformViewX(this._touchManager.getX());\\r\\n        var viewY = this.transformViewY(this._touchManager.getY());\\r\\n        this._touchManager.touchesMoved(pointX, pointY);\\r\\n        var live2DManager = lapplive2dmanager_1.LAppLive2DManager.getInstance();\\r\\n        live2DManager.onDrag(viewX, viewY);\\r\\n    };\\r\\n    LAppView.prototype.onTouchesEnded = function (pointX, pointY) {\\r\\n        var live2DManager = lapplive2dmanager_1.LAppLive2DManager.getInstance();\\r\\n        live2DManager.onDrag(0.0, 0.0);\\r\\n        {\\r\\n            var x = this._deviceToScreen.transformX(this._touchManager.getX());\\r\\n            var y = this._deviceToScreen.transformY(this._touchManager.getY());\\r\\n            if (LAppDefine.DebugTouchLogEnable) {\\r\\n                lapppal_1.LAppPal.printMessage(\\\"[APP]touchesEnded x: \\\" + x + \\\" y: \\\" + y);\\r\\n            }\\r\\n            live2DManager.onTap(x, y);\\r\\n        }\\r\\n    };\\r\\n    LAppView.prototype.transformViewX = function (deviceX) {\\r\\n        var screenX = this._deviceToScreen.transformX(deviceX);\\r\\n        return this._viewMatrix.invertTransformX(screenX);\\r\\n    };\\r\\n    LAppView.prototype.transformViewY = function (deviceY) {\\r\\n        var screenY = this._deviceToScreen.transformY(deviceY);\\r\\n        return this._viewMatrix.invertTransformY(screenY);\\r\\n    };\\r\\n    LAppView.prototype.transformScreenX = function (deviceX) {\\r\\n        return this._deviceToScreen.transformX(deviceX);\\r\\n    };\\r\\n    LAppView.prototype.transformScreenY = function (deviceY) {\\r\\n        return this._deviceToScreen.transformY(deviceY);\\r\\n    };\\r\\n    return LAppView;\\r\\n}());\\r\\nexports.LAppView = LAppView;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./src/lappview.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"./src/touchmanager.ts\":\n      /*!*****************************!*\\\n        !*** ./src/touchmanager.ts ***!\n        \\*****************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar TouchManager = (function () {\\r\\n    function TouchManager() {\\r\\n        this._startX = 0.0;\\r\\n        this._startY = 0.0;\\r\\n        this._lastX = 0.0;\\r\\n        this._lastY = 0.0;\\r\\n        this._lastX1 = 0.0;\\r\\n        this._lastY1 = 0.0;\\r\\n        this._lastX2 = 0.0;\\r\\n        this._lastY2 = 0.0;\\r\\n        this._lastTouchDistance = 0.0;\\r\\n        this._deltaX = 0.0;\\r\\n        this._deltaY = 0.0;\\r\\n        this._scale = 1.0;\\r\\n        this._touchSingle = false;\\r\\n        this._flipAvailable = false;\\r\\n    }\\r\\n    TouchManager.prototype.getCenterX = function () {\\r\\n        return this._lastX;\\r\\n    };\\r\\n    TouchManager.prototype.getCenterY = function () {\\r\\n        return this._lastY;\\r\\n    };\\r\\n    TouchManager.prototype.getDeltaX = function () {\\r\\n        return this._deltaX;\\r\\n    };\\r\\n    TouchManager.prototype.getDeltaY = function () {\\r\\n        return this._deltaY;\\r\\n    };\\r\\n    TouchManager.prototype.getStartX = function () {\\r\\n        return this._startX;\\r\\n    };\\r\\n    TouchManager.prototype.getStartY = function () {\\r\\n        return this._startY;\\r\\n    };\\r\\n    TouchManager.prototype.getScale = function () {\\r\\n        return this._scale;\\r\\n    };\\r\\n    TouchManager.prototype.getX = function () {\\r\\n        return this._lastX;\\r\\n    };\\r\\n    TouchManager.prototype.getY = function () {\\r\\n        return this._lastY;\\r\\n    };\\r\\n    TouchManager.prototype.getX1 = function () {\\r\\n        return this._lastX1;\\r\\n    };\\r\\n    TouchManager.prototype.getY1 = function () {\\r\\n        return this._lastY1;\\r\\n    };\\r\\n    TouchManager.prototype.getX2 = function () {\\r\\n        return this._lastX2;\\r\\n    };\\r\\n    TouchManager.prototype.getY2 = function () {\\r\\n        return this._lastY2;\\r\\n    };\\r\\n    TouchManager.prototype.isSingleTouch = function () {\\r\\n        return this._touchSingle;\\r\\n    };\\r\\n    TouchManager.prototype.isFlickAvailable = function () {\\r\\n        return this._flipAvailable;\\r\\n    };\\r\\n    TouchManager.prototype.disableFlick = function () {\\r\\n        this._flipAvailable = false;\\r\\n    };\\r\\n    TouchManager.prototype.touchesBegan = function (deviceX, deviceY) {\\r\\n        this._lastX = deviceX;\\r\\n        this._lastY = deviceY;\\r\\n        this._startX = deviceX;\\r\\n        this._startY = deviceY;\\r\\n        this._lastTouchDistance = -1.0;\\r\\n        this._flipAvailable = true;\\r\\n        this._touchSingle = true;\\r\\n    };\\r\\n    TouchManager.prototype.touchesMoved = function (deviceX, deviceY) {\\r\\n        this._lastX = deviceX;\\r\\n        this._lastY = deviceY;\\r\\n        this._lastTouchDistance = -1.0;\\r\\n        this._touchSingle = true;\\r\\n    };\\r\\n    TouchManager.prototype.getFlickDistance = function () {\\r\\n        return this.calculateDistance(this._startX, this._startY, this._lastX, this._lastY);\\r\\n    };\\r\\n    TouchManager.prototype.calculateDistance = function (x1, y1, x2, y2) {\\r\\n        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\\r\\n    };\\r\\n    TouchManager.prototype.calculateMovingAmount = function (v1, v2) {\\r\\n        if (v1 > 0.0 != v2 > 0.0) {\\r\\n            return 0.0;\\r\\n        }\\r\\n        var sign = v1 > 0.0 ? 1.0 : -1.0;\\r\\n        var absoluteValue1 = Math.abs(v1);\\r\\n        var absoluteValue2 = Math.abs(v2);\\r\\n        return (sign * (absoluteValue1 < absoluteValue2 ? absoluteValue1 : absoluteValue2));\\r\\n    };\\r\\n    return TouchManager;\\r\\n}());\\r\\nexports.TouchManager = TouchManager;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdG91Y2htYW5hZ2VyLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vc3JjL3RvdWNobWFuYWdlci50cz9hMmVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmV4cG9ydCBjbGFzcyBUb3VjaE1hbmFnZXIge1xuICAvKipcbiAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAqL1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLl9zdGFydFggPSAwLjA7XG4gICAgdGhpcy5fc3RhcnRZID0gMC4wO1xuICAgIHRoaXMuX2xhc3RYID0gMC4wO1xuICAgIHRoaXMuX2xhc3RZID0gMC4wO1xuICAgIHRoaXMuX2xhc3RYMSA9IDAuMDtcbiAgICB0aGlzLl9sYXN0WTEgPSAwLjA7XG4gICAgdGhpcy5fbGFzdFgyID0gMC4wO1xuICAgIHRoaXMuX2xhc3RZMiA9IDAuMDtcbiAgICB0aGlzLl9sYXN0VG91Y2hEaXN0YW5jZSA9IDAuMDtcbiAgICB0aGlzLl9kZWx0YVggPSAwLjA7XG4gICAgdGhpcy5fZGVsdGFZID0gMC4wO1xuICAgIHRoaXMuX3NjYWxlID0gMS4wO1xuICAgIHRoaXMuX3RvdWNoU2luZ2xlID0gZmFsc2U7XG4gICAgdGhpcy5fZmxpcEF2YWlsYWJsZSA9IGZhbHNlO1xuICB9XG5cbiAgcHVibGljIGdldENlbnRlclgoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fbGFzdFg7XG4gIH1cblxuICBwdWJsaWMgZ2V0Q2VudGVyWSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9sYXN0WTtcbiAgfVxuXG4gIHB1YmxpYyBnZXREZWx0YVgoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fZGVsdGFYO1xuICB9XG5cbiAgcHVibGljIGdldERlbHRhWSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9kZWx0YVk7XG4gIH1cblxuICBwdWJsaWMgZ2V0U3RhcnRYKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX3N0YXJ0WDtcbiAgfVxuXG4gIHB1YmxpYyBnZXRTdGFydFkoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fc3RhcnRZO1xuICB9XG5cbiAgcHVibGljIGdldFNjYWxlKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX3NjYWxlO1xuICB9XG5cbiAgcHVibGljIGdldFgoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fbGFzdFg7XG4gIH1cblxuICBwdWJsaWMgZ2V0WSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9sYXN0WTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRYMSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9sYXN0WDE7XG4gIH1cblxuICBwdWJsaWMgZ2V0WTEoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fbGFzdFkxO1xuICB9XG5cbiAgcHVibGljIGdldFgyKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX2xhc3RYMjtcbiAgfVxuXG4gIHB1YmxpYyBnZXRZMigpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9sYXN0WTI7XG4gIH1cblxuICBwdWJsaWMgaXNTaW5nbGVUb3VjaCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fdG91Y2hTaW5nbGU7XG4gIH1cblxuICBwdWJsaWMgaXNGbGlja0F2YWlsYWJsZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fZmxpcEF2YWlsYWJsZTtcbiAgfVxuXG4gIHB1YmxpYyBkaXNhYmxlRmxpY2soKTogdm9pZCB7XG4gICAgdGhpcy5fZmxpcEF2YWlsYWJsZSA9IGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqIOOCv+ODg+ODgemWi+Wni+aZguOCpOODmeODs+ODiFxuICAgKiBAcGFyYW0gZGV2aWNlWCDjgr/jg4Pjg4HjgZfjgZ/nlLvpnaLjga5444Gu5YCkXG4gICAqIEBwYXJhbSBkZXZpY2VZIOOCv+ODg+ODgeOBl+OBn+eUu+mdouOBrnnjga7lgKRcbiAgICovXG4gIHB1YmxpYyB0b3VjaGVzQmVnYW4oZGV2aWNlWDogbnVtYmVyLCBkZXZpY2VZOiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLl9sYXN0WCA9IGRldmljZVg7XG4gICAgdGhpcy5fbGFzdFkgPSBkZXZpY2VZO1xuICAgIHRoaXMuX3N0YXJ0WCA9IGRldmljZVg7XG4gICAgdGhpcy5fc3RhcnRZID0gZGV2aWNlWTtcbiAgICB0aGlzLl9sYXN0VG91Y2hEaXN0YW5jZSA9IC0xLjA7XG4gICAgdGhpcy5fZmxpcEF2YWlsYWJsZSA9IHRydWU7XG4gICAgdGhpcy5fdG91Y2hTaW5nbGUgPSB0cnVlO1xuICB9XG5cbiAgLyoqXG4gICAqIOODieODqeODg+OCsOaZguOBruOCpOODmeODs+ODiFxuICAgKiBAcGFyYW0gZGV2aWNlWCDjgr/jg4Pjg4HjgZfjgZ/nlLvpnaLjga5444Gu5YCkXG4gICAqIEBwYXJhbSBkZXZpY2VZIOOCv+ODg+ODgeOBl+OBn+eUu+mdouOBrnnjga7lgKRcbiAgICovXG4gIHB1YmxpYyB0b3VjaGVzTW92ZWQoZGV2aWNlWDogbnVtYmVyLCBkZXZpY2VZOiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLl9sYXN0WCA9IGRldmljZVg7XG4gICAgdGhpcy5fbGFzdFkgPSBkZXZpY2VZO1xuICAgIHRoaXMuX2xhc3RUb3VjaERpc3RhbmNlID0gLTEuMDtcbiAgICB0aGlzLl90b3VjaFNpbmdsZSA9IHRydWU7XG4gIH1cblxuICAvKipcbiAgICog44OV44Oq44OD44Kv44Gu6Led6Zui5ris5a6aXG4gICAqIEByZXR1cm4g44OV44Oq44OD44Kv6Led6ZuiXG4gICAqL1xuICBwdWJsaWMgZ2V0RmxpY2tEaXN0YW5jZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmNhbGN1bGF0ZURpc3RhbmNlKFxuICAgICAgdGhpcy5fc3RhcnRYLFxuICAgICAgdGhpcy5fc3RhcnRZLFxuICAgICAgdGhpcy5fbGFzdFgsXG4gICAgICB0aGlzLl9sYXN0WVxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICog54K577yR44GL44KJ54K577yS44G444Gu6Led6Zui44KS5rGC44KB44KLXG4gICAqXG4gICAqIEBwYXJhbSB4MSDvvJHjgaTnm67jga7jgr/jg4Pjg4HjgZfjgZ/nlLvpnaLjga5444Gu5YCkXG4gICAqIEBwYXJhbSB5MSDvvJHjgaTnm67jga7jgr/jg4Pjg4HjgZfjgZ/nlLvpnaLjga5544Gu5YCkXG4gICAqIEBwYXJhbSB4MiDvvJLjgaTnm67jga7jgr/jg4Pjg4HjgZfjgZ/nlLvpnaLjga5444Gu5YCkXG4gICAqIEBwYXJhbSB5MiDvvJLjgaTnm67jga7jgr/jg4Pjg4HjgZfjgZ/nlLvpnaLjga5544Gu5YCkXG4gICAqL1xuICBwdWJsaWMgY2FsY3VsYXRlRGlzdGFuY2UoXG4gICAgeDE6IG51bWJlcixcbiAgICB5MTogbnVtYmVyLFxuICAgIHgyOiBudW1iZXIsXG4gICAgeTI6IG51bWJlclxuICApOiBudW1iZXIge1xuICAgIHJldHVybiBNYXRoLnNxcnQoKHgxIC0geDIpICogKHgxIC0geDIpICsgKHkxIC0geTIpICogKHkxIC0geTIpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDvvJLjgaTnm67jga7lgKTjgYvjgonjgIHnp7vli5Xph4/jgpLmsYLjgoHjgovjgIJcbiAgICog6YGV44GG5pa55ZCR44Gu5aC05ZCI44Gv56e75YuV6YeP77yQ44CC5ZCM44GY5pa55ZCR44Gu5aC05ZCI44Gv44CB57W25a++5YCk44GM5bCP44GV44GE5pa544Gu5YCk44KS5Y+C54Wn44GZ44KL44CCXG4gICAqXG4gICAqIEBwYXJhbSB2MSDvvJHjgaTnm67jga7np7vli5Xph49cbiAgICogQHBhcmFtIHYyIO+8kuOBpOebruOBruenu+WLlemHj1xuICAgKlxuICAgKiBAcmV0dXJuIOWwj+OBleOBhOaWueOBruenu+WLlemHj1xuICAgKi9cbiAgcHVibGljIGNhbGN1bGF0ZU1vdmluZ0Ftb3VudCh2MTogbnVtYmVyLCB2MjogbnVtYmVyKTogbnVtYmVyIHtcbiAgICBpZiAodjEgPiAwLjAgIT0gdjIgPiAwLjApIHtcbiAgICAgIHJldHVybiAwLjA7XG4gICAgfVxuXG4gICAgY29uc3Qgc2lnbjogbnVtYmVyID0gdjEgPiAwLjAgPyAxLjAgOiAtMS4wO1xuICAgIGNvbnN0IGFic29sdXRlVmFsdWUxID0gTWF0aC5hYnModjEpO1xuICAgIGNvbnN0IGFic29sdXRlVmFsdWUyID0gTWF0aC5hYnModjIpO1xuICAgIHJldHVybiAoXG4gICAgICBzaWduICogKGFic29sdXRlVmFsdWUxIDwgYWJzb2x1dGVWYWx1ZTIgPyBhYnNvbHV0ZVZhbHVlMSA6IGFic29sdXRlVmFsdWUyKVxuICAgICk7XG4gIH1cblxuICBfc3RhcnRZOiBudW1iZXI7IC8vIOOCv+ODg+ODgeOCkumWi+Wni+OBl+OBn+aZguOBrnjjga7lgKRcbiAgX3N0YXJ0WDogbnVtYmVyOyAvLyDjgr/jg4Pjg4HjgpLplovlp4vjgZfjgZ/mmYLjga5544Gu5YCkXG4gIF9sYXN0WDogbnVtYmVyOyAvLyDjgrfjg7PjgrDjg6vjgr/jg4Pjg4HmmYLjga5444Gu5YCkXG4gIF9sYXN0WTogbnVtYmVyOyAvLyDjgrfjg7PjgrDjg6vjgr/jg4Pjg4HmmYLjga5544Gu5YCkXG4gIF9sYXN0WDE6IG51bWJlcjsgLy8g44OA44OW44Or44K/44OD44OB5pmC44Gu5LiA44Gk55uu44GueOOBruWApFxuICBfbGFzdFkxOiBudW1iZXI7IC8vIOODgOODluODq+OCv+ODg+ODgeaZguOBruS4gOOBpOebruOBrnnjga7lgKRcbiAgX2xhc3RYMjogbnVtYmVyOyAvLyDjg4Djg5bjg6vjgr/jg4Pjg4HmmYLjga7kuozjgaTnm67jga5444Gu5YCkXG4gIF9sYXN0WTI6IG51bWJlcjsgLy8g44OA44OW44Or44K/44OD44OB5pmC44Gu5LqM44Gk55uu44GueeOBruWApFxuICBfbGFzdFRvdWNoRGlzdGFuY2U6IG51bWJlcjsgLy8gMuacrOS7peS4iuOBp+OCv+ODg+ODgeOBl+OBn+OBqOOBjeOBruaMh+OBrui3nembolxuICBfZGVsdGFYOiBudW1iZXI7IC8vIOWJjeWbnuOBruWApOOBi+OCieS7iuWbnuOBruWApOOBuOOBrnjjga7np7vli5Xot53pm6LjgIJcbiAgX2RlbHRhWTogbnVtYmVyOyAvLyDliY3lm57jga7lgKTjgYvjgonku4rlm57jga7lgKTjgbjjga5544Gu56e75YuV6Led6Zui44CCXG4gIF9zY2FsZTogbnVtYmVyOyAvLyDjgZPjga7jg5Xjg6zjg7zjg6DjgafmjpvjgZHlkIjjgo/jgZvjgovmi6HlpKfnjofjgILmi6HlpKfmk43kvZzkuK3ku6XlpJbjga8x44CCXG4gIF90b3VjaFNpbmdsZTogYm9vbGVhbjsgLy8g44K344Oz44Kw44Or44K/44OD44OB5pmC44GvdHJ1ZVxuICBfZmxpcEF2YWlsYWJsZTogYm9vbGVhbjsgLy8g44OV44Oq44OD44OX44GM5pyJ5Yq544GL44Gp44GG44GLXG59XG4iXSwibWFwcGluZ3MiOiI7O0FBT0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFNQTtBQVVBO0FBTUE7QUFDQTtBQVdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQWdCQTtBQUFBO0FBbExBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./src/touchmanager.ts\\n\");\n\n        /***/\n      },\n\n      /***/\"react\":\n      /*!**************************************************************************************!*\\\n        !*** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"} ***!\n        \\**************************************************************************************/\n      /*! no static exports found */\n      /***/\n      function (module, exports) {\n        eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE_react__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhY3QuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saXZlMmQvZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifT8yNDZlIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9yZWFjdF9fOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///react\\n\");\n\n        /***/\n      }\n\n      /******/\n    })\n  );\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE_react__","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","./Framework/src/cubismdefaultparameterid.ts","eval","./Framework/src/cubismframeworkconfig.ts","./Framework/src/cubismmodelsettingjson.ts","./Framework/src/effect/cubismbreath.ts","./Framework/src/effect/cubismeyeblink.ts","./Framework/src/effect/cubismpose.ts","./Framework/src/icubismmodelsetting.ts","./Framework/src/id/cubismid.ts","./Framework/src/id/cubismidmanager.ts","./Framework/src/live2dcubismframework.ts","./Framework/src/math/cubismmath.ts","./Framework/src/math/cubismmatrix44.ts","./Framework/src/math/cubismmodelmatrix.ts","./Framework/src/math/cubismtargetpoint.ts","./Framework/src/math/cubismvector2.ts","./Framework/src/math/cubismviewmatrix.ts","./Framework/src/model/cubismmoc.ts","./Framework/src/model/cubismmodel.ts","./Framework/src/model/cubismmodeluserdata.ts","./Framework/src/model/cubismmodeluserdatajson.ts","./Framework/src/model/cubismusermodel.ts","./Framework/src/motion/acubismmotion.ts","./Framework/src/motion/cubismexpressionmotion.ts","./Framework/src/motion/cubismmotion.ts","./Framework/src/motion/cubismmotioninternal.ts","./Framework/src/motion/cubismmotionjson.ts","./Framework/src/motion/cubismmotionmanager.ts","./Framework/src/motion/cubismmotionqueueentry.ts","./Framework/src/motion/cubismmotionqueuemanager.ts","./Framework/src/physics/cubismphysics.ts","./Framework/src/physics/cubismphysicsinternal.ts","./Framework/src/physics/cubismphysicsjson.ts","./Framework/src/rendering/cubismrenderer.ts","./Framework/src/rendering/cubismrenderer_webgl.ts","./Framework/src/type/csmmap.ts","./Framework/src/type/csmrectf.ts","./Framework/src/type/csmstring.ts","./Framework/src/type/csmvector.ts","./Framework/src/utils/cubismdebug.ts","./Framework/src/utils/cubismjson.ts","./node_modules/css-loader/dist/cjs.js!./src/asset/index.css","__webpack_exports__","./node_modules/css-loader/dist/runtime/api.js","./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","./node_modules/whatwg-fetch/fetch.js","./src/asset/index.css","./src/index.js","./src/lappdefine.ts","./src/lappdelegate.ts","./src/lapplive2dmanager.ts","./src/lappmodel.ts","./src/lapppal.ts","./src/lapptexturemanager.ts","./src/lappview.ts","./src/touchmanager.ts","react"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/node_modules/react-live2d/dist/bundle.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"live2d\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"live2d\"] = factory(root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_react__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./Framework/src/cubismdefaultparameterid.ts\":\n/*!***************************************************!*\\\n  !*** ./Framework/src/cubismdefaultparameterid.ts ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    Live2DCubismFramework.HitAreaPrefix = 'HitArea';\\r\\n    Live2DCubismFramework.HitAreaHead = 'Head';\\r\\n    Live2DCubismFramework.HitAreaBody = 'Body';\\r\\n    Live2DCubismFramework.PartsIdCore = 'Parts01Core';\\r\\n    Live2DCubismFramework.PartsArmPrefix = 'Parts01Arm_';\\r\\n    Live2DCubismFramework.PartsArmLPrefix = 'Parts01ArmL_';\\r\\n    Live2DCubismFramework.PartsArmRPrefix = 'Parts01ArmR_';\\r\\n    Live2DCubismFramework.ParamAngleX = 'ParamAngleX';\\r\\n    Live2DCubismFramework.ParamAngleY = 'ParamAngleY';\\r\\n    Live2DCubismFramework.ParamAngleZ = 'ParamAngleZ';\\r\\n    Live2DCubismFramework.ParamEyeLOpen = 'ParamEyeLOpen';\\r\\n    Live2DCubismFramework.ParamEyeLSmile = 'ParamEyeLSmile';\\r\\n    Live2DCubismFramework.ParamEyeROpen = 'ParamEyeROpen';\\r\\n    Live2DCubismFramework.ParamEyeRSmile = 'ParamEyeRSmile';\\r\\n    Live2DCubismFramework.ParamEyeBallX = 'ParamEyeBallX';\\r\\n    Live2DCubismFramework.ParamEyeBallY = 'ParamEyeBallY';\\r\\n    Live2DCubismFramework.ParamEyeBallForm = 'ParamEyeBallForm';\\r\\n    Live2DCubismFramework.ParamBrowLY = 'ParamBrowLY';\\r\\n    Live2DCubismFramework.ParamBrowRY = 'ParamBrowRY';\\r\\n    Live2DCubismFramework.ParamBrowLX = 'ParamBrowLX';\\r\\n    Live2DCubismFramework.ParamBrowRX = 'ParamBrowRX';\\r\\n    Live2DCubismFramework.ParamBrowLAngle = 'ParamBrowLAngle';\\r\\n    Live2DCubismFramework.ParamBrowRAngle = 'ParamBrowRAngle';\\r\\n    Live2DCubismFramework.ParamBrowLForm = 'ParamBrowLForm';\\r\\n    Live2DCubismFramework.ParamBrowRForm = 'ParamBrowRForm';\\r\\n    Live2DCubismFramework.ParamMouthForm = 'ParamMouthForm';\\r\\n    Live2DCubismFramework.ParamMouthOpenY = 'ParamMouthOpenY';\\r\\n    Live2DCubismFramework.ParamCheek = 'ParamCheek';\\r\\n    Live2DCubismFramework.ParamBodyAngleX = 'ParamBodyAngleX';\\r\\n    Live2DCubismFramework.ParamBodyAngleY = 'ParamBodyAngleY';\\r\\n    Live2DCubismFramework.ParamBodyAngleZ = 'ParamBodyAngleZ';\\r\\n    Live2DCubismFramework.ParamBreath = 'ParamBreath';\\r\\n    Live2DCubismFramework.ParamArmLA = 'ParamArmLA';\\r\\n    Live2DCubismFramework.ParamArmRA = 'ParamArmRA';\\r\\n    Live2DCubismFramework.ParamArmLB = 'ParamArmLB';\\r\\n    Live2DCubismFramework.ParamArmRB = 'ParamArmRB';\\r\\n    Live2DCubismFramework.ParamHandL = 'ParamHandL';\\r\\n    Live2DCubismFramework.ParamHandR = 'ParamHandR';\\r\\n    Live2DCubismFramework.ParamHairFront = 'ParamHairFront';\\r\\n    Live2DCubismFramework.ParamHairSide = 'ParamHairSide';\\r\\n    Live2DCubismFramework.ParamHairBack = 'ParamHairBack';\\r\\n    Live2DCubismFramework.ParamHairFluffy = 'ParamHairFluffy';\\r\\n    Live2DCubismFramework.ParamShoulderY = 'ParamShoulderY';\\r\\n    Live2DCubismFramework.ParamBustX = 'ParamBustX';\\r\\n    Live2DCubismFramework.ParamBustY = 'ParamBustY';\\r\\n    Live2DCubismFramework.ParamBaseX = 'ParamBaseX';\\r\\n    Live2DCubismFramework.ParamBaseY = 'ParamBaseY';\\r\\n    Live2DCubismFramework.ParamNONE = 'NONE:';\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL2N1YmlzbWRlZmF1bHRwYXJhbWV0ZXJpZC50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvY3ViaXNtZGVmYXVsdHBhcmFtZXRlcmlkLnRzPzEyODciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuLyoqXG4gKiBAYnJpZWYg44OR44Op44Oh44O844K/SUTjga7jg4fjg5Xjgqnjg6vjg4jlgKTjgpLkv53mjIHjgZnjgovlrprmlbA8YnI+XG4gKiAgICAgICAgIOODh+ODleOCqeODq+ODiOWApOOBruS7leanmOOBr+S7peS4i+OBruODnuODi+ODpeOCouODq+OBq+WfuuOBpeOBjzxicj5cbiAqICAgICAgICAgaHR0cHM6Ly9kb2NzLmxpdmUyZC5jb20vY3ViaXNtLWVkaXRvci1tYW51YWwvc3RhbmRhcmQtcGFyYW1ldG9yLWxpc3QvXG4gKi9cbmV4cG9ydCBuYW1lc3BhY2UgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIHtcbiAgLy8g44OR44O844OESURcbiAgZXhwb3J0IGNvbnN0IEhpdEFyZWFQcmVmaXggPSAnSGl0QXJlYSc7XG4gIGV4cG9ydCBjb25zdCBIaXRBcmVhSGVhZCA9ICdIZWFkJztcbiAgZXhwb3J0IGNvbnN0IEhpdEFyZWFCb2R5ID0gJ0JvZHknO1xuICBleHBvcnQgY29uc3QgUGFydHNJZENvcmUgPSAnUGFydHMwMUNvcmUnO1xuICBleHBvcnQgY29uc3QgUGFydHNBcm1QcmVmaXggPSAnUGFydHMwMUFybV8nO1xuICBleHBvcnQgY29uc3QgUGFydHNBcm1MUHJlZml4ID0gJ1BhcnRzMDFBcm1MXyc7XG4gIGV4cG9ydCBjb25zdCBQYXJ0c0FybVJQcmVmaXggPSAnUGFydHMwMUFybVJfJztcblxuICAvLyDjg5Hjg6njg6Hjg7zjgr9JRFxuICBleHBvcnQgY29uc3QgUGFyYW1BbmdsZVggPSAnUGFyYW1BbmdsZVgnO1xuICBleHBvcnQgY29uc3QgUGFyYW1BbmdsZVkgPSAnUGFyYW1BbmdsZVknO1xuICBleHBvcnQgY29uc3QgUGFyYW1BbmdsZVogPSAnUGFyYW1BbmdsZVonO1xuICBleHBvcnQgY29uc3QgUGFyYW1FeWVMT3BlbiA9ICdQYXJhbUV5ZUxPcGVuJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtRXllTFNtaWxlID0gJ1BhcmFtRXllTFNtaWxlJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtRXllUk9wZW4gPSAnUGFyYW1FeWVST3Blbic7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUV5ZVJTbWlsZSA9ICdQYXJhbUV5ZVJTbWlsZSc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUV5ZUJhbGxYID0gJ1BhcmFtRXllQmFsbFgnO1xuICBleHBvcnQgY29uc3QgUGFyYW1FeWVCYWxsWSA9ICdQYXJhbUV5ZUJhbGxZJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtRXllQmFsbEZvcm0gPSAnUGFyYW1FeWVCYWxsRm9ybSc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUJyb3dMWSA9ICdQYXJhbUJyb3dMWSc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUJyb3dSWSA9ICdQYXJhbUJyb3dSWSc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUJyb3dMWCA9ICdQYXJhbUJyb3dMWCc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUJyb3dSWCA9ICdQYXJhbUJyb3dSWCc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUJyb3dMQW5nbGUgPSAnUGFyYW1Ccm93TEFuZ2xlJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtQnJvd1JBbmdsZSA9ICdQYXJhbUJyb3dSQW5nbGUnO1xuICBleHBvcnQgY29uc3QgUGFyYW1Ccm93TEZvcm0gPSAnUGFyYW1Ccm93TEZvcm0nO1xuICBleHBvcnQgY29uc3QgUGFyYW1Ccm93UkZvcm0gPSAnUGFyYW1Ccm93UkZvcm0nO1xuICBleHBvcnQgY29uc3QgUGFyYW1Nb3V0aEZvcm0gPSAnUGFyYW1Nb3V0aEZvcm0nO1xuICBleHBvcnQgY29uc3QgUGFyYW1Nb3V0aE9wZW5ZID0gJ1BhcmFtTW91dGhPcGVuWSc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUNoZWVrID0gJ1BhcmFtQ2hlZWsnO1xuICBleHBvcnQgY29uc3QgUGFyYW1Cb2R5QW5nbGVYID0gJ1BhcmFtQm9keUFuZ2xlWCc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUJvZHlBbmdsZVkgPSAnUGFyYW1Cb2R5QW5nbGVZJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtQm9keUFuZ2xlWiA9ICdQYXJhbUJvZHlBbmdsZVonO1xuICBleHBvcnQgY29uc3QgUGFyYW1CcmVhdGggPSAnUGFyYW1CcmVhdGgnO1xuICBleHBvcnQgY29uc3QgUGFyYW1Bcm1MQSA9ICdQYXJhbUFybUxBJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtQXJtUkEgPSAnUGFyYW1Bcm1SQSc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUFybUxCID0gJ1BhcmFtQXJtTEInO1xuICBleHBvcnQgY29uc3QgUGFyYW1Bcm1SQiA9ICdQYXJhbUFybVJCJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtSGFuZEwgPSAnUGFyYW1IYW5kTCc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUhhbmRSID0gJ1BhcmFtSGFuZFInO1xuICBleHBvcnQgY29uc3QgUGFyYW1IYWlyRnJvbnQgPSAnUGFyYW1IYWlyRnJvbnQnO1xuICBleHBvcnQgY29uc3QgUGFyYW1IYWlyU2lkZSA9ICdQYXJhbUhhaXJTaWRlJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtSGFpckJhY2sgPSAnUGFyYW1IYWlyQmFjayc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUhhaXJGbHVmZnkgPSAnUGFyYW1IYWlyRmx1ZmZ5JztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtU2hvdWxkZXJZID0gJ1BhcmFtU2hvdWxkZXJZJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtQnVzdFggPSAnUGFyYW1CdXN0WCc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbUJ1c3RZID0gJ1BhcmFtQnVzdFknO1xuICBleHBvcnQgY29uc3QgUGFyYW1CYXNlWCA9ICdQYXJhbUJhc2VYJztcbiAgZXhwb3J0IGNvbnN0IFBhcmFtQmFzZVkgPSAnUGFyYW1CYXNlWSc7XG4gIGV4cG9ydCBjb25zdCBQYXJhbU5PTkUgPSAnTk9ORTonO1xufVxuIl0sIm1hcHBpbmdzIjoiOztBQVlBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./Framework/src/cubismdefaultparameterid.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/cubismframeworkconfig.ts\":\n/*!************************************************!*\\\n  !*** ./Framework/src/cubismframeworkconfig.ts ***!\n  \\************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nexports.CSM_LOG_LEVEL_VERBOSE = 0;\\r\\nexports.CSM_LOG_LEVEL_DEBUG = 1;\\r\\nexports.CSM_LOG_LEVEL_INFO = 2;\\r\\nexports.CSM_LOG_LEVEL_WARNING = 3;\\r\\nexports.CSM_LOG_LEVEL_ERROR = 4;\\r\\nexports.CSM_LOG_LEVEL_OFF = 5;\\r\\nexports.CSM_LOG_LEVEL = exports.CSM_LOG_LEVEL_VERBOSE;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL2N1YmlzbWZyYW1ld29ya2NvbmZpZy50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvY3ViaXNtZnJhbWV3b3JrY29uZmlnLnRzP2U4MGYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gIOODreOCsOWHuuWKm+mWouaVsOOBruioreWumlxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLy0tLS0tLS0tLS0g44Ot44Kw5Ye65Yqb44Os44OZ44OrIOmBuOaKnumgheebriDlrprnvqkgLS0tLS0tLS0tLVxuLy8g6Kmz57Sw44Ot44Kw5Ye65Yqb6Kit5a6aXG5leHBvcnQgY29uc3QgQ1NNX0xPR19MRVZFTF9WRVJCT1NFID0gMDtcbi8vIOODh+ODkOODg+OCsOODreOCsOWHuuWKm+ioreWumlxuZXhwb3J0IGNvbnN0IENTTV9MT0dfTEVWRUxfREVCVUcgPSAxO1xuLy8gSW5mb+ODreOCsOWHuuWKm+ioreWumlxuZXhwb3J0IGNvbnN0IENTTV9MT0dfTEVWRUxfSU5GTyA9IDI7XG4vLyDorablkYrjg63jgrDlh7rlipvoqK3lrppcbmV4cG9ydCBjb25zdCBDU01fTE9HX0xFVkVMX1dBUk5JTkcgPSAzO1xuLy8g44Ko44Op44O844Ot44Kw5Ye65Yqb6Kit5a6aXG5leHBvcnQgY29uc3QgQ1NNX0xPR19MRVZFTF9FUlJPUiA9IDQ7XG4vLyDjg63jgrDlh7rlipvjgqrjg5XoqK3lrppcbmV4cG9ydCBjb25zdCBDU01fTE9HX0xFVkVMX09GRiA9IDU7XG5cbi8qKlxuICog44Ot44Kw5Ye65Yqb44Os44OZ44Or6Kit5a6a44CCXG4gKlxuICog5by35Yi255qE44Gr44Ot44Kw5Ye65Yqb44Os44OZ44Or44KS5aSJ44GI44KL5pmC44Gr5a6a576p44KS5pyJ5Yq544Gr44GZ44KL44CCXG4gKiBDU01fTE9HX0xFVkVMX1ZFUkJPU0Ug772eIENTTV9MT0dfTEVWRUxfT0ZGIOOCkumBuOaKnuOBmeOCi+OAglxuICovXG5leHBvcnQgY29uc3QgQ1NNX0xPR19MRVZFTDogbnVtYmVyID0gQ1NNX0xPR19MRVZFTF9WRVJCT1NFO1xuIl0sIm1hcHBpbmdzIjoiOztBQWFBO0FBRUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQVFBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Framework/src/cubismframeworkconfig.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/cubismmodelsettingjson.ts\":\n/*!*************************************************!*\\\n  !*** ./Framework/src/cubismmodelsettingjson.ts ***!\n  \\*************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ./live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar icubismmodelsetting_1 = __webpack_require__(/*! ./icubismmodelsetting */ \\\"./Framework/src/icubismmodelsetting.ts\\\");\\r\\nvar cubismjson_1 = __webpack_require__(/*! ./utils/cubismjson */ \\\"./Framework/src/utils/cubismjson.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ./type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismJson = cubismjson_1.Live2DCubismFramework.CubismJson;\\r\\nvar ICubismModelSetting = icubismmodelsetting_1.Live2DCubismFramework.ICubismModelSetting;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var Version = 'Version';\\r\\n    var FileReferences = 'FileReferences';\\r\\n    var Groups = 'Groups';\\r\\n    var Layout = 'Layout';\\r\\n    var HitAreas = 'HitAreas';\\r\\n    var Moc = 'Moc';\\r\\n    var Textures = 'Textures';\\r\\n    var Physics = 'Physics';\\r\\n    var Pose = 'Pose';\\r\\n    var Expressions = 'Expressions';\\r\\n    var Motions = 'Motions';\\r\\n    var UserData = 'UserData';\\r\\n    var Name = 'Name';\\r\\n    var FilePath = 'File';\\r\\n    var Id = 'Id';\\r\\n    var Ids = 'Ids';\\r\\n    var Target = 'Target';\\r\\n    var Idle = 'Idle';\\r\\n    var TapBody = 'TapBody';\\r\\n    var PinchIn = 'PinchIn';\\r\\n    var PinchOut = 'PinchOut';\\r\\n    var Shake = 'Shake';\\r\\n    var FlickHead = 'FlickHead';\\r\\n    var Parameter = 'Parameter';\\r\\n    var SoundPath = 'Sound';\\r\\n    var FadeInTime = 'FadeInTime';\\r\\n    var FadeOutTime = 'FadeOutTime';\\r\\n    var CenterX = 'CenterX';\\r\\n    var CenterY = 'CenterY';\\r\\n    var X = 'X';\\r\\n    var Y = 'Y';\\r\\n    var Width = 'Width';\\r\\n    var Height = 'Height';\\r\\n    var LipSync = 'LipSync';\\r\\n    var EyeBlink = 'EyeBlink';\\r\\n    var InitParameter = 'init_param';\\r\\n    var InitPartsVisible = 'init_parts_visible';\\r\\n    var Val = 'val';\\r\\n    var FrequestNode;\\r\\n    (function (FrequestNode) {\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_Groups\\\"] = 0] = \\\"FrequestNode_Groups\\\";\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_Moc\\\"] = 1] = \\\"FrequestNode_Moc\\\";\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_Motions\\\"] = 2] = \\\"FrequestNode_Motions\\\";\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_Expressions\\\"] = 3] = \\\"FrequestNode_Expressions\\\";\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_Textures\\\"] = 4] = \\\"FrequestNode_Textures\\\";\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_Physics\\\"] = 5] = \\\"FrequestNode_Physics\\\";\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_Pose\\\"] = 6] = \\\"FrequestNode_Pose\\\";\\r\\n        FrequestNode[FrequestNode[\\\"FrequestNode_HitAreas\\\"] = 7] = \\\"FrequestNode_HitAreas\\\";\\r\\n    })(FrequestNode || (FrequestNode = {}));\\r\\n    var CubismModelSettingJson = (function (_super) {\\r\\n        __extends(CubismModelSettingJson, _super);\\r\\n        function CubismModelSettingJson(buffer, size) {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._json = CubismJson.create(buffer, size);\\r\\n            if (_this._json) {\\r\\n                _this._jsonValue = new csmVector();\\r\\n                _this._jsonValue.pushBack(_this._json.getRoot().getValueByString(Groups));\\r\\n                _this._jsonValue.pushBack(_this._json\\r\\n                    .getRoot()\\r\\n                    .getValueByString(FileReferences)\\r\\n                    .getValueByString(Moc));\\r\\n                _this._jsonValue.pushBack(_this._json\\r\\n                    .getRoot()\\r\\n                    .getValueByString(FileReferences)\\r\\n                    .getValueByString(Motions));\\r\\n                _this._jsonValue.pushBack(_this._json\\r\\n                    .getRoot()\\r\\n                    .getValueByString(FileReferences)\\r\\n                    .getValueByString(Expressions));\\r\\n                _this._jsonValue.pushBack(_this._json\\r\\n                    .getRoot()\\r\\n                    .getValueByString(FileReferences)\\r\\n                    .getValueByString(Textures));\\r\\n                _this._jsonValue.pushBack(_this._json\\r\\n                    .getRoot()\\r\\n                    .getValueByString(FileReferences)\\r\\n                    .getValueByString(Physics));\\r\\n                _this._jsonValue.pushBack(_this._json\\r\\n                    .getRoot()\\r\\n                    .getValueByString(FileReferences)\\r\\n                    .getValueByString(Pose));\\r\\n                _this._jsonValue.pushBack(_this._json.getRoot().getValueByString(HitAreas));\\r\\n            }\\r\\n            return _this;\\r\\n        }\\r\\n        CubismModelSettingJson.prototype.release = function () {\\r\\n            CubismJson.delete(this._json);\\r\\n            this._jsonValue = null;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.GetJson = function () {\\r\\n            return this._json;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getModelFileName = function () {\\r\\n            if (!this.isExistModelFile()) {\\r\\n                return '';\\r\\n            }\\r\\n            return this._jsonValue.at(FrequestNode.FrequestNode_Moc).getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getTextureCount = function () {\\r\\n            if (!this.isExistTextureFiles()) {\\r\\n                return 0;\\r\\n            }\\r\\n            return this._jsonValue.at(FrequestNode.FrequestNode_Textures).getSize();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getTextureDirectory = function () {\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Textures)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getTextureFileName = function (index) {\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Textures)\\r\\n                .getValueByIndex(index)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getHitAreasCount = function () {\\r\\n            if (!this.isExistHitAreas()) {\\r\\n                return 0;\\r\\n            }\\r\\n            return this._jsonValue.at(FrequestNode.FrequestNode_HitAreas).getSize();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getHitAreaId = function (index) {\\r\\n            return CubismFramework.getIdManager().getId(this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_HitAreas)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(Id)\\r\\n                .getRawString());\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getHitAreaName = function (index) {\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_HitAreas)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(Name)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getPhysicsFileName = function () {\\r\\n            if (!this.isExistPhysicsFile()) {\\r\\n                return '';\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Physics)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getPoseFileName = function () {\\r\\n            if (!this.isExistPoseFile()) {\\r\\n                return '';\\r\\n            }\\r\\n            return this._jsonValue.at(FrequestNode.FrequestNode_Pose).getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getExpressionCount = function () {\\r\\n            if (!this.isExistExpressionFile()) {\\r\\n                return 0;\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Expressions)\\r\\n                .getSize();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getExpressionName = function (index) {\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Expressions)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(Name)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getExpressionFileName = function (index) {\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Expressions)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(FilePath)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getMotionGroupCount = function () {\\r\\n            if (!this.isExistMotionGroups()) {\\r\\n                return 0;\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getKeys()\\r\\n                .getSize();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getMotionGroupName = function (index) {\\r\\n            if (!this.isExistMotionGroups()) {\\r\\n                return null;\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getKeys()\\r\\n                .at(index);\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getMotionCount = function (groupName) {\\r\\n            if (!this.isExistMotionGroupName(groupName)) {\\r\\n                return 0;\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getSize();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getMotionFileName = function (groupName, index) {\\r\\n            if (!this.isExistMotionGroupName(groupName)) {\\r\\n                return '';\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(FilePath)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getMotionSoundFileName = function (groupName, index) {\\r\\n            if (!this.isExistMotionSoundFile(groupName, index)) {\\r\\n                return '';\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(SoundPath)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getMotionFadeInTimeValue = function (groupName, index) {\\r\\n            if (!this.isExistMotionFadeIn(groupName, index)) {\\r\\n                return -1.0;\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(FadeInTime)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getMotionFadeOutTimeValue = function (groupName, index) {\\r\\n            if (!this.isExistMotionFadeOut(groupName, index)) {\\r\\n                return -1.0;\\r\\n            }\\r\\n            return this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(FadeOutTime)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getUserDataFile = function () {\\r\\n            if (!this.isExistUserDataFile()) {\\r\\n                return '';\\r\\n            }\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(FileReferences)\\r\\n                .getValueByString(UserData)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getLayoutMap = function (outLayoutMap) {\\r\\n            var map = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Layout)\\r\\n                .getMap();\\r\\n            if (map == null) {\\r\\n                return false;\\r\\n            }\\r\\n            var ret = false;\\r\\n            for (var ite = map.begin(); ite.notEqual(map.end()); ite.preIncrement()) {\\r\\n                outLayoutMap.setValue(ite.ptr().first, ite.ptr().second.toFloat());\\r\\n                ret = true;\\r\\n            }\\r\\n            return ret;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getEyeBlinkParameterCount = function () {\\r\\n            if (!this.isExistEyeBlinkParameters()) {\\r\\n                return 0;\\r\\n            }\\r\\n            var num = 0;\\r\\n            for (var i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\\r\\n                var refI = this._jsonValue\\r\\n                    .at(FrequestNode.FrequestNode_Groups)\\r\\n                    .getValueByIndex(i);\\r\\n                if (refI.isNull() || refI.isError()) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (refI.getValueByString(Name).getRawString() == EyeBlink) {\\r\\n                    num = refI\\r\\n                        .getValueByString(Ids)\\r\\n                        .getVector()\\r\\n                        .getSize();\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n            return num;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getEyeBlinkParameterId = function (index) {\\r\\n            if (!this.isExistEyeBlinkParameters()) {\\r\\n                return null;\\r\\n            }\\r\\n            for (var i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\\r\\n                var refI = this._jsonValue\\r\\n                    .at(FrequestNode.FrequestNode_Groups)\\r\\n                    .getValueByIndex(i);\\r\\n                if (refI.isNull() || refI.isError()) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (refI.getValueByString(Name).getRawString() == EyeBlink) {\\r\\n                    return CubismFramework.getIdManager().getId(refI\\r\\n                        .getValueByString(Ids)\\r\\n                        .getValueByIndex(index)\\r\\n                        .getRawString());\\r\\n                }\\r\\n            }\\r\\n            return null;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getLipSyncParameterCount = function () {\\r\\n            if (!this.isExistLipSyncParameters()) {\\r\\n                return 0;\\r\\n            }\\r\\n            var num = 0;\\r\\n            for (var i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\\r\\n                var refI = this._jsonValue\\r\\n                    .at(FrequestNode.FrequestNode_Groups)\\r\\n                    .getValueByIndex(i);\\r\\n                if (refI.isNull() || refI.isError()) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (refI.getValueByString(Name).getRawString() == LipSync) {\\r\\n                    num = refI\\r\\n                        .getValueByString(Ids)\\r\\n                        .getVector()\\r\\n                        .getSize();\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n            return num;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.getLipSyncParameterId = function (index) {\\r\\n            if (!this.isExistLipSyncParameters()) {\\r\\n                return null;\\r\\n            }\\r\\n            for (var i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); i++) {\\r\\n                var refI = this._jsonValue\\r\\n                    .at(FrequestNode.FrequestNode_Groups)\\r\\n                    .getValueByIndex(i);\\r\\n                if (refI.isNull() || refI.isError()) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (refI.getValueByString(Name).getRawString() == LipSync) {\\r\\n                    return CubismFramework.getIdManager().getId(refI\\r\\n                        .getValueByString(Ids)\\r\\n                        .getValueByIndex(index)\\r\\n                        .getRawString());\\r\\n                }\\r\\n            }\\r\\n            return null;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistModelFile = function () {\\r\\n            var node = this._jsonValue.at(FrequestNode.FrequestNode_Moc);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistTextureFiles = function () {\\r\\n            var node = this._jsonValue.at(FrequestNode.FrequestNode_Textures);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistHitAreas = function () {\\r\\n            var node = this._jsonValue.at(FrequestNode.FrequestNode_HitAreas);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistPhysicsFile = function () {\\r\\n            var node = this._jsonValue.at(FrequestNode.FrequestNode_Physics);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistPoseFile = function () {\\r\\n            var node = this._jsonValue.at(FrequestNode.FrequestNode_Pose);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistExpressionFile = function () {\\r\\n            var node = this._jsonValue.at(FrequestNode.FrequestNode_Expressions);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistMotionGroups = function () {\\r\\n            var node = this._jsonValue.at(FrequestNode.FrequestNode_Motions);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistMotionGroupName = function (groupName) {\\r\\n            var node = this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistMotionSoundFile = function (groupName, index) {\\r\\n            var node = this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(SoundPath);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistMotionFadeIn = function (groupName, index) {\\r\\n            var node = this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(FadeInTime);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistMotionFadeOut = function (groupName, index) {\\r\\n            var node = this._jsonValue\\r\\n                .at(FrequestNode.FrequestNode_Motions)\\r\\n                .getValueByString(groupName)\\r\\n                .getValueByIndex(index)\\r\\n                .getValueByString(FadeOutTime);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistUserDataFile = function () {\\r\\n            var node = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(FileReferences)\\r\\n                .getValueByString(UserData);\\r\\n            return !node.isNull() && !node.isError();\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistEyeBlinkParameters = function () {\\r\\n            if (this._jsonValue.at(FrequestNode.FrequestNode_Groups).isNull() ||\\r\\n                this._jsonValue.at(FrequestNode.FrequestNode_Groups).isError()) {\\r\\n                return false;\\r\\n            }\\r\\n            for (var i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); ++i) {\\r\\n                if (this._jsonValue\\r\\n                    .at(FrequestNode.FrequestNode_Groups)\\r\\n                    .getValueByIndex(i)\\r\\n                    .getValueByString(Name)\\r\\n                    .getRawString() == EyeBlink) {\\r\\n                    return true;\\r\\n                }\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        CubismModelSettingJson.prototype.isExistLipSyncParameters = function () {\\r\\n            if (this._jsonValue.at(FrequestNode.FrequestNode_Groups).isNull() ||\\r\\n                this._jsonValue.at(FrequestNode.FrequestNode_Groups).isError()) {\\r\\n                return false;\\r\\n            }\\r\\n            for (var i = 0; i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize(); ++i) {\\r\\n                if (this._jsonValue\\r\\n                    .at(FrequestNode.FrequestNode_Groups)\\r\\n                    .getValueByIndex(i)\\r\\n                    .getValueByString(Name)\\r\\n                    .getRawString() == LipSync) {\\r\\n                    return true;\\r\\n                }\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        return CubismModelSettingJson;\\r\\n    }(ICubismModelSetting));\\r\\n    Live2DCubismFramework.CubismModelSettingJson = CubismModelSettingJson;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/cubismmodelsettingjson.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/effect/cubismbreath.ts\":\n/*!**********************************************!*\\\n  !*** ./Framework/src/effect/cubismbreath.ts ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismBreath = (function () {\\r\\n        function CubismBreath() {\\r\\n            this._currentTime = 0.0;\\r\\n        }\\r\\n        CubismBreath.create = function () {\\r\\n            return new CubismBreath();\\r\\n        };\\r\\n        CubismBreath.delete = function (instance) {\\r\\n            if (instance != null) {\\r\\n                instance = null;\\r\\n            }\\r\\n        };\\r\\n        CubismBreath.prototype.setParameters = function (breathParameters) {\\r\\n            this._breathParameters = breathParameters;\\r\\n        };\\r\\n        CubismBreath.prototype.getParameters = function () {\\r\\n            return this._breathParameters;\\r\\n        };\\r\\n        CubismBreath.prototype.updateParameters = function (model, deltaTimeSeconds) {\\r\\n            this._currentTime += deltaTimeSeconds;\\r\\n            var t = this._currentTime * 2.0 * 3.14159;\\r\\n            for (var i = 0; i < this._breathParameters.getSize(); ++i) {\\r\\n                var data = this._breathParameters.at(i);\\r\\n                model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\\r\\n            }\\r\\n        };\\r\\n        return CubismBreath;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismBreath = CubismBreath;\\r\\n    var BreathParameterData = (function () {\\r\\n        function BreathParameterData(parameterId, offset, peak, cycle, weight) {\\r\\n            this.parameterId = parameterId == undefined ? null : parameterId;\\r\\n            this.offset = offset == undefined ? 0.0 : offset;\\r\\n            this.peak = peak == undefined ? 0.0 : peak;\\r\\n            this.cycle = cycle == undefined ? 0.0 : cycle;\\r\\n            this.weight = weight == undefined ? 0.0 : weight;\\r\\n        }\\r\\n        return BreathParameterData;\\r\\n    }());\\r\\n    Live2DCubismFramework.BreathParameterData = BreathParameterData;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL2VmZmVjdC9jdWJpc21icmVhdGgudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saXZlMmQvLi9GcmFtZXdvcmsvc3JjL2VmZmVjdC9jdWJpc21icmVhdGgudHM/YWRiZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IHRoZSBMaXZlMkQgT3BlbiBTb2Z0d2FyZSBsaWNlbnNlXG4gKiB0aGF0IGNhbiBiZSBmb3VuZCBhdCBodHRwczovL3d3dy5saXZlMmQuY29tL2V1bGEvbGl2ZTJkLW9wZW4tc29mdHdhcmUtbGljZW5zZS1hZ3JlZW1lbnRfZW4uaHRtbC5cbiAqL1xuXG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3NtdmVjdG9yIH0gZnJvbSAnLi4vdHlwZS9jc212ZWN0b3InO1xuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbW1vZGVsIH0gZnJvbSAnLi4vbW9kZWwvY3ViaXNtbW9kZWwnO1xuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbWlkIH0gZnJvbSAnLi4vaWQvY3ViaXNtaWQnO1xuaW1wb3J0IEN1YmlzbUlkSGFuZGxlID0gY3ViaXNtaWQuQ3ViaXNtSWRIYW5kbGU7XG5pbXBvcnQgQ3ViaXNtTW9kZWwgPSBjdWJpc21tb2RlbC5DdWJpc21Nb2RlbDtcbmltcG9ydCBjc21WZWN0b3IgPSBjc212ZWN0b3IuY3NtVmVjdG9yO1xuXG5leHBvcnQgbmFtZXNwYWNlIExpdmUyREN1YmlzbUZyYW1ld29yayB7XG4gIC8qKlxuICAgKiDlkbzlkLjmqZ/og71cbiAgICpcbiAgICog5ZG85ZC45qmf6IO944KS5o+Q5L6b44GZ44KL44CCXG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtQnJlYXRoIHtcbiAgICAvKipcbiAgICAgKiDjgqTjg7Pjgrnjgr/jg7Pjgrnjga7kvZzmiJBcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZSgpOiBDdWJpc21CcmVhdGgge1xuICAgICAgcmV0dXJuIG5ldyBDdWJpc21CcmVhdGgoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjgqTjg7Pjgrnjgr/jg7Pjgrnjga7noLTmo4RcbiAgICAgKiBAcGFyYW0gaW5zdGFuY2Ug5a++6LGh44GuQ3ViaXNtQnJlYXRoXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBkZWxldGUoaW5zdGFuY2U6IEN1YmlzbUJyZWF0aCk6IHZvaWQge1xuICAgICAgaWYgKGluc3RhbmNlICE9IG51bGwpIHtcbiAgICAgICAgaW5zdGFuY2UgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOWRvOWQuOOBruODkeODqeODoeODvOOCv+OBrue0kOOBpeOBkVxuICAgICAqIEBwYXJhbSBicmVhdGhQYXJhbWV0ZXJzIOWRvOWQuOOCkue0kOOBpeOBkeOBn+OBhOODkeODqeODoeODvOOCv+OBruODquOCueODiFxuICAgICAqL1xuICAgIHB1YmxpYyBzZXRQYXJhbWV0ZXJzKFxuICAgICAgYnJlYXRoUGFyYW1ldGVyczogY3NtVmVjdG9yPEJyZWF0aFBhcmFtZXRlckRhdGE+XG4gICAgKTogdm9pZCB7XG4gICAgICB0aGlzLl9icmVhdGhQYXJhbWV0ZXJzID0gYnJlYXRoUGFyYW1ldGVycztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlkbzlkLjjgavntJDjgaXjgYTjgabjgYTjgovjg5Hjg6njg6Hjg7zjgr/jga7lj5blvpdcbiAgICAgKiBAcmV0dXJuIOWRvOWQuOOBq+e0kOOBpeOBhOOBpuOBhOOCi+ODkeODqeODoeODvOOCv+OBruODquOCueODiFxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRQYXJhbWV0ZXJzKCk6IGNzbVZlY3RvcjxCcmVhdGhQYXJhbWV0ZXJEYXRhPiB7XG4gICAgICByZXR1cm4gdGhpcy5fYnJlYXRoUGFyYW1ldGVycztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg4fjg6vjga7jg5Hjg6njg6Hjg7zjgr/jga7mm7TmlrBcbiAgICAgKiBAcGFyYW0gbW9kZWwg5a++6LGh44Gu44Oi44OH44OrXG4gICAgICogQHBhcmFtIGRlbHRhVGltZVNlY29uZHMg44OH44Or44K/5pmC6ZaTW+enkl1cbiAgICAgKi9cbiAgICBwdWJsaWMgdXBkYXRlUGFyYW1ldGVycyhcbiAgICAgIG1vZGVsOiBDdWJpc21Nb2RlbCxcbiAgICAgIGRlbHRhVGltZVNlY29uZHM6IG51bWJlclxuICAgICk6IHZvaWQge1xuICAgICAgdGhpcy5fY3VycmVudFRpbWUgKz0gZGVsdGFUaW1lU2Vjb25kcztcblxuICAgICAgY29uc3QgdDogbnVtYmVyID0gdGhpcy5fY3VycmVudFRpbWUgKiAyLjAgKiAzLjE0MTU5O1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX2JyZWF0aFBhcmFtZXRlcnMuZ2V0U2l6ZSgpOyArK2kpIHtcbiAgICAgICAgY29uc3QgZGF0YTogQnJlYXRoUGFyYW1ldGVyRGF0YSA9IHRoaXMuX2JyZWF0aFBhcmFtZXRlcnMuYXQoaSk7XG5cbiAgICAgICAgbW9kZWwuYWRkUGFyYW1ldGVyVmFsdWVCeUlkKFxuICAgICAgICAgIGRhdGEucGFyYW1ldGVySWQsXG4gICAgICAgICAgZGF0YS5vZmZzZXQgKyBkYXRhLnBlYWsgKiBNYXRoLnNpbih0IC8gZGF0YS5jeWNsZSksXG4gICAgICAgICAgZGF0YS53ZWlnaHRcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICAgKi9cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgICB0aGlzLl9jdXJyZW50VGltZSA9IDAuMDtcbiAgICB9XG5cbiAgICBfYnJlYXRoUGFyYW1ldGVyczogY3NtVmVjdG9yPEJyZWF0aFBhcmFtZXRlckRhdGE+OyAvLyDlkbzlkLjjgavjgbLjgoLjgaXjgYTjgabjgYTjgovjg5Hjg6njg6Hjg7zjgr/jga7jg6rjgrnjg4hcbiAgICBfY3VycmVudFRpbWU6IG51bWJlcjsgLy8g56mN566X5pmC6ZaTW+enkl1cbiAgfVxuXG4gIC8qKlxuICAgKiDlkbzlkLjjga7jg5Hjg6njg6Hjg7zjgr/mg4XloLFcbiAgICovXG4gIGV4cG9ydCBjbGFzcyBCcmVhdGhQYXJhbWV0ZXJEYXRhIHtcbiAgICAvKipcbiAgICAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICAgKiBAcGFyYW0gcGFyYW1ldGVySWQgICDlkbzlkLjjgpLjgbLjgoLjgaXjgZHjgovjg5Hjg6njg6Hjg7zjgr9JRFxuICAgICAqIEBwYXJhbSBvZmZzZXQgICAgICAgIOWRvOWQuOOCkuato+W8puazouOBqOOBl+OBn+OBqOOBjeOBruOAgeazouOBruOCquODleOCu+ODg+ODiFxuICAgICAqIEBwYXJhbSBwZWFrICAgICAgICAgIOWRvOWQuOOCkuato+W8puazouOBqOOBl+OBn+OBqOOBjeOBruOAgeazouOBrumrmOOBlVxuICAgICAqIEBwYXJhbSBjeWNsZSAgICAgICAgIOWRvOWQuOOCkuato+W8puazouOBqOOBl+OBn+OBqOOBjeOBruOAgeazouOBruWRqOacn1xuICAgICAqIEBwYXJhbSB3ZWlnaHQgICAgICAgIOODkeODqeODoeODvOOCv+OBuOOBrumHjeOBv1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgcGFyYW1ldGVySWQ/OiBDdWJpc21JZEhhbmRsZSxcbiAgICAgIG9mZnNldD86IG51bWJlcixcbiAgICAgIHBlYWs/OiBudW1iZXIsXG4gICAgICBjeWNsZT86IG51bWJlcixcbiAgICAgIHdlaWdodD86IG51bWJlclxuICAgICkge1xuICAgICAgdGhpcy5wYXJhbWV0ZXJJZCA9IHBhcmFtZXRlcklkID09IHVuZGVmaW5lZCA/IG51bGwgOiBwYXJhbWV0ZXJJZDtcbiAgICAgIHRoaXMub2Zmc2V0ID0gb2Zmc2V0ID09IHVuZGVmaW5lZCA/IDAuMCA6IG9mZnNldDtcbiAgICAgIHRoaXMucGVhayA9IHBlYWsgPT0gdW5kZWZpbmVkID8gMC4wIDogcGVhaztcbiAgICAgIHRoaXMuY3ljbGUgPSBjeWNsZSA9PSB1bmRlZmluZWQgPyAwLjAgOiBjeWNsZTtcbiAgICAgIHRoaXMud2VpZ2h0ID0gd2VpZ2h0ID09IHVuZGVmaW5lZCA/IDAuMCA6IHdlaWdodDtcbiAgICB9XG5cbiAgICBwYXJhbWV0ZXJJZDogQ3ViaXNtSWRIYW5kbGU7IC8vIOWRvOWQuOOCkuOBsuOCguOBpeOBkeOCi+ODkeODqeODoeODvOOCv0lEXFxcbiAgICBvZmZzZXQ6IG51bWJlcjsgLy8g5ZG85ZC444KS5q2j5bym5rOi44Go44GX44Gf44Go44GN44Gu44CB5rOi44Gu44Kq44OV44K744OD44OIXG4gICAgcGVhazogbnVtYmVyOyAvLyDlkbzlkLjjgpLmraPlvKbms6LjgajjgZfjgZ/jgajjgY3jga7jgIHms6Ljga7pq5jjgZVcbiAgICBjeWNsZTogbnVtYmVyOyAvLyDlkbzlkLjjgpLmraPlvKbms6LjgajjgZfjgZ/jgajjgY3jga7jgIHms6Ljga7lkajmnJ9cbiAgICB3ZWlnaHQ6IG51bWJlcjsgLy8g44OR44Op44Oh44O844K/44G444Gu6YeN44G/XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFjQTtBQUFBO0FBTUE7QUErREE7QUFDQTtBQUNBO0FBN0RBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUdBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFPQTtBQUlBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFLQTtBQUNBO0FBV0E7QUFBQTtBQXJFQTtBQTBFQTtBQVNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFBQTtBQTVCQTtBQTZCQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./Framework/src/effect/cubismbreath.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/effect/cubismeyeblink.ts\":\n/*!************************************************!*\\\n  !*** ./Framework/src/effect/cubismeyeblink.ts ***!\n  \\************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismEyeBlink = (function () {\\r\\n        function CubismEyeBlink(modelSetting) {\\r\\n            this._blinkingState = EyeState.EyeState_First;\\r\\n            this._nextBlinkingTime = 0.0;\\r\\n            this._stateStartTimeSeconds = 0.0;\\r\\n            this._blinkingIntervalSeconds = 4.0;\\r\\n            this._closingSeconds = 0.1;\\r\\n            this._closedSeconds = 0.05;\\r\\n            this._openingSeconds = 0.15;\\r\\n            this._userTimeSeconds = 0.0;\\r\\n            this._parameterIds = new csmVector();\\r\\n            if (modelSetting == null) {\\r\\n                return;\\r\\n            }\\r\\n            for (var i = 0; i < modelSetting.getEyeBlinkParameterCount(); ++i) {\\r\\n                this._parameterIds.pushBack(modelSetting.getEyeBlinkParameterId(i));\\r\\n            }\\r\\n        }\\r\\n        CubismEyeBlink.create = function (modelSetting) {\\r\\n            if (modelSetting === void 0) { modelSetting = null; }\\r\\n            return new CubismEyeBlink(modelSetting);\\r\\n        };\\r\\n        CubismEyeBlink.delete = function (eyeBlink) {\\r\\n            if (eyeBlink != null) {\\r\\n                eyeBlink = null;\\r\\n            }\\r\\n        };\\r\\n        CubismEyeBlink.prototype.setBlinkingInterval = function (blinkingInterval) {\\r\\n            this._blinkingIntervalSeconds = blinkingInterval;\\r\\n        };\\r\\n        CubismEyeBlink.prototype.setBlinkingSetting = function (closing, closed, opening) {\\r\\n            this._closingSeconds = closing;\\r\\n            this._closedSeconds = closed;\\r\\n            this._openingSeconds = opening;\\r\\n        };\\r\\n        CubismEyeBlink.prototype.setParameterIds = function (parameterIds) {\\r\\n            this._parameterIds = parameterIds;\\r\\n        };\\r\\n        CubismEyeBlink.prototype.getParameterIds = function () {\\r\\n            return this._parameterIds;\\r\\n        };\\r\\n        CubismEyeBlink.prototype.updateParameters = function (model, deltaTimeSeconds) {\\r\\n            this._userTimeSeconds += deltaTimeSeconds;\\r\\n            var parameterValue;\\r\\n            var t = 0.0;\\r\\n            switch (this._blinkingState) {\\r\\n                case EyeState.EyeState_Closing:\\r\\n                    t =\\r\\n                        (this._userTimeSeconds - this._stateStartTimeSeconds) /\\r\\n                            this._closingSeconds;\\r\\n                    if (t >= 1.0) {\\r\\n                        t = 1.0;\\r\\n                        this._blinkingState = EyeState.EyeState_Closed;\\r\\n                        this._stateStartTimeSeconds = this._userTimeSeconds;\\r\\n                    }\\r\\n                    parameterValue = 1.0 - t;\\r\\n                    break;\\r\\n                case EyeState.EyeState_Closed:\\r\\n                    t =\\r\\n                        (this._userTimeSeconds - this._stateStartTimeSeconds) /\\r\\n                            this._closedSeconds;\\r\\n                    if (t >= 1.0) {\\r\\n                        this._blinkingState = EyeState.EyeState_Opening;\\r\\n                        this._stateStartTimeSeconds = this._userTimeSeconds;\\r\\n                    }\\r\\n                    parameterValue = 0.0;\\r\\n                    break;\\r\\n                case EyeState.EyeState_Opening:\\r\\n                    t =\\r\\n                        (this._userTimeSeconds - this._stateStartTimeSeconds) /\\r\\n                            this._openingSeconds;\\r\\n                    if (t >= 1.0) {\\r\\n                        t = 1.0;\\r\\n                        this._blinkingState = EyeState.EyeState_Interval;\\r\\n                        this._nextBlinkingTime = this.determinNextBlinkingTiming();\\r\\n                    }\\r\\n                    parameterValue = t;\\r\\n                    break;\\r\\n                case EyeState.EyeState_Interval:\\r\\n                    if (this._nextBlinkingTime < this._userTimeSeconds) {\\r\\n                        this._blinkingState = EyeState.EyeState_Closing;\\r\\n                        this._stateStartTimeSeconds = this._userTimeSeconds;\\r\\n                    }\\r\\n                    parameterValue = 1.0;\\r\\n                    break;\\r\\n                case EyeState.EyeState_First:\\r\\n                default:\\r\\n                    this._blinkingState = EyeState.EyeState_Interval;\\r\\n                    this._nextBlinkingTime = this.determinNextBlinkingTiming();\\r\\n                    parameterValue = 1.0;\\r\\n                    break;\\r\\n            }\\r\\n            if (!CubismEyeBlink.CloseIfZero) {\\r\\n                parameterValue = -parameterValue;\\r\\n            }\\r\\n            for (var i = 0; i < this._parameterIds.getSize(); ++i) {\\r\\n                model.setParameterValueById(this._parameterIds.at(i), parameterValue);\\r\\n            }\\r\\n        };\\r\\n        CubismEyeBlink.prototype.determinNextBlinkingTiming = function () {\\r\\n            var r = Math.random();\\r\\n            return (this._userTimeSeconds + r * (2.0 * this._blinkingIntervalSeconds - 1.0));\\r\\n        };\\r\\n        CubismEyeBlink.CloseIfZero = true;\\r\\n        return CubismEyeBlink;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismEyeBlink = CubismEyeBlink;\\r\\n    var EyeState;\\r\\n    (function (EyeState) {\\r\\n        EyeState[EyeState[\\\"EyeState_First\\\"] = 0] = \\\"EyeState_First\\\";\\r\\n        EyeState[EyeState[\\\"EyeState_Interval\\\"] = 1] = \\\"EyeState_Interval\\\";\\r\\n        EyeState[EyeState[\\\"EyeState_Closing\\\"] = 2] = \\\"EyeState_Closing\\\";\\r\\n        EyeState[EyeState[\\\"EyeState_Closed\\\"] = 3] = \\\"EyeState_Closed\\\";\\r\\n        EyeState[EyeState[\\\"EyeState_Opening\\\"] = 4] = \\\"EyeState_Opening\\\";\\r\\n    })(EyeState = Live2DCubismFramework.EyeState || (Live2DCubismFramework.EyeState = {}));\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL2VmZmVjdC9jdWJpc21leWVibGluay50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvZWZmZWN0L2N1YmlzbWV5ZWJsaW5rLnRzP2Q4NjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGNzbXZlY3RvciB9IGZyb20gJy4uL3R5cGUvY3NtdmVjdG9yJztcbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBpY3ViaXNtbW9kZWxzZXR0aW5nIH0gZnJvbSAnLi4vaWN1YmlzbW1vZGVsc2V0dGluZyc7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3ViaXNtaWQgfSBmcm9tICcuLi9pZC9jdWJpc21pZCc7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3ViaXNtbW9kZWwgfSBmcm9tICcuLi9tb2RlbC9jdWJpc21tb2RlbCc7XG5pbXBvcnQgQ3ViaXNtTW9kZWwgPSBjdWJpc21tb2RlbC5DdWJpc21Nb2RlbDtcbmltcG9ydCBDdWJpc21JZEhhbmRsZSA9IGN1YmlzbWlkLkN1YmlzbUlkSGFuZGxlO1xuaW1wb3J0IElDdWJpc21Nb2RlbFNldHRpbmcgPSBpY3ViaXNtbW9kZWxzZXR0aW5nLklDdWJpc21Nb2RlbFNldHRpbmc7XG5pbXBvcnQgY3NtVmVjdG9yID0gY3NtdmVjdG9yLmNzbVZlY3RvcjtcblxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICAvKipcbiAgICog6Ieq5YuV44G+44Gw44Gf44GN5qmf6IO9XG4gICAqXG4gICAqIOiHquWLleOBvuOBsOOBn+OBjeapn+iDveOCkuaPkOS+m+OBmeOCi+OAglxuICAgKi9cbiAgZXhwb3J0IGNsYXNzIEN1YmlzbUV5ZUJsaW5rIHtcbiAgICAvKipcbiAgICAgKiDjgqTjg7Pjgrnjgr/jg7PjgrnjgpLkvZzmiJDjgZnjgotcbiAgICAgKiBAcGFyYW0gbW9kZWxTZXR0aW5nIOODouODh+ODq+OBruioreWumuaDheWgsVxuICAgICAqIEByZXR1cm4g5L2c5oiQ44GV44KM44Gf44Kk44Oz44K544K/44Oz44K5XG4gICAgICogQG5vdGUg5byV5pWw44GMTlVMTOOBruWgtOWQiOOAgeODkeODqeODoeODvOOCv0lE44GM6Kit5a6a44GV44KM44Gm44GE44Gq44GE56m644Gu44Kk44Oz44K544K/44Oz44K544KS5L2c5oiQ44GZ44KL44CCXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBjcmVhdGUoXG4gICAgICBtb2RlbFNldHRpbmc6IElDdWJpc21Nb2RlbFNldHRpbmcgPSBudWxsXG4gICAgKTogQ3ViaXNtRXllQmxpbmsge1xuICAgICAgcmV0dXJuIG5ldyBDdWJpc21FeWVCbGluayhtb2RlbFNldHRpbmcpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOOCpOODs+OCueOCv+ODs+OCueOBruegtOajhFxuICAgICAqIEBwYXJhbSBleWVCbGluayDlr77osaHjga5DdWJpc21FeWVCbGlua1xuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgZGVsZXRlKGV5ZUJsaW5rOiBDdWJpc21FeWVCbGluayk6IHZvaWQge1xuICAgICAgaWYgKGV5ZUJsaW5rICE9IG51bGwpIHtcbiAgICAgICAgZXllQmxpbmsgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOOBvuOBsOOBn+OBjeOBrumWk+malOOBruioreWumlxuICAgICAqIEBwYXJhbSBibGlua2luZ0ludGVydmFsIOOBvuOBsOOBn+OBjeOBrumWk+malOOBruaZgumWk1vnp5JdXG4gICAgICovXG4gICAgcHVibGljIHNldEJsaW5raW5nSW50ZXJ2YWwoYmxpbmtpbmdJbnRlcnZhbDogbnVtYmVyKTogdm9pZCB7XG4gICAgICB0aGlzLl9ibGlua2luZ0ludGVydmFsU2Vjb25kcyA9IGJsaW5raW5nSW50ZXJ2YWw7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44G+44Gw44Gf44GN44Gu44Oi44O844K344On44Oz44Gu6Kmz57Sw6Kit5a6aXG4gICAgICogQHBhcmFtIGNsb3NpbmcgICDjgb7jgbbjgZ/jgpLplonjgZjjgovli5XkvZzjga7miYDopoHmmYLplpNb56eSXVxuICAgICAqIEBwYXJhbSBjbG9zZWQgICAg44G+44G244Gf44KS6ZaJ44GY44Gm44GE44KL5YuV5L2c44Gu5omA6KaB5pmC6ZaTW+enkl1cbiAgICAgKiBAcGFyYW0gb3BlbmluZyAgIOOBvuOBtuOBn+OCkumWi+OBj+WLleS9nOOBruaJgOimgeaZgumWk1vnp5JdXG4gICAgICovXG4gICAgcHVibGljIHNldEJsaW5raW5nU2V0dGluZyhcbiAgICAgIGNsb3Npbmc6IG51bWJlcixcbiAgICAgIGNsb3NlZDogbnVtYmVyLFxuICAgICAgb3BlbmluZzogbnVtYmVyXG4gICAgKTogdm9pZCB7XG4gICAgICB0aGlzLl9jbG9zaW5nU2Vjb25kcyA9IGNsb3Npbmc7XG4gICAgICB0aGlzLl9jbG9zZWRTZWNvbmRzID0gY2xvc2VkO1xuICAgICAgdGhpcy5fb3BlbmluZ1NlY29uZHMgPSBvcGVuaW5nO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOOBvuOBsOOBn+OBjeOBleOBm+OCi+ODkeODqeODoeODvOOCv0lE44Gu44Oq44K544OI44Gu6Kit5a6aXG4gICAgICogQHBhcmFtIHBhcmFtZXRlcklkcyDjg5Hjg6njg6Hjg7zjgr/jga5JROOBruODquOCueODiFxuICAgICAqL1xuICAgIHB1YmxpYyBzZXRQYXJhbWV0ZXJJZHMocGFyYW1ldGVySWRzOiBjc21WZWN0b3I8Q3ViaXNtSWRIYW5kbGU+KTogdm9pZCB7XG4gICAgICB0aGlzLl9wYXJhbWV0ZXJJZHMgPSBwYXJhbWV0ZXJJZHM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44G+44Gw44Gf44GN44GV44Gb44KL44OR44Op44Oh44O844K/SUTjga7jg6rjgrnjg4jjga7lj5blvpdcbiAgICAgKiBAcmV0dXJuIOODkeODqeODoeODvOOCv0lE44Gu44Oq44K544OIXG4gICAgICovXG4gICAgcHVibGljIGdldFBhcmFtZXRlcklkcygpOiBjc21WZWN0b3I8Q3ViaXNtSWRIYW5kbGU+IHtcbiAgICAgIHJldHVybiB0aGlzLl9wYXJhbWV0ZXJJZHM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Oi44OH44Or44Gu44OR44Op44Oh44O844K/44Gu5pu05pawXG4gICAgICogQHBhcmFtIG1vZGVsIOWvvuixoeOBruODouODh+ODq1xuICAgICAqIEBwYXJhbSBkZWx0YVRpbWVTZWNvbmRzIOODh+ODq+OCv+aZgumWk1vnp5JdXG4gICAgICovXG4gICAgcHVibGljIHVwZGF0ZVBhcmFtZXRlcnMoXG4gICAgICBtb2RlbDogQ3ViaXNtTW9kZWwsXG4gICAgICBkZWx0YVRpbWVTZWNvbmRzOiBudW1iZXJcbiAgICApOiB2b2lkIHtcbiAgICAgIHRoaXMuX3VzZXJUaW1lU2Vjb25kcyArPSBkZWx0YVRpbWVTZWNvbmRzO1xuICAgICAgbGV0IHBhcmFtZXRlclZhbHVlOiBudW1iZXI7XG4gICAgICBsZXQgdCA9IDAuMDtcblxuICAgICAgc3dpdGNoICh0aGlzLl9ibGlua2luZ1N0YXRlKSB7XG4gICAgICAgIGNhc2UgRXllU3RhdGUuRXllU3RhdGVfQ2xvc2luZzpcbiAgICAgICAgICB0ID1cbiAgICAgICAgICAgICh0aGlzLl91c2VyVGltZVNlY29uZHMgLSB0aGlzLl9zdGF0ZVN0YXJ0VGltZVNlY29uZHMpIC9cbiAgICAgICAgICAgIHRoaXMuX2Nsb3NpbmdTZWNvbmRzO1xuXG4gICAgICAgICAgaWYgKHQgPj0gMS4wKSB7XG4gICAgICAgICAgICB0ID0gMS4wO1xuICAgICAgICAgICAgdGhpcy5fYmxpbmtpbmdTdGF0ZSA9IEV5ZVN0YXRlLkV5ZVN0YXRlX0Nsb3NlZDtcbiAgICAgICAgICAgIHRoaXMuX3N0YXRlU3RhcnRUaW1lU2Vjb25kcyA9IHRoaXMuX3VzZXJUaW1lU2Vjb25kcztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXJhbWV0ZXJWYWx1ZSA9IDEuMCAtIHQ7XG5cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBFeWVTdGF0ZS5FeWVTdGF0ZV9DbG9zZWQ6XG4gICAgICAgICAgdCA9XG4gICAgICAgICAgICAodGhpcy5fdXNlclRpbWVTZWNvbmRzIC0gdGhpcy5fc3RhdGVTdGFydFRpbWVTZWNvbmRzKSAvXG4gICAgICAgICAgICB0aGlzLl9jbG9zZWRTZWNvbmRzO1xuXG4gICAgICAgICAgaWYgKHQgPj0gMS4wKSB7XG4gICAgICAgICAgICB0aGlzLl9ibGlua2luZ1N0YXRlID0gRXllU3RhdGUuRXllU3RhdGVfT3BlbmluZztcbiAgICAgICAgICAgIHRoaXMuX3N0YXRlU3RhcnRUaW1lU2Vjb25kcyA9IHRoaXMuX3VzZXJUaW1lU2Vjb25kcztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXJhbWV0ZXJWYWx1ZSA9IDAuMDtcblxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIEV5ZVN0YXRlLkV5ZVN0YXRlX09wZW5pbmc6XG4gICAgICAgICAgdCA9XG4gICAgICAgICAgICAodGhpcy5fdXNlclRpbWVTZWNvbmRzIC0gdGhpcy5fc3RhdGVTdGFydFRpbWVTZWNvbmRzKSAvXG4gICAgICAgICAgICB0aGlzLl9vcGVuaW5nU2Vjb25kcztcblxuICAgICAgICAgIGlmICh0ID49IDEuMCkge1xuICAgICAgICAgICAgdCA9IDEuMDtcbiAgICAgICAgICAgIHRoaXMuX2JsaW5raW5nU3RhdGUgPSBFeWVTdGF0ZS5FeWVTdGF0ZV9JbnRlcnZhbDtcbiAgICAgICAgICAgIHRoaXMuX25leHRCbGlua2luZ1RpbWUgPSB0aGlzLmRldGVybWluTmV4dEJsaW5raW5nVGltaW5nKCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGFyYW1ldGVyVmFsdWUgPSB0O1xuXG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgRXllU3RhdGUuRXllU3RhdGVfSW50ZXJ2YWw6XG4gICAgICAgICAgaWYgKHRoaXMuX25leHRCbGlua2luZ1RpbWUgPCB0aGlzLl91c2VyVGltZVNlY29uZHMpIHtcbiAgICAgICAgICAgIHRoaXMuX2JsaW5raW5nU3RhdGUgPSBFeWVTdGF0ZS5FeWVTdGF0ZV9DbG9zaW5nO1xuICAgICAgICAgICAgdGhpcy5fc3RhdGVTdGFydFRpbWVTZWNvbmRzID0gdGhpcy5fdXNlclRpbWVTZWNvbmRzO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHBhcmFtZXRlclZhbHVlID0gMS4wO1xuXG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgRXllU3RhdGUuRXllU3RhdGVfRmlyc3Q6XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgdGhpcy5fYmxpbmtpbmdTdGF0ZSA9IEV5ZVN0YXRlLkV5ZVN0YXRlX0ludGVydmFsO1xuICAgICAgICAgIHRoaXMuX25leHRCbGlua2luZ1RpbWUgPSB0aGlzLmRldGVybWluTmV4dEJsaW5raW5nVGltaW5nKCk7XG5cbiAgICAgICAgICBwYXJhbWV0ZXJWYWx1ZSA9IDEuMDtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgaWYgKCFDdWJpc21FeWVCbGluay5DbG9zZUlmWmVybykge1xuICAgICAgICBwYXJhbWV0ZXJWYWx1ZSA9IC1wYXJhbWV0ZXJWYWx1ZTtcbiAgICAgIH1cblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9wYXJhbWV0ZXJJZHMuZ2V0U2l6ZSgpOyArK2kpIHtcbiAgICAgICAgbW9kZWwuc2V0UGFyYW1ldGVyVmFsdWVCeUlkKHRoaXMuX3BhcmFtZXRlcklkcy5hdChpKSwgcGFyYW1ldGVyVmFsdWUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOOCs+ODs+OCueODiOODqeOCr+OCv1xuICAgICAqIEBwYXJhbSBtb2RlbFNldHRpbmcg44Oi44OH44Or44Gu6Kit5a6a5oOF5aCxXG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKG1vZGVsU2V0dGluZzogSUN1YmlzbU1vZGVsU2V0dGluZykge1xuICAgICAgdGhpcy5fYmxpbmtpbmdTdGF0ZSA9IEV5ZVN0YXRlLkV5ZVN0YXRlX0ZpcnN0O1xuICAgICAgdGhpcy5fbmV4dEJsaW5raW5nVGltZSA9IDAuMDtcbiAgICAgIHRoaXMuX3N0YXRlU3RhcnRUaW1lU2Vjb25kcyA9IDAuMDtcbiAgICAgIHRoaXMuX2JsaW5raW5nSW50ZXJ2YWxTZWNvbmRzID0gNC4wO1xuICAgICAgdGhpcy5fY2xvc2luZ1NlY29uZHMgPSAwLjE7XG4gICAgICB0aGlzLl9jbG9zZWRTZWNvbmRzID0gMC4wNTtcbiAgICAgIHRoaXMuX29wZW5pbmdTZWNvbmRzID0gMC4xNTtcbiAgICAgIHRoaXMuX3VzZXJUaW1lU2Vjb25kcyA9IDAuMDtcbiAgICAgIHRoaXMuX3BhcmFtZXRlcklkcyA9IG5ldyBjc21WZWN0b3I8Q3ViaXNtSWRIYW5kbGU+KCk7XG5cbiAgICAgIGlmIChtb2RlbFNldHRpbmcgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbW9kZWxTZXR0aW5nLmdldEV5ZUJsaW5rUGFyYW1ldGVyQ291bnQoKTsgKytpKSB7XG4gICAgICAgIHRoaXMuX3BhcmFtZXRlcklkcy5wdXNoQmFjayhtb2RlbFNldHRpbmcuZ2V0RXllQmxpbmtQYXJhbWV0ZXJJZChpKSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5qyh44Gu556s44GN44Gu44K/44Kk44Of44Oz44Kw44Gu5rG65a6aXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIOasoeOBruOBvuOBsOOBn+OBjeOCkuihjOOBhuaZguWIu1vnp5JdXG4gICAgICovXG4gICAgcHVibGljIGRldGVybWluTmV4dEJsaW5raW5nVGltaW5nKCk6IG51bWJlciB7XG4gICAgICBjb25zdCByOiBudW1iZXIgPSBNYXRoLnJhbmRvbSgpO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgdGhpcy5fdXNlclRpbWVTZWNvbmRzICsgciAqICgyLjAgKiB0aGlzLl9ibGlua2luZ0ludGVydmFsU2Vjb25kcyAtIDEuMClcbiAgICAgICk7XG4gICAgfVxuXG4gICAgX2JsaW5raW5nU3RhdGU6IG51bWJlcjsgLy8g54++5Zyo44Gu54q25oWLXG4gICAgX3BhcmFtZXRlcklkczogY3NtVmVjdG9yPEN1YmlzbUlkSGFuZGxlPjsgLy8g5pON5L2c5a++6LGh44Gu44OR44Op44Oh44O844K/44GuSUTjga7jg6rjgrnjg4hcbiAgICBfbmV4dEJsaW5raW5nVGltZTogbnVtYmVyOyAvLyDmrKHjga7jgb7jgbDjgZ/jgY3jga7mmYLliLtb56eSXVxuICAgIF9zdGF0ZVN0YXJ0VGltZVNlY29uZHM6IG51bWJlcjsgLy8g54++5Zyo44Gu54q25oWL44GM6ZaL5aeL44GX44Gf5pmC5Yi7W+enkl1cbiAgICBfYmxpbmtpbmdJbnRlcnZhbFNlY29uZHM6IG51bWJlcjsgLy8g44G+44Gw44Gf44GN44Gu6ZaT6ZqUW+enkl1cbiAgICBfY2xvc2luZ1NlY29uZHM6IG51bWJlcjsgLy8g44G+44G244Gf44KS6ZaJ44GY44KL5YuV5L2c44Gu5omA6KaB5pmC6ZaTW+enkl1cbiAgICBfY2xvc2VkU2Vjb25kczogbnVtYmVyOyAvLyDjgb7jgbbjgZ/jgpLplonjgZjjgabjgYTjgovli5XkvZzjga7miYDopoHmmYLplpNb56eSXVxuICAgIF9vcGVuaW5nU2Vjb25kczogbnVtYmVyOyAvLyDjgb7jgbbjgZ/jgpLplovjgY/li5XkvZzjga7miYDopoHmmYLplpNb56eSXVxuICAgIF91c2VyVGltZVNlY29uZHM6IG51bWJlcjsgLy8g44OH44Or44K/5pmC6ZaT44Gu56mN566X5YCkW+enkl1cblxuICAgIC8qKlxuICAgICAqIElE44Gn5oyH5a6a44GV44KM44Gf55uu44Gu44OR44Op44Oh44O844K/44GM44CBMOOBruOBqOOBjeOBq+mWieOBmOOCi+OBquOCiSB0cnVlIOOAgTHjga7mmYLjgavplonjgZjjgovjgarjgokgZmFsc2Ug44CCXG4gICAgICovXG4gICAgc3RhdGljIHJlYWRvbmx5IENsb3NlSWZaZXJvOiBib29sZWFuID0gdHJ1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiDjgb7jgbDjgZ/jgY3jga7nirbmhYtcbiAgICpcbiAgICog44G+44Gw44Gf44GN44Gu54q25oWL44KS6KGo44GZ5YiX5oyZ5Z6LXG4gICAqL1xuICBleHBvcnQgZW51bSBFeWVTdGF0ZSB7XG4gICAgRXllU3RhdGVfRmlyc3QgPSAwLCAvLyDliJ3mnJ/nirbmhYtcbiAgICBFeWVTdGF0ZV9JbnRlcnZhbCwgLy8g44G+44Gw44Gf44GN44GX44Gm44GE44Gq44GE54q25oWLXG4gICAgRXllU3RhdGVfQ2xvc2luZywgLy8g44G+44G244Gf44GM6ZaJ44GY44Gm44GE44GP6YCU5Lit44Gu54q25oWLXG4gICAgRXllU3RhdGVfQ2xvc2VkLCAvLyDjgb7jgbbjgZ/jgYzplonjgZjjgabjgYTjgovnirbmhYtcbiAgICBFeWVTdGF0ZV9PcGVuaW5nIC8vIOOBvuOBtuOBn+OBjOmWi+OBhOOBpuOBhOOBj+mAlOS4reOBrueKtuaFi1xuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7O0FBT0E7QUFPQTtBQUVBO0FBQUE7QUFNQTtBQXFKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBaEtBO0FBQ0E7QUFFQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQVFBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFPQTtBQUlBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQStCQTtBQUNBO0FBQ0E7QUFHQTtBQWVBO0FBQ0E7QUFBQTtBQW5NQTtBQTBNQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./Framework/src/effect/cubismeyeblink.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/effect/cubismpose.ts\":\n/*!********************************************!*\\\n  !*** ./Framework/src/effect/cubismpose.ts ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar cubismjson_1 = __webpack_require__(/*! ../utils/cubismjson */ \\\"./Framework/src/utils/cubismjson.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismJson = cubismjson_1.Live2DCubismFramework.CubismJson;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var Epsilon = 0.001;\\r\\n    var DefaultFadeInSeconds = 0.5;\\r\\n    var FadeIn = 'FadeInTime';\\r\\n    var Link = 'Link';\\r\\n    var Groups = 'Groups';\\r\\n    var Id = 'Id';\\r\\n    var CubismPose = (function () {\\r\\n        function CubismPose() {\\r\\n            this._fadeTimeSeconds = DefaultFadeInSeconds;\\r\\n            this._lastModel = null;\\r\\n            this._partGroups = new csmVector();\\r\\n            this._partGroupCounts = new csmVector();\\r\\n        }\\r\\n        CubismPose.create = function (pose3json, size) {\\r\\n            var ret = new CubismPose();\\r\\n            var json = CubismJson.create(pose3json, size);\\r\\n            var root = json.getRoot();\\r\\n            if (!root.getValueByString(FadeIn).isNull()) {\\r\\n                ret._fadeTimeSeconds = root\\r\\n                    .getValueByString(FadeIn)\\r\\n                    .toFloat(DefaultFadeInSeconds);\\r\\n                if (ret._fadeTimeSeconds <= 0.0) {\\r\\n                    ret._fadeTimeSeconds = DefaultFadeInSeconds;\\r\\n                }\\r\\n            }\\r\\n            var poseListInfo = root.getValueByString(Groups);\\r\\n            var poseCount = poseListInfo.getSize();\\r\\n            for (var poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\\r\\n                var idListInfo = poseListInfo.getValueByIndex(poseIndex);\\r\\n                var idCount = idListInfo.getSize();\\r\\n                var groupCount = 0;\\r\\n                for (var groupIndex = 0; groupIndex < idCount; ++groupIndex) {\\r\\n                    var partInfo = idListInfo.getValueByIndex(groupIndex);\\r\\n                    var partData = new PartData();\\r\\n                    var parameterId = CubismFramework.getIdManager().getId(partInfo.getValueByString(Id).getRawString());\\r\\n                    partData.partId = parameterId;\\r\\n                    if (!partInfo.getValueByString(Link).isNull()) {\\r\\n                        var linkListInfo = partInfo.getValueByString(Link);\\r\\n                        var linkCount = linkListInfo.getSize();\\r\\n                        for (var linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\\r\\n                            var linkPart = new PartData();\\r\\n                            var linkId = CubismFramework.getIdManager().getId(linkListInfo.getValueByIndex(linkIndex).getString());\\r\\n                            linkPart.partId = linkId;\\r\\n                            partData.link.pushBack(linkPart);\\r\\n                        }\\r\\n                    }\\r\\n                    ret._partGroups.pushBack(partData.clone());\\r\\n                    ++groupCount;\\r\\n                }\\r\\n                ret._partGroupCounts.pushBack(groupCount);\\r\\n            }\\r\\n            CubismJson.delete(json);\\r\\n            return ret;\\r\\n        };\\r\\n        CubismPose.delete = function (pose) {\\r\\n            if (pose != null) {\\r\\n                pose = null;\\r\\n            }\\r\\n        };\\r\\n        CubismPose.prototype.updateParameters = function (model, deltaTimeSeconds) {\\r\\n            if (model != this._lastModel) {\\r\\n                this.reset(model);\\r\\n            }\\r\\n            this._lastModel = model;\\r\\n            if (deltaTimeSeconds < 0.0) {\\r\\n                deltaTimeSeconds = 0.0;\\r\\n            }\\r\\n            var beginIndex = 0;\\r\\n            for (var i = 0; i < this._partGroupCounts.getSize(); i++) {\\r\\n                var partGroupCount = this._partGroupCounts.at(i);\\r\\n                this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\\r\\n                beginIndex += partGroupCount;\\r\\n            }\\r\\n            this.copyPartOpacities(model);\\r\\n        };\\r\\n        CubismPose.prototype.reset = function (model) {\\r\\n            var beginIndex = 0;\\r\\n            for (var i = 0; i < this._partGroupCounts.getSize(); ++i) {\\r\\n                var groupCount = this._partGroupCounts.at(i);\\r\\n                for (var j = beginIndex; j < beginIndex + groupCount; ++j) {\\r\\n                    this._partGroups.at(j).initialize(model);\\r\\n                    var partsIndex = this._partGroups.at(j).partIndex;\\r\\n                    var paramIndex = this._partGroups.at(j).parameterIndex;\\r\\n                    if (partsIndex < 0) {\\r\\n                        continue;\\r\\n                    }\\r\\n                    model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1.0 : 0.0);\\r\\n                    model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1.0 : 0.0);\\r\\n                    for (var k = 0; k < this._partGroups.at(j).link.getSize(); ++k) {\\r\\n                        this._partGroups\\r\\n                            .at(j)\\r\\n                            .link.at(k)\\r\\n                            .initialize(model);\\r\\n                    }\\r\\n                }\\r\\n                beginIndex += groupCount;\\r\\n            }\\r\\n        };\\r\\n        CubismPose.prototype.copyPartOpacities = function (model) {\\r\\n            for (var groupIndex = 0; groupIndex < this._partGroups.getSize(); ++groupIndex) {\\r\\n                var partData = this._partGroups.at(groupIndex);\\r\\n                if (partData.link.getSize() == 0) {\\r\\n                    continue;\\r\\n                }\\r\\n                var partIndex = this._partGroups.at(groupIndex).partIndex;\\r\\n                var opacity = model.getPartOpacityByIndex(partIndex);\\r\\n                for (var linkIndex = 0; linkIndex < partData.link.getSize(); ++linkIndex) {\\r\\n                    var linkPart = partData.link.at(linkIndex);\\r\\n                    var linkPartIndex = linkPart.partIndex;\\r\\n                    if (linkPartIndex < 0) {\\r\\n                        continue;\\r\\n                    }\\r\\n                    model.setPartOpacityByIndex(linkPartIndex, opacity);\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismPose.prototype.doFade = function (model, deltaTimeSeconds, beginIndex, partGroupCount) {\\r\\n            var visiblePartIndex = -1;\\r\\n            var newOpacity = 1.0;\\r\\n            var phi = 0.5;\\r\\n            var backOpacityThreshold = 0.15;\\r\\n            for (var i = beginIndex; i < beginIndex + partGroupCount; ++i) {\\r\\n                var partIndex = this._partGroups.at(i).partIndex;\\r\\n                var paramIndex = this._partGroups.at(i).parameterIndex;\\r\\n                if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\\r\\n                    if (visiblePartIndex >= 0) {\\r\\n                        break;\\r\\n                    }\\r\\n                    visiblePartIndex = i;\\r\\n                    newOpacity = model.getPartOpacityByIndex(partIndex);\\r\\n                    newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\\r\\n                    if (newOpacity > 1.0) {\\r\\n                        newOpacity = 1.0;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            if (visiblePartIndex < 0) {\\r\\n                visiblePartIndex = 0;\\r\\n                newOpacity = 1.0;\\r\\n            }\\r\\n            for (var i = beginIndex; i < beginIndex + partGroupCount; ++i) {\\r\\n                var partsIndex = this._partGroups.at(i).partIndex;\\r\\n                if (visiblePartIndex == i) {\\r\\n                    model.setPartOpacityByIndex(partsIndex, newOpacity);\\r\\n                }\\r\\n                else {\\r\\n                    var opacity = model.getPartOpacityByIndex(partsIndex);\\r\\n                    var a1 = void 0;\\r\\n                    if (newOpacity < phi) {\\r\\n                        a1 = (newOpacity * (phi - 1)) / phi + 1.0;\\r\\n                    }\\r\\n                    else {\\r\\n                        a1 = ((1 - newOpacity) * phi) / (1.0 - phi);\\r\\n                    }\\r\\n                    var backOpacity = (1.0 - a1) * (1.0 - newOpacity);\\r\\n                    if (backOpacity > backOpacityThreshold) {\\r\\n                        a1 = 1.0 - backOpacityThreshold / (1.0 - newOpacity);\\r\\n                    }\\r\\n                    if (opacity > a1) {\\r\\n                        opacity = a1;\\r\\n                    }\\r\\n                    model.setPartOpacityByIndex(partsIndex, opacity);\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        return CubismPose;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPose = CubismPose;\\r\\n    var PartData = (function () {\\r\\n        function PartData(v) {\\r\\n            this.parameterIndex = 0;\\r\\n            this.partIndex = 0;\\r\\n            this.link = new csmVector();\\r\\n            if (v != undefined) {\\r\\n                this.partId = v.partId;\\r\\n                for (var ite = v.link.begin(); ite.notEqual(v.link.end()); ite.preIncrement()) {\\r\\n                    this.link.pushBack(ite.ptr().clone());\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        PartData.prototype.assignment = function (v) {\\r\\n            this.partId = v.partId;\\r\\n            for (var ite = v.link.begin(); ite.notEqual(v.link.end()); ite.preIncrement()) {\\r\\n                this.link.pushBack(ite.ptr().clone());\\r\\n            }\\r\\n            return this;\\r\\n        };\\r\\n        PartData.prototype.initialize = function (model) {\\r\\n            this.parameterIndex = model.getParameterIndex(this.partId);\\r\\n            this.partIndex = model.getPartIndex(this.partId);\\r\\n            model.setParameterValueByIndex(this.parameterIndex, 1);\\r\\n        };\\r\\n        PartData.prototype.clone = function () {\\r\\n            var clonePartData = new PartData();\\r\\n            clonePartData.partId = this.partId;\\r\\n            clonePartData.parameterIndex = this.parameterIndex;\\r\\n            clonePartData.partIndex = this.partIndex;\\r\\n            clonePartData.link = new csmVector();\\r\\n            for (var ite = this.link.begin(); ite.notEqual(this.link.end()); ite.increment()) {\\r\\n                clonePartData.link.pushBack(ite.ptr().clone());\\r\\n            }\\r\\n            return clonePartData;\\r\\n        };\\r\\n        return PartData;\\r\\n    }());\\r\\n    Live2DCubismFramework.PartData = PartData;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/effect/cubismpose.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/icubismmodelsetting.ts\":\n/*!**********************************************!*\\\n  !*** ./Framework/src/icubismmodelsetting.ts ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var ICubismModelSetting = (function () {\\r\\n        function ICubismModelSetting() {\\r\\n        }\\r\\n        return ICubismModelSetting;\\r\\n    }());\\r\\n    Live2DCubismFramework.ICubismModelSetting = ICubismModelSetting;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/icubismmodelsetting.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/id/cubismid.ts\":\n/*!**************************************!*\\\n  !*** ./Framework/src/id/cubismid.ts ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar csmstring_1 = __webpack_require__(/*! ../type/csmstring */ \\\"./Framework/src/type/csmstring.ts\\\");\\r\\nvar csmString = csmstring_1.Live2DCubismFramework.csmString;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismId = (function () {\\r\\n        function CubismId(id) {\\r\\n            if (typeof id === 'string') {\\r\\n                this._id = new csmString(id);\\r\\n                return;\\r\\n            }\\r\\n            this._id = id;\\r\\n        }\\r\\n        CubismId.prototype.getString = function () {\\r\\n            return this._id;\\r\\n        };\\r\\n        CubismId.prototype.isEqual = function (c) {\\r\\n            if (typeof c === 'string') {\\r\\n                return this._id.isEqual(c);\\r\\n            }\\r\\n            else if (c instanceof csmString) {\\r\\n                return this._id.isEqual(c.s);\\r\\n            }\\r\\n            else if (c instanceof CubismId) {\\r\\n                return this._id.isEqual(c._id.s);\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        CubismId.prototype.isNotEqual = function (c) {\\r\\n            if (typeof c == 'string') {\\r\\n                return !this._id.isEqual(c);\\r\\n            }\\r\\n            else if (c instanceof csmString) {\\r\\n                return !this._id.isEqual(c.s);\\r\\n            }\\r\\n            else if (c instanceof CubismId) {\\r\\n                return !this._id.isEqual(c._id.s);\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        return CubismId;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismId = CubismId;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL2lkL2N1YmlzbWlkLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vRnJhbWV3b3JrL3NyYy9pZC9jdWJpc21pZC50cz8xZjE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjc21zdHJpbmcgfSBmcm9tICcuLi90eXBlL2NzbXN0cmluZyc7XG5pbXBvcnQgY3NtU3RyaW5nID0gY3Ntc3RyaW5nLmNzbVN0cmluZztcblxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICAvKipcbiAgICog44OR44Op44Oh44O844K/5ZCN44O744OR44O844OE5ZCN44O7RHJhd2FibGXlkI3jgpLkv53mjIFcbiAgICpcbiAgICog44OR44Op44Oh44O844K/5ZCN44O744OR44O844OE5ZCN44O7RHJhd2FibGXlkI3jgpLkv53mjIHjgZnjgovjgq/jg6njgrnjgIJcbiAgICovXG4gIGV4cG9ydCBjbGFzcyBDdWJpc21JZCB7XG4gICAgLyoqXG4gICAgICogSUTlkI3jgpLlj5blvpfjgZnjgotcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0U3RyaW5nKCk6IGNzbVN0cmluZyB7XG4gICAgICByZXR1cm4gdGhpcy5faWQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKGlkOiBzdHJpbmcgfCBjc21TdHJpbmcpIHtcbiAgICAgIGlmICh0eXBlb2YgaWQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRoaXMuX2lkID0gbmV3IGNzbVN0cmluZyhpZCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5faWQgPSBpZDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBpZOOCkuavlOi8g1xuICAgICAqIEBwYXJhbSBjIOavlOi8g+OBmeOCi2lkXG4gICAgICogQHJldHVybiDlkIzjgZjjgarjgonjgbB0cnVlLOeVsOOBquOBo+OBpuOBhOOCjOOBsGZhbHNl44KS6L+U44GZXG4gICAgICovXG4gICAgcHVibGljIGlzRXF1YWwoYzogc3RyaW5nIHwgY3NtU3RyaW5nIHwgQ3ViaXNtSWQpOiBib29sZWFuIHtcbiAgICAgIGlmICh0eXBlb2YgYyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lkLmlzRXF1YWwoYyk7XG4gICAgICB9IGVsc2UgaWYgKGMgaW5zdGFuY2VvZiBjc21TdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lkLmlzRXF1YWwoYy5zKTtcbiAgICAgIH0gZWxzZSBpZiAoYyBpbnN0YW5jZW9mIEN1YmlzbUlkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pZC5pc0VxdWFsKGMuX2lkLnMpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGlk44KS5q+U6LyDXG4gICAgICogQHBhcmFtIGMg5q+U6LyD44GZ44KLaWRcbiAgICAgKiBAcmV0dXJuIOWQjOOBmOOBquOCieOBsHRydWUs55Ww44Gq44Gj44Gm44GE44KM44GwZmFsc2XjgpLov5TjgZlcbiAgICAgKi9cbiAgICBwdWJsaWMgaXNOb3RFcXVhbChjOiBzdHJpbmcgfCBjc21TdHJpbmcgfCBDdWJpc21JZCk6IGJvb2xlYW4ge1xuICAgICAgaWYgKHR5cGVvZiBjID09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5faWQuaXNFcXVhbChjKTtcbiAgICAgIH0gZWxzZSBpZiAoYyBpbnN0YW5jZW9mIGNzbVN0cmluZykge1xuICAgICAgICByZXR1cm4gIXRoaXMuX2lkLmlzRXF1YWwoYy5zKTtcbiAgICAgIH0gZWxzZSBpZiAoYyBpbnN0YW5jZW9mIEN1YmlzbUlkKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5faWQuaXNFcXVhbChjLl9pZC5zKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBwcml2YXRlIF9pZDogY3NtU3RyaW5nOyAvLyBJROWQjVxuICB9XG5cbiAgZXhwb3J0IGRlY2xhcmUgdHlwZSBDdWJpc21JZEhhbmRsZSA9IEN1YmlzbUlkO1xufVxuIl0sIm1hcHBpbmdzIjoiOztBQU9BO0FBQ0E7QUFFQTtBQUFBO0FBTUE7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQWRBO0FBQ0E7QUFDQTtBQW1CQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUFBO0FBckRBO0FBd0RBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Framework/src/id/cubismid.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/id/cubismidmanager.ts\":\n/*!*********************************************!*\\\n  !*** ./Framework/src/id/cubismidmanager.ts ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar cubismid_1 = __webpack_require__(/*! ./cubismid */ \\\"./Framework/src/id/cubismid.ts\\\");\\r\\nvar CubismId = cubismid_1.Live2DCubismFramework.CubismId;\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismIdManager = (function () {\\r\\n        function CubismIdManager() {\\r\\n            this._ids = new csmVector();\\r\\n        }\\r\\n        CubismIdManager.prototype.release = function () {\\r\\n            for (var i = 0; i < this._ids.getSize(); ++i) {\\r\\n                this._ids.set(i, void 0);\\r\\n            }\\r\\n            this._ids = null;\\r\\n        };\\r\\n        CubismIdManager.prototype.registerIds = function (ids) {\\r\\n            for (var i = 0; i < ids.length; i++) {\\r\\n                this.registerId(ids[i]);\\r\\n            }\\r\\n        };\\r\\n        CubismIdManager.prototype.registerId = function (id) {\\r\\n            var result = null;\\r\\n            if ('string' == typeof id) {\\r\\n                if ((result = this.findId(id)) != null) {\\r\\n                    return result;\\r\\n                }\\r\\n                result = new CubismId(id);\\r\\n                this._ids.pushBack(result);\\r\\n            }\\r\\n            else {\\r\\n                return this.registerId(id.s);\\r\\n            }\\r\\n            return result;\\r\\n        };\\r\\n        CubismIdManager.prototype.getId = function (id) {\\r\\n            return this.registerId(id);\\r\\n        };\\r\\n        CubismIdManager.prototype.isExist = function (id) {\\r\\n            if ('string' == typeof id) {\\r\\n                return this.findId(id) != null;\\r\\n            }\\r\\n            return this.isExist(id.s);\\r\\n        };\\r\\n        CubismIdManager.prototype.findId = function (id) {\\r\\n            for (var i = 0; i < this._ids.getSize(); ++i) {\\r\\n                if (this._ids\\r\\n                    .at(i)\\r\\n                    .getString()\\r\\n                    .isEqual(id)) {\\r\\n                    return this._ids.at(i);\\r\\n                }\\r\\n            }\\r\\n            return null;\\r\\n        };\\r\\n        return CubismIdManager;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismIdManager = CubismIdManager;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL2lkL2N1YmlzbWlkbWFuYWdlci50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvaWQvY3ViaXNtaWRtYW5hZ2VyLnRzPzZmOWUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGNzbXZlY3RvciB9IGZyb20gJy4uL3R5cGUvY3NtdmVjdG9yJztcbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjdWJpc21pZCB9IGZyb20gJy4vY3ViaXNtaWQnO1xuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGNzbXN0cmluZyB9IGZyb20gJy4uL3R5cGUvY3Ntc3RyaW5nJztcbmltcG9ydCBjc21TdHJpbmcgPSBjc21zdHJpbmcuY3NtU3RyaW5nO1xuaW1wb3J0IEN1YmlzbUlkID0gY3ViaXNtaWQuQ3ViaXNtSWQ7XG5pbXBvcnQgY3NtVmVjdG9yID0gY3NtdmVjdG9yLmNzbVZlY3RvcjtcblxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICAvKipcbiAgICogSUTlkI3jga7nrqHnkIZcbiAgICpcbiAgICogSUTlkI3jgpLnrqHnkIbjgZnjgovjgIJcbiAgICovXG4gIGV4cG9ydCBjbGFzcyBDdWJpc21JZE1hbmFnZXIge1xuICAgIC8qKlxuICAgICAqIOOCs+ODs+OCueODiOODqeOCr+OCv1xuICAgICAqL1xuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICAgIHRoaXMuX2lkcyA9IG5ldyBjc21WZWN0b3I8Q3ViaXNtSWQ+KCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44OH44K544OI44Op44Kv44K/55u45b2T44Gu5Yem55CGXG4gICAgICovXG4gICAgcHVibGljIHJlbGVhc2UoKTogdm9pZCB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX2lkcy5nZXRTaXplKCk7ICsraSkge1xuICAgICAgICB0aGlzLl9pZHMuc2V0KGksIHZvaWQgMCk7XG4gICAgICB9XG4gICAgICB0aGlzLl9pZHMgPSBudWxsO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIElE5ZCN44KS44Oq44K544OI44GL44KJ55m76YyyXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaWRzIElE5ZCN44Oq44K544OIXG4gICAgICogQHBhcmFtIGNvdW50IElE44Gu5YCL5pWwXG4gICAgICovXG4gICAgcHVibGljIHJlZ2lzdGVySWRzKGlkczogc3RyaW5nW10gfCBjc21TdHJpbmdbXSk6IHZvaWQge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdGhpcy5yZWdpc3RlcklkKGlkc1tpXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSUTlkI3jgpLnmbvpjLJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCBJROWQjVxuICAgICAqL1xuICAgIHB1YmxpYyByZWdpc3RlcklkKGlkOiBzdHJpbmcgfCBjc21TdHJpbmcpOiBDdWJpc21JZCB7XG4gICAgICBsZXQgcmVzdWx0OiBDdWJpc21JZCA9IG51bGw7XG5cbiAgICAgIGlmICgnc3RyaW5nJyA9PSB0eXBlb2YgaWQpIHtcbiAgICAgICAgaWYgKChyZXN1bHQgPSB0aGlzLmZpbmRJZChpZCkpICE9IG51bGwpIHtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzdWx0ID0gbmV3IEN1YmlzbUlkKGlkKTtcbiAgICAgICAgdGhpcy5faWRzLnB1c2hCYWNrKHJlc3VsdCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdGhpcy5yZWdpc3RlcklkKGlkLnMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIElE5ZCN44GL44KJSUTjgpLlj5blvpfjgZnjgotcbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCBJROWQjVxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRJZChpZDogY3NtU3RyaW5nIHwgc3RyaW5nKTogQ3ViaXNtSWQge1xuICAgICAgcmV0dXJuIHRoaXMucmVnaXN0ZXJJZChpZCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSUTlkI3jgYvjgolJROOBrueiuuiqjVxuICAgICAqXG4gICAgICogQHJldHVybiB0cnVlIOWtmOWcqOOBmeOCi1xuICAgICAqIEByZXR1cm4gZmFsc2Ug5a2Y5Zyo44GX44Gq44GEXG4gICAgICovXG4gICAgcHVibGljIGlzRXhpc3QoaWQ6IGNzbVN0cmluZyB8IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgICAgaWYgKCdzdHJpbmcnID09IHR5cGVvZiBpZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5maW5kSWQoaWQpICE9IG51bGw7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5pc0V4aXN0KGlkLnMpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIElE5ZCN44GL44KJSUTjgpLmpJzntKLjgZnjgovjgIJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCBJROWQjVxuICAgICAqIEByZXR1cm4g55m76Yyy44GV44KM44Gm44GE44KLSUTjgILjgarjgZHjgozjgbBOVUxM44CCXG4gICAgICovXG4gICAgcHJpdmF0ZSBmaW5kSWQoaWQ6IHN0cmluZyk6IEN1YmlzbUlkIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5faWRzLmdldFNpemUoKTsgKytpKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICB0aGlzLl9pZHNcbiAgICAgICAgICAgIC5hdChpKVxuICAgICAgICAgICAgLmdldFN0cmluZygpXG4gICAgICAgICAgICAuaXNFcXVhbChpZClcbiAgICAgICAgKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuX2lkcy5hdChpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBwcml2YXRlIF9pZHM6IGNzbVZlY3RvcjxDdWJpc21JZD47IC8vIOeZu+mMsuOBleOCjOOBpuOBhOOCi0lE44Gu44Oq44K544OIXG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFPQTtBQUNBO0FBR0E7QUFDQTtBQUVBO0FBQUE7QUFNQTtBQUlBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUdBO0FBQUE7QUFoR0E7QUFpR0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./Framework/src/id/cubismidmanager.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/live2dcubismframework.ts\":\n/*!************************************************!*\\\n  !*** ./Framework/src/live2dcubismframework.ts ***!\n  \\************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismjson_1 = __webpack_require__(/*! ./utils/cubismjson */ \\\"./Framework/src/utils/cubismjson.ts\\\");\\r\\nvar cubismidmanager_1 = __webpack_require__(/*! ./id/cubismidmanager */ \\\"./Framework/src/id/cubismidmanager.ts\\\");\\r\\nvar cubismrenderer_1 = __webpack_require__(/*! ./rendering/cubismrenderer */ \\\"./Framework/src/rendering/cubismrenderer.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ./utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar Value = cubismjson_1.Live2DCubismFramework.Value;\\r\\nvar CubismIdManager = cubismidmanager_1.Live2DCubismFramework.CubismIdManager;\\r\\nvar CubismRenderer = cubismrenderer_1.Live2DCubismFramework.CubismRenderer;\\r\\nfunction strtod(s, endPtr) {\\r\\n    var index = 0;\\r\\n    for (var i = 1;; i++) {\\r\\n        var testC = s.slice(i - 1, i);\\r\\n        if (testC == 'e' || testC == '-' || testC == 'E') {\\r\\n            continue;\\r\\n        }\\r\\n        var test = s.substring(0, i);\\r\\n        var number = Number(test);\\r\\n        if (isNaN(number)) {\\r\\n            break;\\r\\n        }\\r\\n        index = i;\\r\\n    }\\r\\n    var d = parseFloat(s);\\r\\n    if (isNaN(d)) {\\r\\n        d = NaN;\\r\\n    }\\r\\n    endPtr[0] = s.slice(index);\\r\\n    return d;\\r\\n}\\r\\nexports.strtod = strtod;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var s_isStarted = false;\\r\\n    var s_isInitialized = false;\\r\\n    var s_option = null;\\r\\n    var s_cubismIdManager = null;\\r\\n    var Constant;\\r\\n    (function (Constant) {\\r\\n        Constant.vertexOffset = 0;\\r\\n        Constant.vertexStep = 2;\\r\\n    })(Constant = Live2DCubismFramework.Constant || (Live2DCubismFramework.Constant = {}));\\r\\n    function csmDelete(address) {\\r\\n        if (!address) {\\r\\n            return;\\r\\n        }\\r\\n        address = void 0;\\r\\n    }\\r\\n    Live2DCubismFramework.csmDelete = csmDelete;\\r\\n    var CubismFramework = (function () {\\r\\n        function CubismFramework() {\\r\\n        }\\r\\n        CubismFramework.startUp = function (option) {\\r\\n            if (option === void 0) { option = null; }\\r\\n            if (s_isStarted) {\\r\\n                cubismdebug_1.CubismLogInfo('CubismFramework.startUp() is already done.');\\r\\n                return s_isStarted;\\r\\n            }\\r\\n            s_option = option;\\r\\n            if (s_option != null) {\\r\\n                Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\\r\\n            }\\r\\n            s_isStarted = true;\\r\\n            if (s_isStarted) {\\r\\n                var version = Live2DCubismCore.Version.csmGetVersion();\\r\\n                var major = (version & 0xff000000) >> 24;\\r\\n                var minor = (version & 0x00ff0000) >> 16;\\r\\n                var patch = version & 0x0000ffff;\\r\\n                var versionNumber = version;\\r\\n                cubismdebug_1.CubismLogInfo(\\\"Live2D Cubism Core version: {0}.{1}.{2} ({3})\\\", ('00' + major).slice(-2), ('00' + minor).slice(-2), ('0000' + patch).slice(-4), versionNumber);\\r\\n            }\\r\\n            cubismdebug_1.CubismLogInfo('CubismFramework.startUp() is complete.');\\r\\n            return s_isStarted;\\r\\n        };\\r\\n        CubismFramework.cleanUp = function () {\\r\\n            s_isStarted = false;\\r\\n            s_isInitialized = false;\\r\\n            s_option = null;\\r\\n            s_cubismIdManager = null;\\r\\n        };\\r\\n        CubismFramework.initialize = function () {\\r\\n            cubismdebug_1.CSM_ASSERT(s_isStarted);\\r\\n            if (!s_isStarted) {\\r\\n                cubismdebug_1.CubismLogWarning('CubismFramework is not started.');\\r\\n                return;\\r\\n            }\\r\\n            if (s_isInitialized) {\\r\\n                cubismdebug_1.CubismLogWarning('CubismFramework.initialize() skipped, already initialized.');\\r\\n                return;\\r\\n            }\\r\\n            Value.staticInitializeNotForClientCall();\\r\\n            s_cubismIdManager = new CubismIdManager();\\r\\n            s_isInitialized = true;\\r\\n            cubismdebug_1.CubismLogInfo('CubismFramework.initialize() is complete.');\\r\\n        };\\r\\n        CubismFramework.dispose = function () {\\r\\n            cubismdebug_1.CSM_ASSERT(s_isStarted);\\r\\n            if (!s_isStarted) {\\r\\n                cubismdebug_1.CubismLogWarning('CubismFramework is not started.');\\r\\n                return;\\r\\n            }\\r\\n            if (!s_isInitialized) {\\r\\n                cubismdebug_1.CubismLogWarning('CubismFramework.dispose() skipped, not initialized.');\\r\\n                return;\\r\\n            }\\r\\n            Value.staticReleaseNotForClientCall();\\r\\n            s_cubismIdManager.release();\\r\\n            s_cubismIdManager = null;\\r\\n            CubismRenderer.staticRelease();\\r\\n            s_isInitialized = false;\\r\\n            cubismdebug_1.CubismLogInfo('CubismFramework.dispose() is complete.');\\r\\n        };\\r\\n        CubismFramework.isStarted = function () {\\r\\n            return s_isStarted;\\r\\n        };\\r\\n        CubismFramework.isInitialized = function () {\\r\\n            return s_isInitialized;\\r\\n        };\\r\\n        CubismFramework.coreLogFunction = function (message) {\\r\\n            if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\\r\\n                return;\\r\\n            }\\r\\n            Live2DCubismCore.Logging.csmGetLogFunction()(message);\\r\\n        };\\r\\n        CubismFramework.getLoggingLevel = function () {\\r\\n            if (s_option != null) {\\r\\n                return s_option.loggingLevel;\\r\\n            }\\r\\n            return LogLevel.LogLevel_Off;\\r\\n        };\\r\\n        CubismFramework.getIdManager = function () {\\r\\n            return s_cubismIdManager;\\r\\n        };\\r\\n        return CubismFramework;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismFramework = CubismFramework;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\nvar Option = (function () {\\r\\n    function Option() {\\r\\n    }\\r\\n    return Option;\\r\\n}());\\r\\nexports.Option = Option;\\r\\nvar LogLevel;\\r\\n(function (LogLevel) {\\r\\n    LogLevel[LogLevel[\\\"LogLevel_Verbose\\\"] = 0] = \\\"LogLevel_Verbose\\\";\\r\\n    LogLevel[LogLevel[\\\"LogLevel_Debug\\\"] = 1] = \\\"LogLevel_Debug\\\";\\r\\n    LogLevel[LogLevel[\\\"LogLevel_Info\\\"] = 2] = \\\"LogLevel_Info\\\";\\r\\n    LogLevel[LogLevel[\\\"LogLevel_Warning\\\"] = 3] = \\\"LogLevel_Warning\\\";\\r\\n    LogLevel[LogLevel[\\\"LogLevel_Error\\\"] = 4] = \\\"LogLevel_Error\\\";\\r\\n    LogLevel[LogLevel[\\\"LogLevel_Off\\\"] = 5] = \\\"LogLevel_Off\\\";\\r\\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/live2dcubismframework.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/math/cubismmath.ts\":\n/*!******************************************!*\\\n  !*** ./Framework/src/math/cubismmath.ts ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismvector2_1 = __webpack_require__(/*! ./cubismvector2 */ \\\"./Framework/src/math/cubismvector2.ts\\\");\\r\\nvar CubismVector2 = cubismvector2_1.Live2DCubismFramework.CubismVector2;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismMath = (function () {\\r\\n        function CubismMath() {\\r\\n        }\\r\\n        CubismMath.range = function (value, min, max) {\\r\\n            if (value < min) {\\r\\n                value = min;\\r\\n            }\\r\\n            else if (value > max) {\\r\\n                value = max;\\r\\n            }\\r\\n            return value;\\r\\n        };\\r\\n        CubismMath.sin = function (x) {\\r\\n            return Math.sin(x);\\r\\n        };\\r\\n        CubismMath.cos = function (x) {\\r\\n            return Math.cos(x);\\r\\n        };\\r\\n        CubismMath.abs = function (x) {\\r\\n            return Math.abs(x);\\r\\n        };\\r\\n        CubismMath.sqrt = function (x) {\\r\\n            return Math.sqrt(x);\\r\\n        };\\r\\n        CubismMath.getEasingSine = function (value) {\\r\\n            if (value < 0.0) {\\r\\n                return 0.0;\\r\\n            }\\r\\n            else if (value > 1.0) {\\r\\n                return 1.0;\\r\\n            }\\r\\n            return 0.5 - 0.5 * this.cos(value * Math.PI);\\r\\n        };\\r\\n        CubismMath.max = function (left, right) {\\r\\n            return left > right ? left : right;\\r\\n        };\\r\\n        CubismMath.min = function (left, right) {\\r\\n            return left > right ? right : left;\\r\\n        };\\r\\n        CubismMath.degreesToRadian = function (degrees) {\\r\\n            return (degrees / 180.0) * Math.PI;\\r\\n        };\\r\\n        CubismMath.radianToDegrees = function (radian) {\\r\\n            return (radian * 180.0) / Math.PI;\\r\\n        };\\r\\n        CubismMath.directionToRadian = function (from, to) {\\r\\n            var q1 = Math.atan2(to.y, to.x);\\r\\n            var q2 = Math.atan2(from.y, from.x);\\r\\n            var ret = q1 - q2;\\r\\n            while (ret < -Math.PI) {\\r\\n                ret += Math.PI * 2.0;\\r\\n            }\\r\\n            while (ret > Math.PI) {\\r\\n                ret -= Math.PI * 2.0;\\r\\n            }\\r\\n            return ret;\\r\\n        };\\r\\n        CubismMath.directionToDegrees = function (from, to) {\\r\\n            var radian = this.directionToRadian(from, to);\\r\\n            var degree = this.radianToDegrees(radian);\\r\\n            if (to.x - from.x > 0.0) {\\r\\n                degree = -degree;\\r\\n            }\\r\\n            return degree;\\r\\n        };\\r\\n        CubismMath.radianToDirection = function (totalAngle) {\\r\\n            var ret = new CubismVector2();\\r\\n            ret.x = this.sin(totalAngle);\\r\\n            ret.y = this.cos(totalAngle);\\r\\n            return ret;\\r\\n        };\\r\\n        return CubismMath;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMath = CubismMath;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21hdGgvY3ViaXNtbWF0aC50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvbWF0aC9jdWJpc21tYXRoLnRzP2Q0ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbXZlY3RvcjIgfSBmcm9tICcuL2N1YmlzbXZlY3RvcjInO1xuaW1wb3J0IEN1YmlzbVZlY3RvcjIgPSBjdWJpc212ZWN0b3IyLkN1YmlzbVZlY3RvcjI7XG5cbmV4cG9ydCBuYW1lc3BhY2UgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIHtcbiAgLyoqXG4gICAqIOaVsOWApOioiOeul+OBquOBqeOBq+S9v+eUqOOBmeOCi+ODpuODvOODhuOCo+ODquODhuOCo+OCr+ODqeOCuVxuICAgKi9cbiAgZXhwb3J0IGNsYXNzIEN1YmlzbU1hdGgge1xuICAgIC8qKlxuICAgICAqIOesrOS4gOW8leaVsOOBruWApOOCkuacgOWwj+WApOOBqOacgOWkp+WApOOBruevhOWbsuOBq+WPjuOCgeOBn+WApOOCkui/lOOBmVxuICAgICAqXG4gICAgICogQHBhcmFtIHZhbHVlIOWPjuOCgeOCieOCjOOCi+WApFxuICAgICAqIEBwYXJhbSBtaW4gICDnr4Tlm7Ljga7mnIDlsI/lgKRcbiAgICAgKiBAcGFyYW0gbWF4ICAg56+E5Zuy44Gu5pyA5aSn5YCkXG4gICAgICogQHJldHVybiDmnIDlsI/lgKTjgajmnIDlpKflgKTjga7nr4Tlm7Ljgavlj47jgoHjgZ/lgKRcbiAgICAgKi9cbiAgICBzdGF0aWMgcmFuZ2UodmFsdWU6IG51bWJlciwgbWluOiBudW1iZXIsIG1heDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgIGlmICh2YWx1ZSA8IG1pbikge1xuICAgICAgICB2YWx1ZSA9IG1pbjtcbiAgICAgIH0gZWxzZSBpZiAodmFsdWUgPiBtYXgpIHtcbiAgICAgICAgdmFsdWUgPSBtYXg7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjgrXjgqTjg7PplqLmlbDjga7lgKTjgpLmsYLjgoHjgotcbiAgICAgKlxuICAgICAqIEBwYXJhbSB4IOinkuW6puWApO+8iOODqeOCuOOCouODs++8iVxuICAgICAqIEByZXR1cm4g44K144Kk44Oz6Zai5pWwc2luKHgp44Gu5YCkXG4gICAgICovXG4gICAgc3RhdGljIHNpbih4OiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIE1hdGguc2luKHgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOOCs+OCteOCpOODs+mWouaVsOOBruWApOOCkuaxguOCgeOCi1xuICAgICAqXG4gICAgICogQHBhcmFtIHgg6KeS5bqm5YCkKOODqeOCuOOCouODsylcbiAgICAgKiBAcmV0dXJuIOOCs+OCteOCpOODs+mWouaVsGNvcyh4KeOBruWApFxuICAgICAqL1xuICAgIHN0YXRpYyBjb3MoeDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiBNYXRoLmNvcyh4KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlgKTjga7ntbblr77lgKTjgpLmsYLjgoHjgotcbiAgICAgKlxuICAgICAqIEBwYXJhbSB4IOe1tuWvvuWApOOCkuaxguOCgeOCi+WApFxuICAgICAqIEByZXR1cm4g5YCk44Gu57W25a++5YCkXG4gICAgICovXG4gICAgc3RhdGljIGFicyh4OiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIE1hdGguYWJzKHgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOW5s+aWueaguSjjg6vjg7zjg4gp44KS5rGC44KB44KLXG4gICAgICogQHBhcmFtIHggLT4g5bmz5pa55qC544KS5rGC44KB44KL5YCkXG4gICAgICogQHJldHVybiDlgKTjga7lubPmlrnmoLlcbiAgICAgKi9cbiAgICBzdGF0aWMgc3FydCh4OiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIE1hdGguc3FydCh4KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjgqTjg7zjgrjjg7PjgrDlh6bnkIbjgZXjgozjgZ/jgrXjgqTjg7PjgpLmsYLjgoHjgotcbiAgICAgKiDjg5Xjgqfjg7zjg4njgqTjg7Pjg7vjgqLjgqbjg4jmmYLjga7jgqTjg7zjgrjjg7PjgrDjgavliKnnlKjjgafjgY3jgotcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSDjgqTjg7zjgrjjg7PjgrDjgpLooYzjgYblgKRcbiAgICAgKiBAcmV0dXJuIOOCpOODvOOCuOODs+OCsOWHpueQhuOBleOCjOOBn+OCteOCpOODs+WApFxuICAgICAqL1xuICAgIHN0YXRpYyBnZXRFYXNpbmdTaW5lKHZhbHVlOiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgaWYgKHZhbHVlIDwgMC4wKSB7XG4gICAgICAgIHJldHVybiAwLjA7XG4gICAgICB9IGVsc2UgaWYgKHZhbHVlID4gMS4wKSB7XG4gICAgICAgIHJldHVybiAxLjA7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAwLjUgLSAwLjUgKiB0aGlzLmNvcyh2YWx1ZSAqIE1hdGguUEkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOWkp+OBjeOBhOaWueOBruWApOOCkui/lOOBmVxuICAgICAqXG4gICAgICogQHBhcmFtIGxlZnQg5bem6L6644Gu5YCkXG4gICAgICogQHBhcmFtIHJpZ2h0IOWPs+i+uuOBruWApFxuICAgICAqIEByZXR1cm4g5aSn44GN44GE5pa544Gu5YCkXG4gICAgICovXG4gICAgc3RhdGljIG1heChsZWZ0OiBudW1iZXIsIHJpZ2h0OiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIGxlZnQgPiByaWdodCA/IGxlZnQgOiByaWdodDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlsI/jgZXjgYTmlrnjga7lgKTjgpLov5TjgZlcbiAgICAgKlxuICAgICAqIEBwYXJhbSBsZWZ0ICDlt6bovrrjga7lgKRcbiAgICAgKiBAcGFyYW0gcmlnaHQg5Y+z6L6644Gu5YCkXG4gICAgICogQHJldHVybiDlsI/jgZXjgYTmlrnjga7lgKRcbiAgICAgKi9cbiAgICBzdGF0aWMgbWluKGxlZnQ6IG51bWJlciwgcmlnaHQ6IG51bWJlcik6IG51bWJlciB7XG4gICAgICByZXR1cm4gbGVmdCA+IHJpZ2h0ID8gcmlnaHQgOiBsZWZ0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOinkuW6puWApOOCkuODqeOCuOOCouODs+WApOOBq+WkieaPm+OBmeOCi1xuICAgICAqXG4gICAgICogQHBhcmFtIGRlZ3JlZXMgICDop5LluqblgKRcbiAgICAgKiBAcmV0dXJuIOinkuW6puWApOOBi+OCieWkieaPm+OBl+OBn+ODqeOCuOOCouODs+WApFxuICAgICAqL1xuICAgIHN0YXRpYyBkZWdyZWVzVG9SYWRpYW4oZGVncmVlczogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiAoZGVncmVlcyAvIDE4MC4wKSAqIE1hdGguUEk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Op44K444Ki44Oz5YCk44KS6KeS5bqm5YCk44Gr5aSJ5o+b44GZ44KLXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcmFkaWFuICAgIOODqeOCuOOCouODs+WApFxuICAgICAqIEByZXR1cm4g44Op44K444Ki44Oz5YCk44GL44KJ5aSJ5o+b44GX44Gf6KeS5bqm5YCkXG4gICAgICovXG4gICAgc3RhdGljIHJhZGlhblRvRGVncmVlcyhyYWRpYW46IG51bWJlcik6IG51bWJlciB7XG4gICAgICByZXR1cm4gKHJhZGlhbiAqIDE4MC4wKSAvIE1hdGguUEk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog77yS44Gk44Gu44OZ44Kv44OI44Or44GL44KJ44Op44K444Ki44Oz5YCk44KS5rGC44KB44KLXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZnJvbSAg5aeL54K544OZ44Kv44OI44OrXG4gICAgICogQHBhcmFtIHRvICAgIOe1gueCueODmeOCr+ODiOODq1xuICAgICAqIEByZXR1cm4g44Op44K444Ki44Oz5YCk44GL44KJ5rGC44KB44Gf5pa55ZCR44OZ44Kv44OI44OrXG4gICAgICovXG4gICAgc3RhdGljIGRpcmVjdGlvblRvUmFkaWFuKGZyb206IEN1YmlzbVZlY3RvcjIsIHRvOiBDdWJpc21WZWN0b3IyKTogbnVtYmVyIHtcbiAgICAgIGNvbnN0IHExOiBudW1iZXIgPSBNYXRoLmF0YW4yKHRvLnksIHRvLngpO1xuICAgICAgY29uc3QgcTI6IG51bWJlciA9IE1hdGguYXRhbjIoZnJvbS55LCBmcm9tLngpO1xuXG4gICAgICBsZXQgcmV0OiBudW1iZXIgPSBxMSAtIHEyO1xuXG4gICAgICB3aGlsZSAocmV0IDwgLU1hdGguUEkpIHtcbiAgICAgICAgcmV0ICs9IE1hdGguUEkgKiAyLjA7XG4gICAgICB9XG5cbiAgICAgIHdoaWxlIChyZXQgPiBNYXRoLlBJKSB7XG4gICAgICAgIHJldCAtPSBNYXRoLlBJICogMi4wO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmV0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIO+8kuOBpOOBruODmeOCr+ODiOODq+OBi+OCieinkuW6puWApOOCkuaxguOCgeOCi1xuICAgICAqXG4gICAgICogQHBhcmFtIGZyb20gIOWni+eCueODmeOCr+ODiOODq1xuICAgICAqIEBwYXJhbSB0byAgICDntYLngrnjg5njgq/jg4jjg6tcbiAgICAgKiBAcmV0dXJuIOinkuW6puWApOOBi+OCieaxguOCgeOBn+aWueWQkeODmeOCr+ODiOODq1xuICAgICAqL1xuICAgIHN0YXRpYyBkaXJlY3Rpb25Ub0RlZ3JlZXMoZnJvbTogQ3ViaXNtVmVjdG9yMiwgdG86IEN1YmlzbVZlY3RvcjIpOiBudW1iZXIge1xuICAgICAgY29uc3QgcmFkaWFuOiBudW1iZXIgPSB0aGlzLmRpcmVjdGlvblRvUmFkaWFuKGZyb20sIHRvKTtcbiAgICAgIGxldCBkZWdyZWU6IG51bWJlciA9IHRoaXMucmFkaWFuVG9EZWdyZWVzKHJhZGlhbik7XG5cbiAgICAgIGlmICh0by54IC0gZnJvbS54ID4gMC4wKSB7XG4gICAgICAgIGRlZ3JlZSA9IC1kZWdyZWU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBkZWdyZWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Op44K444Ki44Oz5YCk44KS5pa55ZCR44OZ44Kv44OI44Or44Gr5aSJ5o+b44GZ44KL44CCXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdG90YWxBbmdsZSAgICDjg6njgrjjgqLjg7PlgKRcbiAgICAgKiBAcmV0dXJuIOODqeOCuOOCouODs+WApOOBi+OCieWkieaPm+OBl+OBn+aWueWQkeODmeOCr+ODiOODq1xuICAgICAqL1xuXG4gICAgc3RhdGljIHJhZGlhblRvRGlyZWN0aW9uKHRvdGFsQW5nbGU6IG51bWJlcik6IEN1YmlzbVZlY3RvcjIge1xuICAgICAgY29uc3QgcmV0OiBDdWJpc21WZWN0b3IyID0gbmV3IEN1YmlzbVZlY3RvcjIoKTtcblxuICAgICAgcmV0LnggPSB0aGlzLnNpbih0b3RhbEFuZ2xlKTtcbiAgICAgIHJldC55ID0gdGhpcy5jb3ModG90YWxBbmdsZSk7XG5cbiAgICAgIHJldHVybiByZXQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAgICovXG4gICAgcHJpdmF0ZSBjb25zdHJ1Y3RvcigpIHt9XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFPQTtBQUNBO0FBRUE7QUFBQTtBQUlBO0FBa0xBO0FBQUE7QUF6S0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQVNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQU1BO0FBQUE7QUFuTEE7QUFvTEE7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./Framework/src/math/cubismmath.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/math/cubismmatrix44.ts\":\n/*!**********************************************!*\\\n  !*** ./Framework/src/math/cubismmatrix44.ts ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismMatrix44 = (function () {\\r\\n        function CubismMatrix44() {\\r\\n            this._tr = new Float32Array(16);\\r\\n            this.loadIdentity();\\r\\n        }\\r\\n        CubismMatrix44.multiply = function (a, b, dst) {\\r\\n            var c = new Float32Array([\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0\\r\\n            ]);\\r\\n            var n = 4;\\r\\n            for (var i = 0; i < n; ++i) {\\r\\n                for (var j = 0; j < n; ++j) {\\r\\n                    for (var k = 0; k < n; ++k) {\\r\\n                        c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            for (var i = 0; i < 16; ++i) {\\r\\n                dst[i] = c[i];\\r\\n            }\\r\\n        };\\r\\n        CubismMatrix44.prototype.loadIdentity = function () {\\r\\n            var c = new Float32Array([\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0\\r\\n            ]);\\r\\n            this.setMatrix(c);\\r\\n        };\\r\\n        CubismMatrix44.prototype.setMatrix = function (tr) {\\r\\n            for (var i = 0; i < 16; ++i) {\\r\\n                this._tr[i] = tr[i];\\r\\n            }\\r\\n        };\\r\\n        CubismMatrix44.prototype.getArray = function () {\\r\\n            return this._tr;\\r\\n        };\\r\\n        CubismMatrix44.prototype.getScaleX = function () {\\r\\n            return this._tr[0];\\r\\n        };\\r\\n        CubismMatrix44.prototype.getScaleY = function () {\\r\\n            return this._tr[5];\\r\\n        };\\r\\n        CubismMatrix44.prototype.getTranslateX = function () {\\r\\n            return this._tr[12];\\r\\n        };\\r\\n        CubismMatrix44.prototype.getTranslateY = function () {\\r\\n            return this._tr[13];\\r\\n        };\\r\\n        CubismMatrix44.prototype.transformX = function (src) {\\r\\n            return this._tr[0] * src + this._tr[12];\\r\\n        };\\r\\n        CubismMatrix44.prototype.transformY = function (src) {\\r\\n            return this._tr[5] * src + this._tr[13];\\r\\n        };\\r\\n        CubismMatrix44.prototype.invertTransformX = function (src) {\\r\\n            return (src - this._tr[12]) / this._tr[0];\\r\\n        };\\r\\n        CubismMatrix44.prototype.invertTransformY = function (src) {\\r\\n            return (src - this._tr[13]) / this._tr[5];\\r\\n        };\\r\\n        CubismMatrix44.prototype.translateRelative = function (x, y) {\\r\\n            var tr1 = new Float32Array([\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                x,\\r\\n                y,\\r\\n                0.0,\\r\\n                1.0\\r\\n            ]);\\r\\n            CubismMatrix44.multiply(tr1, this._tr, this._tr);\\r\\n        };\\r\\n        CubismMatrix44.prototype.translate = function (x, y) {\\r\\n            this._tr[12] = x;\\r\\n            this._tr[13] = y;\\r\\n        };\\r\\n        CubismMatrix44.prototype.translateX = function (x) {\\r\\n            this._tr[12] = x;\\r\\n        };\\r\\n        CubismMatrix44.prototype.translateY = function (y) {\\r\\n            this._tr[13] = y;\\r\\n        };\\r\\n        CubismMatrix44.prototype.scaleRelative = function (x, y) {\\r\\n            var tr1 = new Float32Array([\\r\\n                x,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                y,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0\\r\\n            ]);\\r\\n            CubismMatrix44.multiply(tr1, this._tr, this._tr);\\r\\n        };\\r\\n        CubismMatrix44.prototype.scale = function (x, y) {\\r\\n            this._tr[0] = x;\\r\\n            this._tr[5] = y;\\r\\n        };\\r\\n        CubismMatrix44.prototype.multiplyByMatrix = function (m) {\\r\\n            CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\\r\\n        };\\r\\n        CubismMatrix44.prototype.clone = function () {\\r\\n            var cloneMatrix = new CubismMatrix44();\\r\\n            for (var i = 0; i < this._tr.length; i++) {\\r\\n                cloneMatrix._tr[i] = this._tr[i];\\r\\n            }\\r\\n            return cloneMatrix;\\r\\n        };\\r\\n        return CubismMatrix44;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMatrix44 = CubismMatrix44;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/math/cubismmatrix44.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/math/cubismmodelmatrix.ts\":\n/*!*************************************************!*\\\n  !*** ./Framework/src/math/cubismmodelmatrix.ts ***!\n  \\*************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmatrix44_1 = __webpack_require__(/*! ./cubismmatrix44 */ \\\"./Framework/src/math/cubismmatrix44.ts\\\");\\r\\nvar CubismMatrix44 = cubismmatrix44_1.Live2DCubismFramework.CubismMatrix44;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismModelMatrix = (function (_super) {\\r\\n        __extends(CubismModelMatrix, _super);\\r\\n        function CubismModelMatrix(w, h) {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._width = w !== undefined ? w : 0.0;\\r\\n            _this._height = h !== undefined ? h : 0.0;\\r\\n            _this.setHeight(1.0);\\r\\n            return _this;\\r\\n        }\\r\\n        CubismModelMatrix.prototype.setWidth = function (w) {\\r\\n            var scaleX = w / this._width;\\r\\n            var scaleY = scaleX;\\r\\n            this.scale(scaleX * 2.6, scaleY * 2.6);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.setHeight = function (h) {\\r\\n            var scaleX = h / this._height;\\r\\n            var scaleY = scaleX;\\r\\n            this.scale(scaleX * 2.6, scaleY * 2.6);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.setPosition = function (x, y) {\\r\\n            this.translate(x, y);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.setCenterPosition = function (x, y) {\\r\\n            this.centerX(x);\\r\\n            this.centerY(y);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.top = function (y) {\\r\\n            this.setY(y);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.bottom = function (y) {\\r\\n            var h = this._height * this.getScaleY();\\r\\n            this.translateY(y - h);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.left = function (x) {\\r\\n            this.setX(x);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.right = function (x) {\\r\\n            var w = this._width * this.getScaleX();\\r\\n            this.translateX(x - w);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.centerX = function (x) {\\r\\n            var w = this._width * this.getScaleX();\\r\\n            this.translateX(x - w / 2.0);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.setX = function (x) {\\r\\n            this.translateX(x);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.centerY = function (y) {\\r\\n            var h = this._height * this.getScaleY();\\r\\n            this.translateY(y - h / 2.0);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.setY = function (y) {\\r\\n            this.translateY(y);\\r\\n        };\\r\\n        CubismModelMatrix.prototype.setupFromLayout = function (layout) {\\r\\n            var keyWidth = 'width';\\r\\n            var keyHeight = 'height';\\r\\n            var keyX = 'x';\\r\\n            var keyY = 'y';\\r\\n            var keyCenterX = 'center_x';\\r\\n            var keyCenterY = 'center_y';\\r\\n            var keyTop = 'top';\\r\\n            var keyBottom = 'bottom';\\r\\n            var keyLeft = 'left';\\r\\n            var keyRight = 'right';\\r\\n            for (var ite = layout.begin(); ite.notEqual(layout.end()); ite.preIncrement()) {\\r\\n                var key = ite.ptr().first;\\r\\n                var value = ite.ptr().second;\\r\\n                if (key == keyWidth) {\\r\\n                    this.setWidth(value);\\r\\n                }\\r\\n                else if (key == keyHeight) {\\r\\n                    this.setHeight(value);\\r\\n                }\\r\\n            }\\r\\n            for (var ite = layout.begin(); ite.notEqual(layout.end()); ite.preIncrement()) {\\r\\n                var key = ite.ptr().first;\\r\\n                var value = ite.ptr().second;\\r\\n                if (key == keyX) {\\r\\n                    this.setX(value);\\r\\n                }\\r\\n                else if (key == keyY) {\\r\\n                    this.setY(value);\\r\\n                }\\r\\n                else if (key == keyCenterX) {\\r\\n                    this.centerX(value);\\r\\n                }\\r\\n                else if (key == keyCenterY) {\\r\\n                    this.centerY(value);\\r\\n                }\\r\\n                else if (key == keyTop) {\\r\\n                    this.top(value);\\r\\n                }\\r\\n                else if (key == keyBottom) {\\r\\n                    this.bottom(value);\\r\\n                }\\r\\n                else if (key == keyLeft) {\\r\\n                    this.left(value);\\r\\n                }\\r\\n                else if (key == keyRight) {\\r\\n                    this.right(value);\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        return CubismModelMatrix;\\r\\n    }(CubismMatrix44));\\r\\n    Live2DCubismFramework.CubismModelMatrix = CubismModelMatrix;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/math/cubismmodelmatrix.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/math/cubismtargetpoint.ts\":\n/*!*************************************************!*\\\n  !*** ./Framework/src/math/cubismtargetpoint.ts ***!\n  \\*************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmath_1 = __webpack_require__(/*! ./cubismmath */ \\\"./Framework/src/math/cubismmath.ts\\\");\\r\\nvar CubismMath = cubismmath_1.Live2DCubismFramework.CubismMath;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var FrameRate = 30;\\r\\n    var Epsilon = 0.01;\\r\\n    var CubismTargetPoint = (function () {\\r\\n        function CubismTargetPoint() {\\r\\n            this._faceTargetX = 0.0;\\r\\n            this._faceTargetY = 0.0;\\r\\n            this._faceX = 0.0;\\r\\n            this._faceY = 0.0;\\r\\n            this._faceVX = 0.0;\\r\\n            this._faceVY = 0.0;\\r\\n            this._lastTimeSeconds = 0.0;\\r\\n            this._userTimeSeconds = 0.0;\\r\\n        }\\r\\n        CubismTargetPoint.prototype.update = function (deltaTimeSeconds) {\\r\\n            this._userTimeSeconds += deltaTimeSeconds;\\r\\n            var faceParamMaxV = 40.0 / 10.0;\\r\\n            var maxV = (faceParamMaxV * 1.0) / FrameRate;\\r\\n            if (this._lastTimeSeconds == 0.0) {\\r\\n                this._lastTimeSeconds = this._userTimeSeconds;\\r\\n                return;\\r\\n            }\\r\\n            var deltaTimeWeight = (this._userTimeSeconds - this._lastTimeSeconds) * FrameRate;\\r\\n            this._lastTimeSeconds = this._userTimeSeconds;\\r\\n            var timeToMaxSpeed = 0.15;\\r\\n            var frameToMaxSpeed = timeToMaxSpeed * FrameRate;\\r\\n            var maxA = (deltaTimeWeight * maxV) / frameToMaxSpeed;\\r\\n            var dx = this._faceTargetX - this._faceX;\\r\\n            var dy = this._faceTargetY - this._faceY;\\r\\n            if (CubismMath.abs(dx) <= Epsilon && CubismMath.abs(dy) <= Epsilon) {\\r\\n                return;\\r\\n            }\\r\\n            var d = CubismMath.sqrt(dx * dx + dy * dy);\\r\\n            var vx = (maxV * dx) / d;\\r\\n            var vy = (maxV * dy) / d;\\r\\n            var ax = vx - this._faceVX;\\r\\n            var ay = vy - this._faceVY;\\r\\n            var a = CubismMath.sqrt(ax * ax + ay * ay);\\r\\n            if (a < -maxA || a > maxA) {\\r\\n                ax *= maxA / a;\\r\\n                ay *= maxA / a;\\r\\n            }\\r\\n            this._faceVX += ax;\\r\\n            this._faceVY += ay;\\r\\n            {\\r\\n                var maxV_1 = 0.5 *\\r\\n                    (CubismMath.sqrt(maxA * maxA + 16.0 * maxA * d - 8.0 * maxA * d) -\\r\\n                        maxA);\\r\\n                var curV = CubismMath.sqrt(this._faceVX * this._faceVX + this._faceVY * this._faceVY);\\r\\n                if (curV > maxV_1) {\\r\\n                    this._faceVX *= maxV_1 / curV;\\r\\n                    this._faceVY *= maxV_1 / curV;\\r\\n                }\\r\\n            }\\r\\n            this._faceX += this._faceVX;\\r\\n            this._faceY += this._faceVY;\\r\\n        };\\r\\n        CubismTargetPoint.prototype.getX = function () {\\r\\n            return this._faceX;\\r\\n        };\\r\\n        CubismTargetPoint.prototype.getY = function () {\\r\\n            return this._faceY;\\r\\n        };\\r\\n        CubismTargetPoint.prototype.set = function (x, y) {\\r\\n            this._faceTargetX = x;\\r\\n            this._faceTargetY = y;\\r\\n        };\\r\\n        return CubismTargetPoint;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismTargetPoint = CubismTargetPoint;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/math/cubismtargetpoint.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/math/cubismvector2.ts\":\n/*!*********************************************!*\\\n  !*** ./Framework/src/math/cubismvector2.ts ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismVector2 = (function () {\\r\\n        function CubismVector2(x, y) {\\r\\n            this.x = x;\\r\\n            this.y = y;\\r\\n            this.x = x == undefined ? 0.0 : x;\\r\\n            this.y = y == undefined ? 0.0 : y;\\r\\n        }\\r\\n        CubismVector2.prototype.add = function (vector2) {\\r\\n            var ret = new CubismVector2(0.0, 0.0);\\r\\n            ret.x = this.x + vector2.x;\\r\\n            ret.y = this.y + vector2.y;\\r\\n            return ret;\\r\\n        };\\r\\n        CubismVector2.prototype.substract = function (vector2) {\\r\\n            var ret = new CubismVector2(0.0, 0.0);\\r\\n            ret.x = this.x - vector2.x;\\r\\n            ret.y = this.y - vector2.y;\\r\\n            return ret;\\r\\n        };\\r\\n        CubismVector2.prototype.multiply = function (vector2) {\\r\\n            var ret = new CubismVector2(0.0, 0.0);\\r\\n            ret.x = this.x * vector2.x;\\r\\n            ret.y = this.y * vector2.y;\\r\\n            return ret;\\r\\n        };\\r\\n        CubismVector2.prototype.multiplyByScaler = function (scalar) {\\r\\n            return this.multiply(new CubismVector2(scalar, scalar));\\r\\n        };\\r\\n        CubismVector2.prototype.division = function (vector2) {\\r\\n            var ret = new CubismVector2(0.0, 0.0);\\r\\n            ret.x = this.x / vector2.x;\\r\\n            ret.y = this.y / vector2.y;\\r\\n            return ret;\\r\\n        };\\r\\n        CubismVector2.prototype.divisionByScalar = function (scalar) {\\r\\n            return this.division(new CubismVector2(scalar, scalar));\\r\\n        };\\r\\n        CubismVector2.prototype.getLength = function () {\\r\\n            return Math.sqrt(this.x * this.x + this.y * this.y);\\r\\n        };\\r\\n        CubismVector2.prototype.getDistanceWith = function (a) {\\r\\n            return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\\r\\n        };\\r\\n        CubismVector2.prototype.dot = function (a) {\\r\\n            return this.x * a.x + this.y * a.y;\\r\\n        };\\r\\n        CubismVector2.prototype.normalize = function () {\\r\\n            var length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\\r\\n            this.x = this.x / length;\\r\\n            this.y = this.y / length;\\r\\n        };\\r\\n        CubismVector2.prototype.isEqual = function (rhs) {\\r\\n            return this.x == rhs.x && this.y == rhs.y;\\r\\n        };\\r\\n        CubismVector2.prototype.isNotEqual = function (rhs) {\\r\\n            return !this.isEqual(rhs);\\r\\n        };\\r\\n        return CubismVector2;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismVector2 = CubismVector2;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21hdGgvY3ViaXNtdmVjdG9yMi50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvbWF0aC9jdWJpc212ZWN0b3IyLnRzP2RiMDgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICAvKipcbiAgICogMuasoeWFg+ODmeOCr+ODiOODq+Wei1xuICAgKlxuICAgKiAy5qyh5YWD44OZ44Kv44OI44Or5Z6L44Gu5qmf6IO944KS5o+Q5L6b44GZ44KL44CCXG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtVmVjdG9yMiB7XG4gICAgLyoqXG4gICAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKHB1YmxpYyB4PzogbnVtYmVyLCBwdWJsaWMgeT86IG51bWJlcikge1xuICAgICAgdGhpcy54ID0geCA9PSB1bmRlZmluZWQgPyAwLjAgOiB4O1xuXG4gICAgICB0aGlzLnkgPSB5ID09IHVuZGVmaW5lZCA/IDAuMCA6IHk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44OZ44Kv44OI44Or44Gu5Yqg566XXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmVjdG9yMiDliqDnrpfjgZnjgovjg5njgq/jg4jjg6vlgKRcbiAgICAgKiBAcmV0dXJuIOWKoOeul+e1kOaenCDjg5njgq/jg4jjg6vlgKRcbiAgICAgKi9cbiAgICBwdWJsaWMgYWRkKHZlY3RvcjI6IEN1YmlzbVZlY3RvcjIpOiBDdWJpc21WZWN0b3IyIHtcbiAgICAgIGNvbnN0IHJldDogQ3ViaXNtVmVjdG9yMiA9IG5ldyBDdWJpc21WZWN0b3IyKDAuMCwgMC4wKTtcbiAgICAgIHJldC54ID0gdGhpcy54ICsgdmVjdG9yMi54O1xuICAgICAgcmV0LnkgPSB0aGlzLnkgKyB2ZWN0b3IyLnk7XG4gICAgICByZXR1cm4gcmV0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODmeOCr+ODiOODq+OBrua4m+eul1xuICAgICAqXG4gICAgICogQHBhcmFtIHZlY3RvcjIg5rib566X44GZ44KL44OZ44Kv44OI44Or5YCkXG4gICAgICogQHJldHVybiDmuJvnrpfntZDmnpwg44OZ44Kv44OI44Or5YCkXG4gICAgICovXG4gICAgcHVibGljIHN1YnN0cmFjdCh2ZWN0b3IyOiBDdWJpc21WZWN0b3IyKTogQ3ViaXNtVmVjdG9yMiB7XG4gICAgICBjb25zdCByZXQ6IEN1YmlzbVZlY3RvcjIgPSBuZXcgQ3ViaXNtVmVjdG9yMigwLjAsIDAuMCk7XG4gICAgICByZXQueCA9IHRoaXMueCAtIHZlY3RvcjIueDtcbiAgICAgIHJldC55ID0gdGhpcy55IC0gdmVjdG9yMi55O1xuICAgICAgcmV0dXJuIHJldDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg5njgq/jg4jjg6vjga7kuZfnrpdcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2ZWN0b3IyIOS5l+eul+OBmeOCi+ODmeOCr+ODiOODq+WApFxuICAgICAqIEByZXR1cm4g5LmX566X57WQ5p6cIOODmeOCr+ODiOODq+WApFxuICAgICAqL1xuICAgIHB1YmxpYyBtdWx0aXBseSh2ZWN0b3IyOiBDdWJpc21WZWN0b3IyKTogQ3ViaXNtVmVjdG9yMiB7XG4gICAgICBjb25zdCByZXQ6IEN1YmlzbVZlY3RvcjIgPSBuZXcgQ3ViaXNtVmVjdG9yMigwLjAsIDAuMCk7XG4gICAgICByZXQueCA9IHRoaXMueCAqIHZlY3RvcjIueDtcbiAgICAgIHJldC55ID0gdGhpcy55ICogdmVjdG9yMi55O1xuICAgICAgcmV0dXJuIHJldDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg5njgq/jg4jjg6vjga7kuZfnrpco44K544Kr44Op44O8KVxuICAgICAqXG4gICAgICogQHBhcmFtIHNjYWxhciDkuZfnrpfjgZnjgovjgrnjgqvjg6njg7zlgKRcbiAgICAgKiBAcmV0dXJuIOS5l+eul+e1kOaenCDjg5njgq/jg4jjg6vlgKRcbiAgICAgKi9cbiAgICBwdWJsaWMgbXVsdGlwbHlCeVNjYWxlcihzY2FsYXI6IG51bWJlcik6IEN1YmlzbVZlY3RvcjIge1xuICAgICAgcmV0dXJuIHRoaXMubXVsdGlwbHkobmV3IEN1YmlzbVZlY3RvcjIoc2NhbGFyLCBzY2FsYXIpKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg5njgq/jg4jjg6vjga7pmaTnrpdcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2ZWN0b3IyIOmZpOeul+OBmeOCi+ODmeOCr+ODiOODq+WApFxuICAgICAqIEByZXR1cm4g6Zmk566X57WQ5p6cIOODmeOCr+ODiOODq+WApFxuICAgICAqL1xuICAgIHB1YmxpYyBkaXZpc2lvbih2ZWN0b3IyOiBDdWJpc21WZWN0b3IyKTogQ3ViaXNtVmVjdG9yMiB7XG4gICAgICBjb25zdCByZXQ6IEN1YmlzbVZlY3RvcjIgPSBuZXcgQ3ViaXNtVmVjdG9yMigwLjAsIDAuMCk7XG4gICAgICByZXQueCA9IHRoaXMueCAvIHZlY3RvcjIueDtcbiAgICAgIHJldC55ID0gdGhpcy55IC8gdmVjdG9yMi55O1xuICAgICAgcmV0dXJuIHJldDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg5njgq/jg4jjg6vjga7pmaTnrpco44K544Kr44Op44O8KVxuICAgICAqXG4gICAgICogQHBhcmFtIHNjYWxhciDpmaTnrpfjgZnjgovjgrnjgqvjg6njg7zlgKRcbiAgICAgKiBAcmV0dXJuIOmZpOeul+e1kOaenCDjg5njgq/jg4jjg6vlgKRcbiAgICAgKi9cbiAgICBwdWJsaWMgZGl2aXNpb25CeVNjYWxhcihzY2FsYXI6IG51bWJlcik6IEN1YmlzbVZlY3RvcjIge1xuICAgICAgcmV0dXJuIHRoaXMuZGl2aXNpb24obmV3IEN1YmlzbVZlY3RvcjIoc2NhbGFyLCBzY2FsYXIpKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg5njgq/jg4jjg6vjga7plbfjgZXjgpLlj5blvpfjgZnjgotcbiAgICAgKlxuICAgICAqIEByZXR1cm4g44OZ44Kv44OI44Or44Gu6ZW344GVXG4gICAgICovXG4gICAgcHVibGljIGdldExlbmd0aCgpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIE1hdGguc3FydCh0aGlzLnggKiB0aGlzLnggKyB0aGlzLnkgKiB0aGlzLnkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODmeOCr+ODiOODq+OBrui3nembouOBruWPluW+l1xuICAgICAqXG4gICAgICogQHBhcmFtIGEg54K5XG4gICAgICogQHJldHVybiDjg5njgq/jg4jjg6vjga7ot53pm6JcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0RGlzdGFuY2VXaXRoKGE6IEN1YmlzbVZlY3RvcjIpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIE1hdGguc3FydChcbiAgICAgICAgKHRoaXMueCAtIGEueCkgKiAodGhpcy54IC0gYS54KSArICh0aGlzLnkgLSBhLnkpICogKHRoaXMueSAtIGEueSlcbiAgICAgICk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44OJ44OD44OI56mN44Gu6KiI566XXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYSDlgKRcbiAgICAgKiBAcmV0dXJuIOe1kOaenFxuICAgICAqL1xuICAgIHB1YmxpYyBkb3QoYTogQ3ViaXNtVmVjdG9yMik6IG51bWJlciB7XG4gICAgICByZXR1cm4gdGhpcy54ICogYS54ICsgdGhpcy55ICogYS55O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOato+imj+WMluOBrumBqeeUqFxuICAgICAqL1xuICAgIHB1YmxpYyBub3JtYWxpemUoKTogdm9pZCB7XG4gICAgICBjb25zdCBsZW5ndGg6IG51bWJlciA9IE1hdGgucG93KHRoaXMueCAqIHRoaXMueCArIHRoaXMueSAqIHRoaXMueSwgMC41KTtcblxuICAgICAgdGhpcy54ID0gdGhpcy54IC8gbGVuZ3RoO1xuICAgICAgdGhpcy55ID0gdGhpcy55IC8gbGVuZ3RoO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOetieOBl+OBleOBrueiuuiqje+8iOetieOBl+OBhOOBi++8n++8iVxuICAgICAqXG4gICAgICog5YCk44GM562J44GX44GE44GL77yfXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcmhzIOeiuuiqjeOBmeOCi+WApFxuICAgICAqIEByZXR1cm4gdHJ1ZSDlgKTjga/nrYnjgZfjgYRcbiAgICAgKiBAcmV0dXJuIGZhbHNlIOWApOOBr+etieOBl+OBj+OBquOBhFxuICAgICAqL1xuICAgIHB1YmxpYyBpc0VxdWFsKHJoczogQ3ViaXNtVmVjdG9yMik6IGJvb2xlYW4ge1xuICAgICAgcmV0dXJuIHRoaXMueCA9PSByaHMueCAmJiB0aGlzLnkgPT0gcmhzLnk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog562J44GX44GV44Gu56K66KqN77yI562J44GX44GP44Gq44GE44GL77yf77yJXG4gICAgICpcbiAgICAgKiDlgKTjgYznrYnjgZfjgY/jgarjgYTjgYvvvJ9cbiAgICAgKlxuICAgICAqIEBwYXJhbSByaHMg56K66KqN44GZ44KL5YCkXG4gICAgICogQHJldHVybiB0cnVlIOWApOOBr+etieOBl+OBj+OBquOBhFxuICAgICAqIEByZXR1cm4gZmFsc2Ug5YCk44Gv562J44GX44GEXG4gICAgICovXG4gICAgcHVibGljIGlzTm90RXF1YWwocmhzOiBDdWJpc21WZWN0b3IyKTogYm9vbGVhbiB7XG4gICAgICByZXR1cm4gIXRoaXMuaXNFcXVhbChyaHMpO1xuICAgIH1cbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOztBQU9BO0FBQUE7QUFNQTtBQUlBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFHQTtBQVFBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFXQTtBQUNBO0FBQ0E7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBcEpBO0FBcUpBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Framework/src/math/cubismvector2.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/math/cubismviewmatrix.ts\":\n/*!************************************************!*\\\n  !*** ./Framework/src/math/cubismviewmatrix.ts ***!\n  \\************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmatrix44_1 = __webpack_require__(/*! ./cubismmatrix44 */ \\\"./Framework/src/math/cubismmatrix44.ts\\\");\\r\\nvar CubismMatrix44 = cubismmatrix44_1.Live2DCubismFramework.CubismMatrix44;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismViewMatrix = (function (_super) {\\r\\n        __extends(CubismViewMatrix, _super);\\r\\n        function CubismViewMatrix() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._screenLeft = 0.0;\\r\\n            _this._screenRight = 0.0;\\r\\n            _this._screenTop = 0.0;\\r\\n            _this._screenBottom = 0.0;\\r\\n            _this._maxLeft = 0.0;\\r\\n            _this._maxRight = 0.0;\\r\\n            _this._maxTop = 0.0;\\r\\n            _this._maxBottom = 0.0;\\r\\n            _this._maxScale = 0.0;\\r\\n            _this._minScale = 0.0;\\r\\n            return _this;\\r\\n        }\\r\\n        CubismViewMatrix.prototype.adjustTranslate = function (x, y) {\\r\\n            if (this._tr[0] * this._maxLeft + (this._tr[12] + x) > this._screenLeft) {\\r\\n                x = this._screenLeft - this._tr[0] * this._maxLeft - this._tr[12];\\r\\n            }\\r\\n            if (this._tr[0] * this._maxRight + (this._tr[12] + x) <\\r\\n                this._screenRight) {\\r\\n                x = this._screenRight - this._tr[0] * this._maxRight - this._tr[12];\\r\\n            }\\r\\n            if (this._tr[5] * this._maxTop + (this._tr[13] + y) < this._screenTop) {\\r\\n                y = this._screenTop - this._tr[5] * this._maxTop - this._tr[13];\\r\\n            }\\r\\n            if (this._tr[5] * this._maxBottom + (this._tr[13] + y) >\\r\\n                this._screenBottom) {\\r\\n                y = this._screenBottom - this._tr[5] * this._maxBottom - this._tr[13];\\r\\n            }\\r\\n            var tr1 = new Float32Array([\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                x,\\r\\n                y,\\r\\n                0.0,\\r\\n                1.0\\r\\n            ]);\\r\\n            CubismMatrix44.multiply(tr1, this._tr, this._tr);\\r\\n        };\\r\\n        CubismViewMatrix.prototype.adjustScale = function (cx, cy, scale) {\\r\\n            var maxScale = this.getMaxScale();\\r\\n            var minScale = this.getMinScale();\\r\\n            var targetScale = scale * this._tr[0];\\r\\n            if (targetScale < minScale) {\\r\\n                if (this._tr[0] > 0.0) {\\r\\n                    scale = minScale / this._tr[0];\\r\\n                }\\r\\n            }\\r\\n            else if (targetScale > maxScale) {\\r\\n                if (this._tr[0] > 0.0) {\\r\\n                    scale = maxScale / this._tr[0];\\r\\n                }\\r\\n            }\\r\\n            var tr1 = new Float32Array([\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                cx,\\r\\n                cy,\\r\\n                0.0,\\r\\n                1.0\\r\\n            ]);\\r\\n            var tr2 = new Float32Array([\\r\\n                scale,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                scale,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0\\r\\n            ]);\\r\\n            var tr3 = new Float32Array([\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                0.0,\\r\\n                1.0,\\r\\n                0.0,\\r\\n                -cx,\\r\\n                -cy,\\r\\n                0.0,\\r\\n                1.0\\r\\n            ]);\\r\\n            CubismMatrix44.multiply(tr3, this._tr, this._tr);\\r\\n            CubismMatrix44.multiply(tr2, this._tr, this._tr);\\r\\n            CubismMatrix44.multiply(tr1, this._tr, this._tr);\\r\\n        };\\r\\n        CubismViewMatrix.prototype.setScreenRect = function (left, right, bottom, top) {\\r\\n            this._screenLeft = left;\\r\\n            this._screenRight = right;\\r\\n            this._screenBottom = bottom;\\r\\n            this._screenTop = top;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.setMaxScreenRect = function (left, right, bottom, top) {\\r\\n            this._maxLeft = left;\\r\\n            this._maxRight = right;\\r\\n            this._maxTop = top;\\r\\n            this._maxBottom = bottom;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.setMaxScale = function (maxScale) {\\r\\n            this._maxScale = maxScale;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.setMinScale = function (minScale) {\\r\\n            this._minScale = minScale;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getMaxScale = function () {\\r\\n            return this._maxScale;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getMinScale = function () {\\r\\n            return this._minScale;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.isMaxScale = function () {\\r\\n            return this.getScaleX() >= this._maxScale;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.isMinScale = function () {\\r\\n            return this.getScaleX() <= this._minScale;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getScreenLeft = function () {\\r\\n            return this._screenLeft;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getScreenRight = function () {\\r\\n            return this._screenRight;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getScreenBottom = function () {\\r\\n            return this._screenBottom;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getScreenTop = function () {\\r\\n            return this._screenTop;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getMaxLeft = function () {\\r\\n            return this._maxLeft;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getMaxRight = function () {\\r\\n            return this._maxRight;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getMaxBottom = function () {\\r\\n            return this._maxBottom;\\r\\n        };\\r\\n        CubismViewMatrix.prototype.getMaxTop = function () {\\r\\n            return this._maxTop;\\r\\n        };\\r\\n        return CubismViewMatrix;\\r\\n    }(CubismMatrix44));\\r\\n    Live2DCubismFramework.CubismViewMatrix = CubismViewMatrix;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/math/cubismviewmatrix.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/model/cubismmoc.ts\":\n/*!******************************************!*\\\n  !*** ./Framework/src/model/cubismmoc.ts ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmodel_1 = __webpack_require__(/*! ./cubismmodel */ \\\"./Framework/src/model/cubismmodel.ts\\\");\\r\\nvar CubismModel = cubismmodel_1.Live2DCubismFramework.CubismModel;\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismMoc = (function () {\\r\\n        function CubismMoc(moc) {\\r\\n            this._moc = moc;\\r\\n            this._modelCount = 0;\\r\\n        }\\r\\n        CubismMoc.create = function (mocBytes) {\\r\\n            var cubismMoc = null;\\r\\n            var moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\\r\\n            if (moc) {\\r\\n                cubismMoc = new CubismMoc(moc);\\r\\n            }\\r\\n            return cubismMoc;\\r\\n        };\\r\\n        CubismMoc.delete = function (moc) {\\r\\n            moc._moc._release();\\r\\n            moc._moc = null;\\r\\n            moc = null;\\r\\n        };\\r\\n        CubismMoc.prototype.createModel = function () {\\r\\n            var cubismModel = null;\\r\\n            var model = Live2DCubismCore.Model.fromMoc(this._moc);\\r\\n            if (model) {\\r\\n                cubismModel = new CubismModel(model);\\r\\n                cubismModel.initialize();\\r\\n                ++this._modelCount;\\r\\n            }\\r\\n            return cubismModel;\\r\\n        };\\r\\n        CubismMoc.prototype.deleteModel = function (model) {\\r\\n            if (model != null) {\\r\\n                model.release();\\r\\n                model = null;\\r\\n                --this._modelCount;\\r\\n            }\\r\\n        };\\r\\n        CubismMoc.prototype.release = function () {\\r\\n            cubismdebug_1.CSM_ASSERT(this._modelCount == 0);\\r\\n            this._moc._release();\\r\\n            this._moc = null;\\r\\n        };\\r\\n        return CubismMoc;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMoc = CubismMoc;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21vZGVsL2N1YmlzbW1vYy50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvbW9kZWwvY3ViaXNtbW9jLnRzPzdlNDYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbW1vZGVsIH0gZnJvbSAnLi9jdWJpc21tb2RlbCc7XG5pbXBvcnQgQ3ViaXNtTW9kZWwgPSBjdWJpc21tb2RlbC5DdWJpc21Nb2RlbDtcbmltcG9ydCB7IENTTV9BU1NFUlQgfSBmcm9tICcuLi91dGlscy9jdWJpc21kZWJ1Zyc7XG5cbmV4cG9ydCBuYW1lc3BhY2UgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIHtcbiAgLyoqXG4gICAqIE1vY+ODh+ODvOOCv+OBrueuoeeQhlxuICAgKlxuICAgKiBNb2Pjg4fjg7zjgr/jga7nrqHnkIbjgpLooYzjgYbjgq/jg6njgrnjgIJcbiAgICovXG4gIGV4cG9ydCBjbGFzcyBDdWJpc21Nb2Mge1xuICAgIC8qKlxuICAgICAqIE1vY+ODh+ODvOOCv+OBruS9nOaIkFxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgY3JlYXRlKG1vY0J5dGVzOiBBcnJheUJ1ZmZlcik6IEN1YmlzbU1vYyB7XG4gICAgICBsZXQgY3ViaXNtTW9jOiBDdWJpc21Nb2MgPSBudWxsO1xuICAgICAgY29uc3QgbW9jOiBMaXZlMkRDdWJpc21Db3JlLk1vYyA9IExpdmUyREN1YmlzbUNvcmUuTW9jLmZyb21BcnJheUJ1ZmZlcihcbiAgICAgICAgbW9jQnl0ZXNcbiAgICAgICk7XG5cbiAgICAgIGlmIChtb2MpIHtcbiAgICAgICAgY3ViaXNtTW9jID0gbmV3IEN1YmlzbU1vYyhtb2MpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY3ViaXNtTW9jO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE1vY+ODh+ODvOOCv+OCkuWJiumZpFxuICAgICAqXG4gICAgICogTW9j44OH44O844K/44KS5YmK6Zmk44GZ44KLXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBkZWxldGUobW9jOiBDdWJpc21Nb2MpOiB2b2lkIHtcbiAgICAgIG1vYy5fbW9jLl9yZWxlYXNlKCk7XG4gICAgICBtb2MuX21vYyA9IG51bGw7XG4gICAgICBtb2MgPSBudWxsO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODouODh+ODq+OCkuS9nOaIkOOBmeOCi1xuICAgICAqXG4gICAgICogQHJldHVybiBNb2Pjg4fjg7zjgr/jgYvjgonkvZzmiJDjgZXjgozjgZ/jg6Ljg4fjg6tcbiAgICAgKi9cbiAgICBjcmVhdGVNb2RlbCgpOiBDdWJpc21Nb2RlbCB7XG4gICAgICBsZXQgY3ViaXNtTW9kZWw6IEN1YmlzbU1vZGVsID0gbnVsbDtcblxuICAgICAgY29uc3QgbW9kZWw6IExpdmUyREN1YmlzbUNvcmUuTW9kZWwgPSBMaXZlMkRDdWJpc21Db3JlLk1vZGVsLmZyb21Nb2MoXG4gICAgICAgIHRoaXMuX21vY1xuICAgICAgKTtcblxuICAgICAgaWYgKG1vZGVsKSB7XG4gICAgICAgIGN1YmlzbU1vZGVsID0gbmV3IEN1YmlzbU1vZGVsKG1vZGVsKTtcbiAgICAgICAgY3ViaXNtTW9kZWwuaW5pdGlhbGl6ZSgpO1xuXG4gICAgICAgICsrdGhpcy5fbW9kZWxDb3VudDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGN1YmlzbU1vZGVsO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODouODh+ODq+OCkuWJiumZpOOBmeOCi1xuICAgICAqL1xuICAgIGRlbGV0ZU1vZGVsKG1vZGVsOiBDdWJpc21Nb2RlbCk6IHZvaWQge1xuICAgICAgaWYgKG1vZGVsICE9IG51bGwpIHtcbiAgICAgICAgbW9kZWwucmVsZWFzZSgpO1xuICAgICAgICBtb2RlbCA9IG51bGw7XG4gICAgICAgIC0tdGhpcy5fbW9kZWxDb3VudDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICAgKi9cbiAgICBwcml2YXRlIGNvbnN0cnVjdG9yKG1vYzogTGl2ZTJEQ3ViaXNtQ29yZS5Nb2MpIHtcbiAgICAgIHRoaXMuX21vYyA9IG1vYztcbiAgICAgIHRoaXMuX21vZGVsQ291bnQgPSAwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODh+OCueODiOODqeOCr+OCv+ebuOW9k+OBruWHpueQhlxuICAgICAqL1xuICAgIHB1YmxpYyByZWxlYXNlKCk6IHZvaWQge1xuICAgICAgQ1NNX0FTU0VSVCh0aGlzLl9tb2RlbENvdW50ID09IDApO1xuXG4gICAgICB0aGlzLl9tb2MuX3JlbGVhc2UoKTtcbiAgICAgIHRoaXMuX21vYyA9IG51bGw7XG4gICAgfVxuXG4gICAgX21vYzogTGl2ZTJEQ3ViaXNtQ29yZS5Nb2M7IC8vIE1vY+ODh+ODvOOCv1xuICAgIF9tb2RlbENvdW50OiBudW1iZXI7IC8vIE1vY+ODh+ODvOOCv+OBi+OCieS9nOOCieOCjOOBn+ODouODh+ODq+OBruWAi+aVsFxuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7O0FBT0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQU1BO0FBZ0VBO0FBQ0E7QUFDQTtBQUNBO0FBL0RBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUVBO0FBSUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFJQTtBQUFBO0FBakZBO0FBa0ZBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Framework/src/model/cubismmoc.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/model/cubismmodel.ts\":\n/*!********************************************!*\\\n  !*** ./Framework/src/model/cubismmodel.ts ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismrenderer_1 = __webpack_require__(/*! ../rendering/cubismrenderer */ \\\"./Framework/src/rendering/cubismrenderer.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar csmmap_1 = __webpack_require__(/*! ../type/csmmap */ \\\"./Framework/src/type/csmmap.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismBlendMode = cubismrenderer_1.Live2DCubismFramework.CubismBlendMode;\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar csmMap = csmmap_1.Live2DCubismFramework.csmMap;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismModel = (function () {\\r\\n        function CubismModel(model) {\\r\\n            this._model = model;\\r\\n            this._parameterValues = null;\\r\\n            this._parameterMaximumValues = null;\\r\\n            this._parameterMinimumValues = null;\\r\\n            this._partOpacities = null;\\r\\n            this._savedParameters = new csmVector();\\r\\n            this._parameterIds = new csmVector();\\r\\n            this._drawableIds = new csmVector();\\r\\n            this._partIds = new csmVector();\\r\\n            this._notExistPartId = new csmMap();\\r\\n            this._notExistParameterId = new csmMap();\\r\\n            this._notExistParameterValues = new csmMap();\\r\\n            this._notExistPartOpacities = new csmMap();\\r\\n        }\\r\\n        CubismModel.prototype.update = function () {\\r\\n            this._model.update();\\r\\n            this._model.drawables.resetDynamicFlags();\\r\\n        };\\r\\n        CubismModel.prototype.getCanvasWidth = function () {\\r\\n            if (this._model == null) {\\r\\n                return 0.0;\\r\\n            }\\r\\n            return (this._model.canvasinfo.CanvasWidth /\\r\\n                this._model.canvasinfo.PixelsPerUnit);\\r\\n        };\\r\\n        CubismModel.prototype.getCanvasHeight = function () {\\r\\n            if (this._model == null) {\\r\\n                return 0.0;\\r\\n            }\\r\\n            return (this._model.canvasinfo.CanvasHeight /\\r\\n                this._model.canvasinfo.PixelsPerUnit);\\r\\n        };\\r\\n        CubismModel.prototype.saveParameters = function () {\\r\\n            var parameterCount = this._model.parameters.count;\\r\\n            var savedParameterCount = this._savedParameters.getSize();\\r\\n            for (var i = 0; i < parameterCount; ++i) {\\r\\n                if (i < savedParameterCount) {\\r\\n                    this._savedParameters.set(i, this._parameterValues[i]);\\r\\n                }\\r\\n                else {\\r\\n                    this._savedParameters.pushBack(this._parameterValues[i]);\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismModel.prototype.getModel = function () {\\r\\n            return this._model;\\r\\n        };\\r\\n        CubismModel.prototype.getPartIndex = function (partId) {\\r\\n            var partIndex;\\r\\n            var partCount = this._model.parts.count;\\r\\n            for (partIndex = 0; partIndex < partCount; ++partIndex) {\\r\\n                if (partId == this._partIds.at(partIndex)) {\\r\\n                    return partIndex;\\r\\n                }\\r\\n            }\\r\\n            if (this._notExistPartId.isExist(partId)) {\\r\\n                return this._notExistPartId.getValue(partId);\\r\\n            }\\r\\n            partIndex = partCount + this._notExistPartId.getSize();\\r\\n            this._notExistPartId.setValue(partId, partIndex);\\r\\n            this._notExistPartOpacities.appendKey(partIndex);\\r\\n            return partIndex;\\r\\n        };\\r\\n        CubismModel.prototype.getPartCount = function () {\\r\\n            var partCount = this._model.parts.count;\\r\\n            return partCount;\\r\\n        };\\r\\n        CubismModel.prototype.setPartOpacityByIndex = function (partIndex, opacity) {\\r\\n            if (this._notExistPartOpacities.isExist(partIndex)) {\\r\\n                this._notExistPartOpacities.setValue(partIndex, opacity);\\r\\n                return;\\r\\n            }\\r\\n            cubismdebug_1.CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\\r\\n            this._partOpacities[partIndex] = opacity;\\r\\n        };\\r\\n        CubismModel.prototype.setPartOpacityById = function (partId, opacity) {\\r\\n            var index = this.getPartIndex(partId);\\r\\n            if (index < 0) {\\r\\n                return;\\r\\n            }\\r\\n            this.setPartOpacityByIndex(index, opacity);\\r\\n        };\\r\\n        CubismModel.prototype.getPartOpacityByIndex = function (partIndex) {\\r\\n            if (this._notExistPartOpacities.isExist(partIndex)) {\\r\\n                return this._notExistPartOpacities.getValue(partIndex);\\r\\n            }\\r\\n            cubismdebug_1.CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\\r\\n            return this._partOpacities[partIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getPartOpacityById = function (partId) {\\r\\n            var index = this.getPartIndex(partId);\\r\\n            if (index < 0) {\\r\\n                return 0;\\r\\n            }\\r\\n            return this.getPartOpacityByIndex(index);\\r\\n        };\\r\\n        CubismModel.prototype.getParameterIndex = function (parameterId) {\\r\\n            var parameterIndex;\\r\\n            var idCount = this._model.parameters.count;\\r\\n            for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\\r\\n                if (parameterId != this._parameterIds.at(parameterIndex)) {\\r\\n                    continue;\\r\\n                }\\r\\n                return parameterIndex;\\r\\n            }\\r\\n            if (this._notExistParameterId.isExist(parameterId)) {\\r\\n                return this._notExistParameterId.getValue(parameterId);\\r\\n            }\\r\\n            parameterIndex =\\r\\n                this._model.parameters.count + this._notExistParameterId.getSize();\\r\\n            this._notExistParameterId.setValue(parameterId, parameterIndex);\\r\\n            this._notExistParameterValues.appendKey(parameterIndex);\\r\\n            return parameterIndex;\\r\\n        };\\r\\n        CubismModel.prototype.getParameterCount = function () {\\r\\n            return this._model.parameters.count;\\r\\n        };\\r\\n        CubismModel.prototype.getParameterMaximumValue = function (parameterIndex) {\\r\\n            return this._model.parameters.maximumValues[parameterIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getParameterMinimumValue = function (parameterIndex) {\\r\\n            return this._model.parameters.minimumValues[parameterIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getParameterDefaultValue = function (parameterIndex) {\\r\\n            return this._model.parameters.defaultValues[parameterIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getParameterValueByIndex = function (parameterIndex) {\\r\\n            if (this._notExistParameterValues.isExist(parameterIndex)) {\\r\\n                return this._notExistParameterValues.getValue(parameterIndex);\\r\\n            }\\r\\n            cubismdebug_1.CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\\r\\n            return this._parameterValues[parameterIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getParameterValueById = function (parameterId) {\\r\\n            var parameterIndex = this.getParameterIndex(parameterId);\\r\\n            return this.getParameterValueByIndex(parameterIndex);\\r\\n        };\\r\\n        CubismModel.prototype.setParameterValueByIndex = function (parameterIndex, value, weight) {\\r\\n            if (weight === void 0) { weight = 1.0; }\\r\\n            if (this._notExistParameterValues.isExist(parameterIndex)) {\\r\\n                this._notExistParameterValues.setValue(parameterIndex, weight == 1\\r\\n                    ? value\\r\\n                    : this._notExistParameterValues.getValue(parameterIndex) *\\r\\n                        (1 - weight) +\\r\\n                        value * weight);\\r\\n                return;\\r\\n            }\\r\\n            cubismdebug_1.CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\\r\\n            if (this._model.parameters.maximumValues[parameterIndex] < value) {\\r\\n                value = this._model.parameters.maximumValues[parameterIndex];\\r\\n            }\\r\\n            if (this._model.parameters.minimumValues[parameterIndex] > value) {\\r\\n                value = this._model.parameters.minimumValues[parameterIndex];\\r\\n            }\\r\\n            this._parameterValues[parameterIndex] =\\r\\n                weight == 1\\r\\n                    ? value\\r\\n                    : (this._parameterValues[parameterIndex] =\\r\\n                        this._parameterValues[parameterIndex] * (1 - weight) +\\r\\n                            value * weight);\\r\\n        };\\r\\n        CubismModel.prototype.setParameterValueById = function (parameterId, value, weight) {\\r\\n            if (weight === void 0) { weight = 1.0; }\\r\\n            var index = this.getParameterIndex(parameterId);\\r\\n            this.setParameterValueByIndex(index, value, weight);\\r\\n        };\\r\\n        CubismModel.prototype.addParameterValueByIndex = function (parameterIndex, value, weight) {\\r\\n            if (weight === void 0) { weight = 1.0; }\\r\\n            this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\\r\\n        };\\r\\n        CubismModel.prototype.addParameterValueById = function (parameterId, value, weight) {\\r\\n            if (weight === void 0) { weight = 1.0; }\\r\\n            var index = this.getParameterIndex(parameterId);\\r\\n            this.addParameterValueByIndex(index, value, weight);\\r\\n        };\\r\\n        CubismModel.prototype.multiplyParameterValueById = function (parameterId, value, weight) {\\r\\n            if (weight === void 0) { weight = 1.0; }\\r\\n            var index = this.getParameterIndex(parameterId);\\r\\n            this.multiplyParameterValueByIndex(index, value, weight);\\r\\n        };\\r\\n        CubismModel.prototype.multiplyParameterValueByIndex = function (parameterIndex, value, weight) {\\r\\n            if (weight === void 0) { weight = 1.0; }\\r\\n            this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) *\\r\\n                (1.0 + (value - 1.0) * weight));\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableIndex = function (drawableId) {\\r\\n            var drawableCount = this._model.drawables.count;\\r\\n            for (var drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\\r\\n                if (this._drawableIds.at(drawableIndex) == drawableId) {\\r\\n                    return drawableIndex;\\r\\n                }\\r\\n            }\\r\\n            return -1;\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableCount = function () {\\r\\n            var drawableCount = this._model.drawables.count;\\r\\n            return drawableCount;\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableId = function (drawableIndex) {\\r\\n            var parameterIds = this._model.drawables.ids;\\r\\n            return CubismFramework.getIdManager().getId(parameterIds[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableRenderOrders = function () {\\r\\n            var renderOrders = this._model.drawables.renderOrders;\\r\\n            return renderOrders;\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableTextureIndices = function (drawableIndex) {\\r\\n            var textureIndices = this._model.drawables.textureIndices;\\r\\n            return textureIndices[drawableIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableDynamicFlagVertexPositionsDidChange = function (drawableIndex) {\\r\\n            var dynamicFlags = this._model.drawables.dynamicFlags;\\r\\n            return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableVertexIndexCount = function (drawableIndex) {\\r\\n            var indexCounts = this._model.drawables.indexCounts;\\r\\n            return indexCounts[drawableIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableVertexCount = function (drawableIndex) {\\r\\n            var vertexCounts = this._model.drawables.vertexCounts;\\r\\n            return vertexCounts[drawableIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableVertices = function (drawableIndex) {\\r\\n            return this.getDrawableVertexPositions(drawableIndex);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableVertexIndices = function (drawableIndex) {\\r\\n            var indicesArray = this._model.drawables.indices;\\r\\n            return indicesArray[drawableIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableVertexPositions = function (drawableIndex) {\\r\\n            var verticesArray = this._model.drawables\\r\\n                .vertexPositions;\\r\\n            return verticesArray[drawableIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableVertexUvs = function (drawableIndex) {\\r\\n            var uvsArray = this._model.drawables.vertexUvs;\\r\\n            return uvsArray[drawableIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableOpacity = function (drawableIndex) {\\r\\n            var opacities = this._model.drawables.opacities;\\r\\n            return opacities[drawableIndex];\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableCulling = function (drawableIndex) {\\r\\n            var constantFlags = this._model.drawables.constantFlags;\\r\\n            return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableBlendMode = function (drawableIndex) {\\r\\n            var constantFlags = this._model.drawables.constantFlags;\\r\\n            return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex])\\r\\n                ? CubismBlendMode.CubismBlendMode_Additive\\r\\n                : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex])\\r\\n                    ? CubismBlendMode.CubismBlendMode_Multiplicative\\r\\n                    : CubismBlendMode.CubismBlendMode_Normal;\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableInvertedMaskBit = function (drawableIndex) {\\r\\n            var constantFlags = this._model.drawables.constantFlags;\\r\\n            return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableMasks = function () {\\r\\n            var masks = this._model.drawables.masks;\\r\\n            return masks;\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableMaskCounts = function () {\\r\\n            var maskCounts = this._model.drawables.maskCounts;\\r\\n            return maskCounts;\\r\\n        };\\r\\n        CubismModel.prototype.isUsingMasking = function () {\\r\\n            for (var d = 0; d < this._model.drawables.count; ++d) {\\r\\n                if (this._model.drawables.maskCounts[d] <= 0) {\\r\\n                    continue;\\r\\n                }\\r\\n                return true;\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableDynamicFlagIsVisible = function (drawableIndex) {\\r\\n            var dynamicFlags = this._model.drawables.dynamicFlags;\\r\\n            return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableDynamicFlagVisibilityDidChange = function (drawableIndex) {\\r\\n            var dynamicFlags = this._model.drawables.dynamicFlags;\\r\\n            return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableDynamicFlagOpacityDidChange = function (drawableIndex) {\\r\\n            var dynamicFlags = this._model.drawables.dynamicFlags;\\r\\n            return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.getDrawableDynamicFlagRenderOrderDidChange = function (drawableIndex) {\\r\\n            var dynamicFlags = this._model.drawables.dynamicFlags;\\r\\n            return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\\r\\n        };\\r\\n        CubismModel.prototype.loadParameters = function () {\\r\\n            var parameterCount = this._model.parameters.count;\\r\\n            var savedParameterCount = this._savedParameters.getSize();\\r\\n            if (parameterCount > savedParameterCount) {\\r\\n                parameterCount = savedParameterCount;\\r\\n            }\\r\\n            for (var i = 0; i < parameterCount; ++i) {\\r\\n                this._parameterValues[i] = this._savedParameters.at(i);\\r\\n            }\\r\\n        };\\r\\n        CubismModel.prototype.initialize = function () {\\r\\n            cubismdebug_1.CSM_ASSERT(this._model);\\r\\n            this._parameterValues = this._model.parameters.values;\\r\\n            this._partOpacities = this._model.parts.opacities;\\r\\n            this._parameterMaximumValues = this._model.parameters.maximumValues;\\r\\n            this._parameterMinimumValues = this._model.parameters.minimumValues;\\r\\n            {\\r\\n                var parameterIds = this._model.parameters.ids;\\r\\n                var parameterCount = this._model.parameters.count;\\r\\n                this._parameterIds.prepareCapacity(parameterCount);\\r\\n                for (var i = 0; i < parameterCount; ++i) {\\r\\n                    this._parameterIds.pushBack(CubismFramework.getIdManager().getId(parameterIds[i]));\\r\\n                }\\r\\n            }\\r\\n            {\\r\\n                var partIds = this._model.parts.ids;\\r\\n                var partCount = this._model.parts.count;\\r\\n                this._partIds.prepareCapacity(partCount);\\r\\n                for (var i = 0; i < partCount; ++i) {\\r\\n                    this._partIds.pushBack(CubismFramework.getIdManager().getId(partIds[i]));\\r\\n                }\\r\\n            }\\r\\n            {\\r\\n                var drawableIds = this._model.drawables.ids;\\r\\n                var drawableCount = this._model.drawables.count;\\r\\n                this._drawableIds.prepareCapacity(drawableCount);\\r\\n                for (var i = 0; i < drawableCount; ++i) {\\r\\n                    this._drawableIds.pushBack(CubismFramework.getIdManager().getId(drawableIds[i]));\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismModel.prototype.release = function () {\\r\\n            this._model.release();\\r\\n            this._model = null;\\r\\n        };\\r\\n        return CubismModel;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismModel = CubismModel;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/model/cubismmodel.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/model/cubismmodeluserdata.ts\":\n/*!****************************************************!*\\\n  !*** ./Framework/src/model/cubismmodeluserdata.ts ***!\n  \\****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmodeluserdatajson_1 = __webpack_require__(/*! ./cubismmodeluserdatajson */ \\\"./Framework/src/model/cubismmodeluserdatajson.ts\\\");\\r\\nvar csmstring_1 = __webpack_require__(/*! ../type/csmstring */ \\\"./Framework/src/type/csmstring.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar csmString = csmstring_1.Live2DCubismFramework.csmString;\\r\\nvar CubismModelUserDataJson = cubismmodeluserdatajson_1.Live2DCubismFramework.CubismModelUserDataJson;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var ArtMesh = 'ArtMesh';\\r\\n    var CubismModelUserDataNode = (function () {\\r\\n        function CubismModelUserDataNode() {\\r\\n        }\\r\\n        return CubismModelUserDataNode;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismModelUserDataNode = CubismModelUserDataNode;\\r\\n    var CubismModelUserData = (function () {\\r\\n        function CubismModelUserData() {\\r\\n            this._userDataNodes = new csmVector();\\r\\n            this._artMeshUserDataNode = new csmVector();\\r\\n        }\\r\\n        CubismModelUserData.create = function (buffer, size) {\\r\\n            var ret = new CubismModelUserData();\\r\\n            ret.parseUserData(buffer, size);\\r\\n            return ret;\\r\\n        };\\r\\n        CubismModelUserData.delete = function (modelUserData) {\\r\\n            if (modelUserData != null) {\\r\\n                modelUserData.release();\\r\\n                modelUserData = null;\\r\\n            }\\r\\n        };\\r\\n        CubismModelUserData.prototype.getArtMeshUserDatas = function () {\\r\\n            return this._artMeshUserDataNode;\\r\\n        };\\r\\n        CubismModelUserData.prototype.parseUserData = function (buffer, size) {\\r\\n            var json = new CubismModelUserDataJson(buffer, size);\\r\\n            var typeOfArtMesh = CubismFramework.getIdManager().getId(ArtMesh);\\r\\n            var nodeCount = json.getUserDataCount();\\r\\n            for (var i = 0; i < nodeCount; i++) {\\r\\n                var addNode = new CubismModelUserDataNode();\\r\\n                addNode.targetId = json.getUserDataId(i);\\r\\n                addNode.targetType = CubismFramework.getIdManager().getId(json.getUserDataTargetType(i));\\r\\n                addNode.value = new csmString(json.getUserDataValue(i));\\r\\n                this._userDataNodes.pushBack(addNode);\\r\\n                if (addNode.targetType == typeOfArtMesh) {\\r\\n                    this._artMeshUserDataNode.pushBack(addNode);\\r\\n                }\\r\\n            }\\r\\n            json.release();\\r\\n            json = void 0;\\r\\n        };\\r\\n        CubismModelUserData.prototype.release = function () {\\r\\n            for (var i = 0; i < this._userDataNodes.getSize(); ++i) {\\r\\n                this._userDataNodes.set(i, null);\\r\\n            }\\r\\n            this._userDataNodes = null;\\r\\n        };\\r\\n        return CubismModelUserData;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismModelUserData = CubismModelUserData;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21vZGVsL2N1YmlzbW1vZGVsdXNlcmRhdGEudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saXZlMmQvLi9GcmFtZXdvcmsvc3JjL21vZGVsL2N1YmlzbW1vZGVsdXNlcmRhdGEudHM/OTU1MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IHRoZSBMaXZlMkQgT3BlbiBTb2Z0d2FyZSBsaWNlbnNlXG4gKiB0aGF0IGNhbiBiZSBmb3VuZCBhdCBodHRwczovL3d3dy5saXZlMmQuY29tL2V1bGEvbGl2ZTJkLW9wZW4tc29mdHdhcmUtbGljZW5zZS1hZ3JlZW1lbnRfZW4uaHRtbC5cbiAqL1xuXG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3ViaXNtbW9kZWx1c2VyZGF0YWpzb24gfSBmcm9tICcuL2N1YmlzbW1vZGVsdXNlcmRhdGFqc29uJztcbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjdWJpc21pZCB9IGZyb20gJy4uL2lkL2N1YmlzbWlkJztcbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjc21zdHJpbmcgfSBmcm9tICcuLi90eXBlL2NzbXN0cmluZyc7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3NtdmVjdG9yIH0gZnJvbSAnLi4vdHlwZS9jc212ZWN0b3InO1xuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbWZyYW1ld29yayB9IGZyb20gJy4uL2xpdmUyZGN1YmlzbWZyYW1ld29yayc7XG5pbXBvcnQgQ3ViaXNtRnJhbWV3b3JrID0gY3ViaXNtZnJhbWV3b3JrLkN1YmlzbUZyYW1ld29yaztcbmltcG9ydCBjc21WZWN0b3IgPSBjc212ZWN0b3IuY3NtVmVjdG9yO1xuaW1wb3J0IGNzbVN0cmluZyA9IGNzbXN0cmluZy5jc21TdHJpbmc7XG5pbXBvcnQgQ3ViaXNtSWRIYW5kbGUgPSBjdWJpc21pZC5DdWJpc21JZEhhbmRsZTtcbmltcG9ydCBDdWJpc21Nb2RlbFVzZXJEYXRhSnNvbiA9IGN1YmlzbW1vZGVsdXNlcmRhdGFqc29uLkN1YmlzbU1vZGVsVXNlckRhdGFKc29uO1xuXG5leHBvcnQgbmFtZXNwYWNlIExpdmUyREN1YmlzbUZyYW1ld29yayB7XG4gIGNvbnN0IEFydE1lc2ggPSAnQXJ0TWVzaCc7XG5cbiAgLyoqXG4gICAqIOODpuODvOOCtuODvOODh+ODvOOCv+OCpOODs+OCv+ODvOODleOCp+ODvOOCuVxuICAgKlxuICAgKiBKc29u44GL44KJ6Kqt44G/6L6844KT44Gg44Om44O844K244O844OH44O844K/44KS6KiY6Yyy44GX44Gm44GK44GP44Gf44KB44Gu5qeL6YCg5L2TXG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtTW9kZWxVc2VyRGF0YU5vZGUge1xuICAgIHRhcmdldFR5cGU6IEN1YmlzbUlkSGFuZGxlOyAvLyDjg6bjg7zjgrbjg7zjg4fjg7zjgr/jgr/jg7zjgrLjg4Pjg4jjgr/jgqTjg5dcbiAgICB0YXJnZXRJZDogQ3ViaXNtSWRIYW5kbGU7IC8vIOODpuODvOOCtuODvOODh+ODvOOCv+OCv+ODvOOCsuODg+ODiOOBrklEXG4gICAgdmFsdWU6IGNzbVN0cmluZzsgLy8g44Om44O844K244O844OH44O844K/XG4gIH1cblxuICAvKipcbiAgICog44Om44O844K244OH44O844K/44Gu566h55CG44Kv44Op44K5XG4gICAqXG4gICAqIOODpuODvOOCtuODh+ODvOOCv+OCkuODreODvOODieOAgeeuoeeQhuOAgeaknOe0ouOCpOODs+OCv+ODvOODleOCp+OCpOOCueOAgeino+aUvuOBvuOBp+OCkuihjOOBhuOAglxuICAgKi9cbiAgZXhwb3J0IGNsYXNzIEN1YmlzbU1vZGVsVXNlckRhdGEge1xuICAgIC8qKlxuICAgICAqIOOCpOODs+OCueOCv+ODs+OCueOBruS9nOaIkFxuICAgICAqXG4gICAgICogQHBhcmFtIGJ1ZmZlciAgICB1c2VyZGF0YTMuanNvbuOBjOiqreOBv+i+vOOBvuOCjOOBpuOBhOOCi+ODkOODg+ODleOCoVxuICAgICAqIEBwYXJhbSBzaXplICAgICAg44OQ44OD44OV44Kh44Gu44K144Kk44K6XG4gICAgICogQHJldHVybiDkvZzmiJDjgZXjgozjgZ/jgqTjg7Pjgrnjgr/jg7PjgrlcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZShcbiAgICAgIGJ1ZmZlcjogQXJyYXlCdWZmZXIsXG4gICAgICBzaXplOiBudW1iZXJcbiAgICApOiBDdWJpc21Nb2RlbFVzZXJEYXRhIHtcbiAgICAgIGNvbnN0IHJldDogQ3ViaXNtTW9kZWxVc2VyRGF0YSA9IG5ldyBDdWJpc21Nb2RlbFVzZXJEYXRhKCk7XG5cbiAgICAgIHJldC5wYXJzZVVzZXJEYXRhKGJ1ZmZlciwgc2l6ZSk7XG5cbiAgICAgIHJldHVybiByZXQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Kk44Oz44K544K/44Oz44K544KS56C05qOE44GZ44KLXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbW9kZWxVc2VyRGF0YSDnoLTmo4TjgZnjgovjgqTjg7Pjgrnjgr/jg7PjgrlcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGRlbGV0ZShtb2RlbFVzZXJEYXRhOiBDdWJpc21Nb2RlbFVzZXJEYXRhKTogdm9pZCB7XG4gICAgICBpZiAobW9kZWxVc2VyRGF0YSAhPSBudWxsKSB7XG4gICAgICAgIG1vZGVsVXNlckRhdGEucmVsZWFzZSgpO1xuICAgICAgICBtb2RlbFVzZXJEYXRhID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBcnRNZXNo44Gu44Om44O844K244O844OH44O844K/44Gu44Oq44K544OI44Gu5Y+W5b6XXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIOODpuODvOOCtuODvOODh+ODvOOCv+ODquOCueODiFxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRBcnRNZXNoVXNlckRhdGFzKCk6IGNzbVZlY3RvcjxDdWJpc21Nb2RlbFVzZXJEYXRhTm9kZT4ge1xuICAgICAgcmV0dXJuIHRoaXMuX2FydE1lc2hVc2VyRGF0YU5vZGU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogdXNlcmRhdGEzLmpzb27jga7jg5Hjg7zjgrlcbiAgICAgKlxuICAgICAqIEBwYXJhbSBidWZmZXIgICAgdXNlcmRhdGEzLmpzb27jgYzoqq3jgb/ovrzjgb7jgozjgabjgYTjgovjg5Djg4Pjg5XjgqFcbiAgICAgKiBAcGFyYW0gc2l6ZSAgICAgIOODkOODg+ODleOCoeOBruOCteOCpOOCulxuICAgICAqL1xuICAgIHB1YmxpYyBwYXJzZVVzZXJEYXRhKGJ1ZmZlcjogQXJyYXlCdWZmZXIsIHNpemU6IG51bWJlcik6IHZvaWQge1xuICAgICAgbGV0IGpzb246IEN1YmlzbU1vZGVsVXNlckRhdGFKc29uID0gbmV3IEN1YmlzbU1vZGVsVXNlckRhdGFKc29uKFxuICAgICAgICBidWZmZXIsXG4gICAgICAgIHNpemVcbiAgICAgICk7XG5cbiAgICAgIGNvbnN0IHR5cGVPZkFydE1lc2ggPSBDdWJpc21GcmFtZXdvcmsuZ2V0SWRNYW5hZ2VyKCkuZ2V0SWQoQXJ0TWVzaCk7XG4gICAgICBjb25zdCBub2RlQ291bnQ6IG51bWJlciA9IGpzb24uZ2V0VXNlckRhdGFDb3VudCgpO1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5vZGVDb3VudDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGFkZE5vZGU6IEN1YmlzbU1vZGVsVXNlckRhdGFOb2RlID0gbmV3IEN1YmlzbU1vZGVsVXNlckRhdGFOb2RlKCk7XG5cbiAgICAgICAgYWRkTm9kZS50YXJnZXRJZCA9IGpzb24uZ2V0VXNlckRhdGFJZChpKTtcbiAgICAgICAgYWRkTm9kZS50YXJnZXRUeXBlID0gQ3ViaXNtRnJhbWV3b3JrLmdldElkTWFuYWdlcigpLmdldElkKFxuICAgICAgICAgIGpzb24uZ2V0VXNlckRhdGFUYXJnZXRUeXBlKGkpXG4gICAgICAgICk7XG4gICAgICAgIGFkZE5vZGUudmFsdWUgPSBuZXcgY3NtU3RyaW5nKGpzb24uZ2V0VXNlckRhdGFWYWx1ZShpKSk7XG4gICAgICAgIHRoaXMuX3VzZXJEYXRhTm9kZXMucHVzaEJhY2soYWRkTm9kZSk7XG5cbiAgICAgICAgaWYgKGFkZE5vZGUudGFyZ2V0VHlwZSA9PSB0eXBlT2ZBcnRNZXNoKSB7XG4gICAgICAgICAgdGhpcy5fYXJ0TWVzaFVzZXJEYXRhTm9kZS5wdXNoQmFjayhhZGROb2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBqc29uLnJlbGVhc2UoKTtcbiAgICAgIGpzb24gPSB2b2lkIDA7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgdGhpcy5fdXNlckRhdGFOb2RlcyA9IG5ldyBjc21WZWN0b3I8Q3ViaXNtTW9kZWxVc2VyRGF0YU5vZGU+KCk7XG4gICAgICB0aGlzLl9hcnRNZXNoVXNlckRhdGFOb2RlID0gbmV3IGNzbVZlY3RvcjxDdWJpc21Nb2RlbFVzZXJEYXRhTm9kZT4oKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg4fjgrnjg4jjg6njgq/jgr/nm7jlvZPjga7lh6bnkIZcbiAgICAgKlxuICAgICAqIOODpuODvOOCtuODvOODh+ODvOOCv+ani+mAoOS9k+mFjeWIl+OCkuino+aUvuOBmeOCi1xuICAgICAqL1xuICAgIHB1YmxpYyByZWxlYXNlKCk6IHZvaWQge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl91c2VyRGF0YU5vZGVzLmdldFNpemUoKTsgKytpKSB7XG4gICAgICAgIHRoaXMuX3VzZXJEYXRhTm9kZXMuc2V0KGksIG51bGwpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl91c2VyRGF0YU5vZGVzID0gbnVsbDtcbiAgICB9XG5cbiAgICBwcml2YXRlIF91c2VyRGF0YU5vZGVzOiBjc21WZWN0b3I8Q3ViaXNtTW9kZWxVc2VyRGF0YU5vZGU+OyAvLyDjg6bjg7zjgrbjg7zjg4fjg7zjgr/mp4vpgKDkvZPphY3liJdcbiAgICBwcml2YXRlIF9hcnRNZXNoVXNlckRhdGFOb2RlOiBjc21WZWN0b3I8Q3ViaXNtTW9kZWxVc2VyRGF0YU5vZGU+OyAvLyDplrLopqfjg6rjgrnjg4jjga7kv53mjIFcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOztBQU9BO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUFBO0FBQ0E7QUFPQTtBQUFBO0FBSUE7QUFBQTtBQUFBO0FBSkE7QUFXQTtBQTZFQTtBQUNBO0FBQ0E7QUFDQTtBQXhFQTtBQUlBO0FBRUE7QUFFQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUtBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQWVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUlBO0FBQUE7QUFqR0E7QUFrR0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./Framework/src/model/cubismmodeluserdata.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/model/cubismmodeluserdatajson.ts\":\n/*!********************************************************!*\\\n  !*** ./Framework/src/model/cubismmodeluserdatajson.ts ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismjson_1 = __webpack_require__(/*! ../utils/cubismjson */ \\\"./Framework/src/utils/cubismjson.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismJson = cubismjson_1.Live2DCubismFramework.CubismJson;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var Meta = 'Meta';\\r\\n    var UserDataCount = 'UserDataCount';\\r\\n    var TotalUserDataSize = 'TotalUserDataSize';\\r\\n    var UserData = 'UserData';\\r\\n    var Target = 'Target';\\r\\n    var Id = 'Id';\\r\\n    var Value = 'Value';\\r\\n    var CubismModelUserDataJson = (function () {\\r\\n        function CubismModelUserDataJson(buffer, size) {\\r\\n            this._json = CubismJson.create(buffer, size);\\r\\n        }\\r\\n        CubismModelUserDataJson.prototype.release = function () {\\r\\n            CubismJson.delete(this._json);\\r\\n        };\\r\\n        CubismModelUserDataJson.prototype.getUserDataCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(UserDataCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismModelUserDataJson.prototype.getTotalUserDataSize = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(TotalUserDataSize)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismModelUserDataJson.prototype.getUserDataTargetType = function (i) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(UserData)\\r\\n                .getValueByIndex(i)\\r\\n                .getValueByString(Target)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismModelUserDataJson.prototype.getUserDataId = function (i) {\\r\\n            return CubismFramework.getIdManager().getId(this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(UserData)\\r\\n                .getValueByIndex(i)\\r\\n                .getValueByString(Id)\\r\\n                .getRawString());\\r\\n        };\\r\\n        CubismModelUserDataJson.prototype.getUserDataValue = function (i) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(UserData)\\r\\n                .getValueByIndex(i)\\r\\n                .getValueByString(Value)\\r\\n                .getRawString();\\r\\n        };\\r\\n        return CubismModelUserDataJson;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismModelUserDataJson = CubismModelUserDataJson;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21vZGVsL2N1YmlzbW1vZGVsdXNlcmRhdGFqc29uLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vRnJhbWV3b3JrL3NyYy9tb2RlbC9jdWJpc21tb2RlbHVzZXJkYXRhanNvbi50cz82MWE4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjdWJpc21qc29uIH0gZnJvbSAnLi4vdXRpbHMvY3ViaXNtanNvbic7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3ViaXNtaWQgfSBmcm9tICcuLi9pZC9jdWJpc21pZCc7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3ViaXNtZnJhbWV3b3JrIH0gZnJvbSAnLi4vbGl2ZTJkY3ViaXNtZnJhbWV3b3JrJztcbmltcG9ydCBDdWJpc21GcmFtZXdvcmsgPSBjdWJpc21mcmFtZXdvcmsuQ3ViaXNtRnJhbWV3b3JrO1xuaW1wb3J0IEN1YmlzbUlkSGFuZGxlID0gY3ViaXNtaWQuQ3ViaXNtSWRIYW5kbGU7XG5pbXBvcnQgQ3ViaXNtSnNvbiA9IGN1YmlzbWpzb24uQ3ViaXNtSnNvbjtcblxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICBjb25zdCBNZXRhID0gJ01ldGEnO1xuICBjb25zdCBVc2VyRGF0YUNvdW50ID0gJ1VzZXJEYXRhQ291bnQnO1xuICBjb25zdCBUb3RhbFVzZXJEYXRhU2l6ZSA9ICdUb3RhbFVzZXJEYXRhU2l6ZSc7XG4gIGNvbnN0IFVzZXJEYXRhID0gJ1VzZXJEYXRhJztcbiAgY29uc3QgVGFyZ2V0ID0gJ1RhcmdldCc7XG4gIGNvbnN0IElkID0gJ0lkJztcbiAgY29uc3QgVmFsdWUgPSAnVmFsdWUnO1xuXG4gIGV4cG9ydCBjbGFzcyBDdWJpc21Nb2RlbFVzZXJEYXRhSnNvbiB7XG4gICAgLyoqXG4gICAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAgICogQHBhcmFtIGJ1ZmZlciAgICB1c2VyZGF0YTMuanNvbuOBjOiqreOBv+i+vOOBvuOCjOOBpuOBhOOCi+ODkOODg+ODleOCoVxuICAgICAqIEBwYXJhbSBzaXplICAgICAg44OQ44OD44OV44Kh44Gu44K144Kk44K6XG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKGJ1ZmZlcjogQXJyYXlCdWZmZXIsIHNpemU6IG51bWJlcikge1xuICAgICAgdGhpcy5fanNvbiA9IEN1YmlzbUpzb24uY3JlYXRlKGJ1ZmZlciwgc2l6ZSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44OH44K544OI44Op44Kv44K/55u45b2T44Gu5Yem55CGXG4gICAgICovXG4gICAgcHVibGljIHJlbGVhc2UoKTogdm9pZCB7XG4gICAgICBDdWJpc21Kc29uLmRlbGV0ZSh0aGlzLl9qc29uKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6bjg7zjgrbjg7zjg4fjg7zjgr/lgIvmlbDjga7lj5blvpdcbiAgICAgKiBAcmV0dXJuIOODpuODvOOCtuODvOODh+ODvOOCv+OBruWAi+aVsFxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRVc2VyRGF0YUNvdW50KCk6IG51bWJlciB7XG4gICAgICByZXR1cm4gdGhpcy5fanNvblxuICAgICAgICAuZ2V0Um9vdCgpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKE1ldGEpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKFVzZXJEYXRhQ291bnQpXG4gICAgICAgIC50b0ludCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODpuODvOOCtuODvOODh+ODvOOCv+e3j+aWh+Wtl+WIl+aVsOOBruWPluW+l1xuICAgICAqXG4gICAgICogQHJldHVybiDjg6bjg7zjgrbjg7zjg4fjg7zjgr/nt4/mloflrZfliJfmlbBcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0VG90YWxVc2VyRGF0YVNpemUoKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiB0aGlzLl9qc29uXG4gICAgICAgIC5nZXRSb290KClcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoTWV0YSlcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoVG90YWxVc2VyRGF0YVNpemUpXG4gICAgICAgIC50b0ludCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODpuODvOOCtuODvOODh+ODvOOCv+OBruOCv+OCpOODl+OBruWPluW+l1xuICAgICAqXG4gICAgICogQHJldHVybiDjg6bjg7zjgrbjg7zjg4fjg7zjgr/jga7jgr/jgqTjg5dcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0VXNlckRhdGFUYXJnZXRUeXBlKGk6IG51bWJlcik6IHN0cmluZyB7XG4gICAgICByZXR1cm4gdGhpcy5fanNvblxuICAgICAgICAuZ2V0Um9vdCgpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKFVzZXJEYXRhKVxuICAgICAgICAuZ2V0VmFsdWVCeUluZGV4KGkpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKFRhcmdldClcbiAgICAgICAgLmdldFJhd1N0cmluZygpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODpuODvOOCtuODvOODh+ODvOOCv+OBruOCv+ODvOOCsuODg+ODiElE44Gu5Y+W5b6XXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaSDjgqTjg7Pjg4fjg4Pjgq/jgrlcbiAgICAgKiBAcmV0dXJuIOODpuODvOOCtuODvOODh+ODvOOCv+OCv+ODvOOCsuODg+ODiElEXG4gICAgICovXG4gICAgcHVibGljIGdldFVzZXJEYXRhSWQoaTogbnVtYmVyKTogQ3ViaXNtSWRIYW5kbGUge1xuICAgICAgcmV0dXJuIEN1YmlzbUZyYW1ld29yay5nZXRJZE1hbmFnZXIoKS5nZXRJZChcbiAgICAgICAgdGhpcy5fanNvblxuICAgICAgICAgIC5nZXRSb290KClcbiAgICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhVc2VyRGF0YSlcbiAgICAgICAgICAuZ2V0VmFsdWVCeUluZGV4KGkpXG4gICAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoSWQpXG4gICAgICAgICAgLmdldFJhd1N0cmluZygpXG4gICAgICApO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODpuODvOOCtuODvOODh+ODvOOCv+OBruaWh+Wtl+WIl+OBruWPluW+l1xuICAgICAqXG4gICAgICogQHBhcmFtIGkg44Kk44Oz44OH44OD44Kv44K5XG4gICAgICogQHJldHVybiDjg6bjg7zjgrbjg7zjg4fjg7zjgr9cbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0VXNlckRhdGFWYWx1ZShpOiBudW1iZXIpOiBzdHJpbmcge1xuICAgICAgcmV0dXJuIHRoaXMuX2pzb25cbiAgICAgICAgLmdldFJvb3QoKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhVc2VyRGF0YSlcbiAgICAgICAgLmdldFZhbHVlQnlJbmRleChpKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhWYWx1ZSlcbiAgICAgICAgLmdldFJhd1N0cmluZygpO1xuICAgIH1cblxuICAgIHByaXZhdGUgX2pzb246IEN1YmlzbUpzb247XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFPQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBTUE7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQUE7QUF6RkE7QUEwRkE7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./Framework/src/model/cubismmodeluserdatajson.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/model/cubismusermodel.ts\":\n/*!************************************************!*\\\n  !*** ./Framework/src/model/cubismusermodel.ts ***!\n  \\************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar cubismmotionmanager_1 = __webpack_require__(/*! ../motion/cubismmotionmanager */ \\\"./Framework/src/motion/cubismmotionmanager.ts\\\");\\r\\nvar cubismtargetpoint_1 = __webpack_require__(/*! ../math/cubismtargetpoint */ \\\"./Framework/src/math/cubismtargetpoint.ts\\\");\\r\\nvar cubismmodelmatrix_1 = __webpack_require__(/*! ../math/cubismmodelmatrix */ \\\"./Framework/src/math/cubismmodelmatrix.ts\\\");\\r\\nvar cubismmoc_1 = __webpack_require__(/*! ./cubismmoc */ \\\"./Framework/src/model/cubismmoc.ts\\\");\\r\\nvar cubismmotion_1 = __webpack_require__(/*! ../motion/cubismmotion */ \\\"./Framework/src/motion/cubismmotion.ts\\\");\\r\\nvar cubismexpressionmotion_1 = __webpack_require__(/*! ../motion/cubismexpressionmotion */ \\\"./Framework/src/motion/cubismexpressionmotion.ts\\\");\\r\\nvar cubismpose_1 = __webpack_require__(/*! ../effect/cubismpose */ \\\"./Framework/src/effect/cubismpose.ts\\\");\\r\\nvar cubismmodeluserdata_1 = __webpack_require__(/*! ./cubismmodeluserdata */ \\\"./Framework/src/model/cubismmodeluserdata.ts\\\");\\r\\nvar cubismphysics_1 = __webpack_require__(/*! ../physics/cubismphysics */ \\\"./Framework/src/physics/cubismphysics.ts\\\");\\r\\nvar cubismbreath_1 = __webpack_require__(/*! ../effect/cubismbreath */ \\\"./Framework/src/effect/cubismbreath.ts\\\");\\r\\nvar cubismeyeblink_1 = __webpack_require__(/*! ../effect/cubismeyeblink */ \\\"./Framework/src/effect/cubismeyeblink.ts\\\");\\r\\nvar cubismrenderer_webgl_1 = __webpack_require__(/*! ../rendering/cubismrenderer_webgl */ \\\"./Framework/src/rendering/cubismrenderer_webgl.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar CubismRenderer_WebGL = cubismrenderer_webgl_1.Live2DCubismFramework.CubismRenderer_WebGL;\\r\\nvar CubismEyeBlink = cubismeyeblink_1.Live2DCubismFramework.CubismEyeBlink;\\r\\nvar CubismBreath = cubismbreath_1.Live2DCubismFramework.CubismBreath;\\r\\nvar Constant = live2dcubismframework_1.Live2DCubismFramework.Constant;\\r\\nvar CubismPhysics = cubismphysics_1.Live2DCubismFramework.CubismPhysics;\\r\\nvar CubismModelUserData = cubismmodeluserdata_1.Live2DCubismFramework.CubismModelUserData;\\r\\nvar CubismPose = cubismpose_1.Live2DCubismFramework.CubismPose;\\r\\nvar CubismExpressionMotion = cubismexpressionmotion_1.Live2DCubismFramework.CubismExpressionMotion;\\r\\nvar CubismMotion = cubismmotion_1.Live2DCubismFramework.CubismMotion;\\r\\nvar CubismMoc = cubismmoc_1.Live2DCubismFramework.CubismMoc;\\r\\nvar CubismModelMatrix = cubismmodelmatrix_1.Live2DCubismFramework.CubismModelMatrix;\\r\\nvar CubismTargetPoint = cubismtargetpoint_1.Live2DCubismFramework.CubismTargetPoint;\\r\\nvar CubismMotionManager = cubismmotionmanager_1.Live2DCubismFramework.CubismMotionManager;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismUserModel = (function () {\\r\\n        function CubismUserModel() {\\r\\n            this.loadMotion = function (buffer, size, name, onFinishedMotionHandler) { return CubismMotion.create(buffer, size, onFinishedMotionHandler); };\\r\\n            this._moc = null;\\r\\n            this._model = null;\\r\\n            this._motionManager = null;\\r\\n            this._expressionManager = null;\\r\\n            this._eyeBlink = null;\\r\\n            this._breath = null;\\r\\n            this._modelMatrix = null;\\r\\n            this._pose = null;\\r\\n            this._dragManager = null;\\r\\n            this._physics = null;\\r\\n            this._modelUserData = null;\\r\\n            this._initialized = false;\\r\\n            this._updating = false;\\r\\n            this._opacity = 1.0;\\r\\n            this._lipsync = true;\\r\\n            this._lastLipSyncValue = 0.0;\\r\\n            this._dragX = 0.0;\\r\\n            this._dragY = 0.0;\\r\\n            this._accelerationX = 0.0;\\r\\n            this._accelerationY = 0.0;\\r\\n            this._accelerationZ = 0.0;\\r\\n            this._debugMode = false;\\r\\n            this._renderer = null;\\r\\n            this._motionManager = new CubismMotionManager();\\r\\n            this._motionManager.setEventCallback(CubismUserModel.cubismDefaultMotionEventCallback, this);\\r\\n            this._expressionManager = new CubismMotionManager();\\r\\n            this._dragManager = new CubismTargetPoint();\\r\\n        }\\r\\n        CubismUserModel.prototype.isInitialized = function () {\\r\\n            return this._initialized;\\r\\n        };\\r\\n        CubismUserModel.prototype.setInitialized = function (v) {\\r\\n            this._initialized = v;\\r\\n        };\\r\\n        CubismUserModel.prototype.isUpdating = function () {\\r\\n            return this._updating;\\r\\n        };\\r\\n        CubismUserModel.prototype.setUpdating = function (v) {\\r\\n            this._updating = v;\\r\\n        };\\r\\n        CubismUserModel.prototype.setDragging = function (x, y) {\\r\\n            this._dragManager.set(x, y);\\r\\n        };\\r\\n        CubismUserModel.prototype.setAcceleration = function (x, y, z) {\\r\\n            this._accelerationX = x;\\r\\n            this._accelerationY = y;\\r\\n            this._accelerationZ = z;\\r\\n        };\\r\\n        CubismUserModel.prototype.getModelMatrix = function () {\\r\\n            return this._modelMatrix;\\r\\n        };\\r\\n        CubismUserModel.prototype.setOpacity = function (a) {\\r\\n            this._opacity = a;\\r\\n        };\\r\\n        CubismUserModel.prototype.getOpacity = function () {\\r\\n            return this._opacity;\\r\\n        };\\r\\n        CubismUserModel.prototype.loadModel = function (buffer) {\\r\\n            this._moc = CubismMoc.create(buffer);\\r\\n            this._model = this._moc.createModel();\\r\\n            this._model.saveParameters();\\r\\n            if (this._moc == null || this._model == null) {\\r\\n                cubismdebug_1.CubismLogError('Failed to CreateModel().');\\r\\n                return;\\r\\n            }\\r\\n            this._modelMatrix = new CubismModelMatrix(this._model.getCanvasWidth(), this._model.getCanvasHeight());\\r\\n        };\\r\\n        CubismUserModel.prototype.loadExpression = function (buffer, size, name) {\\r\\n            return CubismExpressionMotion.create(buffer, size);\\r\\n        };\\r\\n        CubismUserModel.prototype.loadPose = function (buffer, size) {\\r\\n            this._pose = CubismPose.create(buffer, size);\\r\\n        };\\r\\n        CubismUserModel.prototype.loadUserData = function (buffer, size) {\\r\\n            this._modelUserData = CubismModelUserData.create(buffer, size);\\r\\n        };\\r\\n        CubismUserModel.prototype.loadPhysics = function (buffer, size) {\\r\\n            this._physics = CubismPhysics.create(buffer, size);\\r\\n        };\\r\\n        CubismUserModel.prototype.isHit = function (drawableId, pointX, pointY) {\\r\\n            var drawIndex = this._model.getDrawableIndex(drawableId);\\r\\n            if (drawIndex < 0) {\\r\\n                return false;\\r\\n            }\\r\\n            var count = this._model.getDrawableVertexCount(drawIndex);\\r\\n            var vertices = this._model.getDrawableVertices(drawIndex);\\r\\n            var left = vertices[0];\\r\\n            var right = vertices[0];\\r\\n            var top = vertices[1];\\r\\n            var bottom = vertices[1];\\r\\n            for (var j = 1; j < count; ++j) {\\r\\n                var x = vertices[Constant.vertexOffset + j * Constant.vertexStep];\\r\\n                var y = vertices[Constant.vertexOffset + j * Constant.vertexStep + 1];\\r\\n                if (x < left) {\\r\\n                    left = x;\\r\\n                }\\r\\n                if (x > right) {\\r\\n                    right = x;\\r\\n                }\\r\\n                if (y < top) {\\r\\n                    top = y;\\r\\n                }\\r\\n                if (y > bottom) {\\r\\n                    bottom = y;\\r\\n                }\\r\\n            }\\r\\n            var tx = this._modelMatrix.invertTransformX(pointX);\\r\\n            var ty = this._modelMatrix.invertTransformY(pointY);\\r\\n            return left <= tx && tx <= right && top <= ty && ty <= bottom;\\r\\n        };\\r\\n        CubismUserModel.prototype.getModel = function () {\\r\\n            return this._model;\\r\\n        };\\r\\n        CubismUserModel.prototype.getRenderer = function () {\\r\\n            return this._renderer;\\r\\n        };\\r\\n        CubismUserModel.prototype.createRenderer = function () {\\r\\n            if (this._renderer) {\\r\\n                this.deleteRenderer();\\r\\n            }\\r\\n            this._renderer = new CubismRenderer_WebGL();\\r\\n            this._renderer.initialize(this._model);\\r\\n        };\\r\\n        CubismUserModel.prototype.deleteRenderer = function () {\\r\\n            if (this._renderer != null) {\\r\\n                this._renderer.release();\\r\\n                this._renderer = null;\\r\\n            }\\r\\n        };\\r\\n        CubismUserModel.prototype.motionEventFired = function (eventValue) {\\r\\n            cubismdebug_1.CubismLogInfo('{0}', eventValue.s);\\r\\n        };\\r\\n        CubismUserModel.cubismDefaultMotionEventCallback = function (caller, eventValue, customData) {\\r\\n            var model = customData;\\r\\n            if (model != null) {\\r\\n                model.motionEventFired(eventValue);\\r\\n            }\\r\\n        };\\r\\n        CubismUserModel.prototype.release = function () {\\r\\n            if (this._motionManager != null) {\\r\\n                this._motionManager.release();\\r\\n                this._motionManager = null;\\r\\n            }\\r\\n            if (this._expressionManager != null) {\\r\\n                this._expressionManager.release();\\r\\n                this._expressionManager = null;\\r\\n            }\\r\\n            if (this._moc != null) {\\r\\n                this._moc.deleteModel(this._model);\\r\\n                this._moc.release();\\r\\n                this._moc = null;\\r\\n            }\\r\\n            this._modelMatrix = null;\\r\\n            CubismPose.delete(this._pose);\\r\\n            CubismEyeBlink.delete(this._eyeBlink);\\r\\n            CubismBreath.delete(this._breath);\\r\\n            this._dragManager = null;\\r\\n            CubismPhysics.delete(this._physics);\\r\\n            CubismModelUserData.delete(this._modelUserData);\\r\\n            this.deleteRenderer();\\r\\n        };\\r\\n        return CubismUserModel;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismUserModel = CubismUserModel;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/model/cubismusermodel.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/motion/acubismmotion.ts\":\n/*!***********************************************!*\\\n  !*** ./Framework/src/motion/acubismmotion.ts ***!\n  \\***********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmath_1 = __webpack_require__(/*! ../math/cubismmath */ \\\"./Framework/src/math/cubismmath.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismMath = cubismmath_1.Live2DCubismFramework.CubismMath;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var ACubismMotion = (function () {\\r\\n        function ACubismMotion() {\\r\\n            var _this = this;\\r\\n            this.setFinishedMotionHandler = function (onFinishedMotionHandler) { return (_this._onFinishedMotion = onFinishedMotionHandler); };\\r\\n            this.getFinishedMotionHandler = function () { return _this._onFinishedMotion; };\\r\\n            this._fadeInSeconds = -1.0;\\r\\n            this._fadeOutSeconds = -1.0;\\r\\n            this._weight = 1.0;\\r\\n            this._offsetSeconds = 0.0;\\r\\n            this._firedEventValues = new csmVector();\\r\\n        }\\r\\n        ACubismMotion.delete = function (motion) {\\r\\n            motion.release();\\r\\n            motion = void 0;\\r\\n            motion = null;\\r\\n        };\\r\\n        ACubismMotion.prototype.release = function () {\\r\\n            this._weight = 0.0;\\r\\n        };\\r\\n        ACubismMotion.prototype.updateParameters = function (model, motionQueueEntry, userTimeSeconds) {\\r\\n            if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\\r\\n                return;\\r\\n            }\\r\\n            if (!motionQueueEntry.isStarted()) {\\r\\n                motionQueueEntry.setIsStarted(true);\\r\\n                motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\\r\\n                motionQueueEntry.setFadeInStartTime(userTimeSeconds);\\r\\n                var duration = this.getDuration();\\r\\n                if (motionQueueEntry.getEndTime() < 0) {\\r\\n                    motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\\r\\n                }\\r\\n            }\\r\\n            var fadeWeight = this._weight;\\r\\n            var fadeIn = this._fadeInSeconds == 0.0\\r\\n                ? 1.0\\r\\n                : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\\r\\n                    this._fadeInSeconds);\\r\\n            var fadeOut = this._fadeOutSeconds == 0.0 || motionQueueEntry.getEndTime() < 0.0\\r\\n                ? 1.0\\r\\n                : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) /\\r\\n                    this._fadeOutSeconds);\\r\\n            fadeWeight = fadeWeight * fadeIn * fadeOut;\\r\\n            motionQueueEntry.setState(userTimeSeconds, fadeWeight);\\r\\n            cubismdebug_1.CSM_ASSERT(0.0 <= fadeWeight && fadeWeight <= 1.0);\\r\\n            this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\\r\\n            if (motionQueueEntry.getEndTime() > 0 &&\\r\\n                motionQueueEntry.getEndTime() < userTimeSeconds) {\\r\\n                motionQueueEntry.setIsFinished(true);\\r\\n            }\\r\\n        };\\r\\n        ACubismMotion.prototype.setFadeInTime = function (fadeInSeconds) {\\r\\n            this._fadeInSeconds = fadeInSeconds;\\r\\n        };\\r\\n        ACubismMotion.prototype.setFadeOutTime = function (fadeOutSeconds) {\\r\\n            this._fadeOutSeconds = fadeOutSeconds;\\r\\n        };\\r\\n        ACubismMotion.prototype.getFadeOutTime = function () {\\r\\n            return this._fadeOutSeconds;\\r\\n        };\\r\\n        ACubismMotion.prototype.getFadeInTime = function () {\\r\\n            return this._fadeInSeconds;\\r\\n        };\\r\\n        ACubismMotion.prototype.setWeight = function (weight) {\\r\\n            this._weight = weight;\\r\\n        };\\r\\n        ACubismMotion.prototype.getWeight = function () {\\r\\n            return this._weight;\\r\\n        };\\r\\n        ACubismMotion.prototype.getDuration = function () {\\r\\n            return -1.0;\\r\\n        };\\r\\n        ACubismMotion.prototype.getLoopDuration = function () {\\r\\n            return -1.0;\\r\\n        };\\r\\n        ACubismMotion.prototype.setOffsetTime = function (offsetSeconds) {\\r\\n            this._offsetSeconds = offsetSeconds;\\r\\n        };\\r\\n        ACubismMotion.prototype.getFiredEvent = function (beforeCheckTimeSeconds, motionTimeSeconds) {\\r\\n            return this._firedEventValues;\\r\\n        };\\r\\n        return ACubismMotion;\\r\\n    }());\\r\\n    Live2DCubismFramework.ACubismMotion = ACubismMotion;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/motion/acubismmotion.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/motion/cubismexpressionmotion.ts\":\n/*!********************************************************!*\\\n  !*** ./Framework/src/motion/cubismexpressionmotion.ts ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar acubismmotion_1 = __webpack_require__(/*! ./acubismmotion */ \\\"./Framework/src/motion/acubismmotion.ts\\\");\\r\\nvar cubismjson_1 = __webpack_require__(/*! ../utils/cubismjson */ \\\"./Framework/src/utils/cubismjson.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismJson = cubismjson_1.Live2DCubismFramework.CubismJson;\\r\\nvar ACubismMotion = acubismmotion_1.Live2DCubismFramework.ACubismMotion;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var ExpressionKeyFadeIn = 'FadeInTime';\\r\\n    var ExpressionKeyFadeOut = 'FadeOutTime';\\r\\n    var ExpressionKeyParameters = 'Parameters';\\r\\n    var ExpressionKeyId = 'Id';\\r\\n    var ExpressionKeyValue = 'Value';\\r\\n    var ExpressionKeyBlend = 'Blend';\\r\\n    var BlendValueAdd = 'Add';\\r\\n    var BlendValueMultiply = 'Multiply';\\r\\n    var BlendValueOverwrite = 'Overwrite';\\r\\n    var DefaultFadeTime = 1.0;\\r\\n    var CubismExpressionMotion = (function (_super) {\\r\\n        __extends(CubismExpressionMotion, _super);\\r\\n        function CubismExpressionMotion() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._parameters = new csmVector();\\r\\n            return _this;\\r\\n        }\\r\\n        CubismExpressionMotion.create = function (buffer, size) {\\r\\n            var expression = new CubismExpressionMotion();\\r\\n            var json = CubismJson.create(buffer, size);\\r\\n            var root = json.getRoot();\\r\\n            expression.setFadeInTime(root.getValueByString(ExpressionKeyFadeIn).toFloat(DefaultFadeTime));\\r\\n            expression.setFadeOutTime(root.getValueByString(ExpressionKeyFadeOut).toFloat(DefaultFadeTime));\\r\\n            var parameterCount = root\\r\\n                .getValueByString(ExpressionKeyParameters)\\r\\n                .getSize();\\r\\n            expression._parameters.prepareCapacity(parameterCount);\\r\\n            for (var i = 0; i < parameterCount; ++i) {\\r\\n                var param = root\\r\\n                    .getValueByString(ExpressionKeyParameters)\\r\\n                    .getValueByIndex(i);\\r\\n                var parameterId = CubismFramework.getIdManager().getId(param.getValueByString(ExpressionKeyId).getRawString());\\r\\n                var value = param\\r\\n                    .getValueByString(ExpressionKeyValue)\\r\\n                    .toFloat();\\r\\n                var blendType = void 0;\\r\\n                if (param.getValueByString(ExpressionKeyBlend).isNull() ||\\r\\n                    param.getValueByString(ExpressionKeyBlend).getString() ==\\r\\n                        BlendValueAdd) {\\r\\n                    blendType = ExpressionBlendType.ExpressionBlendType_Add;\\r\\n                }\\r\\n                else if (param.getValueByString(ExpressionKeyBlend).getString() ==\\r\\n                    BlendValueMultiply) {\\r\\n                    blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\\r\\n                }\\r\\n                else if (param.getValueByString(ExpressionKeyBlend).getString() ==\\r\\n                    BlendValueOverwrite) {\\r\\n                    blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\\r\\n                }\\r\\n                else {\\r\\n                    blendType = ExpressionBlendType.ExpressionBlendType_Add;\\r\\n                }\\r\\n                var item = new ExpressionParameter();\\r\\n                item.parameterId = parameterId;\\r\\n                item.blendType = blendType;\\r\\n                item.value = value;\\r\\n                expression._parameters.pushBack(item);\\r\\n            }\\r\\n            CubismJson.delete(json);\\r\\n            return expression;\\r\\n        };\\r\\n        CubismExpressionMotion.prototype.doUpdateParameters = function (model, userTimeSeconds, weight, motionQueueEntry) {\\r\\n            for (var i = 0; i < this._parameters.getSize(); ++i) {\\r\\n                var parameter = this._parameters.at(i);\\r\\n                switch (parameter.blendType) {\\r\\n                    case ExpressionBlendType.ExpressionBlendType_Add: {\\r\\n                        model.addParameterValueById(parameter.parameterId, parameter.value, weight);\\r\\n                        break;\\r\\n                    }\\r\\n                    case ExpressionBlendType.ExpressionBlendType_Multiply: {\\r\\n                        model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\\r\\n                        break;\\r\\n                    }\\r\\n                    case ExpressionBlendType.ExpressionBlendType_Overwrite: {\\r\\n                        model.setParameterValueById(parameter.parameterId, parameter.value, weight);\\r\\n                        break;\\r\\n                    }\\r\\n                    default:\\r\\n                        break;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        return CubismExpressionMotion;\\r\\n    }(ACubismMotion));\\r\\n    Live2DCubismFramework.CubismExpressionMotion = CubismExpressionMotion;\\r\\n    var ExpressionBlendType;\\r\\n    (function (ExpressionBlendType) {\\r\\n        ExpressionBlendType[ExpressionBlendType[\\\"ExpressionBlendType_Add\\\"] = 0] = \\\"ExpressionBlendType_Add\\\";\\r\\n        ExpressionBlendType[ExpressionBlendType[\\\"ExpressionBlendType_Multiply\\\"] = 1] = \\\"ExpressionBlendType_Multiply\\\";\\r\\n        ExpressionBlendType[ExpressionBlendType[\\\"ExpressionBlendType_Overwrite\\\"] = 2] = \\\"ExpressionBlendType_Overwrite\\\";\\r\\n    })(ExpressionBlendType = Live2DCubismFramework.ExpressionBlendType || (Live2DCubismFramework.ExpressionBlendType = {}));\\r\\n    var ExpressionParameter = (function () {\\r\\n        function ExpressionParameter() {\\r\\n        }\\r\\n        return ExpressionParameter;\\r\\n    }());\\r\\n    Live2DCubismFramework.ExpressionParameter = ExpressionParameter;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/motion/cubismexpressionmotion.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/motion/cubismmotion.ts\":\n/*!**********************************************!*\\\n  !*** ./Framework/src/motion/cubismmotion.ts ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmotionjson_1 = __webpack_require__(/*! ./cubismmotionjson */ \\\"./Framework/src/motion/cubismmotionjson.ts\\\");\\r\\nvar cubismmotioninternal_1 = __webpack_require__(/*! ./cubismmotioninternal */ \\\"./Framework/src/motion/cubismmotioninternal.ts\\\");\\r\\nvar acubismmotion_1 = __webpack_require__(/*! ./acubismmotion */ \\\"./Framework/src/motion/acubismmotion.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar cubismmath_1 = __webpack_require__(/*! ../math/cubismmath */ \\\"./Framework/src/math/cubismmath.ts\\\");\\r\\nvar csmstring_1 = __webpack_require__(/*! ../type/csmstring */ \\\"./Framework/src/type/csmstring.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar csmString = csmstring_1.Live2DCubismFramework.csmString;\\r\\nvar CubismMotionData = cubismmotioninternal_1.Live2DCubismFramework.CubismMotionData;\\r\\nvar CubismMotionSegment = cubismmotioninternal_1.Live2DCubismFramework.CubismMotionSegment;\\r\\nvar CubismMotionPoint = cubismmotioninternal_1.Live2DCubismFramework.CubismMotionPoint;\\r\\nvar CubismMotionEvent = cubismmotioninternal_1.Live2DCubismFramework.CubismMotionEvent;\\r\\nvar CubismMotionSegmentType = cubismmotioninternal_1.Live2DCubismFramework.CubismMotionSegmentType;\\r\\nvar CubismMotionCurve = cubismmotioninternal_1.Live2DCubismFramework.CubismMotionCurve;\\r\\nvar CubismMotionCurveTarget = cubismmotioninternal_1.Live2DCubismFramework.CubismMotionCurveTarget;\\r\\nvar CubismMath = cubismmath_1.Live2DCubismFramework.CubismMath;\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar ACubismMotion = acubismmotion_1.Live2DCubismFramework.ACubismMotion;\\r\\nvar CubismMotionJson = cubismmotionjson_1.Live2DCubismFramework.CubismMotionJson;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var EffectNameEyeBlink = 'EyeBlink';\\r\\n    var EffectNameLipSync = 'LipSync';\\r\\n    var TargetNameModel = 'Model';\\r\\n    var TargetNameParameter = 'Parameter';\\r\\n    var TargetNamePartOpacity = 'PartOpacity';\\r\\n    function lerpPoints(a, b, t) {\\r\\n        var result = new CubismMotionPoint();\\r\\n        result.time = a.time + (b.time - a.time) * t;\\r\\n        result.value = a.value + (b.value - a.value) * t;\\r\\n        return result;\\r\\n    }\\r\\n    function linearEvaluate(points, time) {\\r\\n        var t;\\r\\n        if (points[0] && points[0].time != 0) {\\r\\n            t = (time - points[0].time) / (points[1].time - points[0].time);\\r\\n        }\\r\\n        else if (points[2] && points[2].time) {\\r\\n            t = (time - points[1].time) / (points[2].time - points[1].time);\\r\\n        }\\r\\n        else if (points.length > 0) {\\r\\n            t = (time - points[0].time) / (points[1].time - points[0].time);\\r\\n        }\\r\\n        if (t < 0.0) {\\r\\n            t = 0.0;\\r\\n        }\\r\\n        return points[0].value + (points[1].value - points[0].value) * t;\\r\\n    }\\r\\n    function bezierEvaluate(points, time) {\\r\\n        var t = (time - points[0].time) / (points[3].time - points[0].time);\\r\\n        if (t < 0.0) {\\r\\n            t = 0.0;\\r\\n        }\\r\\n        var p01 = lerpPoints(points[0], points[1], t);\\r\\n        var p12 = lerpPoints(points[1], points[2], t);\\r\\n        var p23 = lerpPoints(points[2], points[3], t);\\r\\n        var p012 = lerpPoints(p01, p12, t);\\r\\n        var p123 = lerpPoints(p12, p23, t);\\r\\n        return lerpPoints(p012, p123, t).value;\\r\\n    }\\r\\n    function steppedEvaluate(points, time) {\\r\\n        return points[0].value;\\r\\n    }\\r\\n    function inverseSteppedEvaluate(points, time) {\\r\\n        return points[1].value;\\r\\n    }\\r\\n    function evaluateCurve(motionData, index, time) {\\r\\n        var curve = motionData.curves.at(index);\\r\\n        var target = -1;\\r\\n        var totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\\r\\n        var pointPosition = 0;\\r\\n        for (var i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\\r\\n            pointPosition = motionData.segments.at(i).basePointIndex + (motionData.segments.at(i).segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\\r\\n            if (pointPosition >= motionData.points._size) {\\r\\n                pointPosition = motionData.points._size - 3;\\r\\n            }\\r\\n            if (motionData.points.at(pointPosition).time > time) {\\r\\n                target = i;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        if (target == -1) {\\r\\n            return motionData.points.at(pointPosition).value;\\r\\n        }\\r\\n        var segment = motionData.segments.at(target);\\r\\n        return segment.evaluate(motionData.points.get(segment.basePointIndex), time);\\r\\n    }\\r\\n    var CubismMotion = (function (_super) {\\r\\n        __extends(CubismMotion, _super);\\r\\n        function CubismMotion() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._sourceFrameRate = 30.0;\\r\\n            _this._loopDurationSeconds = -1.0;\\r\\n            _this._isLoop = false;\\r\\n            _this._isLoopFadeIn = true;\\r\\n            _this._lastWeight = 0.0;\\r\\n            _this._motionData = null;\\r\\n            _this._modelCurveIdEyeBlink = null;\\r\\n            _this._modelCurveIdLipSync = null;\\r\\n            _this._eyeBlinkParameterIds = null;\\r\\n            _this._lipSyncParameterIds = null;\\r\\n            return _this;\\r\\n        }\\r\\n        CubismMotion.create = function (buffer, size, onFinishedMotionHandler) {\\r\\n            var ret = new CubismMotion();\\r\\n            ret.parse(buffer, size);\\r\\n            ret._sourceFrameRate = ret._motionData.fps;\\r\\n            ret._loopDurationSeconds = ret._motionData.duration;\\r\\n            ret._onFinishedMotion = onFinishedMotionHandler;\\r\\n            return ret;\\r\\n        };\\r\\n        CubismMotion.prototype.doUpdateParameters = function (model, userTimeSeconds, fadeWeight, motionQueueEntry) {\\r\\n            if (this._modelCurveIdEyeBlink == null) {\\r\\n                this._modelCurveIdEyeBlink = CubismFramework.getIdManager().getId(EffectNameEyeBlink);\\r\\n            }\\r\\n            if (this._modelCurveIdLipSync == null) {\\r\\n                this._modelCurveIdLipSync = CubismFramework.getIdManager().getId(EffectNameLipSync);\\r\\n            }\\r\\n            var timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\\r\\n            if (timeOffsetSeconds < 0.0) {\\r\\n                timeOffsetSeconds = 0.0;\\r\\n            }\\r\\n            var lipSyncValue = Number.MAX_VALUE;\\r\\n            var eyeBlinkValue = Number.MAX_VALUE;\\r\\n            var MaxTargetSize = 64;\\r\\n            var lipSyncFlags = 0;\\r\\n            var eyeBlinkFlags = 0;\\r\\n            if (this._eyeBlinkParameterIds.getSize() > MaxTargetSize) {\\r\\n                cubismdebug_1.CubismLogDebug('too many eye blink targets : {0}', this._eyeBlinkParameterIds.getSize());\\r\\n            }\\r\\n            if (this._lipSyncParameterIds.getSize() > MaxTargetSize) {\\r\\n                cubismdebug_1.CubismLogDebug('too many lip sync targets : {0}', this._lipSyncParameterIds.getSize());\\r\\n            }\\r\\n            var tmpFadeIn = this._fadeInSeconds <= 0.0\\r\\n                ? 1.0\\r\\n                : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\\r\\n                    this._fadeInSeconds);\\r\\n            var tmpFadeOut = this._fadeOutSeconds <= 0.0 || motionQueueEntry.getEndTime() < 0.0\\r\\n                ? 1.0\\r\\n                : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) /\\r\\n                    this._fadeOutSeconds);\\r\\n            var value;\\r\\n            var c, parameterIndex;\\r\\n            var time = timeOffsetSeconds;\\r\\n            if (this._isLoop) {\\r\\n                while (time > this._motionData.duration) {\\r\\n                    time -= this._motionData.duration;\\r\\n                }\\r\\n            }\\r\\n            var curves = this._motionData.curves;\\r\\n            for (c = 0; c < this._motionData.curveCount &&\\r\\n                curves.at(c).type ==\\r\\n                    CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\\r\\n                value = evaluateCurve(this._motionData, c, time);\\r\\n                if (curves.at(c).id == this._modelCurveIdEyeBlink) {\\r\\n                    eyeBlinkValue = value;\\r\\n                }\\r\\n                else if (curves.at(c).id == this._modelCurveIdLipSync) {\\r\\n                    lipSyncValue = value;\\r\\n                }\\r\\n            }\\r\\n            var parameterMotionCurveCount = 0;\\r\\n            for (; c < this._motionData.curveCount &&\\r\\n                curves.at(c).type ==\\r\\n                    CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\\r\\n                parameterMotionCurveCount++;\\r\\n                parameterIndex = model.getParameterIndex(curves.at(c).id);\\r\\n                if (parameterIndex == -1) {\\r\\n                    continue;\\r\\n                }\\r\\n                var sourceValue = model.getParameterValueByIndex(parameterIndex);\\r\\n                value = evaluateCurve(this._motionData, c, time);\\r\\n                if (eyeBlinkValue != Number.MAX_VALUE) {\\r\\n                    for (var i = 0; i < this._eyeBlinkParameterIds.getSize() && i < MaxTargetSize; ++i) {\\r\\n                        if (this._eyeBlinkParameterIds.at(i) == curves.at(c).id) {\\r\\n                            value *= eyeBlinkValue;\\r\\n                            eyeBlinkFlags |= 1 << i;\\r\\n                            break;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                if (lipSyncValue != Number.MAX_VALUE) {\\r\\n                    for (var i = 0; i < this._lipSyncParameterIds.getSize() && i < MaxTargetSize; ++i) {\\r\\n                        if (this._lipSyncParameterIds.at(i) == curves.at(c).id) {\\r\\n                            value += lipSyncValue;\\r\\n                            lipSyncFlags |= 1 << i;\\r\\n                            break;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                var v = void 0;\\r\\n                if (curves.at(c).fadeInTime < 0.0 && curves.at(c).fadeOutTime < 0.0) {\\r\\n                    v = sourceValue + (value - sourceValue) * fadeWeight;\\r\\n                }\\r\\n                else {\\r\\n                    var fin = void 0;\\r\\n                    var fout = void 0;\\r\\n                    if (curves.at(c).fadeInTime < 0.0) {\\r\\n                        fin = tmpFadeIn;\\r\\n                    }\\r\\n                    else {\\r\\n                        fin =\\r\\n                            curves.at(c).fadeInTime == 0.0\\r\\n                                ? 1.0\\r\\n                                : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\\r\\n                                    curves.at(c).fadeInTime);\\r\\n                    }\\r\\n                    if (curves.at(c).fadeOutTime < 0.0) {\\r\\n                        fout = tmpFadeOut;\\r\\n                    }\\r\\n                    else {\\r\\n                        fout =\\r\\n                            curves.at(c).fadeOutTime == 0.0 ||\\r\\n                                motionQueueEntry.getEndTime() < 0.0\\r\\n                                ? 1.0\\r\\n                                : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) /\\r\\n                                    curves.at(c).fadeOutTime);\\r\\n                    }\\r\\n                    var paramWeight = this._weight * fin * fout;\\r\\n                    v = sourceValue + (value - sourceValue) * paramWeight;\\r\\n                }\\r\\n                model.setParameterValueByIndex(parameterIndex, v, 1.0);\\r\\n            }\\r\\n            {\\r\\n                if (eyeBlinkValue != Number.MAX_VALUE) {\\r\\n                    for (var i = 0; i < this._eyeBlinkParameterIds.getSize() && i < MaxTargetSize; ++i) {\\r\\n                        var sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds.at(i));\\r\\n                        if ((eyeBlinkFlags >> i) & 0x01) {\\r\\n                            continue;\\r\\n                        }\\r\\n                        var v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\\r\\n                        model.setParameterValueById(this._eyeBlinkParameterIds.at(i), v);\\r\\n                    }\\r\\n                }\\r\\n                if (lipSyncValue != Number.MAX_VALUE) {\\r\\n                    for (var i = 0; i < this._lipSyncParameterIds.getSize() && i < MaxTargetSize; ++i) {\\r\\n                        var sourceValue = model.getParameterValueById(this._lipSyncParameterIds.at(i));\\r\\n                        if ((lipSyncFlags >> i) & 0x01) {\\r\\n                            continue;\\r\\n                        }\\r\\n                        var v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\\r\\n                        model.setParameterValueById(this._lipSyncParameterIds.at(i), v);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            for (; c < this._motionData.curveCount &&\\r\\n                curves.at(c).type ==\\r\\n                    CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\\r\\n                parameterIndex = model.getParameterIndex(curves.at(c).id);\\r\\n                if (parameterIndex == -1) {\\r\\n                    continue;\\r\\n                }\\r\\n                value = evaluateCurve(this._motionData, c, time);\\r\\n                model.setParameterValueByIndex(parameterIndex, value);\\r\\n            }\\r\\n            if (timeOffsetSeconds >= this._motionData.duration) {\\r\\n                if (this._isLoop) {\\r\\n                    motionQueueEntry.setStartTime(userTimeSeconds);\\r\\n                    if (this._isLoopFadeIn) {\\r\\n                        motionQueueEntry.setFadeInStartTime(userTimeSeconds);\\r\\n                    }\\r\\n                }\\r\\n                else {\\r\\n                    if (this._onFinishedMotion) {\\r\\n                        this._onFinishedMotion(this);\\r\\n                    }\\r\\n                    motionQueueEntry.setIsFinished(true);\\r\\n                }\\r\\n            }\\r\\n            this._lastWeight = fadeWeight;\\r\\n        };\\r\\n        CubismMotion.prototype.setIsLoop = function (loop) {\\r\\n            this._isLoop = loop;\\r\\n        };\\r\\n        CubismMotion.prototype.isLoop = function () {\\r\\n            return this._isLoop;\\r\\n        };\\r\\n        CubismMotion.prototype.setIsLoopFadeIn = function (loopFadeIn) {\\r\\n            this._isLoopFadeIn = loopFadeIn;\\r\\n        };\\r\\n        CubismMotion.prototype.isLoopFadeIn = function () {\\r\\n            return this._isLoopFadeIn;\\r\\n        };\\r\\n        CubismMotion.prototype.getDuration = function () {\\r\\n            return this._isLoop ? -1.0 : this._loopDurationSeconds;\\r\\n        };\\r\\n        CubismMotion.prototype.getLoopDuration = function () {\\r\\n            return this._loopDurationSeconds;\\r\\n        };\\r\\n        CubismMotion.prototype.setParameterFadeInTime = function (parameterId, value) {\\r\\n            var curves = this._motionData.curves;\\r\\n            for (var i = 0; i < this._motionData.curveCount; ++i) {\\r\\n                if (parameterId == curves.at(i).id) {\\r\\n                    curves.at(i).fadeInTime = value;\\r\\n                    return;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismMotion.prototype.setParameterFadeOutTime = function (parameterId, value) {\\r\\n            var curves = this._motionData.curves;\\r\\n            for (var i = 0; i < this._motionData.curveCount; ++i) {\\r\\n                if (parameterId == curves.at(i).id) {\\r\\n                    curves.at(i).fadeOutTime = value;\\r\\n                    return;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismMotion.prototype.getParameterFadeInTime = function (parameterId) {\\r\\n            var curves = this._motionData.curves;\\r\\n            for (var i = 0; i < this._motionData.curveCount; ++i) {\\r\\n                if (parameterId == curves.at(i).id) {\\r\\n                    return curves.at(i).fadeInTime;\\r\\n                }\\r\\n            }\\r\\n            return -1;\\r\\n        };\\r\\n        CubismMotion.prototype.getParameterFadeOutTime = function (parameterId) {\\r\\n            var curves = this._motionData.curves;\\r\\n            for (var i = 0; i < this._motionData.curveCount; ++i) {\\r\\n                if (parameterId == curves.at(i).id) {\\r\\n                    return curves.at(i).fadeOutTime;\\r\\n                }\\r\\n            }\\r\\n            return -1;\\r\\n        };\\r\\n        CubismMotion.prototype.setEffectIds = function (eyeBlinkParameterIds, lipSyncParameterIds) {\\r\\n            this._eyeBlinkParameterIds = eyeBlinkParameterIds;\\r\\n            this._lipSyncParameterIds = lipSyncParameterIds;\\r\\n        };\\r\\n        CubismMotion.prototype.release = function () {\\r\\n            this._motionData = void 0;\\r\\n            this._motionData = null;\\r\\n        };\\r\\n        CubismMotion.prototype.parse = function (motionJson, size) {\\r\\n            this._motionData = new CubismMotionData();\\r\\n            var json = new CubismMotionJson(motionJson, size);\\r\\n            this._motionData.duration = json.getMotionDuration();\\r\\n            this._motionData.loop = json.isMotionLoop();\\r\\n            this._motionData.curveCount = json.getMotionCurveCount();\\r\\n            this._motionData.fps = json.getMotionFps();\\r\\n            this._motionData.eventCount = json.getEventCount();\\r\\n            if (json.isExistMotionFadeInTime()) {\\r\\n                this._fadeInSeconds =\\r\\n                    json.getMotionFadeInTime() < 0.0 ? 1.0 : json.getMotionFadeInTime();\\r\\n            }\\r\\n            else {\\r\\n                this._fadeInSeconds = 1.0;\\r\\n            }\\r\\n            if (json.isExistMotionFadeOutTime()) {\\r\\n                this._fadeOutSeconds =\\r\\n                    json.getMotionFadeOutTime() < 0.0 ? 1.0 : json.getMotionFadeOutTime();\\r\\n            }\\r\\n            else {\\r\\n                this._fadeOutSeconds = 1.0;\\r\\n            }\\r\\n            this._motionData.curves.updateSize(this._motionData.curveCount, CubismMotionCurve, true);\\r\\n            this._motionData.segments.updateSize(json.getMotionTotalSegmentCount(), CubismMotionSegment, true);\\r\\n            this._motionData.points.updateSize(json.getMotionTotalPointCount(), CubismMotionPoint, true);\\r\\n            this._motionData.events.updateSize(this._motionData.eventCount, CubismMotionEvent, true);\\r\\n            var totalPointCount = 0;\\r\\n            var totalSegmentCount = 0;\\r\\n            for (var curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\\r\\n                if (json.getMotionCurveTarget(curveCount) == TargetNameModel) {\\r\\n                    this._motionData.curves.at(curveCount).type =\\r\\n                        CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\\r\\n                }\\r\\n                else if (json.getMotionCurveTarget(curveCount) == TargetNameParameter) {\\r\\n                    this._motionData.curves.at(curveCount).type =\\r\\n                        CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\\r\\n                }\\r\\n                else if (json.getMotionCurveTarget(curveCount) == TargetNamePartOpacity) {\\r\\n                    this._motionData.curves.at(curveCount).type =\\r\\n                        CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\\r\\n                }\\r\\n                this._motionData.curves.at(curveCount).id = json.getMotionCurveId(curveCount);\\r\\n                this._motionData.curves.at(curveCount).baseSegmentIndex = totalSegmentCount;\\r\\n                this._motionData.curves.at(curveCount).fadeInTime = json.isExistMotionCurveFadeInTime(curveCount)\\r\\n                    ? json.getMotionCurveFadeInTime(curveCount)\\r\\n                    : -1.0;\\r\\n                this._motionData.curves.at(curveCount).fadeOutTime = json.isExistMotionCurveFadeOutTime(curveCount)\\r\\n                    ? json.getMotionCurveFadeOutTime(curveCount)\\r\\n                    : -1.0;\\r\\n                for (var segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount);) {\\r\\n                    if (segmentPosition == 0) {\\r\\n                        this._motionData.segments.at(totalSegmentCount).basePointIndex = totalPointCount;\\r\\n                        if (this._motionData.points.at(totalPointCount)) {\\r\\n                            this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition);\\r\\n                            this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\\r\\n                        }\\r\\n                        totalPointCount += 1;\\r\\n                        segmentPosition += 2;\\r\\n                    }\\r\\n                    else {\\r\\n                        this._motionData.segments.at(totalSegmentCount).basePointIndex =\\r\\n                            totalPointCount - 1;\\r\\n                    }\\r\\n                    var segment = json.getMotionCurveSegment(curveCount, segmentPosition);\\r\\n                    switch (segment) {\\r\\n                        case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\\r\\n                            this._motionData.segments.at(totalSegmentCount).segmentType =\\r\\n                                CubismMotionSegmentType.CubismMotionSegmentType_Linear;\\r\\n                            this._motionData.segments.at(totalSegmentCount).evaluate = linearEvaluate;\\r\\n                            if (this._motionData.points.at(totalPointCount)) {\\r\\n                                this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\\r\\n                                this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 2);\\r\\n                            }\\r\\n                            totalPointCount += 1;\\r\\n                            segmentPosition += 3;\\r\\n                            break;\\r\\n                        }\\r\\n                        case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\\r\\n                            this._motionData.segments.at(totalSegmentCount).segmentType =\\r\\n                                CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\\r\\n                            this._motionData.segments.at(totalSegmentCount).evaluate = bezierEvaluate;\\r\\n                            if (this._motionData.points.at(totalPointCount)) {\\r\\n                                this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\\r\\n                                this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 2);\\r\\n                            }\\r\\n                            if (this._motionData.points.at(totalPointCount + 1)) {\\r\\n                                this._motionData.points.at(totalPointCount + 1).time = json.getMotionCurveSegment(curveCount, segmentPosition + 3);\\r\\n                                this._motionData.points.at(totalPointCount + 1).value = json.getMotionCurveSegment(curveCount, segmentPosition + 4);\\r\\n                            }\\r\\n                            if (this._motionData.points.at(totalPointCount + 2)) {\\r\\n                                this._motionData.points.at(totalPointCount + 2).time = json.getMotionCurveSegment(curveCount, segmentPosition + 5);\\r\\n                                this._motionData.points.at(totalPointCount + 2).value = json.getMotionCurveSegment(curveCount, segmentPosition + 6);\\r\\n                            }\\r\\n                            totalPointCount += 3;\\r\\n                            segmentPosition += 7;\\r\\n                            break;\\r\\n                        }\\r\\n                        case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\\r\\n                            this._motionData.segments.at(totalSegmentCount).segmentType =\\r\\n                                CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\\r\\n                            this._motionData.segments.at(totalSegmentCount).evaluate = steppedEvaluate;\\r\\n                            if (this._motionData.points.at(totalPointCount)) {\\r\\n                                this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\\r\\n                                this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 2);\\r\\n                            }\\r\\n                            totalPointCount += 1;\\r\\n                            segmentPosition += 3;\\r\\n                            break;\\r\\n                        }\\r\\n                        case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\\r\\n                            this._motionData.segments.at(totalSegmentCount).segmentType =\\r\\n                                CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\\r\\n                            this._motionData.segments.at(totalSegmentCount).evaluate = inverseSteppedEvaluate;\\r\\n                            if (this._motionData.points.at(totalPointCount)) {\\r\\n                                this._motionData.points.at(totalPointCount).time = json.getMotionCurveSegment(curveCount, segmentPosition + 1);\\r\\n                                this._motionData.points.at(totalPointCount).value = json.getMotionCurveSegment(curveCount, segmentPosition + 2);\\r\\n                            }\\r\\n                            totalPointCount += 1;\\r\\n                            segmentPosition += 3;\\r\\n                            break;\\r\\n                        }\\r\\n                        default: {\\r\\n                            cubismdebug_1.CSM_ASSERT(0);\\r\\n                            break;\\r\\n                        }\\r\\n                    }\\r\\n                    ++this._motionData.curves.at(curveCount).segmentCount;\\r\\n                    ++totalSegmentCount;\\r\\n                }\\r\\n            }\\r\\n            for (var userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\\r\\n                this._motionData.events.at(userdatacount).fireTime = json.getEventTime(userdatacount);\\r\\n                this._motionData.events.at(userdatacount).value = json.getEventValue(userdatacount);\\r\\n            }\\r\\n            json.release();\\r\\n            json = void 0;\\r\\n            json = null;\\r\\n        };\\r\\n        CubismMotion.prototype.getFiredEvent = function (beforeCheckTimeSeconds, motionTimeSeconds) {\\r\\n            this._firedEventValues.updateSize(0);\\r\\n            for (var u = 0; u < this._motionData.eventCount; ++u) {\\r\\n                if (this._motionData.events.at(u).fireTime > beforeCheckTimeSeconds &&\\r\\n                    this._motionData.events.at(u).fireTime <= motionTimeSeconds) {\\r\\n                    this._firedEventValues.pushBack(new csmString(this._motionData.events.at(u).value.s));\\r\\n                }\\r\\n            }\\r\\n            return this._firedEventValues;\\r\\n        };\\r\\n        return CubismMotion;\\r\\n    }(ACubismMotion));\\r\\n    Live2DCubismFramework.CubismMotion = CubismMotion;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/motion/cubismmotion.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/motion/cubismmotioninternal.ts\":\n/*!******************************************************!*\\\n  !*** ./Framework/src/motion/cubismmotioninternal.ts ***!\n  \\******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismMotionCurveTarget;\\r\\n    (function (CubismMotionCurveTarget) {\\r\\n        CubismMotionCurveTarget[CubismMotionCurveTarget[\\\"CubismMotionCurveTarget_Model\\\"] = 0] = \\\"CubismMotionCurveTarget_Model\\\";\\r\\n        CubismMotionCurveTarget[CubismMotionCurveTarget[\\\"CubismMotionCurveTarget_Parameter\\\"] = 1] = \\\"CubismMotionCurveTarget_Parameter\\\";\\r\\n        CubismMotionCurveTarget[CubismMotionCurveTarget[\\\"CubismMotionCurveTarget_PartOpacity\\\"] = 2] = \\\"CubismMotionCurveTarget_PartOpacity\\\";\\r\\n    })(CubismMotionCurveTarget = Live2DCubismFramework.CubismMotionCurveTarget || (Live2DCubismFramework.CubismMotionCurveTarget = {}));\\r\\n    var CubismMotionSegmentType;\\r\\n    (function (CubismMotionSegmentType) {\\r\\n        CubismMotionSegmentType[CubismMotionSegmentType[\\\"CubismMotionSegmentType_Linear\\\"] = 0] = \\\"CubismMotionSegmentType_Linear\\\";\\r\\n        CubismMotionSegmentType[CubismMotionSegmentType[\\\"CubismMotionSegmentType_Bezier\\\"] = 1] = \\\"CubismMotionSegmentType_Bezier\\\";\\r\\n        CubismMotionSegmentType[CubismMotionSegmentType[\\\"CubismMotionSegmentType_Stepped\\\"] = 2] = \\\"CubismMotionSegmentType_Stepped\\\";\\r\\n        CubismMotionSegmentType[CubismMotionSegmentType[\\\"CubismMotionSegmentType_InverseStepped\\\"] = 3] = \\\"CubismMotionSegmentType_InverseStepped\\\";\\r\\n    })(CubismMotionSegmentType = Live2DCubismFramework.CubismMotionSegmentType || (Live2DCubismFramework.CubismMotionSegmentType = {}));\\r\\n    var CubismMotionPoint = (function () {\\r\\n        function CubismMotionPoint() {\\r\\n            this.time = 0.0;\\r\\n            this.value = 0.0;\\r\\n        }\\r\\n        return CubismMotionPoint;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionPoint = CubismMotionPoint;\\r\\n    var CubismMotionSegment = (function () {\\r\\n        function CubismMotionSegment() {\\r\\n            this.evaluate = null;\\r\\n            this.basePointIndex = 0;\\r\\n            this.segmentType = 0;\\r\\n        }\\r\\n        return CubismMotionSegment;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionSegment = CubismMotionSegment;\\r\\n    var CubismMotionCurve = (function () {\\r\\n        function CubismMotionCurve() {\\r\\n            this.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\\r\\n            this.segmentCount = 0;\\r\\n            this.baseSegmentIndex = 0;\\r\\n            this.fadeInTime = 0.0;\\r\\n            this.fadeOutTime = 0.0;\\r\\n        }\\r\\n        return CubismMotionCurve;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionCurve = CubismMotionCurve;\\r\\n    var CubismMotionEvent = (function () {\\r\\n        function CubismMotionEvent() {\\r\\n            this.fireTime = 0.0;\\r\\n        }\\r\\n        return CubismMotionEvent;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionEvent = CubismMotionEvent;\\r\\n    var CubismMotionData = (function () {\\r\\n        function CubismMotionData() {\\r\\n            this.duration = 0.0;\\r\\n            this.loop = false;\\r\\n            this.curveCount = 0;\\r\\n            this.eventCount = 0;\\r\\n            this.fps = 0.0;\\r\\n            this.curves = new csmVector();\\r\\n            this.segments = new csmVector();\\r\\n            this.points = new csmVector();\\r\\n            this.events = new csmVector();\\r\\n        }\\r\\n        return CubismMotionData;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionData = CubismMotionData;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21vdGlvbi9jdWJpc21tb3Rpb25pbnRlcm5hbC50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL0ZyYW1ld29yay9zcmMvbW90aW9uL2N1YmlzbW1vdGlvbmludGVybmFsLnRzP2U2ZGUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGN1YmlzbWlkIH0gZnJvbSAnLi4vaWQvY3ViaXNtaWQnO1xuaW1wb3J0IHsgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIGFzIGNzbXN0cmluZyB9IGZyb20gJy4uL3R5cGUvY3Ntc3RyaW5nJztcbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjc212ZWN0b3IgfSBmcm9tICcuLi90eXBlL2NzbXZlY3Rvcic7XG5pbXBvcnQgY3NtVmVjdG9yID0gY3NtdmVjdG9yLmNzbVZlY3RvcjtcbmltcG9ydCBjc21TdHJpbmcgPSBjc21zdHJpbmcuY3NtU3RyaW5nO1xuaW1wb3J0IEN1YmlzbUlkSGFuZGxlID0gY3ViaXNtaWQuQ3ViaXNtSWRIYW5kbGU7XG5cbmV4cG9ydCBuYW1lc3BhY2UgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIHtcbiAgLyoqXG4gICAqIEBicmllZiDjg6Ljg7zjgrfjg6fjg7Pjgqvjg7zjg5bjga7nqK7poZ5cbiAgICpcbiAgICog44Oi44O844K344On44Oz44Kr44O844OW44Gu56iu6aGe44CCXG4gICAqL1xuICBleHBvcnQgZW51bSBDdWJpc21Nb3Rpb25DdXJ2ZVRhcmdldCB7XG4gICAgQ3ViaXNtTW90aW9uQ3VydmVUYXJnZXRfTW9kZWwsIC8vIOODouODh+ODq+OBq+WvvuOBl+OBplxuICAgIEN1YmlzbU1vdGlvbkN1cnZlVGFyZ2V0X1BhcmFtZXRlciwgLy8g44OR44Op44Oh44O844K/44Gr5a++44GX44GmXG4gICAgQ3ViaXNtTW90aW9uQ3VydmVUYXJnZXRfUGFydE9wYWNpdHkgLy8g44OR44O844OE44Gu5LiN6YCP5piO5bqm44Gr5a++44GX44GmXG4gIH1cblxuICAvKipcbiAgICogQGJyaWVmIOODouODvOOCt+ODp+ODs+OCq+ODvOODluOBruOCu+OCsOODoeODs+ODiOOBrueorumhnlxuICAgKlxuICAgKiDjg6Ljg7zjgrfjg6fjg7Pjgqvjg7zjg5bjga7jgrvjgrDjg6Hjg7Pjg4jjga7nqK7poZ7jgIJcbiAgICovXG4gIGV4cG9ydCBlbnVtIEN1YmlzbU1vdGlvblNlZ21lbnRUeXBlIHtcbiAgICBDdWJpc21Nb3Rpb25TZWdtZW50VHlwZV9MaW5lYXIgPSAwLCAvLyDjg6rjg4vjgqJcbiAgICBDdWJpc21Nb3Rpb25TZWdtZW50VHlwZV9CZXppZXIgPSAxLCAvLyDjg5njgrjjgqfmm7Lnt5pcbiAgICBDdWJpc21Nb3Rpb25TZWdtZW50VHlwZV9TdGVwcGVkID0gMiwgLy8g44K544OG44OD44OXXG4gICAgQ3ViaXNtTW90aW9uU2VnbWVudFR5cGVfSW52ZXJzZVN0ZXBwZWQgPSAzIC8vIOOCpOODs+ODkOODvOOCueOCueODhuODg+ODl1xuICB9XG5cbiAgLyoqXG4gICAqIEBicmllZiDjg6Ljg7zjgrfjg6fjg7Pjgqvjg7zjg5bjga7liLblvqHngrlcbiAgICpcbiAgICog44Oi44O844K344On44Oz44Kr44O844OW44Gu5Yi25b6h54K544CCXG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtTW90aW9uUG9pbnQge1xuICAgIHRpbWUgPSAwLjA7IC8vIOaZgumWk1vnp5JdXG4gICAgdmFsdWUgPSAwLjA7IC8vIOWApFxuICB9XG5cbiAgLyoqXG4gICAqIOODouODvOOCt+ODp+ODs+OCq+ODvOODluOBruOCu+OCsOODoeODs+ODiOOBruipleS+oemWouaVsFxuICAgKlxuICAgKiBAcGFyYW0gICBwb2ludHMgICAgICDjg6Ljg7zjgrfjg6fjg7Pjgqvjg7zjg5bjga7liLblvqHngrnjg6rjgrnjg4hcbiAgICogQHBhcmFtICAgdGltZSAgICAgICAg6KmV5L6h44GZ44KL5pmC6ZaTW+enkl1cbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgY3NtTW90aW9uU2VnbWVudEV2YWx1YXRpb25GdW5jdGlvbiB7XG4gICAgKHBvaW50czogQ3ViaXNtTW90aW9uUG9pbnRbXSwgdGltZTogbnVtYmVyKTogbnVtYmVyO1xuICB9XG5cbiAgLyoqXG4gICAqIEBicmllZiDjg6Ljg7zjgrfjg6fjg7Pjgqvjg7zjg5bjga7jgrvjgrDjg6Hjg7Pjg4hcbiAgICpcbiAgICog44Oi44O844K344On44Oz44Kr44O844OW44Gu44K744Kw44Oh44Oz44OI44CCXG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtTW90aW9uU2VnbWVudCB7XG4gICAgLyoqXG4gICAgICogQGJyaWVmIOOCs+ODs+OCueODiOODqeOCr+OCv1xuICAgICAqXG4gICAgICog44Kz44Oz44K544OI44Op44Kv44K/44CCXG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgdGhpcy5ldmFsdWF0ZSA9IG51bGw7XG4gICAgICB0aGlzLmJhc2VQb2ludEluZGV4ID0gMDtcbiAgICAgIHRoaXMuc2VnbWVudFR5cGUgPSAwO1xuICAgIH1cblxuICAgIGV2YWx1YXRlOiBjc21Nb3Rpb25TZWdtZW50RXZhbHVhdGlvbkZ1bmN0aW9uOyAvLyDkvb/nlKjjgZnjgovoqZXkvqHplqLmlbBcbiAgICBiYXNlUG9pbnRJbmRleDogbnVtYmVyOyAvLyDmnIDliJ3jga7jgrvjgrDjg6Hjg7Pjg4jjgbjjga7jgqTjg7Pjg4fjg4Pjgq/jgrlcbiAgICBzZWdtZW50VHlwZTogbnVtYmVyOyAvLyDjgrvjgrDjg6Hjg7Pjg4jjga7nqK7poZ5cbiAgfVxuXG4gIC8qKlxuICAgKiBAYnJpZWYg44Oi44O844K344On44Oz44Kr44O844OWXG4gICAqXG4gICAqIOODouODvOOCt+ODp+ODs+OCq+ODvOODluOAglxuICAgKi9cbiAgZXhwb3J0IGNsYXNzIEN1YmlzbU1vdGlvbkN1cnZlIHtcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgICB0aGlzLnR5cGUgPSBDdWJpc21Nb3Rpb25DdXJ2ZVRhcmdldC5DdWJpc21Nb3Rpb25DdXJ2ZVRhcmdldF9Nb2RlbDtcbiAgICAgIHRoaXMuc2VnbWVudENvdW50ID0gMDtcbiAgICAgIHRoaXMuYmFzZVNlZ21lbnRJbmRleCA9IDA7XG4gICAgICB0aGlzLmZhZGVJblRpbWUgPSAwLjA7XG4gICAgICB0aGlzLmZhZGVPdXRUaW1lID0gMC4wO1xuICAgIH1cblxuICAgIHR5cGU6IEN1YmlzbU1vdGlvbkN1cnZlVGFyZ2V0OyAvLyDjgqvjg7zjg5bjga7nqK7poZ5cbiAgICBpZDogQ3ViaXNtSWRIYW5kbGU7IC8vIOOCq+ODvOODluOBrklEXG4gICAgc2VnbWVudENvdW50OiBudW1iZXI7IC8vIOOCu+OCsOODoeODs+ODiOOBruWAi+aVsFxuICAgIGJhc2VTZWdtZW50SW5kZXg6IG51bWJlcjsgLy8g5pyA5Yid44Gu44K744Kw44Oh44Oz44OI44Gu44Kk44Oz44OH44OD44Kv44K5XG4gICAgZmFkZUluVGltZTogbnVtYmVyOyAvLyDjg5Xjgqfjg7zjg4njgqTjg7PjgavjgYvjgYvjgovmmYLplpNb56eSXVxuICAgIGZhZGVPdXRUaW1lOiBudW1iZXI7IC8vIOODleOCp+ODvOODieOCouOCpuODiOOBq+OBi+OBi+OCi+aZgumWk1vnp5JdXG4gIH1cblxuICAvKipcbiAgICog44Kk44OZ44Oz44OI44CCXG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtTW90aW9uRXZlbnQge1xuICAgIGZpcmVUaW1lID0gMC4wO1xuICAgIHZhbHVlOiBjc21TdHJpbmc7XG4gIH1cblxuICAvKipcbiAgICogQGJyaWVmIOODouODvOOCt+ODp+ODs+ODh+ODvOOCv1xuICAgKlxuICAgKiDjg6Ljg7zjgrfjg6fjg7Pjg4fjg7zjgr/jgIJcbiAgICovXG4gIGV4cG9ydCBjbGFzcyBDdWJpc21Nb3Rpb25EYXRhIHtcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgICB0aGlzLmR1cmF0aW9uID0gMC4wO1xuICAgICAgdGhpcy5sb29wID0gZmFsc2U7XG4gICAgICB0aGlzLmN1cnZlQ291bnQgPSAwO1xuICAgICAgdGhpcy5ldmVudENvdW50ID0gMDtcbiAgICAgIHRoaXMuZnBzID0gMC4wO1xuXG4gICAgICB0aGlzLmN1cnZlcyA9IG5ldyBjc21WZWN0b3I8Q3ViaXNtTW90aW9uQ3VydmU+KCk7XG4gICAgICB0aGlzLnNlZ21lbnRzID0gbmV3IGNzbVZlY3RvcjxDdWJpc21Nb3Rpb25TZWdtZW50PigpO1xuICAgICAgdGhpcy5wb2ludHMgPSBuZXcgY3NtVmVjdG9yPEN1YmlzbU1vdGlvblBvaW50PigpO1xuICAgICAgdGhpcy5ldmVudHMgPSBuZXcgY3NtVmVjdG9yPEN1YmlzbU1vdGlvbkV2ZW50PigpO1xuICAgIH1cblxuICAgIGR1cmF0aW9uOiBudW1iZXI7IC8vIOODouODvOOCt+ODp+ODs+OBrumVt+OBlVvnp5JdXG4gICAgbG9vcDogYm9vbGVhbjsgLy8g44Or44O844OX44GZ44KL44GL44Gp44GG44GLXG4gICAgY3VydmVDb3VudDogbnVtYmVyOyAvLyDjgqvjg7zjg5bjga7lgIvmlbBcbiAgICBldmVudENvdW50OiBudW1iZXI7IC8vIFVzZXJEYXRh44Gu5YCL5pWwXG4gICAgZnBzOiBudW1iZXI7IC8vIOODleODrOODvOODoOODrOODvOODiFxuICAgIGN1cnZlczogY3NtVmVjdG9yPEN1YmlzbU1vdGlvbkN1cnZlPjsgLy8g44Kr44O844OW44Gu44Oq44K544OIXG4gICAgc2VnbWVudHM6IGNzbVZlY3RvcjxDdWJpc21Nb3Rpb25TZWdtZW50PjsgLy8g44K744Kw44Oh44Oz44OI44Gu44Oq44K544OIXG4gICAgcG9pbnRzOiBjc21WZWN0b3I8Q3ViaXNtTW90aW9uUG9pbnQ+OyAvLyDjg53jgqTjg7Pjg4jjga7jg6rjgrnjg4hcbiAgICBldmVudHM6IGNzbVZlY3RvcjxDdWJpc21Nb3Rpb25FdmVudD47IC8vIOOCpOODmeODs+ODiOOBruODquOCueODiFxuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7O0FBU0E7QUFDQTtBQUlBO0FBQUE7QUFNQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBSEE7QUFvQkE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFBQTtBQWZBO0FBc0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUFBO0FBZkE7QUFvQkE7QUFBQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBSEE7QUFVQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFXQTtBQUFBO0FBdkJBO0FBd0JBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Framework/src/motion/cubismmotioninternal.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/motion/cubismmotionjson.ts\":\n/*!**************************************************!*\\\n  !*** ./Framework/src/motion/cubismmotionjson.ts ***!\n  \\**************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismjson_1 = __webpack_require__(/*! ../utils/cubismjson */ \\\"./Framework/src/utils/cubismjson.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar csmstring_1 = __webpack_require__(/*! ../type/csmstring */ \\\"./Framework/src/type/csmstring.ts\\\");\\r\\nvar csmString = csmstring_1.Live2DCubismFramework.csmString;\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismJson = cubismjson_1.Live2DCubismFramework.CubismJson;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var Meta = 'Meta';\\r\\n    var Duration = 'Duration';\\r\\n    var Loop = 'Loop';\\r\\n    var CurveCount = 'CurveCount';\\r\\n    var Fps = 'Fps';\\r\\n    var TotalSegmentCount = 'TotalSegmentCount';\\r\\n    var TotalPointCount = 'TotalPointCount';\\r\\n    var Curves = 'Curves';\\r\\n    var Target = 'Target';\\r\\n    var Id = 'Id';\\r\\n    var FadeInTime = 'FadeInTime';\\r\\n    var FadeOutTime = 'FadeOutTime';\\r\\n    var Segments = 'Segments';\\r\\n    var UserData = 'UserData';\\r\\n    var UserDataCount = 'UserDataCount';\\r\\n    var TotalUserDataSize = 'TotalUserDataSize';\\r\\n    var Time = 'Time';\\r\\n    var Value = 'Value';\\r\\n    var CubismMotionJson = (function () {\\r\\n        function CubismMotionJson(buffer, size) {\\r\\n            this._json = CubismJson.create(buffer, size);\\r\\n        }\\r\\n        CubismMotionJson.prototype.release = function () {\\r\\n            CubismJson.delete(this._json);\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionDuration = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(Duration)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismMotionJson.prototype.isMotionLoop = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(Loop)\\r\\n                .toBoolean();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionCurveCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(CurveCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionFps = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(Fps)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionTotalSegmentCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(TotalSegmentCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionTotalPointCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(TotalPointCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismMotionJson.prototype.isExistMotionFadeInTime = function () {\\r\\n            return !this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(FadeInTime)\\r\\n                .isNull();\\r\\n        };\\r\\n        CubismMotionJson.prototype.isExistMotionFadeOutTime = function () {\\r\\n            return !this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(FadeOutTime)\\r\\n                .isNull();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionFadeInTime = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(FadeInTime)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionFadeOutTime = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(FadeOutTime)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionCurveTarget = function (curveIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(Target)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionCurveId = function (curveIndex) {\\r\\n            return CubismFramework.getIdManager().getId(this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(Id)\\r\\n                .getRawString());\\r\\n        };\\r\\n        CubismMotionJson.prototype.isExistMotionCurveFadeInTime = function (curveIndex) {\\r\\n            return !this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(FadeInTime)\\r\\n                .isNull();\\r\\n        };\\r\\n        CubismMotionJson.prototype.isExistMotionCurveFadeOutTime = function (curveIndex) {\\r\\n            return !this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(FadeOutTime)\\r\\n                .isNull();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionCurveFadeInTime = function (curveIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(FadeInTime)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionCurveFadeOutTime = function (curveIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(FadeOutTime)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionCurveSegmentCount = function (curveIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(Segments)\\r\\n                .getVector()\\r\\n                .getSize();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getMotionCurveSegment = function (curveIndex, segmentIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Curves)\\r\\n                .getValueByIndex(curveIndex)\\r\\n                .getValueByString(Segments)\\r\\n                .getValueByIndex(segmentIndex)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getEventCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(UserDataCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getTotalEventValueSize = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(TotalUserDataSize)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getEventTime = function (userDataIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(UserData)\\r\\n                .getValueByIndex(userDataIndex)\\r\\n                .getValueByString(Time)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismMotionJson.prototype.getEventValue = function (userDataIndex) {\\r\\n            return new csmString(this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(UserData)\\r\\n                .getValueByIndex(userDataIndex)\\r\\n                .getValueByString(Value)\\r\\n                .getRawString());\\r\\n        };\\r\\n        return CubismMotionJson;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionJson = CubismMotionJson;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21vdGlvbi9jdWJpc21tb3Rpb25qc29uLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vRnJhbWV3b3JrL3NyYy9tb3Rpb24vY3ViaXNtbW90aW9uanNvbi50cz8zZjhkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjdWJpc21qc29uIH0gZnJvbSAnLi4vdXRpbHMvY3ViaXNtanNvbic7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3ViaXNtaWQgfSBmcm9tICcuLi9pZC9jdWJpc21pZCc7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3ViaXNtZnJhbWV3b3JrIH0gZnJvbSAnLi4vbGl2ZTJkY3ViaXNtZnJhbWV3b3JrJztcbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjc21zdHJpbmcgfSBmcm9tICcuLi90eXBlL2NzbXN0cmluZyc7XG5pbXBvcnQgY3NtU3RyaW5nID0gY3Ntc3RyaW5nLmNzbVN0cmluZztcbmltcG9ydCBDdWJpc21GcmFtZXdvcmsgPSBjdWJpc21mcmFtZXdvcmsuQ3ViaXNtRnJhbWV3b3JrO1xuaW1wb3J0IEN1YmlzbUlkSGFuZGxlID0gY3ViaXNtaWQuQ3ViaXNtSWRIYW5kbGU7XG5pbXBvcnQgQ3ViaXNtSnNvbiA9IGN1YmlzbWpzb24uQ3ViaXNtSnNvbjtcblxuZXhwb3J0IG5hbWVzcGFjZSBMaXZlMkRDdWJpc21GcmFtZXdvcmsge1xuICAvLyBKU09OIGtleXNcbiAgY29uc3QgTWV0YSA9ICdNZXRhJztcbiAgY29uc3QgRHVyYXRpb24gPSAnRHVyYXRpb24nO1xuICBjb25zdCBMb29wID0gJ0xvb3AnO1xuICBjb25zdCBDdXJ2ZUNvdW50ID0gJ0N1cnZlQ291bnQnO1xuICBjb25zdCBGcHMgPSAnRnBzJztcbiAgY29uc3QgVG90YWxTZWdtZW50Q291bnQgPSAnVG90YWxTZWdtZW50Q291bnQnO1xuICBjb25zdCBUb3RhbFBvaW50Q291bnQgPSAnVG90YWxQb2ludENvdW50JztcbiAgY29uc3QgQ3VydmVzID0gJ0N1cnZlcyc7XG4gIGNvbnN0IFRhcmdldCA9ICdUYXJnZXQnO1xuICBjb25zdCBJZCA9ICdJZCc7XG4gIGNvbnN0IEZhZGVJblRpbWUgPSAnRmFkZUluVGltZSc7XG4gIGNvbnN0IEZhZGVPdXRUaW1lID0gJ0ZhZGVPdXRUaW1lJztcbiAgY29uc3QgU2VnbWVudHMgPSAnU2VnbWVudHMnO1xuICBjb25zdCBVc2VyRGF0YSA9ICdVc2VyRGF0YSc7XG4gIGNvbnN0IFVzZXJEYXRhQ291bnQgPSAnVXNlckRhdGFDb3VudCc7XG4gIGNvbnN0IFRvdGFsVXNlckRhdGFTaXplID0gJ1RvdGFsVXNlckRhdGFTaXplJztcbiAgY29uc3QgVGltZSA9ICdUaW1lJztcbiAgY29uc3QgVmFsdWUgPSAnVmFsdWUnO1xuXG4gIC8qKlxuICAgKiBtb3Rpb24zLmpzb27jga7jgrPjg7Pjg4bjg4rjgIJcbiAgICovXG4gIGV4cG9ydCBjbGFzcyBDdWJpc21Nb3Rpb25Kc29uIHtcbiAgICAvKipcbiAgICAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICAgKiBAcGFyYW0gYnVmZmVyIG1vdGlvbjMuanNvbuOBjOiqreOBv+i+vOOBvuOCjOOBpuOBhOOCi+ODkOODg+ODleOCoVxuICAgICAqIEBwYXJhbSBzaXplIOODkOODg+ODleOCoeOBruOCteOCpOOCulxuICAgICAqL1xuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihidWZmZXI6IEFycmF5QnVmZmVyLCBzaXplOiBudW1iZXIpIHtcbiAgICAgIHRoaXMuX2pzb24gPSBDdWJpc21Kc29uLmNyZWF0ZShidWZmZXIsIHNpemUpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODh+OCueODiOODqeOCr+OCv+ebuOW9k+OBruWHpueQhlxuICAgICAqL1xuICAgIHB1YmxpYyByZWxlYXNlKCk6IHZvaWQge1xuICAgICAgQ3ViaXNtSnNvbi5kZWxldGUodGhpcy5fanNvbik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Oi44O844K344On44Oz44Gu6ZW344GV44KS5Y+W5b6X44GZ44KLXG4gICAgICogQHJldHVybiDjg6Ljg7zjgrfjg6fjg7Pjga7plbfjgZVb56eSXVxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRNb3Rpb25EdXJhdGlvbigpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMuX2pzb25cbiAgICAgICAgLmdldFJvb3QoKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhNZXRhKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhEdXJhdGlvbilcbiAgICAgICAgLnRvRmxvYXQoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg7zjgrfjg6fjg7Pjga7jg6vjg7zjg5fmg4XloLHjga7lj5blvpdcbiAgICAgKiBAcmV0dXJuIHRydWUg44Or44O844OX44GZ44KLXG4gICAgICogQHJldHVybiBmYWxzZSDjg6vjg7zjg5fjgZfjgarjgYRcbiAgICAgKi9cbiAgICBwdWJsaWMgaXNNb3Rpb25Mb29wKCk6IGJvb2xlYW4ge1xuICAgICAgcmV0dXJuIHRoaXMuX2pzb25cbiAgICAgICAgLmdldFJvb3QoKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhNZXRhKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhMb29wKVxuICAgICAgICAudG9Cb29sZWFuKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6I635Y+W5Yqo5L2c5puy57q/55qE5Liq5pWwXG4gICAgICogQHJldHVybiDliqjkvZzmm7Lnur/nmoTkuKrmlbBcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0TW90aW9uQ3VydmVDb3VudCgpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMuX2pzb25cbiAgICAgICAgLmdldFJvb3QoKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhNZXRhKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhDdXJ2ZUNvdW50KVxuICAgICAgICAudG9JbnQoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg7zjgrfjg6fjg7Pjga7jg5Xjg6zjg7zjg6Djg6zjg7zjg4jjga7lj5blvpdcbiAgICAgKiBAcmV0dXJuIOODleODrOODvOODoOODrOODvOODiFtGUFNdXG4gICAgICovXG4gICAgcHVibGljIGdldE1vdGlvbkZwcygpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMuX2pzb25cbiAgICAgICAgLmdldFJvb3QoKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhNZXRhKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhGcHMpXG4gICAgICAgIC50b0Zsb2F0KCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Oi44O844K344On44Oz44Gu44K744Kw44Oh44Oz44OI44Gu57eP5ZCI6KiI44Gu5Y+W5b6XXG4gICAgICogQHJldHVybiDjg6Ljg7zjgrfjg6fjg7Pjga7jgrvjgrDjg6Hjg7Pjg4jjga7lj5blvpdcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0TW90aW9uVG90YWxTZWdtZW50Q291bnQoKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiB0aGlzLl9qc29uXG4gICAgICAgIC5nZXRSb290KClcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoTWV0YSlcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoVG90YWxTZWdtZW50Q291bnQpXG4gICAgICAgIC50b0ludCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODouODvOOCt+ODp+ODs+OBruOCq+ODvOODluOBruWItuW+oeW6l+OBrue3j+WQiOioiOOBruWPluW+l1xuICAgICAqIEByZXR1cm4g44Oi44O844K344On44Oz44Gu44Kr44O844OW44Gu5Yi25b6h54K544Gu57eP5ZCI6KiIXG4gICAgICovXG4gICAgcHVibGljIGdldE1vdGlvblRvdGFsUG9pbnRDb3VudCgpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMuX2pzb25cbiAgICAgICAgLmdldFJvb3QoKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhNZXRhKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhUb3RhbFBvaW50Q291bnQpXG4gICAgICAgIC50b0ludCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODouODvOOCt+ODp+ODs+OBruODleOCp+ODvOODieOCpOODs+aZgumWk+OBruWtmOWcqFxuICAgICAqIEByZXR1cm4gdHJ1ZSDlrZjlnKjjgZnjgotcbiAgICAgKiBAcmV0dXJuIGZhbHNlIOWtmOWcqOOBl+OBquOBhFxuICAgICAqL1xuICAgIHB1YmxpYyBpc0V4aXN0TW90aW9uRmFkZUluVGltZSgpOiBib29sZWFuIHtcbiAgICAgIHJldHVybiAhdGhpcy5fanNvblxuICAgICAgICAuZ2V0Um9vdCgpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKE1ldGEpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKEZhZGVJblRpbWUpXG4gICAgICAgIC5pc051bGwoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg7zjgrfjg6fjg7Pjga7jg5Xjgqfjg7zjg4njgqLjgqbjg4jmmYLplpPjga7lrZjlnKhcbiAgICAgKiBAcmV0dXJuIHRydWUg5a2Y5Zyo44GZ44KLXG4gICAgICogQHJldHVybiBmYWxzZSDlrZjlnKjjgZfjgarjgYRcbiAgICAgKi9cbiAgICBwdWJsaWMgaXNFeGlzdE1vdGlvbkZhZGVPdXRUaW1lKCk6IGJvb2xlYW4ge1xuICAgICAgcmV0dXJuICF0aGlzLl9qc29uXG4gICAgICAgIC5nZXRSb290KClcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoTWV0YSlcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoRmFkZU91dFRpbWUpXG4gICAgICAgIC5pc051bGwoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg7zjgrfjg6fjg7Pjga7jg5Xjgqfjg7zjg4njgqTjg7PmmYLplpPjga7lj5blvpdcbiAgICAgKiBAcmV0dXJuIOODleOCp+ODvOODieOCpOODs+aZgumWk1vnp5JdXG4gICAgICovXG4gICAgcHVibGljIGdldE1vdGlvbkZhZGVJblRpbWUoKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiB0aGlzLl9qc29uXG4gICAgICAgIC5nZXRSb290KClcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoTWV0YSlcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoRmFkZUluVGltZSlcbiAgICAgICAgLnRvRmxvYXQoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg7zjgrfjg6fjg7Pjga7jg5Xjgqfjg7zjg4njgqLjgqbjg4jmmYLplpPjga7lj5blvpdcbiAgICAgKiBAcmV0dXJuIOODleOCp+ODvOODieOCouOCpuODiOaZgumWk1vnp5JdXG4gICAgICovXG4gICAgcHVibGljIGdldE1vdGlvbkZhZGVPdXRUaW1lKCk6IG51bWJlciB7XG4gICAgICByZXR1cm4gdGhpcy5fanNvblxuICAgICAgICAuZ2V0Um9vdCgpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKE1ldGEpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKEZhZGVPdXRUaW1lKVxuICAgICAgICAudG9GbG9hdCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODouODvOOCt+ODp+ODs+OBruOCq+ODvOODluOBrueorumhnuOBruWPluW+l1xuICAgICAqIEBwYXJhbSBjdXJ2ZUluZGV4IOOCq+ODvOODluOBruOCpOODs+ODh+ODg+OCr+OCuVxuICAgICAqIEByZXR1cm4g44Kr44O844OW44Gu56iu6aGeXG4gICAgICovXG4gICAgcHVibGljIGdldE1vdGlvbkN1cnZlVGFyZ2V0KGN1cnZlSW5kZXg6IG51bWJlcik6IHN0cmluZyB7XG4gICAgICByZXR1cm4gdGhpcy5fanNvblxuICAgICAgICAuZ2V0Um9vdCgpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKEN1cnZlcylcbiAgICAgICAgLmdldFZhbHVlQnlJbmRleChjdXJ2ZUluZGV4KVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhUYXJnZXQpXG4gICAgICAgIC5nZXRSYXdTdHJpbmcoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg7zjgrfjg6fjg7Pjga7jgqvjg7zjg5bjga5JROOBruWPluW+l1xuICAgICAqIEBwYXJhbSBjdXJ2ZUluZGV4IOOCq+ODvOODluOBruOCpOODs+ODh+ODg+OCr+OCuVxuICAgICAqIEByZXR1cm4g44Kr44O844OW44GuSURcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0TW90aW9uQ3VydmVJZChjdXJ2ZUluZGV4OiBudW1iZXIpOiBDdWJpc21JZEhhbmRsZSB7XG4gICAgICByZXR1cm4gQ3ViaXNtRnJhbWV3b3JrLmdldElkTWFuYWdlcigpLmdldElkKFxuICAgICAgICB0aGlzLl9qc29uXG4gICAgICAgICAgLmdldFJvb3QoKVxuICAgICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKEN1cnZlcylcbiAgICAgICAgICAuZ2V0VmFsdWVCeUluZGV4KGN1cnZlSW5kZXgpXG4gICAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoSWQpXG4gICAgICAgICAgLmdldFJhd1N0cmluZygpXG4gICAgICApO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODouODvOOCt+ODp+ODs+OBruOCq+ODvOODluOBruODleOCp+ODvOODieOCpOODs+aZgumWk+OBruWtmOWcqFxuICAgICAqIEBwYXJhbSBjdXJ2ZUluZGV4IOOCq+ODvOODluOBruOCpOODs+ODh+ODg+OCr+OCuVxuICAgICAqIEByZXR1cm4gdHJ1ZSDlrZjlnKjjgZnjgotcbiAgICAgKiBAcmV0dXJuIGZhbHNlIOWtmOWcqOOBl+OBquOBhFxuICAgICAqL1xuICAgIHB1YmxpYyBpc0V4aXN0TW90aW9uQ3VydmVGYWRlSW5UaW1lKGN1cnZlSW5kZXg6IG51bWJlcik6IGJvb2xlYW4ge1xuICAgICAgcmV0dXJuICF0aGlzLl9qc29uXG4gICAgICAgIC5nZXRSb290KClcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoQ3VydmVzKVxuICAgICAgICAuZ2V0VmFsdWVCeUluZGV4KGN1cnZlSW5kZXgpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKEZhZGVJblRpbWUpXG4gICAgICAgIC5pc051bGwoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg7zjgrfjg6fjg7Pjga7jgqvjg7zjg5bjga7jg5Xjgqfjg7zjg4njgqLjgqbjg4jmmYLplpPjga7lrZjlnKhcbiAgICAgKiBAcGFyYW0gY3VydmVJbmRleCDjgqvjg7zjg5bjga7jgqTjg7Pjg4fjg4Pjgq/jgrlcbiAgICAgKiBAcmV0dXJuIHRydWUg5a2Y5Zyo44GZ44KLXG4gICAgICogQHJldHVybiBmYWxzZSDlrZjlnKjjgZfjgarjgYRcbiAgICAgKi9cbiAgICBwdWJsaWMgaXNFeGlzdE1vdGlvbkN1cnZlRmFkZU91dFRpbWUoY3VydmVJbmRleDogbnVtYmVyKTogYm9vbGVhbiB7XG4gICAgICByZXR1cm4gIXRoaXMuX2pzb25cbiAgICAgICAgLmdldFJvb3QoKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhDdXJ2ZXMpXG4gICAgICAgIC5nZXRWYWx1ZUJ5SW5kZXgoY3VydmVJbmRleClcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoRmFkZU91dFRpbWUpXG4gICAgICAgIC5pc051bGwoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg7zjgrfjg6fjg7Pjga7jgqvjg7zjg5bjga7jg5Xjgqfjg7zjg4njgqTjg7PmmYLplpPjga7lj5blvpdcbiAgICAgKiBAcGFyYW0gY3VydmVJbmRleCDjgqvjg7zjg5bjga7jgqTjg7Pjg4fjg4Pjgq/jgrlcbiAgICAgKiBAcmV0dXJuIOODleOCp+ODvOODieOCpOODs+aZgumWk1vnp5JdXG4gICAgICovXG4gICAgcHVibGljIGdldE1vdGlvbkN1cnZlRmFkZUluVGltZShjdXJ2ZUluZGV4OiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMuX2pzb25cbiAgICAgICAgLmdldFJvb3QoKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhDdXJ2ZXMpXG4gICAgICAgIC5nZXRWYWx1ZUJ5SW5kZXgoY3VydmVJbmRleClcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoRmFkZUluVGltZSlcbiAgICAgICAgLnRvRmxvYXQoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg7zjgrfjg6fjg7Pjga7jgqvjg7zjg5bjga7jg5Xjgqfjg7zjg4njgqLjgqbjg4jmmYLplpPjga7lj5blvpdcbiAgICAgKiBAcGFyYW0gY3VydmVJbmRleCDjgqvjg7zjg5bjga7jgqTjg7Pjg4fjg4Pjgq/jgrlcbiAgICAgKiBAcmV0dXJuIOODleOCp+ODvOODieOCouOCpuODiOaZgumWk1vnp5JdXG4gICAgICovXG4gICAgcHVibGljIGdldE1vdGlvbkN1cnZlRmFkZU91dFRpbWUoY3VydmVJbmRleDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiB0aGlzLl9qc29uXG4gICAgICAgIC5nZXRSb290KClcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoQ3VydmVzKVxuICAgICAgICAuZ2V0VmFsdWVCeUluZGV4KGN1cnZlSW5kZXgpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKEZhZGVPdXRUaW1lKVxuICAgICAgICAudG9GbG9hdCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOODouODvOOCt+ODp+ODs+OBruOCq+ODvOODluOBruOCu+OCsOODoeODs+ODiOOBruWAi+aVsOOCkuWPluW+l+OBmeOCi1xuICAgICAqIEBwYXJhbSBjdXJ2ZUluZGV4IOOCq+ODvOODluOBruOCpOODs+ODh+ODg+OCr+OCuVxuICAgICAqIEByZXR1cm4g44Oi44O844K344On44Oz44Gu44Kr44O844OW44Gu44K744Kw44Oh44Oz44OI44Gu5YCL5pWwXG4gICAgICovXG4gICAgcHVibGljIGdldE1vdGlvbkN1cnZlU2VnbWVudENvdW50KGN1cnZlSW5kZXg6IG51bWJlcik6IG51bWJlciB7XG4gICAgICByZXR1cm4gdGhpcy5fanNvblxuICAgICAgICAuZ2V0Um9vdCgpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKEN1cnZlcylcbiAgICAgICAgLmdldFZhbHVlQnlJbmRleChjdXJ2ZUluZGV4KVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhTZWdtZW50cylcbiAgICAgICAgLmdldFZlY3RvcigpXG4gICAgICAgIC5nZXRTaXplKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Oi44O844K344On44Oz44Gu44Kr44O844OW44Gu44K744Kw44Oh44Oz44OI44Gu5YCk44Gu5Y+W5b6XXG4gICAgICogQHBhcmFtIGN1cnZlSW5kZXgg44Kr44O844OW44Gu44Kk44Oz44OH44OD44Kv44K5XG4gICAgICogQHBhcmFtIHNlZ21lbnRJbmRleCDjgrvjgrDjg6Hjg7Pjg4jjga7jgqTjg7Pjg4fjg4Pjgq/jgrlcbiAgICAgKiBAcmV0dXJuIOOCu+OCsOODoeODs+ODiOOBruWApFxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRNb3Rpb25DdXJ2ZVNlZ21lbnQoXG4gICAgICBjdXJ2ZUluZGV4OiBudW1iZXIsXG4gICAgICBzZWdtZW50SW5kZXg6IG51bWJlclxuICAgICk6IG51bWJlciB7XG4gICAgICByZXR1cm4gdGhpcy5fanNvblxuICAgICAgICAuZ2V0Um9vdCgpXG4gICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKEN1cnZlcylcbiAgICAgICAgLmdldFZhbHVlQnlJbmRleChjdXJ2ZUluZGV4KVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhTZWdtZW50cylcbiAgICAgICAgLmdldFZhbHVlQnlJbmRleChzZWdtZW50SW5kZXgpXG4gICAgICAgIC50b0Zsb2F0KCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6I635Y+W5LqL5Lu25Liq5pWwXG4gICAgICogQHJldHVybiDjgqTjg5njg7Pjg4jjga7lgIvmlbBcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0RXZlbnRDb3VudCgpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMuX2pzb25cbiAgICAgICAgLmdldFJvb3QoKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhNZXRhKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhVc2VyRGF0YUNvdW50KVxuICAgICAgICAudG9JbnQoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAg44Kk44OZ44Oz44OI44Gu57eP5paH5a2X5pWw44Gu5Y+W5b6XXG4gICAgICogQHJldHVybiDjgqTjg5njg7Pjg4jjga7nt4/mloflrZfmlbBcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0VG90YWxFdmVudFZhbHVlU2l6ZSgpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMuX2pzb25cbiAgICAgICAgLmdldFJvb3QoKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhNZXRhKVxuICAgICAgICAuZ2V0VmFsdWVCeVN0cmluZyhUb3RhbFVzZXJEYXRhU2l6ZSlcbiAgICAgICAgLnRvSW50KCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Kk44OZ44Oz44OI44Gu5pmC6ZaT44Gu5Y+W5b6XXG4gICAgICogQHBhcmFtIHVzZXJEYXRhSW5kZXgg44Kk44OZ44Oz44OI44Gu44Kk44Oz44OH44OD44Kv44K5XG4gICAgICogQHJldHVybiDjgqTjg5njg7Pjg4jjga7mmYLplpNb56eSXVxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRFdmVudFRpbWUodXNlckRhdGFJbmRleDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiB0aGlzLl9qc29uXG4gICAgICAgIC5nZXRSb290KClcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoVXNlckRhdGEpXG4gICAgICAgIC5nZXRWYWx1ZUJ5SW5kZXgodXNlckRhdGFJbmRleClcbiAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoVGltZSlcbiAgICAgICAgLnRvSW50KCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Kk44OZ44Oz44OI44Gu5Y+W5b6XXG4gICAgICogQHBhcmFtIHVzZXJEYXRhSW5kZXgg44Kk44OZ44Oz44OI44Gu44Kk44Oz44OH44OD44Kv44K5XG4gICAgICogQHJldHVybiDjgqTjg5njg7Pjg4jjga7mloflrZfliJdcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0RXZlbnRWYWx1ZSh1c2VyRGF0YUluZGV4OiBudW1iZXIpOiBjc21TdHJpbmcge1xuICAgICAgcmV0dXJuIG5ldyBjc21TdHJpbmcoXG4gICAgICAgIHRoaXMuX2pzb25cbiAgICAgICAgICAuZ2V0Um9vdCgpXG4gICAgICAgICAgLmdldFZhbHVlQnlTdHJpbmcoVXNlckRhdGEpXG4gICAgICAgICAgLmdldFZhbHVlQnlJbmRleCh1c2VyRGF0YUluZGV4KVxuICAgICAgICAgIC5nZXRWYWx1ZUJ5U3RyaW5nKFZhbHVlKVxuICAgICAgICAgIC5nZXRSYXdTdHJpbmcoKVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBfanNvbjogQ3ViaXNtSnNvbjsgLy8gbW90aW9uMy5qc29u44Gu44OH44O844K/XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFPQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFNQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUdBO0FBQUE7QUE3VEE7QUE4VEE7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./Framework/src/motion/cubismmotionjson.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/motion/cubismmotionmanager.ts\":\n/*!*****************************************************!*\\\n  !*** ./Framework/src/motion/cubismmotionmanager.ts ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmotionqueuemanager_1 = __webpack_require__(/*! ./cubismmotionqueuemanager */ \\\"./Framework/src/motion/cubismmotionqueuemanager.ts\\\");\\r\\nvar CubismMotionQueueManager = cubismmotionqueuemanager_1.Live2DCubismFramework.CubismMotionQueueManager;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismMotionManager = (function (_super) {\\r\\n        __extends(CubismMotionManager, _super);\\r\\n        function CubismMotionManager() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._currentPriority = 0;\\r\\n            _this._reservePriority = 0;\\r\\n            return _this;\\r\\n        }\\r\\n        CubismMotionManager.prototype.getCurrentPriority = function () {\\r\\n            return this._currentPriority;\\r\\n        };\\r\\n        CubismMotionManager.prototype.getReservePriority = function () {\\r\\n            return this._reservePriority;\\r\\n        };\\r\\n        CubismMotionManager.prototype.setReservePriority = function (val) {\\r\\n            this._reservePriority = val;\\r\\n        };\\r\\n        CubismMotionManager.prototype.startMotionPriority = function (motion, autoDelete, priority) {\\r\\n            if (priority == this._reservePriority) {\\r\\n                this._reservePriority = 0;\\r\\n            }\\r\\n            this._currentPriority = priority;\\r\\n            return _super.prototype.startMotion.call(this, motion, autoDelete, this._userTimeSeconds);\\r\\n        };\\r\\n        CubismMotionManager.prototype.updateMotion = function (model, deltaTimeSeconds) {\\r\\n            this._userTimeSeconds += deltaTimeSeconds;\\r\\n            var updated = _super.prototype.doUpdateMotion.call(this, model, this._userTimeSeconds);\\r\\n            if (this.isFinished()) {\\r\\n                this._currentPriority = 0;\\r\\n            }\\r\\n            return updated;\\r\\n        };\\r\\n        CubismMotionManager.prototype.reserveMotion = function (priority) {\\r\\n            if (priority <= this._reservePriority ||\\r\\n                priority <= this._currentPriority) {\\r\\n                return false;\\r\\n            }\\r\\n            this._reservePriority = priority;\\r\\n            return true;\\r\\n        };\\r\\n        return CubismMotionManager;\\r\\n    }(CubismMotionQueueManager));\\r\\n    Live2DCubismFramework.CubismMotionManager = CubismMotionManager;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL21vdGlvbi9jdWJpc21tb3Rpb25tYW5hZ2VyLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vRnJhbWV3b3JrL3NyYy9tb3Rpb24vY3ViaXNtbW90aW9ubWFuYWdlci50cz81ZmE2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjdWJpc21tb3Rpb25xdWV1ZW1hbmFnZXIgfSBmcm9tICcuL2N1YmlzbW1vdGlvbnF1ZXVlbWFuYWdlcic7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgYWN1YmlzbW1vdGlvbiB9IGZyb20gJy4vYWN1YmlzbW1vdGlvbic7XG5pbXBvcnQgeyBMaXZlMkRDdWJpc21GcmFtZXdvcmsgYXMgY3ViaXNtbW9kZWwgfSBmcm9tICcuLi9tb2RlbC9jdWJpc21tb2RlbCc7XG5pbXBvcnQgQ3ViaXNtTW90aW9uUXVldWVFbnRyeUhhbmRsZSA9IGN1YmlzbW1vdGlvbnF1ZXVlbWFuYWdlci5DdWJpc21Nb3Rpb25RdWV1ZUVudHJ5SGFuZGxlO1xuaW1wb3J0IEN1YmlzbU1vZGVsID0gY3ViaXNtbW9kZWwuQ3ViaXNtTW9kZWw7XG5pbXBvcnQgQUN1YmlzbU1vdGlvbiA9IGFjdWJpc21tb3Rpb24uQUN1YmlzbU1vdGlvbjtcbmltcG9ydCBDdWJpc21Nb3Rpb25RdWV1ZU1hbmFnZXIgPSBjdWJpc21tb3Rpb25xdWV1ZW1hbmFnZXIuQ3ViaXNtTW90aW9uUXVldWVNYW5hZ2VyO1xuXG5leHBvcnQgbmFtZXNwYWNlIExpdmUyREN1YmlzbUZyYW1ld29yayB7XG4gIC8qKlxuICAgKiDjg6Ljg7zjgrfjg6fjg7Pjga7nrqHnkIZcbiAgICpcbiAgICog44Oi44O844K344On44Oz44Gu566h55CG44KS6KGM44GG44Kv44Op44K5XG4gICAqL1xuICBleHBvcnQgY2xhc3MgQ3ViaXNtTW90aW9uTWFuYWdlciBleHRlbmRzIEN1YmlzbU1vdGlvblF1ZXVlTWFuYWdlciB7XG4gICAgLyoqXG4gICAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgc3VwZXIoKTtcbiAgICAgIHRoaXMuX2N1cnJlbnRQcmlvcml0eSA9IDA7XG4gICAgICB0aGlzLl9yZXNlcnZlUHJpb3JpdHkgPSAwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOWGjeeUn+S4reOBruODouODvOOCt+ODp+ODs+OBruWEquWFiOW6puOBruWPluW+l1xuICAgICAqIEByZXR1cm4gIOODouODvOOCt+ODp+ODs+OBruWEquWFiOW6plxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRDdXJyZW50UHJpb3JpdHkoKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiB0aGlzLl9jdXJyZW50UHJpb3JpdHk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5LqI57SE5Lit44Gu44Oi44O844K344On44Oz44Gu5YSq5YWI5bqm44KS5Y+W5b6X44GZ44KL44CCXG4gICAgICogQHJldHVybiAg44Oi44O844K344On44Oz44Gu5YSq5YWI5bqmXG4gICAgICovXG4gICAgcHVibGljIGdldFJlc2VydmVQcmlvcml0eSgpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMuX3Jlc2VydmVQcmlvcml0eTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDkuojntITkuK3jga7jg6Ljg7zjgrfjg6fjg7Pjga7lhKrlhYjluqbjgpLoqK3lrprjgZnjgovjgIJcbiAgICAgKiBAcGFyYW0gICB2YWwgICAgIOWEquWFiOW6plxuICAgICAqL1xuICAgIHB1YmxpYyBzZXRSZXNlcnZlUHJpb3JpdHkodmFsOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgIHRoaXMuX3Jlc2VydmVQcmlvcml0eSA9IHZhbDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDorr7lrprkvJjlhYjnuqflkI7lvIDlp4vliqjkvZzjgIJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBtb3Rpb24gICAgICAgICAg5Yqo5L2cXG4gICAgICogQHBhcmFtIGF1dG9EZWxldGUgICAgICDlho3nlJ/jgYzni6nnjJ/jgZfjgZ/jg6Ljg7zjgrfjg6fjg7Pjga7jgqTjg7Pjgrnjgr/jg7PjgrnjgpLliYrpmaTjgZnjgovjgarjgol0cnVlXG4gICAgICogQHBhcmFtIHByaW9yaXR5ICAgICAgICDlhKrlhYjluqZcbiAgICAgKiBAcmV0dXJuICAgICAgICAgICAgICAgIOi/lOWbnuW8gOWni+eahOWKqOS9nOeahOivhuWIq+WPt+eggeOAgueUqOS6juWIpOWumuS4quWIq+WKqOS9nOaYr+WQpue7k+adn+eahElzRmluaXNoZWTvvIjvvInlj4LmlbDjgILml6Dms5XlvIDlp4vml7bkuLrigJwtMeKAnVxuICAgICAqL1xuICAgIHB1YmxpYyBzdGFydE1vdGlvblByaW9yaXR5KFxuICAgICAgbW90aW9uOiBBQ3ViaXNtTW90aW9uLFxuICAgICAgYXV0b0RlbGV0ZTogYm9vbGVhbixcbiAgICAgIHByaW9yaXR5OiBudW1iZXJcbiAgICApOiBDdWJpc21Nb3Rpb25RdWV1ZUVudHJ5SGFuZGxlIHtcbiAgICAgIGlmIChwcmlvcml0eSA9PSB0aGlzLl9yZXNlcnZlUHJpb3JpdHkpIHtcbiAgICAgICAgdGhpcy5fcmVzZXJ2ZVByaW9yaXR5ID0gMDsgLy8g5LqI57SE44KS6Kej6ZmkXG4gICAgICB9XG5cbiAgICAgIHRoaXMuX2N1cnJlbnRQcmlvcml0eSA9IHByaW9yaXR5OyAvLyDlho3nlJ/kuK3jg6Ljg7zjgrfjg6fjg7Pjga7lhKrlhYjluqbjgpLoqK3lrppcblxuICAgICAgcmV0dXJuIHN1cGVyLnN0YXJ0TW90aW9uKG1vdGlvbiwgYXV0b0RlbGV0ZSwgdGhpcy5fdXNlclRpbWVTZWNvbmRzKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjg6Ljg7zjgrfjg6fjg7PjgpLmm7TmlrDjgZfjgabjgIHjg6Ljg4fjg6vjgavjg5Hjg6njg6Hjg7zjgr/lgKTjgpLlj43mmKDjgZnjgovjgIJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBtb2RlbCAgIOWvvuixoeOBruODouODh+ODq1xuICAgICAqIEBwYXJhbSBkZWx0YVRpbWVTZWNvbmRzICAgIOODh+ODq+OCv+aZgumWk1vnp5JdXG4gICAgICogQHJldHVybiAgdHJ1ZSAgICDmm7TmlrDjgZXjgozjgabjgYTjgotcbiAgICAgKiBAcmV0dXJuICBmYWxzZSAgIOabtOaWsOOBleOCjOOBpuOBhOOBquOBhFxuICAgICAqL1xuICAgIHB1YmxpYyB1cGRhdGVNb3Rpb24obW9kZWw6IEN1YmlzbU1vZGVsLCBkZWx0YVRpbWVTZWNvbmRzOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICAgIHRoaXMuX3VzZXJUaW1lU2Vjb25kcyArPSBkZWx0YVRpbWVTZWNvbmRzO1xuXG4gICAgICBjb25zdCB1cGRhdGVkOiBib29sZWFuID0gc3VwZXIuZG9VcGRhdGVNb3Rpb24oXG4gICAgICAgIG1vZGVsLFxuICAgICAgICB0aGlzLl91c2VyVGltZVNlY29uZHNcbiAgICAgICk7XG5cbiAgICAgIGlmICh0aGlzLmlzRmluaXNoZWQoKSkge1xuICAgICAgICB0aGlzLl9jdXJyZW50UHJpb3JpdHkgPSAwOyAvLyDlho3nlJ/kuK3jga7jg6Ljg7zjgrfjg6fjg7Pjga7lhKrlhYjluqbjgpLop6PpmaRcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVwZGF0ZWQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Oi44O844K344On44Oz44KS5LqI57SE44GZ44KL44CCXG4gICAgICpcbiAgICAgKiBAcGFyYW0gICBwcmlvcml0eSAgICDlhKrlhYjluqZcbiAgICAgKiBAcmV0dXJuICB0cnVlICAgIOS6iOe0hOOBp+OBjeOBn1xuICAgICAqIEByZXR1cm4gIGZhbHNlICAg5LqI57SE44Gn44GN44Gq44GL44Gj44GfXG4gICAgICovXG4gICAgcHVibGljIHJlc2VydmVNb3Rpb24ocHJpb3JpdHk6IG51bWJlcik6IGJvb2xlYW4ge1xuICAgICAgaWYgKFxuICAgICAgICBwcmlvcml0eSA8PSB0aGlzLl9yZXNlcnZlUHJpb3JpdHkgfHxcbiAgICAgICAgcHJpb3JpdHkgPD0gdGhpcy5fY3VycmVudFByaW9yaXR5XG4gICAgICApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9yZXNlcnZlUHJpb3JpdHkgPSBwcmlvcml0eTtcblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgX2N1cnJlbnRQcmlvcml0eTogbnVtYmVyOyAvLyDnj77lnKjlho3nlJ/kuK3jga7jg6Ljg7zjgrfjg6fjg7Pjga7lhKrlhYjluqZcbiAgICBfcmVzZXJ2ZVByaW9yaXR5OiBudW1iZXI7IC8vIOWGjeeUn+S6iOWumuOBruODouODvOOCt+ODp+ODs+OBruWEquWFiOW6puOAguWGjeeUn+S4reOBrzDjgavjgarjgovjgILjg6Ljg7zjgrfjg6fjg7Pjg5XjgqHjgqTjg6vjgpLliKXjgrnjg6zjg4Pjg4njgafoqq3jgb/ovrzjgoDjgajjgY3jga7mqZ/og73jgIJcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFPQTtBQU1BO0FBRUE7QUFBQTtBQU1BO0FBQUE7QUFJQTtBQUFBO0FBRUE7QUFDQTs7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQVVBO0FBS0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBVUE7QUFDQTtBQUVBO0FBS0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQVNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFJQTtBQUFBO0FBckdBO0FBc0dBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Framework/src/motion/cubismmotionmanager.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/motion/cubismmotionqueueentry.ts\":\n/*!********************************************************!*\\\n  !*** ./Framework/src/motion/cubismmotionqueueentry.ts ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar acubismmotion_1 = __webpack_require__(/*! ./acubismmotion */ \\\"./Framework/src/motion/acubismmotion.ts\\\");\\r\\nvar ACubismMotion = acubismmotion_1.Live2DCubismFramework.ACubismMotion;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismMotionQueueEntry = (function () {\\r\\n        function CubismMotionQueueEntry() {\\r\\n            this._autoDelete = false;\\r\\n            this._motion = null;\\r\\n            this._available = true;\\r\\n            this._finished = false;\\r\\n            this._started = false;\\r\\n            this._startTimeSeconds = -1.0;\\r\\n            this._fadeInStartTimeSeconds = 0.0;\\r\\n            this._endTimeSeconds = -1.0;\\r\\n            this._stateTimeSeconds = 0.0;\\r\\n            this._stateWeight = 0.0;\\r\\n            this._lastEventCheckSeconds = 0.0;\\r\\n            this._motionQueueEntryHandle = this;\\r\\n        }\\r\\n        CubismMotionQueueEntry.prototype.release = function () {\\r\\n            if (this._autoDelete && this._motion) {\\r\\n                ACubismMotion.delete(this._motion);\\r\\n            }\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.startFadeout = function (fadeoutSeconds, userTimeSeconds) {\\r\\n            var newEndTimeSeconds = userTimeSeconds + fadeoutSeconds;\\r\\n            if (this._endTimeSeconds < 0.0 ||\\r\\n                newEndTimeSeconds < this._endTimeSeconds) {\\r\\n                this._endTimeSeconds = newEndTimeSeconds;\\r\\n            }\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.isFinished = function () {\\r\\n            return this._finished;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.isStarted = function () {\\r\\n            return this._started;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.getStartTime = function () {\\r\\n            return this._startTimeSeconds;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.getFadeInStartTime = function () {\\r\\n            return this._fadeInStartTimeSeconds;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.getEndTime = function () {\\r\\n            return this._endTimeSeconds;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setStartTime = function (startTime) {\\r\\n            this._startTimeSeconds = startTime;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setFadeInStartTime = function (startTime) {\\r\\n            this._fadeInStartTimeSeconds = startTime;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setEndTime = function (endTime) {\\r\\n            this._endTimeSeconds = endTime;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setIsFinished = function (f) {\\r\\n            this._finished = f;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setIsStarted = function (f) {\\r\\n            this._started = f;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.isAvailable = function () {\\r\\n            return this._available;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setIsAvailable = function (v) {\\r\\n            this._available = v;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setState = function (timeSeconds, weight) {\\r\\n            this._stateTimeSeconds = timeSeconds;\\r\\n            this._stateWeight = weight;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.getStateTime = function () {\\r\\n            return this._stateTimeSeconds;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.getStateWeight = function () {\\r\\n            return this._stateWeight;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.getLastCheckEventTime = function () {\\r\\n            return this._lastEventCheckSeconds;\\r\\n        };\\r\\n        CubismMotionQueueEntry.prototype.setLastCheckEventTime = function (checkTime) {\\r\\n            this._lastEventCheckSeconds = checkTime;\\r\\n        };\\r\\n        return CubismMotionQueueEntry;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionQueueEntry = CubismMotionQueueEntry;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/motion/cubismmotionqueueentry.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/motion/cubismmotionqueuemanager.ts\":\n/*!**********************************************************!*\\\n  !*** ./Framework/src/motion/cubismmotionqueuemanager.ts ***!\n  \\**********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmotionqueueentry_1 = __webpack_require__(/*! ./cubismmotionqueueentry */ \\\"./Framework/src/motion/cubismmotionqueueentry.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismMotionQueueEntry = cubismmotionqueueentry_1.Live2DCubismFramework.CubismMotionQueueEntry;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismMotionQueueManager = (function () {\\r\\n        function CubismMotionQueueManager() {\\r\\n            this._userTimeSeconds = 0.0;\\r\\n            this._eventCallBack = null;\\r\\n            this._eventCustomData = null;\\r\\n            this._motions = new csmVector();\\r\\n        }\\r\\n        CubismMotionQueueManager.prototype.release = function () {\\r\\n            for (var i = 0; i < this._motions.getSize(); ++i) {\\r\\n                if (this._motions.at(i)) {\\r\\n                    this._motions.at(i).release();\\r\\n                    this._motions.set(i, void 0);\\r\\n                    this._motions.set(i, null);\\r\\n                }\\r\\n            }\\r\\n            this._motions = null;\\r\\n        };\\r\\n        CubismMotionQueueManager.prototype.startMotion = function (motion, autoDelete, userTimeSeconds) {\\r\\n            var _a, _b;\\r\\n            if (motion == null) {\\r\\n                return Live2DCubismFramework.InvalidMotionQueueEntryHandleValue;\\r\\n            }\\r\\n            var motionQueueEntry = null;\\r\\n            for (var i = 0; i < this._motions.getSize(); ++i) {\\r\\n                motionQueueEntry = this._motions.at(i);\\r\\n                if (motionQueueEntry == null) {\\r\\n                    continue;\\r\\n                }\\r\\n                motionQueueEntry.startFadeout(motionQueueEntry._motion.getFadeOutTime(), userTimeSeconds);\\r\\n            }\\r\\n            motionQueueEntry = new CubismMotionQueueEntry();\\r\\n            motionQueueEntry._autoDelete = autoDelete;\\r\\n            motionQueueEntry._motion = motion;\\r\\n            if (((_b = (_a = motion) === null || _a === void 0 ? void 0 : _a['_motionData']) === null || _b === void 0 ? void 0 : _b['curveCount']) < 100) {\\r\\n                this._motions.pushBack(motionQueueEntry);\\r\\n            }\\r\\n            return motionQueueEntry._motionQueueEntryHandle;\\r\\n        };\\r\\n        CubismMotionQueueManager.prototype.isFinished = function () {\\r\\n            for (var ite = this._motions.begin(); ite.notEqual(this._motions.end());) {\\r\\n                var motionQueueEntry = ite.ptr();\\r\\n                if (motionQueueEntry == null) {\\r\\n                    ite = this._motions.erase(ite);\\r\\n                    continue;\\r\\n                }\\r\\n                var motion = motionQueueEntry._motion;\\r\\n                if (motion == null) {\\r\\n                    motionQueueEntry.release();\\r\\n                    motionQueueEntry = void 0;\\r\\n                    motionQueueEntry = null;\\r\\n                    ite = this._motions.erase(ite);\\r\\n                    continue;\\r\\n                }\\r\\n                if (!motionQueueEntry.isFinished()) {\\r\\n                    return false;\\r\\n                }\\r\\n                else {\\r\\n                    ite.preIncrement();\\r\\n                }\\r\\n            }\\r\\n            return true;\\r\\n        };\\r\\n        CubismMotionQueueManager.prototype.isFinishedByHandle = function (motionQueueEntryNumber) {\\r\\n            for (var ite = this._motions.begin(); ite.notEqual(this._motions.end()); ite.increment()) {\\r\\n                var motionQueueEntry = ite.ptr();\\r\\n                if (motionQueueEntry == null) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber &&\\r\\n                    !motionQueueEntry.isFinished()) {\\r\\n                    return false;\\r\\n                }\\r\\n            }\\r\\n            return true;\\r\\n        };\\r\\n        CubismMotionQueueManager.prototype.stopAllMotions = function () {\\r\\n            for (var ite = this._motions.begin(); ite.notEqual(this._motions.end());) {\\r\\n                var motionQueueEntry = ite.ptr();\\r\\n                if (motionQueueEntry == null) {\\r\\n                    ite = this._motions.erase(ite);\\r\\n                    continue;\\r\\n                }\\r\\n                motionQueueEntry.release();\\r\\n                motionQueueEntry = void 0;\\r\\n                motionQueueEntry = null;\\r\\n                ite = this._motions.erase(ite);\\r\\n            }\\r\\n        };\\r\\n        CubismMotionQueueManager.prototype.getCubismMotionQueueEntry = function (motionQueueEntryNumber) {\\r\\n            for (var ite = this._motions.begin(); ite.notEqual(this._motions.end()); ite.preIncrement()) {\\r\\n                var motionQueueEntry = ite.ptr();\\r\\n                if (motionQueueEntry == null) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber) {\\r\\n                    return motionQueueEntry;\\r\\n                }\\r\\n            }\\r\\n            return null;\\r\\n        };\\r\\n        CubismMotionQueueManager.prototype.setEventCallback = function (callback, customData) {\\r\\n            if (customData === void 0) { customData = null; }\\r\\n            this._eventCallBack = callback;\\r\\n            this._eventCustomData = customData;\\r\\n        };\\r\\n        CubismMotionQueueManager.prototype.doUpdateMotion = function (model, userTimeSeconds) {\\r\\n            var updated = false;\\r\\n            for (var ite = this._motions.begin(); ite.notEqual(this._motions.end());) {\\r\\n                var motionQueueEntry = ite.ptr();\\r\\n                if (motionQueueEntry == null) {\\r\\n                    ite = this._motions.erase(ite);\\r\\n                    continue;\\r\\n                }\\r\\n                var motion = motionQueueEntry._motion;\\r\\n                if (motion == null) {\\r\\n                    motionQueueEntry.release();\\r\\n                    motionQueueEntry = void 0;\\r\\n                    motionQueueEntry = null;\\r\\n                    ite = this._motions.erase(ite);\\r\\n                    continue;\\r\\n                }\\r\\n                motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\\r\\n                updated = true;\\r\\n                var firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventTime() -\\r\\n                    motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\\r\\n                for (var i = 0; i < firedList.getSize(); ++i) {\\r\\n                    this._eventCallBack(this, firedList.at(i), this._eventCustomData);\\r\\n                }\\r\\n                motionQueueEntry.setLastCheckEventTime(userTimeSeconds);\\r\\n                if (motionQueueEntry.isFinished()) {\\r\\n                    motionQueueEntry.release();\\r\\n                    motionQueueEntry = void 0;\\r\\n                    motionQueueEntry = null;\\r\\n                    ite = this._motions.erase(ite);\\r\\n                }\\r\\n                else {\\r\\n                    ite.preIncrement();\\r\\n                }\\r\\n            }\\r\\n            return updated;\\r\\n        };\\r\\n        return CubismMotionQueueManager;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismMotionQueueManager = CubismMotionQueueManager;\\r\\n    Live2DCubismFramework.InvalidMotionQueueEntryHandleValue = -1;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/motion/cubismmotionqueuemanager.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/physics/cubismphysics.ts\":\n/*!************************************************!*\\\n  !*** ./Framework/src/physics/cubismphysics.ts ***!\n  \\************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismphysicsinternal_1 = __webpack_require__(/*! ./cubismphysicsinternal */ \\\"./Framework/src/physics/cubismphysicsinternal.ts\\\");\\r\\nvar cubismvector2_1 = __webpack_require__(/*! ../math/cubismvector2 */ \\\"./Framework/src/math/cubismvector2.ts\\\");\\r\\nvar cubismmath_1 = __webpack_require__(/*! ../math/cubismmath */ \\\"./Framework/src/math/cubismmath.ts\\\");\\r\\nvar cubismphysicsjson_1 = __webpack_require__(/*! ./cubismphysicsjson */ \\\"./Framework/src/physics/cubismphysicsjson.ts\\\");\\r\\nvar CubismPhysicsJson = cubismphysicsjson_1.Live2DCubismFramework.CubismPhysicsJson;\\r\\nvar CubismMath = cubismmath_1.Live2DCubismFramework.CubismMath;\\r\\nvar CubismPhysicsRig = cubismphysicsinternal_1.Live2DCubismFramework.CubismPhysicsRig;\\r\\nvar CubismPhysicsSubRig = cubismphysicsinternal_1.Live2DCubismFramework.CubismPhysicsSubRig;\\r\\nvar CubismPhysicsInput = cubismphysicsinternal_1.Live2DCubismFramework.CubismPhysicsInput;\\r\\nvar CubismPhysicsOutput = cubismphysicsinternal_1.Live2DCubismFramework.CubismPhysicsOutput;\\r\\nvar CubismPhysicsParticle = cubismphysicsinternal_1.Live2DCubismFramework.CubismPhysicsParticle;\\r\\nvar CubismPhysicsSource = cubismphysicsinternal_1.Live2DCubismFramework.CubismPhysicsSource;\\r\\nvar CubismPhysicsTargetType = cubismphysicsinternal_1.Live2DCubismFramework.CubismPhysicsTargetType;\\r\\nvar CubismVector2 = cubismvector2_1.Live2DCubismFramework.CubismVector2;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var PhysicsTypeTagX = 'X';\\r\\n    var PhysicsTypeTagY = 'Y';\\r\\n    var PhysicsTypeTagAngle = 'Angle';\\r\\n    var AirResistance = 5.0;\\r\\n    var MaximumWeight = 100.0;\\r\\n    var MovementThreshold = 0.001;\\r\\n    var CubismPhysics = (function () {\\r\\n        function CubismPhysics() {\\r\\n            this._physicsRig = null;\\r\\n            this._options = new Options();\\r\\n            this._options.gravity.y = -1.0;\\r\\n            this._options.gravity.x = 0;\\r\\n            this._options.wind.x = 0;\\r\\n            this._options.wind.y = 0;\\r\\n        }\\r\\n        CubismPhysics.create = function (buffer, size) {\\r\\n            var ret = new CubismPhysics();\\r\\n            ret.parse(buffer, size);\\r\\n            ret._physicsRig.gravity.y = 0;\\r\\n            return ret;\\r\\n        };\\r\\n        CubismPhysics.delete = function (physics) {\\r\\n            if (physics != null) {\\r\\n                physics.release();\\r\\n                physics = null;\\r\\n            }\\r\\n        };\\r\\n        CubismPhysics.prototype.evaluate = function (model, deltaTimeSeconds) {\\r\\n            var totalAngle;\\r\\n            var weight;\\r\\n            var radAngle;\\r\\n            var outputValue;\\r\\n            var totalTranslation = new CubismVector2();\\r\\n            var currentSetting;\\r\\n            var currentInput;\\r\\n            var currentOutput;\\r\\n            var currentParticles;\\r\\n            var parameterValue;\\r\\n            var parameterMaximumValue;\\r\\n            var parameterMinimumValue;\\r\\n            var parameterDefaultValue;\\r\\n            parameterValue = model.getModel().parameters.values;\\r\\n            parameterMaximumValue = model.getModel().parameters.maximumValues;\\r\\n            parameterMinimumValue = model.getModel().parameters.minimumValues;\\r\\n            parameterDefaultValue = model.getModel().parameters.defaultValues;\\r\\n            for (var settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\\r\\n                totalAngle = { angle: 0.0 };\\r\\n                totalTranslation.x = 0.0;\\r\\n                totalTranslation.y = 0.0;\\r\\n                currentSetting = this._physicsRig.settings.at(settingIndex);\\r\\n                currentInput = this._physicsRig.inputs.get(currentSetting.baseInputIndex);\\r\\n                currentOutput = this._physicsRig.outputs.get(currentSetting.baseOutputIndex);\\r\\n                currentParticles = this._physicsRig.particles.get(currentSetting.baseParticleIndex);\\r\\n                for (var i = 0; i < currentSetting.inputCount; ++i) {\\r\\n                    weight = currentInput[i].weight / MaximumWeight;\\r\\n                    if (currentInput[i].sourceParameterIndex == -1) {\\r\\n                        currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\\r\\n                    }\\r\\n                    currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[0].reflect, weight);\\r\\n                }\\r\\n                radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\\r\\n                totalTranslation.x =\\r\\n                    totalTranslation.x * CubismMath.cos(radAngle) -\\r\\n                        totalTranslation.y * CubismMath.sin(radAngle);\\r\\n                totalTranslation.y =\\r\\n                    totalTranslation.x * CubismMath.sin(radAngle) +\\r\\n                        totalTranslation.y * CubismMath.cos(radAngle);\\r\\n                updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\\r\\n                for (var i = 0; i < currentSetting.outputCount; ++i) {\\r\\n                    var particleIndex = currentOutput[i].vertexIndex;\\r\\n                    if (particleIndex < 1 ||\\r\\n                        particleIndex >= currentSetting.particleCount) {\\r\\n                        break;\\r\\n                    }\\r\\n                    if (currentOutput[i].destinationParameterIndex == -1) {\\r\\n                        currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\\r\\n                    }\\r\\n                    var translation = new CubismVector2();\\r\\n                    translation.x =\\r\\n                        currentParticles[particleIndex].position.x -\\r\\n                            currentParticles[particleIndex - 1].position.x;\\r\\n                    translation.y =\\r\\n                        currentParticles[particleIndex].position.y -\\r\\n                            currentParticles[particleIndex - 1].position.y;\\r\\n                    outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\\r\\n                    var destinationParameterIndex = currentOutput[i].destinationParameterIndex;\\r\\n                    var outParameterValue = !Float32Array.prototype.slice &&\\r\\n                        'subarray' in Float32Array.prototype\\r\\n                        ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex)))\\r\\n                        : parameterValue.slice(destinationParameterIndex);\\r\\n                    updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\\r\\n                    for (var offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\\r\\n                        parameterValue[offset] = outParameterValue[outParamIndex];\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismPhysics.prototype.setOptions = function (options) {\\r\\n            this._options = options;\\r\\n        };\\r\\n        CubismPhysics.prototype.getOption = function () {\\r\\n            return this._options;\\r\\n        };\\r\\n        CubismPhysics.prototype.release = function () {\\r\\n            this._physicsRig = void 0;\\r\\n            this._physicsRig = null;\\r\\n        };\\r\\n        CubismPhysics.prototype.parse = function (physicsJson, size) {\\r\\n            this._physicsRig = new CubismPhysicsRig();\\r\\n            var json = new CubismPhysicsJson(physicsJson, size);\\r\\n            this._physicsRig.gravity = json.getGravity();\\r\\n            this._physicsRig.wind = json.getWind();\\r\\n            this._physicsRig.subRigCount = json.getSubRigCount();\\r\\n            this._physicsRig.settings.updateSize(this._physicsRig.subRigCount, CubismPhysicsSubRig, true);\\r\\n            this._physicsRig.inputs.updateSize(json.getTotalInputCount(), CubismPhysicsInput, true);\\r\\n            this._physicsRig.outputs.updateSize(json.getTotalOutputCount(), CubismPhysicsOutput, true);\\r\\n            this._physicsRig.particles.updateSize(json.getVertexCount(), CubismPhysicsParticle, true);\\r\\n            var inputIndex = 0, outputIndex = 0, particleIndex = 0;\\r\\n            for (var i = 0; i < this._physicsRig.settings.getSize(); ++i) {\\r\\n                this._physicsRig.settings.at(i).normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\\r\\n                this._physicsRig.settings.at(i).normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\\r\\n                this._physicsRig.settings.at(i).normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\\r\\n                this._physicsRig.settings.at(i).normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\\r\\n                this._physicsRig.settings.at(i).normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\\r\\n                this._physicsRig.settings.at(i).normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\\r\\n                this._physicsRig.settings.at(i).inputCount = json.getInputCount(i);\\r\\n                this._physicsRig.settings.at(i).baseInputIndex = inputIndex;\\r\\n                for (var j = 0; j < this._physicsRig.settings.at(i).inputCount; ++j) {\\r\\n                    this._physicsRig.inputs.at(inputIndex + j).sourceParameterIndex = -1;\\r\\n                    this._physicsRig.inputs.at(inputIndex + j).weight = json.getInputWeight(i, j);\\r\\n                    this._physicsRig.inputs.at(inputIndex + j).reflect = json.getInputReflect(i, j);\\r\\n                    if (json.getInputType(i, j) == PhysicsTypeTagX) {\\r\\n                        this._physicsRig.inputs.at(inputIndex + j).type =\\r\\n                            CubismPhysicsSource.CubismPhysicsSource_X;\\r\\n                        this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\\r\\n                    }\\r\\n                    else if (json.getInputType(i, j) == PhysicsTypeTagY) {\\r\\n                        this._physicsRig.inputs.at(inputIndex + j).type =\\r\\n                            CubismPhysicsSource.CubismPhysicsSource_Y;\\r\\n                        this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\\r\\n                    }\\r\\n                    else if (json.getInputType(i, j) == PhysicsTypeTagAngle) {\\r\\n                        this._physicsRig.inputs.at(inputIndex + j).type =\\r\\n                            CubismPhysicsSource.CubismPhysicsSource_Angle;\\r\\n                        this._physicsRig.inputs.at(inputIndex + j).getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\\r\\n                    }\\r\\n                    this._physicsRig.inputs.at(inputIndex + j).source.targetType =\\r\\n                        CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\\r\\n                    this._physicsRig.inputs.at(inputIndex + j).source.id = json.getInputSourceId(i, j);\\r\\n                }\\r\\n                inputIndex += this._physicsRig.settings.at(i).inputCount;\\r\\n                this._physicsRig.settings.at(i).outputCount = json.getOutputCount(i);\\r\\n                this._physicsRig.settings.at(i).baseOutputIndex = outputIndex;\\r\\n                for (var j = 0; j < this._physicsRig.settings.at(i).outputCount; ++j) {\\r\\n                    this._physicsRig.outputs.at(outputIndex + j).destinationParameterIndex = -1;\\r\\n                    this._physicsRig.outputs.at(outputIndex + j).vertexIndex = json.getOutputVertexIndex(i, j);\\r\\n                    this._physicsRig.outputs.at(outputIndex + j).angleScale = json.getOutputAngleScale(i, j);\\r\\n                    this._physicsRig.outputs.at(outputIndex + j).weight = json.getOutputWeight(i, j);\\r\\n                    this._physicsRig.outputs.at(outputIndex + j).destination.targetType =\\r\\n                        CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\\r\\n                    this._physicsRig.outputs.at(outputIndex + j).destination.id = json.getOutputDestinationId(i, j);\\r\\n                    if (json.getOutputType(i, j) == PhysicsTypeTagX) {\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).type =\\r\\n                            CubismPhysicsSource.CubismPhysicsSource_X;\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).getValue = getOutputTranslationX;\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).getScale = getOutputScaleTranslationX;\\r\\n                    }\\r\\n                    else if (json.getOutputType(i, j) == PhysicsTypeTagY) {\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).type =\\r\\n                            CubismPhysicsSource.CubismPhysicsSource_Y;\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).getValue = getOutputTranslationY;\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).getScale = getOutputScaleTranslationY;\\r\\n                    }\\r\\n                    else if (json.getOutputType(i, j) == PhysicsTypeTagAngle) {\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).type =\\r\\n                            CubismPhysicsSource.CubismPhysicsSource_Angle;\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).getValue = getOutputAngle;\\r\\n                        this._physicsRig.outputs.at(outputIndex + j).getScale = getOutputScaleAngle;\\r\\n                    }\\r\\n                    this._physicsRig.outputs.at(outputIndex + j).reflect = json.getOutputReflect(i, j);\\r\\n                }\\r\\n                outputIndex += this._physicsRig.settings.at(i).outputCount;\\r\\n                this._physicsRig.settings.at(i).particleCount = json.getParticleCount(i);\\r\\n                this._physicsRig.settings.at(i).baseParticleIndex = particleIndex;\\r\\n                for (var j = 0; j < this._physicsRig.settings.at(i).particleCount; ++j) {\\r\\n                    this._physicsRig.particles.at(particleIndex + j).mobility = json.getParticleMobility(i, j);\\r\\n                    this._physicsRig.particles.at(particleIndex + j).delay = json.getParticleDelay(i, j);\\r\\n                    this._physicsRig.particles.at(particleIndex + j).acceleration = json.getParticleAcceleration(i, j);\\r\\n                    this._physicsRig.particles.at(particleIndex + j).radius = json.getParticleRadius(i, j);\\r\\n                    this._physicsRig.particles.at(particleIndex + j).position = json.getParticlePosition(i, j);\\r\\n                }\\r\\n                particleIndex += this._physicsRig.settings.at(i).particleCount;\\r\\n            }\\r\\n            this.initialize();\\r\\n            json.release();\\r\\n            json = void 0;\\r\\n            json = null;\\r\\n        };\\r\\n        CubismPhysics.prototype.initialize = function () {\\r\\n            var strand;\\r\\n            var currentSetting;\\r\\n            var radius;\\r\\n            for (var settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\\r\\n                currentSetting = this._physicsRig.settings.at(settingIndex);\\r\\n                strand = this._physicsRig.particles.get(currentSetting.baseParticleIndex);\\r\\n                strand[0].initialPosition = new CubismVector2(0.0, 0.0);\\r\\n                strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\\r\\n                strand[0].lastGravity = new CubismVector2(0.0, -1.0);\\r\\n                strand[0].lastGravity.y *= -1.0;\\r\\n                strand[0].velocity = new CubismVector2(0.0, 0.0);\\r\\n                strand[0].force = new CubismVector2(0.0, 0.0);\\r\\n                for (var i = 1; i < currentSetting.particleCount; ++i) {\\r\\n                    radius = new CubismVector2(0.0, 0.0);\\r\\n                    radius.y = strand[i].radius;\\r\\n                    strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\\r\\n                    strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\\r\\n                    strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\\r\\n                    strand[i].lastGravity = new CubismVector2(0.0, -1.0);\\r\\n                    strand[i].lastGravity.y *= -1.0;\\r\\n                    strand[i].velocity = new CubismVector2(0.0, 0.0);\\r\\n                    strand[i].force = new CubismVector2(0.0, 0.0);\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        return CubismPhysics;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysics = CubismPhysics;\\r\\n    var Options = (function () {\\r\\n        function Options() {\\r\\n            this.gravity = new CubismVector2(0, 0);\\r\\n            this.wind = new CubismVector2(0, 0);\\r\\n        }\\r\\n        return Options;\\r\\n    }());\\r\\n    Live2DCubismFramework.Options = Options;\\r\\n    function sign(value) {\\r\\n        var ret = 0;\\r\\n        if (value > 0.0) {\\r\\n            ret = 1;\\r\\n        }\\r\\n        else if (value < 0.0) {\\r\\n            ret = -1;\\r\\n        }\\r\\n        return ret;\\r\\n    }\\r\\n    function getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\\r\\n        targetTranslation.x +=\\r\\n            normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\\r\\n    }\\r\\n    function getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\\r\\n        targetTranslation.y +=\\r\\n            normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\\r\\n    }\\r\\n    function getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\\r\\n        targetAngle.angle +=\\r\\n            normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\\r\\n    }\\r\\n    function getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\\r\\n        var outputValue = translation.x;\\r\\n        if (isInverted) {\\r\\n            outputValue *= -1.0;\\r\\n        }\\r\\n        return outputValue;\\r\\n    }\\r\\n    function getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\\r\\n        var outputValue = translation.y;\\r\\n        if (isInverted) {\\r\\n            outputValue *= -1.0;\\r\\n        }\\r\\n        return outputValue;\\r\\n    }\\r\\n    function getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\\r\\n        var outputValue;\\r\\n        if (particleIndex >= 2) {\\r\\n            parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\\r\\n        }\\r\\n        else {\\r\\n            parentGravity = parentGravity.multiplyByScaler(-1.0);\\r\\n        }\\r\\n        outputValue = CubismMath.directionToRadian(parentGravity, translation);\\r\\n        if (isInverted) {\\r\\n            outputValue *= -1.0;\\r\\n        }\\r\\n        return outputValue;\\r\\n    }\\r\\n    function getRangeValue(min, max) {\\r\\n        var maxValue = CubismMath.max(min, max);\\r\\n        var minValue = CubismMath.min(min, max);\\r\\n        return CubismMath.abs(maxValue - minValue);\\r\\n    }\\r\\n    function getDefaultValue(min, max) {\\r\\n        var minValue = CubismMath.min(min, max);\\r\\n        return minValue + getRangeValue(min, max) / 2.0;\\r\\n    }\\r\\n    function getOutputScaleTranslationX(translationScale, angleScale) {\\r\\n        return JSON.parse(JSON.stringify(translationScale.x));\\r\\n    }\\r\\n    function getOutputScaleTranslationY(translationScale, angleScale) {\\r\\n        return JSON.parse(JSON.stringify(translationScale.y));\\r\\n    }\\r\\n    function getOutputScaleAngle(translationScale, angleScale) {\\r\\n        return JSON.parse(JSON.stringify(angleScale));\\r\\n    }\\r\\n    function updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\\r\\n        var totalRadian;\\r\\n        var delay;\\r\\n        var radian;\\r\\n        var currentGravity;\\r\\n        var direction = new CubismVector2(0.0, 0.0);\\r\\n        var velocity = new CubismVector2(0.0, 0.0);\\r\\n        var force = new CubismVector2(0.0, 0.0);\\r\\n        var newDirection = new CubismVector2(0.0, 0.0);\\r\\n        strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\\r\\n        totalRadian = CubismMath.degreesToRadian(totalAngle);\\r\\n        currentGravity = CubismMath.radianToDirection(totalRadian);\\r\\n        currentGravity.normalize();\\r\\n        for (var i = 1; i < strandCount; ++i) {\\r\\n            strand[i].force = currentGravity\\r\\n                .multiplyByScaler(strand[i].acceleration)\\r\\n                .add(windDirection);\\r\\n            strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\\r\\n            delay = strand[i].delay * deltaTimeSeconds * 30.0;\\r\\n            direction = strand[i].position.substract(strand[i - 1].position);\\r\\n            radian =\\r\\n                CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) /\\r\\n                    airResistance;\\r\\n            direction.x =\\r\\n                CubismMath.cos(radian) * direction.x -\\r\\n                    direction.y * CubismMath.sin(radian);\\r\\n            direction.y =\\r\\n                CubismMath.sin(radian) * direction.x +\\r\\n                    direction.y * CubismMath.cos(radian);\\r\\n            strand[i].position = strand[i - 1].position.add(direction);\\r\\n            velocity = strand[i].velocity.multiplyByScaler(delay);\\r\\n            force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\\r\\n            strand[i].position = strand[i].position.add(velocity).add(force);\\r\\n            newDirection = strand[i].position.substract(strand[i - 1].position);\\r\\n            newDirection.normalize();\\r\\n            strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\\r\\n            if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\\r\\n                strand[i].position.x = 0.0;\\r\\n            }\\r\\n            if (delay != 0.0) {\\r\\n                strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\\r\\n                strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\\r\\n                strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\\r\\n            }\\r\\n            strand[i].force = new CubismVector2(0.0, 0.0);\\r\\n            strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\\r\\n        }\\r\\n    }\\r\\n    function updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\\r\\n        var outputScale;\\r\\n        var value;\\r\\n        var weight;\\r\\n        outputScale = output.getScale(output.translationScale, output.angleScale);\\r\\n        value = translation * outputScale;\\r\\n        if (value < parameterValueMinimum) {\\r\\n            if (value < output.valueBelowMinimum) {\\r\\n                output.valueBelowMinimum = value;\\r\\n            }\\r\\n            value = parameterValueMinimum;\\r\\n        }\\r\\n        else if (value > parameterValueMaximum) {\\r\\n            if (value > output.valueExceededMaximum) {\\r\\n                output.valueExceededMaximum = value;\\r\\n            }\\r\\n            value = parameterValueMaximum;\\r\\n        }\\r\\n        weight = output.weight / MaximumWeight;\\r\\n        if (weight >= 1.0) {\\r\\n            parameterValue[0] = value;\\r\\n        }\\r\\n        else {\\r\\n            value = parameterValue[0] * (1.0 - weight) + value * weight;\\r\\n            parameterValue[0] = value;\\r\\n        }\\r\\n    }\\r\\n    function normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\\r\\n        var result = 0.0;\\r\\n        var maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\\r\\n        if (maxValue < value) {\\r\\n            value = maxValue;\\r\\n        }\\r\\n        var minValue = CubismMath.min(parameterMaximum, parameterMinimum);\\r\\n        if (minValue > value) {\\r\\n            value = minValue;\\r\\n        }\\r\\n        var minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\\r\\n        var maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\\r\\n        var middleNormValue = normalizedDefault;\\r\\n        var middleValue = getDefaultValue(minValue, maxValue);\\r\\n        var paramValue = value - middleValue;\\r\\n        switch (sign(paramValue)) {\\r\\n            case 1: {\\r\\n                var nLength = maxNormValue - middleNormValue;\\r\\n                var pLength = maxValue - middleValue;\\r\\n                if (pLength != 0.0) {\\r\\n                    result = paramValue * (nLength / pLength);\\r\\n                    result += middleNormValue;\\r\\n                }\\r\\n                break;\\r\\n            }\\r\\n            case -1: {\\r\\n                var nLength = minNormValue - middleNormValue;\\r\\n                var pLength = minValue - middleValue;\\r\\n                if (pLength != 0.0) {\\r\\n                    result = paramValue * (nLength / pLength);\\r\\n                    result += middleNormValue;\\r\\n                }\\r\\n                break;\\r\\n            }\\r\\n            case 0: {\\r\\n                result = middleNormValue;\\r\\n                break;\\r\\n            }\\r\\n            default: {\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        return isInverted ? result : result * -1.0;\\r\\n    }\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/physics/cubismphysics.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/physics/cubismphysicsinternal.ts\":\n/*!********************************************************!*\\\n  !*** ./Framework/src/physics/cubismphysicsinternal.ts ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismvector2_1 = __webpack_require__(/*! ../math/cubismvector2 */ \\\"./Framework/src/math/cubismvector2.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismVector2 = cubismvector2_1.Live2DCubismFramework.CubismVector2;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismPhysicsTargetType;\\r\\n    (function (CubismPhysicsTargetType) {\\r\\n        CubismPhysicsTargetType[CubismPhysicsTargetType[\\\"CubismPhysicsTargetType_Parameter\\\"] = 0] = \\\"CubismPhysicsTargetType_Parameter\\\";\\r\\n    })(CubismPhysicsTargetType = Live2DCubismFramework.CubismPhysicsTargetType || (Live2DCubismFramework.CubismPhysicsTargetType = {}));\\r\\n    var CubismPhysicsSource;\\r\\n    (function (CubismPhysicsSource) {\\r\\n        CubismPhysicsSource[CubismPhysicsSource[\\\"CubismPhysicsSource_X\\\"] = 0] = \\\"CubismPhysicsSource_X\\\";\\r\\n        CubismPhysicsSource[CubismPhysicsSource[\\\"CubismPhysicsSource_Y\\\"] = 1] = \\\"CubismPhysicsSource_Y\\\";\\r\\n        CubismPhysicsSource[CubismPhysicsSource[\\\"CubismPhysicsSource_Angle\\\"] = 2] = \\\"CubismPhysicsSource_Angle\\\";\\r\\n    })(CubismPhysicsSource = Live2DCubismFramework.CubismPhysicsSource || (Live2DCubismFramework.CubismPhysicsSource = {}));\\r\\n    var PhysicsJsonEffectiveForces = (function () {\\r\\n        function PhysicsJsonEffectiveForces() {\\r\\n            this.gravity = new CubismVector2(0, 0);\\r\\n            this.wind = new CubismVector2(0, 0);\\r\\n        }\\r\\n        return PhysicsJsonEffectiveForces;\\r\\n    }());\\r\\n    Live2DCubismFramework.PhysicsJsonEffectiveForces = PhysicsJsonEffectiveForces;\\r\\n    var CubismPhysicsParameter = (function () {\\r\\n        function CubismPhysicsParameter() {\\r\\n        }\\r\\n        return CubismPhysicsParameter;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsParameter = CubismPhysicsParameter;\\r\\n    var CubismPhysicsNormalization = (function () {\\r\\n        function CubismPhysicsNormalization() {\\r\\n        }\\r\\n        return CubismPhysicsNormalization;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsNormalization = CubismPhysicsNormalization;\\r\\n    var CubismPhysicsParticle = (function () {\\r\\n        function CubismPhysicsParticle() {\\r\\n            this.initialPosition = new CubismVector2(0, 0);\\r\\n            this.position = new CubismVector2(0, 0);\\r\\n            this.lastPosition = new CubismVector2(0, 0);\\r\\n            this.lastGravity = new CubismVector2(0, 0);\\r\\n            this.force = new CubismVector2(0, 0);\\r\\n            this.velocity = new CubismVector2(0, 0);\\r\\n        }\\r\\n        return CubismPhysicsParticle;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsParticle = CubismPhysicsParticle;\\r\\n    var CubismPhysicsSubRig = (function () {\\r\\n        function CubismPhysicsSubRig() {\\r\\n            this.normalizationPosition = new CubismPhysicsNormalization();\\r\\n            this.normalizationAngle = new CubismPhysicsNormalization();\\r\\n        }\\r\\n        return CubismPhysicsSubRig;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsSubRig = CubismPhysicsSubRig;\\r\\n    var CubismPhysicsInput = (function () {\\r\\n        function CubismPhysicsInput() {\\r\\n            this.source = new CubismPhysicsParameter();\\r\\n        }\\r\\n        return CubismPhysicsInput;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsInput = CubismPhysicsInput;\\r\\n    var CubismPhysicsOutput = (function () {\\r\\n        function CubismPhysicsOutput() {\\r\\n            this.destination = new CubismPhysicsParameter();\\r\\n            this.translationScale = new CubismVector2(0, 0);\\r\\n        }\\r\\n        return CubismPhysicsOutput;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsOutput = CubismPhysicsOutput;\\r\\n    var CubismPhysicsRig = (function () {\\r\\n        function CubismPhysicsRig() {\\r\\n            this.settings = new csmVector();\\r\\n            this.inputs = new csmVector();\\r\\n            this.outputs = new csmVector();\\r\\n            this.particles = new csmVector();\\r\\n            this.gravity = new CubismVector2(0, 0);\\r\\n            this.wind = new CubismVector2(0, 0);\\r\\n        }\\r\\n        return CubismPhysicsRig;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsRig = CubismPhysicsRig;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/physics/cubismphysicsinternal.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/physics/cubismphysicsjson.ts\":\n/*!****************************************************!*\\\n  !*** ./Framework/src/physics/cubismphysicsjson.ts ***!\n  \\****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismjson_1 = __webpack_require__(/*! ../utils/cubismjson */ \\\"./Framework/src/utils/cubismjson.ts\\\");\\r\\nvar cubismvector2_1 = __webpack_require__(/*! ../math/cubismvector2 */ \\\"./Framework/src/math/cubismvector2.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismVector2 = cubismvector2_1.Live2DCubismFramework.CubismVector2;\\r\\nvar CubismJson = cubismjson_1.Live2DCubismFramework.CubismJson;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var Position = 'Position';\\r\\n    var X = 'X';\\r\\n    var Y = 'Y';\\r\\n    var Angle = 'Angle';\\r\\n    var Type = 'Type';\\r\\n    var Id = 'Id';\\r\\n    var Meta = 'Meta';\\r\\n    var EffectiveForces = 'EffectiveForces';\\r\\n    var TotalInputCount = 'TotalInputCount';\\r\\n    var TotalOutputCount = 'TotalOutputCount';\\r\\n    var PhysicsSettingCount = 'PhysicsSettingCount';\\r\\n    var Gravity = 'Gravity';\\r\\n    var Wind = 'Wind';\\r\\n    var VertexCount = 'VertexCount';\\r\\n    var PhysicsSettings = 'PhysicsSettings';\\r\\n    var Normalization = 'Normalization';\\r\\n    var Minimum = 'Minimum';\\r\\n    var Maximum = 'Maximum';\\r\\n    var Default = 'Default';\\r\\n    var Reflect = 'Reflect';\\r\\n    var Weight = 'Weight';\\r\\n    var Input = 'Input';\\r\\n    var Source = 'Source';\\r\\n    var Output = 'Output';\\r\\n    var Scale = 'Scale';\\r\\n    var VertexIndex = 'VertexIndex';\\r\\n    var Destination = 'Destination';\\r\\n    var Vertices = 'Vertices';\\r\\n    var Mobility = 'Mobility';\\r\\n    var Delay = 'Delay';\\r\\n    var Radius = 'Radius';\\r\\n    var Acceleration = 'Acceleration';\\r\\n    var CubismPhysicsJson = (function () {\\r\\n        function CubismPhysicsJson(buffer, size) {\\r\\n            this._json = CubismJson.create(buffer, size);\\r\\n        }\\r\\n        CubismPhysicsJson.prototype.release = function () {\\r\\n            CubismJson.delete(this._json);\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getGravity = function () {\\r\\n            var ret = new CubismVector2(0, 0);\\r\\n            ret.x = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(EffectiveForces)\\r\\n                .getValueByString(Gravity)\\r\\n                .getValueByString(X)\\r\\n                .toFloat();\\r\\n            ret.y = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(EffectiveForces)\\r\\n                .getValueByString(Gravity)\\r\\n                .getValueByString(Y)\\r\\n                .toFloat();\\r\\n            return ret;\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getWind = function () {\\r\\n            var ret = new CubismVector2(0, 0);\\r\\n            ret.x = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(EffectiveForces)\\r\\n                .getValueByString(Wind)\\r\\n                .getValueByString(X)\\r\\n                .toFloat();\\r\\n            ret.y = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(EffectiveForces)\\r\\n                .getValueByString(Wind)\\r\\n                .getValueByString(Y)\\r\\n                .toFloat();\\r\\n            return ret;\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getSubRigCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(PhysicsSettingCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getTotalInputCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(TotalInputCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getTotalOutputCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(TotalOutputCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getVertexCount = function () {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(Meta)\\r\\n                .getValueByString(VertexCount)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getNormalizationPositionMinimumValue = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Normalization)\\r\\n                .getValueByString(Position)\\r\\n                .getValueByString(Minimum)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getNormalizationPositionMaximumValue = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Normalization)\\r\\n                .getValueByString(Position)\\r\\n                .getValueByString(Maximum)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getNormalizationPositionDefaultValue = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Normalization)\\r\\n                .getValueByString(Position)\\r\\n                .getValueByString(Default)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getNormalizationAngleMinimumValue = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Normalization)\\r\\n                .getValueByString(Angle)\\r\\n                .getValueByString(Minimum)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getNormalizationAngleMaximumValue = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Normalization)\\r\\n                .getValueByString(Angle)\\r\\n                .getValueByString(Maximum)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getNormalizationAngleDefaultValue = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Normalization)\\r\\n                .getValueByString(Angle)\\r\\n                .getValueByString(Default)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getInputCount = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Input)\\r\\n                .getVector()\\r\\n                .getSize();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getInputWeight = function (physicsSettingIndex, inputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Input)\\r\\n                .getValueByIndex(inputIndex)\\r\\n                .getValueByString(Weight)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getInputReflect = function (physicsSettingIndex, inputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Input)\\r\\n                .getValueByIndex(inputIndex)\\r\\n                .getValueByString(Reflect)\\r\\n                .toBoolean();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getInputType = function (physicsSettingIndex, inputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Input)\\r\\n                .getValueByIndex(inputIndex)\\r\\n                .getValueByString(Type)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getInputSourceId = function (physicsSettingIndex, inputIndex) {\\r\\n            return CubismFramework.getIdManager().getId(this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Input)\\r\\n                .getValueByIndex(inputIndex)\\r\\n                .getValueByString(Source)\\r\\n                .getValueByString(Id)\\r\\n                .getRawString());\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getOutputCount = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Output)\\r\\n                .getVector()\\r\\n                .getSize();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getOutputVertexIndex = function (physicsSettingIndex, outputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Output)\\r\\n                .getValueByIndex(outputIndex)\\r\\n                .getValueByString(VertexIndex)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getOutputAngleScale = function (physicsSettingIndex, outputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Output)\\r\\n                .getValueByIndex(outputIndex)\\r\\n                .getValueByString(Scale)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getOutputWeight = function (physicsSettingIndex, outputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Output)\\r\\n                .getValueByIndex(outputIndex)\\r\\n                .getValueByString(Weight)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getOutputDestinationId = function (physicsSettingIndex, outputIndex) {\\r\\n            return CubismFramework.getIdManager().getId(this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Output)\\r\\n                .getValueByIndex(outputIndex)\\r\\n                .getValueByString(Destination)\\r\\n                .getValueByString(Id)\\r\\n                .getRawString());\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getOutputType = function (physicsSettingIndex, outputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Output)\\r\\n                .getValueByIndex(outputIndex)\\r\\n                .getValueByString(Type)\\r\\n                .getRawString();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getOutputReflect = function (physicsSettingIndex, outputIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Output)\\r\\n                .getValueByIndex(outputIndex)\\r\\n                .getValueByString(Reflect)\\r\\n                .toBoolean();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getParticleCount = function (physicsSettingIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Vertices)\\r\\n                .getVector()\\r\\n                .getSize();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getParticleMobility = function (physicsSettingIndex, vertexIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Vertices)\\r\\n                .getValueByIndex(vertexIndex)\\r\\n                .getValueByString(Mobility)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getParticleDelay = function (physicsSettingIndex, vertexIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Vertices)\\r\\n                .getValueByIndex(vertexIndex)\\r\\n                .getValueByString(Delay)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getParticleAcceleration = function (physicsSettingIndex, vertexIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Vertices)\\r\\n                .getValueByIndex(vertexIndex)\\r\\n                .getValueByString(Acceleration)\\r\\n                .toFloat();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getParticleRadius = function (physicsSettingIndex, vertexIndex) {\\r\\n            return this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Vertices)\\r\\n                .getValueByIndex(vertexIndex)\\r\\n                .getValueByString(Radius)\\r\\n                .toInt();\\r\\n        };\\r\\n        CubismPhysicsJson.prototype.getParticlePosition = function (physicsSettingIndex, vertexIndex) {\\r\\n            var ret = new CubismVector2(0, 0);\\r\\n            ret.x = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Vertices)\\r\\n                .getValueByIndex(vertexIndex)\\r\\n                .getValueByString(Position)\\r\\n                .getValueByString(X)\\r\\n                .toFloat();\\r\\n            ret.y = this._json\\r\\n                .getRoot()\\r\\n                .getValueByString(PhysicsSettings)\\r\\n                .getValueByIndex(physicsSettingIndex)\\r\\n                .getValueByString(Vertices)\\r\\n                .getValueByIndex(vertexIndex)\\r\\n                .getValueByString(Position)\\r\\n                .getValueByString(Y)\\r\\n                .toFloat();\\r\\n            return ret;\\r\\n        };\\r\\n        return CubismPhysicsJson;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismPhysicsJson = CubismPhysicsJson;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/physics/cubismphysicsjson.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/rendering/cubismrenderer.ts\":\n/*!***************************************************!*\\\n  !*** ./Framework/src/rendering/cubismrenderer.ts ***!\n  \\***************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmatrix44_1 = __webpack_require__(/*! ../math/cubismmatrix44 */ \\\"./Framework/src/math/cubismmatrix44.ts\\\");\\r\\nvar CubismMatrix44 = cubismmatrix44_1.Live2DCubismFramework.CubismMatrix44;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismRenderer = (function () {\\r\\n        function CubismRenderer() {\\r\\n            this._isCulling = false;\\r\\n            this._isPremultipliedAlpha = false;\\r\\n            this._anisortopy = 0.0;\\r\\n            this._model = null;\\r\\n            this._modelColor = new CubismTextureColor();\\r\\n            this._mvpMatrix4x4 = new CubismMatrix44();\\r\\n            this._mvpMatrix4x4.loadIdentity();\\r\\n        }\\r\\n        CubismRenderer.create = function () {\\r\\n            return null;\\r\\n        };\\r\\n        CubismRenderer.delete = function (renderer) {\\r\\n            renderer = null;\\r\\n        };\\r\\n        CubismRenderer.prototype.initialize = function (model) {\\r\\n            this._model = model;\\r\\n        };\\r\\n        CubismRenderer.prototype.drawModel = function () {\\r\\n            if (this.getModel() == null)\\r\\n                return;\\r\\n            this.doDrawModel();\\r\\n        };\\r\\n        CubismRenderer.prototype.setMvpMatrix = function (matrix44) {\\r\\n            this._mvpMatrix4x4.setMatrix(matrix44.getArray());\\r\\n        };\\r\\n        CubismRenderer.prototype.getMvpMatrix = function () {\\r\\n            return this._mvpMatrix4x4;\\r\\n        };\\r\\n        CubismRenderer.prototype.setModelColor = function (red, green, blue, alpha) {\\r\\n            if (red < 0.0) {\\r\\n                red = 0.0;\\r\\n            }\\r\\n            else if (red > 1.0) {\\r\\n                red = 1.0;\\r\\n            }\\r\\n            if (green < 0.0) {\\r\\n                green = 0.0;\\r\\n            }\\r\\n            else if (green > 1.0) {\\r\\n                green = 1.0;\\r\\n            }\\r\\n            if (blue < 0.0) {\\r\\n                blue = 0.0;\\r\\n            }\\r\\n            else if (blue > 1.0) {\\r\\n                blue = 1.0;\\r\\n            }\\r\\n            if (alpha < 0.0) {\\r\\n                alpha = 0.0;\\r\\n            }\\r\\n            else if (alpha > 1.0) {\\r\\n                alpha = 1.0;\\r\\n            }\\r\\n            this._modelColor.R = red;\\r\\n            this._modelColor.G = green;\\r\\n            this._modelColor.B = blue;\\r\\n            this._modelColor.A = alpha;\\r\\n        };\\r\\n        CubismRenderer.prototype.getModelColor = function () {\\r\\n            return JSON.parse(JSON.stringify(this._modelColor));\\r\\n        };\\r\\n        CubismRenderer.prototype.setIsPremultipliedAlpha = function (enable) {\\r\\n            this._isPremultipliedAlpha = enable;\\r\\n        };\\r\\n        CubismRenderer.prototype.isPremultipliedAlpha = function () {\\r\\n            return this._isPremultipliedAlpha;\\r\\n        };\\r\\n        CubismRenderer.prototype.setIsCulling = function (culling) {\\r\\n            this._isCulling = culling;\\r\\n        };\\r\\n        CubismRenderer.prototype.isCulling = function () {\\r\\n            return this._isCulling;\\r\\n        };\\r\\n        CubismRenderer.prototype.setAnisotropy = function (n) {\\r\\n            this._anisortopy = n;\\r\\n        };\\r\\n        CubismRenderer.prototype.getAnisotropy = function () {\\r\\n            return this._anisortopy;\\r\\n        };\\r\\n        CubismRenderer.prototype.getModel = function () {\\r\\n            return this._model;\\r\\n        };\\r\\n        return CubismRenderer;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismRenderer = CubismRenderer;\\r\\n    var CubismBlendMode;\\r\\n    (function (CubismBlendMode) {\\r\\n        CubismBlendMode[CubismBlendMode[\\\"CubismBlendMode_Normal\\\"] = 0] = \\\"CubismBlendMode_Normal\\\";\\r\\n        CubismBlendMode[CubismBlendMode[\\\"CubismBlendMode_Additive\\\"] = 1] = \\\"CubismBlendMode_Additive\\\";\\r\\n        CubismBlendMode[CubismBlendMode[\\\"CubismBlendMode_Multiplicative\\\"] = 2] = \\\"CubismBlendMode_Multiplicative\\\";\\r\\n    })(CubismBlendMode = Live2DCubismFramework.CubismBlendMode || (Live2DCubismFramework.CubismBlendMode = {}));\\r\\n    var CubismTextureColor = (function () {\\r\\n        function CubismTextureColor() {\\r\\n            this.R = 1.0;\\r\\n            this.G = 1.0;\\r\\n            this.B = 1.0;\\r\\n            this.A = 1.0;\\r\\n        }\\r\\n        return CubismTextureColor;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismTextureColor = CubismTextureColor;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/rendering/cubismrenderer.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/rendering/cubismrenderer_webgl.ts\":\n/*!*********************************************************!*\\\n  !*** ./Framework/src/rendering/cubismrenderer_webgl.ts ***!\n  \\*********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar csmrectf_1 = __webpack_require__(/*! ../type/csmrectf */ \\\"./Framework/src/type/csmrectf.ts\\\");\\r\\nvar cubismrenderer_1 = __webpack_require__(/*! ./cubismrenderer */ \\\"./Framework/src/rendering/cubismrenderer.ts\\\");\\r\\nvar cubismmatrix44_1 = __webpack_require__(/*! ../math/cubismmatrix44 */ \\\"./Framework/src/math/cubismmatrix44.ts\\\");\\r\\nvar csmmap_1 = __webpack_require__(/*! ../type/csmmap */ \\\"./Framework/src/type/csmmap.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar Constant = live2dcubismframework_1.Live2DCubismFramework.Constant;\\r\\nvar CubismMatrix44 = cubismmatrix44_1.Live2DCubismFramework.CubismMatrix44;\\r\\nvar csmRect = csmrectf_1.Live2DCubismFramework.csmRect;\\r\\nvar csmMap = csmmap_1.Live2DCubismFramework.csmMap;\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismRenderer = cubismrenderer_1.Live2DCubismFramework.CubismRenderer;\\r\\nvar CubismBlendMode = cubismrenderer_1.Live2DCubismFramework.CubismBlendMode;\\r\\nvar CubismTextureColor = cubismrenderer_1.Live2DCubismFramework.CubismTextureColor;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var ColorChannelCount = 4;\\r\\n    var shaderCount = 10;\\r\\n    var s_instance;\\r\\n    var s_viewport;\\r\\n    var s_fbo;\\r\\n    var CubismClippingManager_WebGL = (function () {\\r\\n        function CubismClippingManager_WebGL() {\\r\\n            this._maskRenderTexture = null;\\r\\n            this._colorBuffer = null;\\r\\n            this._currentFrameNo = 0;\\r\\n            this._clippingMaskBufferSize = 256;\\r\\n            this._clippingContextListForMask = new csmVector();\\r\\n            this._clippingContextListForDraw = new csmVector();\\r\\n            this._channelColors = new csmVector();\\r\\n            this._tmpBoundsOnModel = new csmRect();\\r\\n            this._tmpMatrix = new CubismMatrix44();\\r\\n            this._tmpMatrixForMask = new CubismMatrix44();\\r\\n            this._tmpMatrixForDraw = new CubismMatrix44();\\r\\n            this._maskTexture = null;\\r\\n            var tmp = new CubismTextureColor();\\r\\n            tmp.R = 1.0;\\r\\n            tmp.G = 0.0;\\r\\n            tmp.B = 0.0;\\r\\n            tmp.A = 0.0;\\r\\n            this._channelColors.pushBack(tmp);\\r\\n            tmp = new CubismTextureColor();\\r\\n            tmp.R = 0.0;\\r\\n            tmp.G = 1.0;\\r\\n            tmp.B = 0.0;\\r\\n            tmp.A = 0.0;\\r\\n            this._channelColors.pushBack(tmp);\\r\\n            tmp = new CubismTextureColor();\\r\\n            tmp.R = 0.0;\\r\\n            tmp.G = 0.0;\\r\\n            tmp.B = 1.0;\\r\\n            tmp.A = 0.0;\\r\\n            this._channelColors.pushBack(tmp);\\r\\n            tmp = new CubismTextureColor();\\r\\n            tmp.R = 0.0;\\r\\n            tmp.G = 0.0;\\r\\n            tmp.B = 0.0;\\r\\n            tmp.A = 1.0;\\r\\n            this._channelColors.pushBack(tmp);\\r\\n        }\\r\\n        CubismClippingManager_WebGL.prototype.getChannelFlagAsColor = function (channelNo) {\\r\\n            return this._channelColors.at(channelNo);\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.getMaskRenderTexture = function () {\\r\\n            var ret = 0;\\r\\n            if (this._maskTexture && this._maskTexture.texture != 0) {\\r\\n                this._maskTexture.frameNo = this._currentFrameNo;\\r\\n                ret = this._maskTexture.texture;\\r\\n            }\\r\\n            if (ret == 0) {\\r\\n                var size = this._clippingMaskBufferSize;\\r\\n                this._colorBuffer = this.gl.createTexture();\\r\\n                this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\\r\\n                this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\\r\\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\\r\\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\\r\\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\\r\\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\\r\\n                this.gl.bindTexture(this.gl.TEXTURE_2D, null);\\r\\n                ret = this.gl.createFramebuffer();\\r\\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\\r\\n                this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\\r\\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\\r\\n                this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\\r\\n            }\\r\\n            return ret;\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.setGL = function (gl) {\\r\\n            this.gl = gl;\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.calcClippedDrawTotalBounds = function (model, clippingContext) {\\r\\n            var clippedDrawTotalMinX = Number.MAX_VALUE;\\r\\n            var clippedDrawTotalMinY = Number.MAX_VALUE;\\r\\n            var clippedDrawTotalMaxX = Number.MIN_VALUE;\\r\\n            var clippedDrawTotalMaxY = Number.MIN_VALUE;\\r\\n            var clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\\r\\n            for (var clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\\r\\n                var drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\\r\\n                var drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\\r\\n                var drawableVertexes = model.getDrawableVertices(drawableIndex);\\r\\n                var minX = Number.MAX_VALUE;\\r\\n                var minY = Number.MAX_VALUE;\\r\\n                var maxX = Number.MIN_VALUE;\\r\\n                var maxY = Number.MIN_VALUE;\\r\\n                var loop = drawableVertexCount * Constant.vertexStep;\\r\\n                for (var pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\\r\\n                    var x = drawableVertexes[pi];\\r\\n                    var y = drawableVertexes[pi + 1];\\r\\n                    if (x < minX) {\\r\\n                        minX = x;\\r\\n                    }\\r\\n                    if (x > maxX) {\\r\\n                        maxX = x;\\r\\n                    }\\r\\n                    if (y < minY) {\\r\\n                        minY = y;\\r\\n                    }\\r\\n                    if (y > maxY) {\\r\\n                        maxY = y;\\r\\n                    }\\r\\n                }\\r\\n                if (minX == Number.MAX_VALUE) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (minX < clippedDrawTotalMinX) {\\r\\n                    clippedDrawTotalMinX = minX;\\r\\n                }\\r\\n                if (minY < clippedDrawTotalMinY) {\\r\\n                    clippedDrawTotalMinY = minY;\\r\\n                }\\r\\n                if (maxX > clippedDrawTotalMaxX) {\\r\\n                    clippedDrawTotalMaxX = maxX;\\r\\n                }\\r\\n                if (maxY > clippedDrawTotalMaxY) {\\r\\n                    clippedDrawTotalMaxY = maxY;\\r\\n                }\\r\\n                if (clippedDrawTotalMinX == Number.MAX_VALUE) {\\r\\n                    clippingContext._allClippedDrawRect.x = 0.0;\\r\\n                    clippingContext._allClippedDrawRect.y = 0.0;\\r\\n                    clippingContext._allClippedDrawRect.width = 0.0;\\r\\n                    clippingContext._allClippedDrawRect.height = 0.0;\\r\\n                    clippingContext._isUsing = false;\\r\\n                }\\r\\n                else {\\r\\n                    clippingContext._isUsing = true;\\r\\n                    var w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\\r\\n                    var h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\\r\\n                    clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\\r\\n                    clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\\r\\n                    clippingContext._allClippedDrawRect.width = w;\\r\\n                    clippingContext._allClippedDrawRect.height = h;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.release = function () {\\r\\n            for (var i = 0; i < this._clippingContextListForMask.getSize(); i++) {\\r\\n                if (this._clippingContextListForMask.at(i)) {\\r\\n                    this._clippingContextListForMask.at(i).release();\\r\\n                    this._clippingContextListForMask.set(i, void 0);\\r\\n                }\\r\\n                this._clippingContextListForMask.set(i, null);\\r\\n            }\\r\\n            this._clippingContextListForMask = null;\\r\\n            for (var i = 0; i < this._clippingContextListForDraw.getSize(); i++) {\\r\\n                this._clippingContextListForDraw.set(i, null);\\r\\n            }\\r\\n            this._clippingContextListForDraw = null;\\r\\n            if (this._maskTexture) {\\r\\n                this.gl.deleteFramebuffer(this._maskTexture.texture);\\r\\n                this._maskTexture = null;\\r\\n            }\\r\\n            for (var i = 0; i < this._channelColors.getSize(); i++) {\\r\\n                this._channelColors.set(i, null);\\r\\n            }\\r\\n            this._channelColors = null;\\r\\n            this.gl.deleteTexture(this._colorBuffer);\\r\\n            this._colorBuffer = null;\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.initialize = function (model, drawableCount, drawableMasks, drawableMaskCounts) {\\r\\n            for (var i = 0; i < drawableCount; i++) {\\r\\n                if (drawableMaskCounts[i] <= 0) {\\r\\n                    this._clippingContextListForDraw.pushBack(null);\\r\\n                    continue;\\r\\n                }\\r\\n                var clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\\r\\n                if (clippingContext == null) {\\r\\n                    clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\\r\\n                    this._clippingContextListForMask.pushBack(clippingContext);\\r\\n                }\\r\\n                clippingContext.addClippedDrawable(i);\\r\\n                this._clippingContextListForDraw.pushBack(clippingContext);\\r\\n            }\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.setupClippingContext = function (model, renderer) {\\r\\n            this._currentFrameNo++;\\r\\n            var usingClipCount = 0;\\r\\n            for (var clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++) {\\r\\n                var cc = this._clippingContextListForMask.at(clipIndex);\\r\\n                this.calcClippedDrawTotalBounds(model, cc);\\r\\n                if (cc._isUsing) {\\r\\n                    usingClipCount++;\\r\\n                }\\r\\n            }\\r\\n            if (usingClipCount > 0) {\\r\\n                this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\\r\\n                this._maskRenderTexture = this.getMaskRenderTexture();\\r\\n                var modelToWorldF = renderer.getMvpMatrix();\\r\\n                renderer.preDraw();\\r\\n                this.setupLayoutBounds(usingClipCount);\\r\\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\\r\\n                this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\\r\\n                this.gl.clear(this.gl.COLOR_BUFFER_BIT);\\r\\n                for (var clipIndex = 0; clipIndex < this._clippingContextListForMask.getSize(); clipIndex++) {\\r\\n                    var clipContext = this._clippingContextListForMask.at(clipIndex);\\r\\n                    var allClipedDrawRect = clipContext._allClippedDrawRect;\\r\\n                    var layoutBoundsOnTex01 = clipContext._layoutBounds;\\r\\n                    var MARGIN = 0.05;\\r\\n                    this._tmpBoundsOnModel.setRect(allClipedDrawRect);\\r\\n                    this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\\r\\n                    var scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\\r\\n                    var scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\\r\\n                    {\\r\\n                        this._tmpMatrix.loadIdentity();\\r\\n                        {\\r\\n                            this._tmpMatrix.translateRelative(-1.0, -1.0);\\r\\n                            this._tmpMatrix.scaleRelative(2.0, 2.0);\\r\\n                        }\\r\\n                        {\\r\\n                            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\\r\\n                            this._tmpMatrix.scaleRelative(scaleX, scaleY);\\r\\n                            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\\r\\n                        }\\r\\n                        this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\\r\\n                    }\\r\\n                    {\\r\\n                        this._tmpMatrix.loadIdentity();\\r\\n                        {\\r\\n                            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\\r\\n                            this._tmpMatrix.scaleRelative(scaleX, scaleY);\\r\\n                            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\\r\\n                        }\\r\\n                        this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\\r\\n                    }\\r\\n                    clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\\r\\n                    clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\\r\\n                    var clipDrawCount = clipContext._clippingIdCount;\\r\\n                    for (var i = 0; i < clipDrawCount; i++) {\\r\\n                        var clipDrawIndex = clipContext._clippingIdList[i];\\r\\n                        if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\\r\\n                            continue;\\r\\n                        }\\r\\n                        renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\\r\\n                        renderer.setClippingContextBufferForMask(clipContext);\\r\\n                        renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\\r\\n                    }\\r\\n                }\\r\\n                this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\\r\\n                renderer.setClippingContextBufferForMask(null);\\r\\n                this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\\r\\n            }\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.findSameClip = function (drawableMasks, drawableMaskCounts) {\\r\\n            for (var i = 0; i < this._clippingContextListForMask.getSize(); i++) {\\r\\n                var clippingContext = this._clippingContextListForMask.at(i);\\r\\n                var count = clippingContext._clippingIdCount;\\r\\n                if (count != drawableMaskCounts) {\\r\\n                    continue;\\r\\n                }\\r\\n                var sameCount = 0;\\r\\n                for (var j = 0; j < count; j++) {\\r\\n                    var clipId = clippingContext._clippingIdList[j];\\r\\n                    for (var k = 0; k < count; k++) {\\r\\n                        if (drawableMasks[k] == clipId) {\\r\\n                            sameCount++;\\r\\n                            break;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                if (sameCount == count) {\\r\\n                    return clippingContext;\\r\\n                }\\r\\n            }\\r\\n            return null;\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.setupLayoutBounds = function (usingClipCount) {\\r\\n            var div = usingClipCount / ColorChannelCount;\\r\\n            var mod = usingClipCount % ColorChannelCount;\\r\\n            div = ~~div;\\r\\n            mod = ~~mod;\\r\\n            var curClipIndex = 0;\\r\\n            for (var channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\\r\\n                var layoutCount = div + (channelNo < mod ? 1 : 0);\\r\\n                if (layoutCount == 0) {\\r\\n                }\\r\\n                else if (layoutCount == 1) {\\r\\n                    var clipContext = this._clippingContextListForMask.at(curClipIndex++);\\r\\n                    clipContext._layoutChannelNo = channelNo;\\r\\n                    clipContext._layoutBounds.x = 0.0;\\r\\n                    clipContext._layoutBounds.y = 0.0;\\r\\n                    clipContext._layoutBounds.width = 1.0;\\r\\n                    clipContext._layoutBounds.height = 1.0;\\r\\n                }\\r\\n                else if (layoutCount == 2) {\\r\\n                    for (var i = 0; i < layoutCount; i++) {\\r\\n                        var xpos = i % 2;\\r\\n                        xpos = ~~xpos;\\r\\n                        var cc = this._clippingContextListForMask.at(curClipIndex++);\\r\\n                        cc._layoutChannelNo = channelNo;\\r\\n                        cc._layoutBounds.x = xpos * 0.5;\\r\\n                        cc._layoutBounds.y = 0.0;\\r\\n                        cc._layoutBounds.width = 0.5;\\r\\n                        cc._layoutBounds.height = 1.0;\\r\\n                    }\\r\\n                }\\r\\n                else if (layoutCount <= 4) {\\r\\n                    for (var i = 0; i < layoutCount; i++) {\\r\\n                        var xpos = i % 2;\\r\\n                        var ypos = i / 2;\\r\\n                        xpos = ~~xpos;\\r\\n                        ypos = ~~ypos;\\r\\n                        var cc = this._clippingContextListForMask.at(curClipIndex++);\\r\\n                        cc._layoutChannelNo = channelNo;\\r\\n                        cc._layoutBounds.x = xpos * 0.5;\\r\\n                        cc._layoutBounds.y = ypos * 0.5;\\r\\n                        cc._layoutBounds.width = 0.5;\\r\\n                        cc._layoutBounds.height = 0.5;\\r\\n                    }\\r\\n                }\\r\\n                else if (layoutCount <= 9) {\\r\\n                    for (var i = 0; i < layoutCount; i++) {\\r\\n                        var xpos = i % 3;\\r\\n                        var ypos = i / 3;\\r\\n                        xpos = ~~xpos;\\r\\n                        ypos = ~~ypos;\\r\\n                        var cc = this._clippingContextListForMask.at(curClipIndex++);\\r\\n                        cc._layoutChannelNo = channelNo;\\r\\n                        cc._layoutBounds.x = xpos / 3.0;\\r\\n                        cc._layoutBounds.y = ypos / 3.0;\\r\\n                        cc._layoutBounds.width = 1.0 / 3.0;\\r\\n                        cc._layoutBounds.height = 1.0 / 3.0;\\r\\n                    }\\r\\n                }\\r\\n                else {\\r\\n                    cubismdebug_1.CubismLogError('not supported mask count : {0}', layoutCount);\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.getColorBuffer = function () {\\r\\n            return this._colorBuffer;\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.getClippingContextListForDraw = function () {\\r\\n            return this._clippingContextListForDraw;\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.setClippingMaskBufferSize = function (size) {\\r\\n            this._clippingMaskBufferSize = size;\\r\\n        };\\r\\n        CubismClippingManager_WebGL.prototype.getClippingMaskBufferSize = function () {\\r\\n            return this._clippingMaskBufferSize;\\r\\n        };\\r\\n        return CubismClippingManager_WebGL;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismClippingManager_WebGL = CubismClippingManager_WebGL;\\r\\n    var CubismRenderTextureResource = (function () {\\r\\n        function CubismRenderTextureResource(frameNo, texture) {\\r\\n            this.frameNo = frameNo;\\r\\n            this.texture = texture;\\r\\n        }\\r\\n        return CubismRenderTextureResource;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismRenderTextureResource = CubismRenderTextureResource;\\r\\n    var CubismClippingContext = (function () {\\r\\n        function CubismClippingContext(manager, clippingDrawableIndices, clipCount) {\\r\\n            this._owner = manager;\\r\\n            this._clippingIdList = clippingDrawableIndices;\\r\\n            this._clippingIdCount = clipCount;\\r\\n            this._allClippedDrawRect = new csmRect();\\r\\n            this._layoutBounds = new csmRect();\\r\\n            this._clippedDrawableIndexList = [];\\r\\n            this._matrixForMask = new CubismMatrix44();\\r\\n            this._matrixForDraw = new CubismMatrix44();\\r\\n        }\\r\\n        CubismClippingContext.prototype.release = function () {\\r\\n            if (this._layoutBounds != null) {\\r\\n                this._layoutBounds = null;\\r\\n            }\\r\\n            if (this._allClippedDrawRect != null) {\\r\\n                this._allClippedDrawRect = null;\\r\\n            }\\r\\n            if (this._clippedDrawableIndexList != null) {\\r\\n                this._clippedDrawableIndexList = null;\\r\\n            }\\r\\n        };\\r\\n        CubismClippingContext.prototype.addClippedDrawable = function (drawableIndex) {\\r\\n            this._clippedDrawableIndexList.push(drawableIndex);\\r\\n        };\\r\\n        CubismClippingContext.prototype.getClippingManager = function () {\\r\\n            return this._owner;\\r\\n        };\\r\\n        CubismClippingContext.prototype.setGl = function (gl) {\\r\\n            this._owner.setGL(gl);\\r\\n        };\\r\\n        return CubismClippingContext;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismClippingContext = CubismClippingContext;\\r\\n    var CubismShader_WebGL = (function () {\\r\\n        function CubismShader_WebGL() {\\r\\n            this._shaderSets = new csmVector();\\r\\n        }\\r\\n        CubismShader_WebGL.getInstance = function () {\\r\\n            if (s_instance == null) {\\r\\n                s_instance = new CubismShader_WebGL();\\r\\n                return s_instance;\\r\\n            }\\r\\n            return s_instance;\\r\\n        };\\r\\n        CubismShader_WebGL.deleteInstance = function () {\\r\\n            if (s_instance) {\\r\\n                s_instance.release();\\r\\n                s_instance = null;\\r\\n            }\\r\\n        };\\r\\n        CubismShader_WebGL.prototype.release = function () {\\r\\n            this.releaseShaderProgram();\\r\\n        };\\r\\n        CubismShader_WebGL.prototype.setupShaderProgram = function (renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\\r\\n            if (!isPremultipliedAlpha) {\\r\\n                cubismdebug_1.CubismLogError('NoPremultipliedAlpha is not allowed');\\r\\n            }\\r\\n            if (this._shaderSets.getSize() == 0) {\\r\\n                this.generateShaders();\\r\\n            }\\r\\n            var SRC_COLOR;\\r\\n            var DST_COLOR;\\r\\n            var SRC_ALPHA;\\r\\n            var DST_ALPHA;\\r\\n            if (renderer.getClippingContextBufferForMask() != null) {\\r\\n                var shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_SetupMask);\\r\\n                this.gl.useProgram(shaderSet.shaderProgram);\\r\\n                this.gl.activeTexture(this.gl.TEXTURE0);\\r\\n                this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\\r\\n                this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\\r\\n                if (bufferData.vertex == null) {\\r\\n                    bufferData.vertex = this.gl.createBuffer();\\r\\n                }\\r\\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\\r\\n                this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\\r\\n                this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\\r\\n                this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\\r\\n                if (bufferData.uv == null) {\\r\\n                    bufferData.uv = this.gl.createBuffer();\\r\\n                }\\r\\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\\r\\n                this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\\r\\n                this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\\r\\n                this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\\r\\n                var channelNo = renderer.getClippingContextBufferForMask()\\r\\n                    ._layoutChannelNo;\\r\\n                var colorChannel = renderer\\r\\n                    .getClippingContextBufferForMask()\\r\\n                    .getClippingManager()\\r\\n                    .getChannelFlagAsColor(channelNo);\\r\\n                this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\\r\\n                this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, renderer.getClippingContextBufferForMask()._matrixForMask.getArray());\\r\\n                var rect = renderer.getClippingContextBufferForMask()\\r\\n                    ._layoutBounds;\\r\\n                this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2.0 - 1.0, rect.y * 2.0 - 1.0, rect.getRight() * 2.0 - 1.0, rect.getBottom() * 2.0 - 1.0);\\r\\n                SRC_COLOR = this.gl.ZERO;\\r\\n                DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\\r\\n                SRC_ALPHA = this.gl.ZERO;\\r\\n                DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\\r\\n            }\\r\\n            else {\\r\\n                var masked = renderer.getClippingContextBufferForDraw() != null;\\r\\n                var offset = masked ? (invertedMask ? 2 : 1) : 0;\\r\\n                var shaderSet = new CubismShaderSet();\\r\\n                switch (colorBlendMode) {\\r\\n                    case CubismBlendMode.CubismBlendMode_Normal:\\r\\n                    default:\\r\\n                        shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset);\\r\\n                        SRC_COLOR = this.gl.ONE;\\r\\n                        DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\\r\\n                        SRC_ALPHA = this.gl.ONE;\\r\\n                        DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\\r\\n                        break;\\r\\n                    case CubismBlendMode.CubismBlendMode_Additive:\\r\\n                        shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_AddPremultipliedAlpha + offset);\\r\\n                        SRC_COLOR = this.gl.ONE;\\r\\n                        DST_COLOR = this.gl.ONE;\\r\\n                        SRC_ALPHA = this.gl.ZERO;\\r\\n                        DST_ALPHA = this.gl.ONE;\\r\\n                        break;\\r\\n                    case CubismBlendMode.CubismBlendMode_Multiplicative:\\r\\n                        shaderSet = this._shaderSets.at(ShaderNames.ShaderNames_MultPremultipliedAlpha + offset);\\r\\n                        SRC_COLOR = this.gl.DST_COLOR;\\r\\n                        DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\\r\\n                        SRC_ALPHA = this.gl.ZERO;\\r\\n                        DST_ALPHA = this.gl.ONE;\\r\\n                        break;\\r\\n                }\\r\\n                this.gl.useProgram(shaderSet.shaderProgram);\\r\\n                if (bufferData.vertex == null) {\\r\\n                    bufferData.vertex = this.gl.createBuffer();\\r\\n                }\\r\\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\\r\\n                this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\\r\\n                this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\\r\\n                this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\\r\\n                if (bufferData.uv == null) {\\r\\n                    bufferData.uv = this.gl.createBuffer();\\r\\n                }\\r\\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\\r\\n                this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\\r\\n                this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\\r\\n                this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\\r\\n                if (masked) {\\r\\n                    this.gl.activeTexture(this.gl.TEXTURE1);\\r\\n                    var tex = renderer\\r\\n                        .getClippingContextBufferForDraw()\\r\\n                        .getClippingManager()\\r\\n                        .getColorBuffer();\\r\\n                    this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\\r\\n                    this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\\r\\n                    this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, renderer.getClippingContextBufferForDraw()._matrixForDraw.getArray());\\r\\n                    var channelNo = renderer.getClippingContextBufferForDraw()\\r\\n                        ._layoutChannelNo;\\r\\n                    var colorChannel = renderer\\r\\n                        .getClippingContextBufferForDraw()\\r\\n                        .getClippingManager()\\r\\n                        .getChannelFlagAsColor(channelNo);\\r\\n                    this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\\r\\n                }\\r\\n                this.gl.activeTexture(this.gl.TEXTURE0);\\r\\n                this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\\r\\n                this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\\r\\n                this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\\r\\n                this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\\r\\n            }\\r\\n            if (bufferData.index == null) {\\r\\n                bufferData.index = this.gl.createBuffer();\\r\\n            }\\r\\n            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\\r\\n            this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\\r\\n            this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\\r\\n        };\\r\\n        CubismShader_WebGL.prototype.releaseShaderProgram = function () {\\r\\n            for (var i = 0; i < this._shaderSets.getSize(); i++) {\\r\\n                this.gl.deleteProgram(this._shaderSets.at(i).shaderProgram);\\r\\n                this._shaderSets.at(i).shaderProgram = 0;\\r\\n                this._shaderSets.set(i, void 0);\\r\\n                this._shaderSets.set(i, null);\\r\\n            }\\r\\n        };\\r\\n        CubismShader_WebGL.prototype.generateShaders = function () {\\r\\n            for (var i = 0; i < shaderCount; i++) {\\r\\n                this._shaderSets.pushBack(new CubismShaderSet());\\r\\n            }\\r\\n            this._shaderSets.at(0).shaderProgram = this.loadShaderProgram(Live2DCubismFramework.vertexShaderSrcSetupMask, Live2DCubismFramework.fragmentShaderSrcsetupMask);\\r\\n            this._shaderSets.at(1).shaderProgram = this.loadShaderProgram(Live2DCubismFramework.vertexShaderSrc, Live2DCubismFramework.fragmentShaderSrcPremultipliedAlpha);\\r\\n            this._shaderSets.at(2).shaderProgram = this.loadShaderProgram(Live2DCubismFramework.vertexShaderSrcMasked, Live2DCubismFramework.fragmentShaderSrcMaskPremultipliedAlpha);\\r\\n            this._shaderSets.at(3).shaderProgram = this.loadShaderProgram(Live2DCubismFramework.vertexShaderSrcMasked, Live2DCubismFramework.fragmentShaderSrcMaskInvertedPremultipliedAlpha);\\r\\n            this._shaderSets.at(4).shaderProgram = this._shaderSets.at(1).shaderProgram;\\r\\n            this._shaderSets.at(5).shaderProgram = this._shaderSets.at(2).shaderProgram;\\r\\n            this._shaderSets.at(6).shaderProgram = this._shaderSets.at(3).shaderProgram;\\r\\n            this._shaderSets.at(7).shaderProgram = this._shaderSets.at(1).shaderProgram;\\r\\n            this._shaderSets.at(8).shaderProgram = this._shaderSets.at(2).shaderProgram;\\r\\n            this._shaderSets.at(9).shaderProgram = this._shaderSets.at(3).shaderProgram;\\r\\n            this._shaderSets.at(0).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(0).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(0).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(0).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(0).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(0).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_clipMatrix');\\r\\n            this._shaderSets.at(0).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_channelFlag');\\r\\n            this._shaderSets.at(0).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(0).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(1).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(1).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(1).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(1).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(1).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(1).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(1).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(1).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(2).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(2).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(2).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(2).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(2).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(2).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 's_texture1');\\r\\n            this._shaderSets.at(2).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(2).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_clipMatrix');\\r\\n            this._shaderSets.at(2).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_channelFlag');\\r\\n            this._shaderSets.at(2).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(2).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(3).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(3).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(3).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(3).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(3).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(3).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 's_texture1');\\r\\n            this._shaderSets.at(3).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(3).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_clipMatrix');\\r\\n            this._shaderSets.at(3).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_channelFlag');\\r\\n            this._shaderSets.at(3).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(3).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(4).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(4).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(4).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(4).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(4).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(4).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(4).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(4).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(5).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(5).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(5).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(5).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(5).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(5).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 's_texture1');\\r\\n            this._shaderSets.at(5).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(5).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_clipMatrix');\\r\\n            this._shaderSets.at(5).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_channelFlag');\\r\\n            this._shaderSets.at(5).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(5).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(6).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(6).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(6).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(6).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(6).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(6).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 's_texture1');\\r\\n            this._shaderSets.at(6).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(6).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_clipMatrix');\\r\\n            this._shaderSets.at(6).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_channelFlag');\\r\\n            this._shaderSets.at(6).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(6).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(7).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(7).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(7).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(7).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(7).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(7).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(7).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(7).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(8).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(8).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(8).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(8).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(8).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(8).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 's_texture1');\\r\\n            this._shaderSets.at(8).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(8).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_clipMatrix');\\r\\n            this._shaderSets.at(8).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_channelFlag');\\r\\n            this._shaderSets.at(8).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(8).shaderProgram, 'u_baseColor');\\r\\n            this._shaderSets.at(9).attributePositionLocation = this.gl.getAttribLocation(this._shaderSets.at(9).shaderProgram, 'a_position');\\r\\n            this._shaderSets.at(9).attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets.at(9).shaderProgram, 'a_texCoord');\\r\\n            this._shaderSets.at(9).samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 's_texture0');\\r\\n            this._shaderSets.at(9).samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 's_texture1');\\r\\n            this._shaderSets.at(9).uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_matrix');\\r\\n            this._shaderSets.at(9).uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_clipMatrix');\\r\\n            this._shaderSets.at(9).uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_channelFlag');\\r\\n            this._shaderSets.at(9).uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets.at(9).shaderProgram, 'u_baseColor');\\r\\n        };\\r\\n        CubismShader_WebGL.prototype.loadShaderProgram = function (vertexShaderSource, fragmentShaderSource) {\\r\\n            var shaderProgram = this.gl.createProgram();\\r\\n            var vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\\r\\n            if (!vertShader) {\\r\\n                cubismdebug_1.CubismLogError('Vertex shader compile error!');\\r\\n                return 0;\\r\\n            }\\r\\n            var fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\\r\\n            if (!fragShader) {\\r\\n                cubismdebug_1.CubismLogError('Vertex shader compile error!');\\r\\n                return 0;\\r\\n            }\\r\\n            this.gl.attachShader(shaderProgram, vertShader);\\r\\n            this.gl.attachShader(shaderProgram, fragShader);\\r\\n            this.gl.linkProgram(shaderProgram);\\r\\n            var linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\\r\\n            if (!linkStatus) {\\r\\n                cubismdebug_1.CubismLogError('Failed to link program: {0}', shaderProgram);\\r\\n                this.gl.deleteShader(vertShader);\\r\\n                vertShader = 0;\\r\\n                this.gl.deleteShader(fragShader);\\r\\n                fragShader = 0;\\r\\n                if (shaderProgram) {\\r\\n                    this.gl.deleteProgram(shaderProgram);\\r\\n                    shaderProgram = 0;\\r\\n                }\\r\\n                return 0;\\r\\n            }\\r\\n            this.gl.deleteShader(vertShader);\\r\\n            this.gl.deleteShader(fragShader);\\r\\n            return shaderProgram;\\r\\n        };\\r\\n        CubismShader_WebGL.prototype.compileShaderSource = function (shaderType, shaderSource) {\\r\\n            var source = shaderSource;\\r\\n            var shader = this.gl.createShader(shaderType);\\r\\n            this.gl.shaderSource(shader, source);\\r\\n            this.gl.compileShader(shader);\\r\\n            if (!shader) {\\r\\n                var log = this.gl.getShaderInfoLog(shader);\\r\\n                cubismdebug_1.CubismLogError('Shader compile log: {0} ', log);\\r\\n            }\\r\\n            var status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\\r\\n            if (!status) {\\r\\n                this.gl.deleteShader(shader);\\r\\n                return null;\\r\\n            }\\r\\n            return shader;\\r\\n        };\\r\\n        CubismShader_WebGL.prototype.setGl = function (gl) {\\r\\n            this.gl = gl;\\r\\n        };\\r\\n        return CubismShader_WebGL;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismShader_WebGL = CubismShader_WebGL;\\r\\n    var CubismShaderSet = (function () {\\r\\n        function CubismShaderSet() {\\r\\n        }\\r\\n        return CubismShaderSet;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismShaderSet = CubismShaderSet;\\r\\n    var ShaderNames;\\r\\n    (function (ShaderNames) {\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_SetupMask\\\"] = 0] = \\\"ShaderNames_SetupMask\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_NormalPremultipliedAlpha\\\"] = 1] = \\\"ShaderNames_NormalPremultipliedAlpha\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_NormalMaskedPremultipliedAlpha\\\"] = 2] = \\\"ShaderNames_NormalMaskedPremultipliedAlpha\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\\\"] = 3] = \\\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_AddPremultipliedAlpha\\\"] = 4] = \\\"ShaderNames_AddPremultipliedAlpha\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_AddMaskedPremultipliedAlpha\\\"] = 5] = \\\"ShaderNames_AddMaskedPremultipliedAlpha\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_AddMaskedPremultipliedAlphaInverted\\\"] = 6] = \\\"ShaderNames_AddMaskedPremultipliedAlphaInverted\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_MultPremultipliedAlpha\\\"] = 7] = \\\"ShaderNames_MultPremultipliedAlpha\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_MultMaskedPremultipliedAlpha\\\"] = 8] = \\\"ShaderNames_MultMaskedPremultipliedAlpha\\\";\\r\\n        ShaderNames[ShaderNames[\\\"ShaderNames_MultMaskedPremultipliedAlphaInverted\\\"] = 9] = \\\"ShaderNames_MultMaskedPremultipliedAlphaInverted\\\";\\r\\n    })(ShaderNames = Live2DCubismFramework.ShaderNames || (Live2DCubismFramework.ShaderNames = {}));\\r\\n    Live2DCubismFramework.vertexShaderSrcSetupMask = 'attribute vec4     a_position;' +\\r\\n        'attribute vec2     a_texCoord;' +\\r\\n        'varying vec2       v_texCoord;' +\\r\\n        'varying vec4       v_myPos;' +\\r\\n        'uniform mat4       u_clipMatrix;' +\\r\\n        'void main()' +\\r\\n        '{' +\\r\\n        '   gl_Position = u_clipMatrix * a_position;' +\\r\\n        '   v_myPos = u_clipMatrix * a_position;' +\\r\\n        '   v_texCoord = a_texCoord;' +\\r\\n        '   v_texCoord.y = 1.0 - v_texCoord.y;' +\\r\\n        '}';\\r\\n    Live2DCubismFramework.fragmentShaderSrcsetupMask = 'precision mediump float;' +\\r\\n        'varying vec2       v_texCoord;' +\\r\\n        'varying vec4       v_myPos;' +\\r\\n        'uniform vec4       u_baseColor;' +\\r\\n        'uniform vec4       u_channelFlag;' +\\r\\n        'uniform sampler2D  s_texture0;' +\\r\\n        'void main()' +\\r\\n        '{' +\\r\\n        '   float isInside = ' +\\r\\n        '       step(u_baseColor.x, v_myPos.x/v_myPos.w)' +\\r\\n        '       * step(u_baseColor.y, v_myPos.y/v_myPos.w)' +\\r\\n        '       * step(v_myPos.x/v_myPos.w, u_baseColor.z)' +\\r\\n        '       * step(v_myPos.y/v_myPos.w, u_baseColor.w);' +\\r\\n        '   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;' +\\r\\n        '}';\\r\\n    Live2DCubismFramework.vertexShaderSrc = 'attribute vec4     a_position;' +\\r\\n        'attribute vec2     a_texCoord;' +\\r\\n        'varying vec2       v_texCoord;' +\\r\\n        'uniform mat4       u_matrix;' +\\r\\n        'void main()' +\\r\\n        '{' +\\r\\n        '   gl_Position = u_matrix * a_position;' +\\r\\n        '   v_texCoord = a_texCoord;' +\\r\\n        '   v_texCoord.y = 1.0 - v_texCoord.y;' +\\r\\n        '}';\\r\\n    Live2DCubismFramework.vertexShaderSrcMasked = 'attribute vec4     a_position;' +\\r\\n        'attribute vec2     a_texCoord;' +\\r\\n        'varying vec2       v_texCoord;' +\\r\\n        'varying vec4       v_clipPos;' +\\r\\n        'uniform mat4       u_matrix;' +\\r\\n        'uniform mat4       u_clipMatrix;' +\\r\\n        'void main()' +\\r\\n        '{' +\\r\\n        '   gl_Position = u_matrix * a_position;' +\\r\\n        '   v_clipPos = u_clipMatrix * a_position;' +\\r\\n        '   v_texCoord = a_texCoord;' +\\r\\n        '   v_texCoord.y = 1.0 - v_texCoord.y;' +\\r\\n        '}';\\r\\n    Live2DCubismFramework.fragmentShaderSrcPremultipliedAlpha = 'precision mediump float;' +\\r\\n        'varying vec2       v_texCoord;' +\\r\\n        'uniform vec4       u_baseColor;' +\\r\\n        'uniform sampler2D  s_texture0;' +\\r\\n        'void main()' +\\r\\n        '{' +\\r\\n        '   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;' +\\r\\n        '}';\\r\\n    Live2DCubismFramework.fragmentShaderSrcMaskPremultipliedAlpha = 'precision mediump float;' +\\r\\n        'varying vec2       v_texCoord;' +\\r\\n        'varying vec4       v_clipPos;' +\\r\\n        'uniform vec4       u_baseColor;' +\\r\\n        'uniform vec4       u_channelFlag;' +\\r\\n        'uniform sampler2D  s_texture0;' +\\r\\n        'uniform sampler2D  s_texture1;' +\\r\\n        'void main()' +\\r\\n        '{' +\\r\\n        '   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;' +\\r\\n        '   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\\r\\n        '   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\\r\\n        '   col_formask = col_formask * maskVal;' +\\r\\n        '   gl_FragColor = col_formask;' +\\r\\n        '}';\\r\\n    Live2DCubismFramework.fragmentShaderSrcMaskInvertedPremultipliedAlpha = 'precision mediump float;' +\\r\\n        'varying vec2 v_texCoord;' +\\r\\n        'varying vec4 v_clipPos;' +\\r\\n        'uniform sampler2D s_texture0;' +\\r\\n        'uniform sampler2D s_texture1;' +\\r\\n        'uniform vec4 u_channelFlag;' +\\r\\n        'uniform vec4 u_baseColor;' +\\r\\n        'void main()' +\\r\\n        '{' +\\r\\n        'vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;' +\\r\\n        'vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\\r\\n        'float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\\r\\n        'col_formask = col_formask * (1.0 - maskVal);' +\\r\\n        'gl_FragColor = col_formask;' +\\r\\n        '}';\\r\\n    var CubismRenderer_WebGL = (function (_super) {\\r\\n        __extends(CubismRenderer_WebGL, _super);\\r\\n        function CubismRenderer_WebGL() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._clippingContextBufferForMask = null;\\r\\n            _this._clippingContextBufferForDraw = null;\\r\\n            _this._clippingManager = new CubismClippingManager_WebGL();\\r\\n            _this.firstDraw = true;\\r\\n            _this._textures = new csmMap();\\r\\n            _this._sortedDrawableIndexList = new csmVector();\\r\\n            _this._bufferData = {\\r\\n                vertex: WebGLBuffer = null,\\r\\n                uv: WebGLBuffer = null,\\r\\n                index: WebGLBuffer = null\\r\\n            };\\r\\n            _this._textures.prepareCapacity(32, true);\\r\\n            return _this;\\r\\n        }\\r\\n        CubismRenderer_WebGL.prototype.initialize = function (model) {\\r\\n            if (model.isUsingMasking()) {\\r\\n                this._clippingManager = new CubismClippingManager_WebGL();\\r\\n                this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\\r\\n            }\\r\\n            this._sortedDrawableIndexList.resize(model.getDrawableCount(), 0);\\r\\n            _super.prototype.initialize.call(this, model);\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.bindTexture = function (modelTextureNo, glTexture) {\\r\\n            this._textures.setValue(modelTextureNo, glTexture);\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.getBindedTextures = function () {\\r\\n            return this._textures;\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.setClippingMaskBufferSize = function (size) {\\r\\n            this._clippingManager.release();\\r\\n            this._clippingManager = void 0;\\r\\n            this._clippingManager = null;\\r\\n            this._clippingManager = new CubismClippingManager_WebGL();\\r\\n            this._clippingManager.setClippingMaskBufferSize(size);\\r\\n            this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.getClippingMaskBufferSize = function () {\\r\\n            return this._clippingManager.getClippingMaskBufferSize();\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.release = function () {\\r\\n            this._clippingManager.release();\\r\\n            this._clippingManager = void 0;\\r\\n            this._clippingManager = null;\\r\\n            this.gl.deleteBuffer(this._bufferData.vertex);\\r\\n            this._bufferData.vertex = null;\\r\\n            this.gl.deleteBuffer(this._bufferData.uv);\\r\\n            this._bufferData.uv = null;\\r\\n            this.gl.deleteBuffer(this._bufferData.index);\\r\\n            this._bufferData.index = null;\\r\\n            this._bufferData = null;\\r\\n            this._textures = null;\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.doDrawModel = function () {\\r\\n            if (this._clippingManager != null) {\\r\\n                this.preDraw();\\r\\n                this._clippingManager.setupClippingContext(this.getModel(), this);\\r\\n            }\\r\\n            this.preDraw();\\r\\n            var drawableCount = this.getModel().getDrawableCount();\\r\\n            var renderOrder = this.getModel().getDrawableRenderOrders();\\r\\n            for (var i = 0; i < drawableCount; ++i) {\\r\\n                var order = renderOrder[i];\\r\\n                this._sortedDrawableIndexList.set(order, i);\\r\\n            }\\r\\n            for (var i = 0; i < drawableCount; ++i) {\\r\\n                var drawableIndex = this._sortedDrawableIndexList.at(i);\\r\\n                if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\\r\\n                    continue;\\r\\n                }\\r\\n                this.setClippingContextBufferForDraw(this._clippingManager != null\\r\\n                    ? this._clippingManager\\r\\n                        .getClippingContextListForDraw()\\r\\n                        .at(drawableIndex)\\r\\n                    : null);\\r\\n                this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\\r\\n                this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\\r\\n            }\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.drawMesh = function (textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\\r\\n            if (this.isCulling()) {\\r\\n                this.gl.enable(this.gl.CULL_FACE);\\r\\n            }\\r\\n            else {\\r\\n                this.gl.disable(this.gl.CULL_FACE);\\r\\n            }\\r\\n            this.gl.frontFace(this.gl.CCW);\\r\\n            var modelColorRGBA = this.getModelColor();\\r\\n            if (this.getClippingContextBufferForMask() == null) {\\r\\n                modelColorRGBA.A *= opacity;\\r\\n                if (this.isPremultipliedAlpha()) {\\r\\n                    modelColorRGBA.R *= modelColorRGBA.A;\\r\\n                    modelColorRGBA.G *= modelColorRGBA.A;\\r\\n                    modelColorRGBA.B *= modelColorRGBA.A;\\r\\n                }\\r\\n            }\\r\\n            var drawtexture;\\r\\n            if (this._textures.getValue(textureNo) != null) {\\r\\n                drawtexture = this._textures.getValue(textureNo);\\r\\n            }\\r\\n            else {\\r\\n                drawtexture = null;\\r\\n            }\\r\\n            CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\\r\\n            this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\\r\\n            this.gl.useProgram(null);\\r\\n            this.setClippingContextBufferForDraw(null);\\r\\n            this.setClippingContextBufferForMask(null);\\r\\n        };\\r\\n        CubismRenderer_WebGL.doStaticRelease = function () {\\r\\n            CubismShader_WebGL.deleteInstance();\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.setRenderState = function (fbo, viewport) {\\r\\n            s_fbo = fbo;\\r\\n            s_viewport = viewport;\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.preDraw = function () {\\r\\n            if (this.firstDraw) {\\r\\n                this.firstDraw = false;\\r\\n                this._anisortopy =\\r\\n                    this.gl.getExtension('EXT_texture_filter_anisotropic') ||\\r\\n                        this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic') ||\\r\\n                        this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic');\\r\\n            }\\r\\n            this.gl.disable(this.gl.SCISSOR_TEST);\\r\\n            this.gl.disable(this.gl.STENCIL_TEST);\\r\\n            this.gl.disable(this.gl.DEPTH_TEST);\\r\\n            this.gl.frontFace(this.gl.CW);\\r\\n            this.gl.enable(this.gl.BLEND);\\r\\n            this.gl.colorMask(true, true, true, true);\\r\\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\\r\\n            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.setClippingContextBufferForMask = function (clip) {\\r\\n            this._clippingContextBufferForMask = clip;\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.getClippingContextBufferForMask = function () {\\r\\n            return this._clippingContextBufferForMask;\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.setClippingContextBufferForDraw = function (clip) {\\r\\n            this._clippingContextBufferForDraw = clip;\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.getClippingContextBufferForDraw = function () {\\r\\n            return this._clippingContextBufferForDraw;\\r\\n        };\\r\\n        CubismRenderer_WebGL.prototype.startUp = function (gl) {\\r\\n            this.gl = gl;\\r\\n            this._clippingManager.setGL(gl);\\r\\n            CubismShader_WebGL.getInstance().setGl(gl);\\r\\n        };\\r\\n        return CubismRenderer_WebGL;\\r\\n    }(CubismRenderer));\\r\\n    Live2DCubismFramework.CubismRenderer_WebGL = CubismRenderer_WebGL;\\r\\n    CubismRenderer.staticRelease = function () {\\r\\n        CubismRenderer_WebGL.doStaticRelease();\\r\\n    };\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/rendering/cubismrenderer_webgl.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/type/csmmap.ts\":\n/*!**************************************!*\\\n  !*** ./Framework/src/type/csmmap.ts ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var csmPair = (function () {\\r\\n        function csmPair(key, value) {\\r\\n            this.first = key == undefined ? null : key;\\r\\n            this.second = value == undefined ? null : value;\\r\\n        }\\r\\n        return csmPair;\\r\\n    }());\\r\\n    Live2DCubismFramework.csmPair = csmPair;\\r\\n    var csmMap = (function () {\\r\\n        function csmMap(size) {\\r\\n            if (size != undefined) {\\r\\n                if (size < 1) {\\r\\n                    this._keyValues = [];\\r\\n                    this._dummyValue = null;\\r\\n                    this._size = 0;\\r\\n                }\\r\\n                else {\\r\\n                    this._keyValues = new Array(size);\\r\\n                    this._size = size;\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                this._keyValues = [];\\r\\n                this._dummyValue = null;\\r\\n                this._size = 0;\\r\\n            }\\r\\n        }\\r\\n        csmMap.prototype.release = function () {\\r\\n            this.clear();\\r\\n        };\\r\\n        csmMap.prototype.appendKey = function (key) {\\r\\n            this.prepareCapacity(this._size + 1, false);\\r\\n            this._keyValues[this._size] = new csmPair(key);\\r\\n            this._size += 1;\\r\\n        };\\r\\n        csmMap.prototype.getValue = function (key) {\\r\\n            var found = -1;\\r\\n            for (var i = 0; i < this._size; i++) {\\r\\n                if (this._keyValues[i].first == key) {\\r\\n                    found = i;\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n            if (found >= 0) {\\r\\n                return this._keyValues[found].second;\\r\\n            }\\r\\n            else {\\r\\n                this.appendKey(key);\\r\\n                return this._keyValues[this._size - 1].second;\\r\\n            }\\r\\n        };\\r\\n        csmMap.prototype.setValue = function (key, value) {\\r\\n            var found = -1;\\r\\n            for (var i = 0; i < this._size; i++) {\\r\\n                if (this._keyValues[i].first == key) {\\r\\n                    found = i;\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n            if (found >= 0) {\\r\\n                this._keyValues[found].second = value;\\r\\n            }\\r\\n            else {\\r\\n                this.appendKey(key);\\r\\n                this._keyValues[this._size - 1].second = value;\\r\\n            }\\r\\n        };\\r\\n        csmMap.prototype.isExist = function (key) {\\r\\n            for (var i = 0; i < this._size; i++) {\\r\\n                if (this._keyValues[i].first == key) {\\r\\n                    return true;\\r\\n                }\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        csmMap.prototype.clear = function () {\\r\\n            this._keyValues = void 0;\\r\\n            this._keyValues = null;\\r\\n            this._keyValues = [];\\r\\n            this._size = 0;\\r\\n        };\\r\\n        csmMap.prototype.getSize = function () {\\r\\n            return this._size;\\r\\n        };\\r\\n        csmMap.prototype.prepareCapacity = function (newSize, fitToSize) {\\r\\n            if (newSize > this._keyValues.length) {\\r\\n                if (this._keyValues.length == 0) {\\r\\n                    if (!fitToSize && newSize < csmMap.DefaultSize)\\r\\n                        newSize = csmMap.DefaultSize;\\r\\n                    this._keyValues.length = newSize;\\r\\n                }\\r\\n                else {\\r\\n                    if (!fitToSize && newSize < this._keyValues.length * 2)\\r\\n                        newSize = this._keyValues.length * 2;\\r\\n                    this._keyValues.length = newSize;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        csmMap.prototype.begin = function () {\\r\\n            var ite = new iterator(this, 0);\\r\\n            return ite;\\r\\n        };\\r\\n        csmMap.prototype.end = function () {\\r\\n            var ite = new iterator(this, this._size);\\r\\n            return ite;\\r\\n        };\\r\\n        csmMap.prototype.erase = function (ite) {\\r\\n            var index = ite._index;\\r\\n            if (index < 0 || this._size <= index) {\\r\\n                return ite;\\r\\n            }\\r\\n            this._keyValues.splice(index, 1);\\r\\n            --this._size;\\r\\n            var ite2 = new iterator(this, index);\\r\\n            return ite2;\\r\\n        };\\r\\n        csmMap.prototype.dumpAsInt = function () {\\r\\n            for (var i = 0; i < this._size; i++) {\\r\\n                cubismdebug_1.CubismLogDebug('{0} ,', this._keyValues[i]);\\r\\n                cubismdebug_1.CubismLogDebug('\\\\n');\\r\\n            }\\r\\n        };\\r\\n        csmMap.DefaultSize = 10;\\r\\n        return csmMap;\\r\\n    }());\\r\\n    Live2DCubismFramework.csmMap = csmMap;\\r\\n    var iterator = (function () {\\r\\n        function iterator(v, idx) {\\r\\n            this._map = v != undefined ? v : new csmMap();\\r\\n            this._index = idx != undefined ? idx : 0;\\r\\n        }\\r\\n        iterator.prototype.set = function (ite) {\\r\\n            this._index = ite._index;\\r\\n            this._map = ite._map;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.preIncrement = function () {\\r\\n            ++this._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.preDecrement = function () {\\r\\n            --this._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.increment = function () {\\r\\n            var iteold = new iterator(this._map, this._index++);\\r\\n            this._map = iteold._map;\\r\\n            this._index = iteold._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.decrement = function () {\\r\\n            var iteold = new iterator(this._map, this._index);\\r\\n            this._map = iteold._map;\\r\\n            this._index = iteold._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.ptr = function () {\\r\\n            return this._map._keyValues[this._index];\\r\\n        };\\r\\n        iterator.prototype.notEqual = function (ite) {\\r\\n            return this._index != ite._index || this._map != ite._map;\\r\\n        };\\r\\n        return iterator;\\r\\n    }());\\r\\n    Live2DCubismFramework.iterator = iterator;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL3R5cGUvY3NtbWFwLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vRnJhbWV3b3JrL3NyYy90eXBlL2NzbW1hcC50cz80YzQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmltcG9ydCB7IEN1YmlzbUxvZ0RlYnVnIH0gZnJvbSAnLi4vdXRpbHMvY3ViaXNtZGVidWcnO1xuXG5leHBvcnQgbmFtZXNwYWNlIExpdmUyREN1YmlzbUZyYW1ld29yayB7XG4gIC8qKlxuICAgKiBLZXktVmFsdWXjga7jg5rjgqLjgpLlrprnvqnjgZnjgovjgq/jg6njgrlcbiAgICogY3NtTWFw44Kv44Op44K544Gu5YaF6YOo44OH44O844K/44Gn5L2/55So44GZ44KL44CCXG4gICAqL1xuICBleHBvcnQgY2xhc3MgY3NtUGFpcjxfS2V5VCwgX1ZhbFQ+IHtcbiAgICAvKipcbiAgICAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICAgKiBAcGFyYW0ga2V5IEtleeOBqOOBl+OBpuOCu+ODg+ODiOOBmeOCi+WApFxuICAgICAqIEBwYXJhbSB2YWx1ZSBWYWx1ZeOBqOOBl+OBpuOCu+ODg+ODiOOBmeOCi+WApFxuICAgICAqL1xuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihrZXk/OiBfS2V5VCwgdmFsdWU/OiBfVmFsVCkge1xuICAgICAgdGhpcy5maXJzdCA9IGtleSA9PSB1bmRlZmluZWQgPyBudWxsIDoga2V5O1xuXG4gICAgICB0aGlzLnNlY29uZCA9IHZhbHVlID09IHVuZGVmaW5lZCA/IG51bGwgOiB2YWx1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZmlyc3Q6IF9LZXlUOyAvLyBrZXnjgajjgZfjgabnlKjjgYTjgovlpInmlbBcbiAgICBwdWJsaWMgc2Vjb25kOiBfVmFsVDsgLy8gdmFsdWXjgajjgZfjgabnlKjjgYTjgovlpInmlbBcbiAgfVxuXG4gIC8qKlxuICAgKiDjg57jg4Pjg5flnotcbiAgICovXG4gIGV4cG9ydCBjbGFzcyBjc21NYXA8X0tleVQsIF9WYWxUPiB7XG4gICAgLyoqXG4gICAgICog5byV5pWw5LuY44GN44Kz44Oz44K544OI44Op44Kv44K/XG4gICAgICogQHBhcmFtIHNpemUg5Yid5pyf5YyW5pmC54K544Gn56K65L+d44GZ44KL44K144Kk44K6XG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKHNpemU/OiBudW1iZXIpIHtcbiAgICAgIGlmIChzaXplICE9IHVuZGVmaW5lZCkge1xuICAgICAgICBpZiAoc2l6ZSA8IDEpIHtcbiAgICAgICAgICB0aGlzLl9rZXlWYWx1ZXMgPSBbXTtcbiAgICAgICAgICB0aGlzLl9kdW1teVZhbHVlID0gbnVsbDtcbiAgICAgICAgICB0aGlzLl9zaXplID0gMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLl9rZXlWYWx1ZXMgPSBuZXcgQXJyYXkoc2l6ZSk7XG4gICAgICAgICAgdGhpcy5fc2l6ZSA9IHNpemU7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX2tleVZhbHVlcyA9IFtdO1xuICAgICAgICB0aGlzLl9kdW1teVZhbHVlID0gbnVsbDtcbiAgICAgICAgdGhpcy5fc2l6ZSA9IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44OH44K544OI44Op44Kv44K/XG4gICAgICovXG4gICAgcHVibGljIHJlbGVhc2UoKSB7XG4gICAgICB0aGlzLmNsZWFyKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Kt44O844KS6L+95Yqg44GZ44KLXG4gICAgICogQHBhcmFtIGtleSDmlrDjgZ/jgavov73liqDjgZnjgovjgq3jg7xcbiAgICAgKi9cbiAgICBwdWJsaWMgYXBwZW5kS2V5KGtleTogX0tleVQpOiB2b2lkIHtcbiAgICAgIC8vIOaWsOOBl+OBj0tleS9WYWx1ZeOBruODmuOCouOCkuS9nOOCi1xuICAgICAgdGhpcy5wcmVwYXJlQ2FwYWNpdHkodGhpcy5fc2l6ZSArIDEsIGZhbHNlKTsgLy8gMeOBpOS7peS4iuWFpeOCi+mamemWk+OCkuS9nOOCi1xuICAgICAgLy8g5paw44GX44GEa2V5L3ZhbHVl44Gu44Kk44Oz44OH44OD44Kv44K544GvX3NpemVcblxuICAgICAgdGhpcy5fa2V5VmFsdWVzW3RoaXMuX3NpemVdID0gbmV3IGNzbVBhaXI8X0tleVQsIF9WYWxUPihrZXkpO1xuICAgICAgdGhpcy5fc2l6ZSArPSAxO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOa3u+Wtl+a8lOeul+WtkFtrZXld44Gu44Kq44O844OQ44O844Ot44O844OJKGdldClcbiAgICAgKiBAcGFyYW0ga2V5IOa3u+Wtl+OBi+OCieeJueWumuOBleOCjOOCi1ZhbHVl5YCkXG4gICAgICovXG4gICAgcHVibGljIGdldFZhbHVlKGtleTogX0tleVQpOiBfVmFsVCB7XG4gICAgICBsZXQgZm91bmQgPSAtMTtcblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9zaXplOyBpKyspIHtcbiAgICAgICAgaWYgKHRoaXMuX2tleVZhbHVlc1tpXS5maXJzdCA9PSBrZXkpIHtcbiAgICAgICAgICBmb3VuZCA9IGk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGZvdW5kID49IDApIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2tleVZhbHVlc1tmb3VuZF0uc2Vjb25kO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5hcHBlbmRLZXkoa2V5KTsgLy8g5paw6KaP44Kt44O844KS6L+95YqgXG4gICAgICAgIHJldHVybiB0aGlzLl9rZXlWYWx1ZXNbdGhpcy5fc2l6ZSAtIDFdLnNlY29uZDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDmt7vlrZfmvJTnrpflrZBba2V5XeOBruOCquODvOODkOODvOODreODvOODiShzZXQpXG4gICAgICogQHBhcmFtIGtleSDmt7vlrZfjgYvjgonnibnlrprjgZXjgozjgotWYWx1ZeWApFxuICAgICAqIEBwYXJhbSB2YWx1ZSDku6PlhaXjgZnjgotWYWx1ZeWApFxuICAgICAqL1xuICAgIHB1YmxpYyBzZXRWYWx1ZShrZXk6IF9LZXlULCB2YWx1ZTogX1ZhbFQpOiB2b2lkIHtcbiAgICAgIGxldCBmb3VuZCA9IC0xO1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX3NpemU7IGkrKykge1xuICAgICAgICBpZiAodGhpcy5fa2V5VmFsdWVzW2ldLmZpcnN0ID09IGtleSkge1xuICAgICAgICAgIGZvdW5kID0gaTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoZm91bmQgPj0gMCkge1xuICAgICAgICB0aGlzLl9rZXlWYWx1ZXNbZm91bmRdLnNlY29uZCA9IHZhbHVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5hcHBlbmRLZXkoa2V5KTsgLy8g5paw6KaP44Kt44O844KS6L+95YqgXG4gICAgICAgIHRoaXMuX2tleVZhbHVlc1t0aGlzLl9zaXplIC0gMV0uc2Vjb25kID0gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5byV5pWw44Gn5rih44GX44GfS2V544KS5oyB44Gk6KaB57Sg44GM5a2Y5Zyo44GZ44KL44GLXG4gICAgICogQHBhcmFtIGtleSDlrZjlnKjjgpLnorroqo3jgZnjgotrZXlcbiAgICAgKiBAcmV0dXJuIHRydWUg5byV5pWw44Gn5rih44GX44Gfa2V544KS5oyB44Gk6KaB57Sg44GM5a2Y5Zyo44GZ44KLXG4gICAgICogQHJldHVybiBmYWxzZSDlvJXmlbDjgafmuKHjgZfjgZ9rZXnjgpLmjIHjgaTopoHntKDjgYzlrZjlnKjjgZfjgarjgYRcbiAgICAgKi9cbiAgICBwdWJsaWMgaXNFeGlzdChrZXk6IF9LZXlUKTogYm9vbGVhbiB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX3NpemU7IGkrKykge1xuICAgICAgICBpZiAodGhpcy5fa2V5VmFsdWVzW2ldLmZpcnN0ID09IGtleSkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICoga2V5VmFsdWXjga7jg53jgqTjg7Pjgr/jgpLlhajjgabop6PmlL7jgZnjgotcbiAgICAgKi9cbiAgICBwdWJsaWMgY2xlYXIoKTogdm9pZCB7XG4gICAgICB0aGlzLl9rZXlWYWx1ZXMgPSB2b2lkIDA7XG4gICAgICB0aGlzLl9rZXlWYWx1ZXMgPSBudWxsO1xuICAgICAgdGhpcy5fa2V5VmFsdWVzID0gW107XG5cbiAgICAgIHRoaXMuX3NpemUgPSAwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOOCs+ODs+ODhuODiuOBruOCteOCpOOCuuOCkuWPluW+l+OBmeOCi1xuICAgICAqXG4gICAgICogQHJldHVybiDjgrPjg7Pjg4bjg4rjga7jgrXjgqTjgrpcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0U2l6ZSgpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMuX3NpemU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Kz44Oz44OG44OK44Gu44Kt44Oj44OR44K344OG44Kj44KS56K65L+d44GZ44KLXG4gICAgICogQHBhcmFtIG5ld1NpemUg5paw44Gf44Gq44Kt44Oj44OR44K344OG44Kj44CC5byV5pWw44Gu5YCk44GM54++5Zyo44Gu44K144Kk44K65pyq5rqA44Gu5aC05ZCI44Gv5L2V44KC44GX44Gq44GE44CCXG4gICAgICogQHBhcmFtIGZpdFRvU2l6ZSB0cnVl44Gq44KJ5oyH5a6a44GX44Gf44K144Kk44K644Gr5ZCI44KP44Gb44KL44CCZmFsc2XjgarjgonjgrXjgqTjgrrjgpIy5YCN56K65L+d44GX44Gm44GK44GP44CCXG4gICAgICovXG4gICAgcHVibGljIHByZXBhcmVDYXBhY2l0eShuZXdTaXplOiBudW1iZXIsIGZpdFRvU2l6ZTogYm9vbGVhbik6IHZvaWQge1xuICAgICAgaWYgKG5ld1NpemUgPiB0aGlzLl9rZXlWYWx1ZXMubGVuZ3RoKSB7XG4gICAgICAgIGlmICh0aGlzLl9rZXlWYWx1ZXMubGVuZ3RoID09IDApIHtcbiAgICAgICAgICBpZiAoIWZpdFRvU2l6ZSAmJiBuZXdTaXplIDwgY3NtTWFwLkRlZmF1bHRTaXplKVxuICAgICAgICAgICAgbmV3U2l6ZSA9IGNzbU1hcC5EZWZhdWx0U2l6ZTtcbiAgICAgICAgICB0aGlzLl9rZXlWYWx1ZXMubGVuZ3RoID0gbmV3U2l6ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoIWZpdFRvU2l6ZSAmJiBuZXdTaXplIDwgdGhpcy5fa2V5VmFsdWVzLmxlbmd0aCAqIDIpXG4gICAgICAgICAgICBuZXdTaXplID0gdGhpcy5fa2V5VmFsdWVzLmxlbmd0aCAqIDI7XG4gICAgICAgICAgdGhpcy5fa2V5VmFsdWVzLmxlbmd0aCA9IG5ld1NpemU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDjgrPjg7Pjg4bjg4rjga7lhYjpoK3opoHntKDjgpLov5TjgZlcbiAgICAgKi9cbiAgICBwdWJsaWMgYmVnaW4oKTogaXRlcmF0b3I8X0tleVQsIF9WYWxUPiB7XG4gICAgICBjb25zdCBpdGU6IGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4gPSBuZXcgaXRlcmF0b3I8X0tleVQsIF9WYWxUPih0aGlzLCAwKTtcbiAgICAgIHJldHVybiBpdGU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Kz44Oz44OG44OK44Gu57WC56uv6KaB57Sg44KS6L+U44GZXG4gICAgICovXG4gICAgcHVibGljIGVuZCgpOiBpdGVyYXRvcjxfS2V5VCwgX1ZhbFQ+IHtcbiAgICAgIGNvbnN0IGl0ZTogaXRlcmF0b3I8X0tleVQsIF9WYWxUPiA9IG5ldyBpdGVyYXRvcjxfS2V5VCwgX1ZhbFQ+KFxuICAgICAgICB0aGlzLFxuICAgICAgICB0aGlzLl9zaXplXG4gICAgICApOyAvLyDntYLkuoZcbiAgICAgIHJldHVybiBpdGU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog44Kz44Oz44OG44OK44GL44KJ6KaB57Sg44KS5YmK6Zmk44GZ44KLXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaXRlIOWJiumZpOOBmeOCi+imgee0oFxuICAgICAqL1xuICAgIHB1YmxpYyBlcmFzZShpdGU6IGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4pOiBpdGVyYXRvcjxfS2V5VCwgX1ZhbFQ+IHtcbiAgICAgIGNvbnN0IGluZGV4OiBudW1iZXIgPSBpdGUuX2luZGV4O1xuICAgICAgaWYgKGluZGV4IDwgMCB8fCB0aGlzLl9zaXplIDw9IGluZGV4KSB7XG4gICAgICAgIHJldHVybiBpdGU7IC8vIOWJiumZpOevhOWbsuWkllxuICAgICAgfVxuXG4gICAgICAvLyDliYrpmaRcbiAgICAgIHRoaXMuX2tleVZhbHVlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgLS10aGlzLl9zaXplO1xuXG4gICAgICBjb25zdCBpdGUyOiBpdGVyYXRvcjxfS2V5VCwgX1ZhbFQ+ID0gbmV3IGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4oXG4gICAgICAgIHRoaXMsXG4gICAgICAgIGluZGV4XG4gICAgICApOyAvLyDntYLkuoZcbiAgICAgIHJldHVybiBpdGUyO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOOCs+ODs+ODhuODiuOBruWApOOCkjMy44OT44OD44OI56ym5Y+35LuY44GN5pW05pWw5Z6L44Gn44OA44Oz44OX44GZ44KLXG4gICAgICovXG4gICAgcHVibGljIGR1bXBBc0ludCgpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fc2l6ZTsgaSsrKSB7XG4gICAgICAgIEN1YmlzbUxvZ0RlYnVnKCd7MH0gLCcsIHRoaXMuX2tleVZhbHVlc1tpXSk7XG4gICAgICAgIEN1YmlzbUxvZ0RlYnVnKCdcXG4nKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IERlZmF1bHRTaXplID0gMTA7IC8vIOOCs+ODs+ODhuODiuOBruWIneacn+WMluOBruODh+ODleOCqeODq+ODiOOCteOCpOOCulxuICAgIHB1YmxpYyBfa2V5VmFsdWVzOiBjc21QYWlyPF9LZXlULCBfVmFsVD5bXTsgLy8ga2V5LXZhbHVl44Oa44Ki44Gu6YWN5YiXXG4gICAgcHVibGljIF9kdW1teVZhbHVlOiBfVmFsVDsgLy8g56m644Gu5YCk44KS6L+U44GZ54K644Gu44OA44Of44O8XG4gICAgcHVibGljIF9zaXplOiBudW1iZXI7IC8vIOOCs+ODs+ODhuODiuOBruimgee0oOaVsFxuICB9XG5cbiAgLyoqXG4gICAqIGNzbU1hcDxUPuOBruOCpOODhuODrOODvOOCv1xuICAgKi9cbiAgZXhwb3J0IGNsYXNzIGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4ge1xuICAgIC8qKlxuICAgICAqIOOCs+ODs+OCueODiOODqeOCr+OCv1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHY/OiBjc21NYXA8X0tleVQsIF9WYWxUPiwgaWR4PzogbnVtYmVyKSB7XG4gICAgICB0aGlzLl9tYXAgPSB2ICE9IHVuZGVmaW5lZCA/IHYgOiBuZXcgY3NtTWFwPF9LZXlULCBfVmFsVD4oKTtcblxuICAgICAgdGhpcy5faW5kZXggPSBpZHggIT0gdW5kZWZpbmVkID8gaWR4IDogMDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiA95ryU566X5a2Q44Gu44Kq44O844OQ44O844Ot44O844OJXG4gICAgICovXG4gICAgcHVibGljIHNldChpdGU6IGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4pOiBpdGVyYXRvcjxfS2V5VCwgX1ZhbFQ+IHtcbiAgICAgIHRoaXMuX2luZGV4ID0gaXRlLl9pbmRleDtcbiAgICAgIHRoaXMuX21hcCA9IGl0ZS5fbWFwO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5YmN572u44GNKyvmvJTnrpflrZDjga7jgqrjg7zjg5Djg7zjg63jg7zjg4lcbiAgICAgKi9cbiAgICBwdWJsaWMgcHJlSW5jcmVtZW50KCk6IGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4ge1xuICAgICAgKyt0aGlzLl9pbmRleDtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOWJjee9ruOBjS0t5ryU566X5a2Q44Gu44Kq44O844OQ44O844Ot44O844OJXG4gICAgICovXG4gICAgcHVibGljIHByZURlY3JlbWVudCgpOiBpdGVyYXRvcjxfS2V5VCwgX1ZhbFQ+IHtcbiAgICAgIC0tdGhpcy5faW5kZXg7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlvoznva7jgY0rK+a8lOeul+WtkOOBruOCquODvOODkOODvOODreODvOODiVxuICAgICAqL1xuICAgIHB1YmxpYyBpbmNyZW1lbnQoKTogaXRlcmF0b3I8X0tleVQsIF9WYWxUPiB7XG4gICAgICBjb25zdCBpdGVvbGQgPSBuZXcgaXRlcmF0b3I8X0tleVQsIF9WYWxUPih0aGlzLl9tYXAsIHRoaXMuX2luZGV4KyspOyAvLyDlj6TjgYTlgKTjgpLkv53lrZhcbiAgICAgIHRoaXMuX21hcCA9IGl0ZW9sZC5fbWFwO1xuICAgICAgdGhpcy5faW5kZXggPSBpdGVvbGQuX2luZGV4O1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5b6M572u44GNLS3mvJTnrpflrZDjga7jgqrjg7zjg5Djg7zjg63jg7zjg4lcbiAgICAgKi9cbiAgICBwdWJsaWMgZGVjcmVtZW50KCk6IGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4ge1xuICAgICAgY29uc3QgaXRlb2xkID0gbmV3IGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4odGhpcy5fbWFwLCB0aGlzLl9pbmRleCk7IC8vIOWPpOOBhOWApOOCkuS/neWtmFxuICAgICAgdGhpcy5fbWFwID0gaXRlb2xkLl9tYXA7XG4gICAgICB0aGlzLl9pbmRleCA9IGl0ZW9sZC5faW5kZXg7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAq5ryU566X5a2Q44Gu44Kq44O844OQ44O844Ot44O844OJXG4gICAgICovXG4gICAgcHVibGljIHB0cigpOiBjc21QYWlyPF9LZXlULCBfVmFsVD4ge1xuICAgICAgcmV0dXJuIHRoaXMuX21hcC5fa2V5VmFsdWVzW3RoaXMuX2luZGV4XTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAhPea8lOeul1xuICAgICAqL1xuICAgIHB1YmxpYyBub3RFcXVhbChpdGU6IGl0ZXJhdG9yPF9LZXlULCBfVmFsVD4pOiBib29sZWFuIHtcbiAgICAgIHJldHVybiB0aGlzLl9pbmRleCAhPSBpdGUuX2luZGV4IHx8IHRoaXMuX21hcCAhPSBpdGUuX21hcDtcbiAgICB9XG5cbiAgICBfaW5kZXg6IG51bWJlcjsgLy8g44Kz44Oz44OG44OK44Gu44Kk44Oz44OH44OD44Kv44K55YCkXG4gICAgX21hcDogY3NtTWFwPF9LZXlULCBfVmFsVD47IC8vIOOCs+ODs+ODhuODilxuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7O0FBT0E7QUFFQTtBQUFBO0FBS0E7QUFNQTtBQUNBO0FBRUE7QUFDQTtBQUlBO0FBQUE7QUFkQTtBQW1CQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQU1BO0FBRUE7QUFHQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFJQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFFQTtBQUlBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUlBO0FBQUE7QUFwTUE7QUF5TUE7QUFJQTtBQUNBO0FBRUE7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBSUE7QUFBQTtBQXZFQTtBQXdFQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./Framework/src/type/csmmap.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/type/csmrectf.ts\":\n/*!****************************************!*\\\n  !*** ./Framework/src/type/csmrectf.ts ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var csmRect = (function () {\\r\\n        function csmRect(x, y, w, h) {\\r\\n            this.x = x;\\r\\n            this.y = y;\\r\\n            this.width = w;\\r\\n            this.height = h;\\r\\n        }\\r\\n        csmRect.prototype.getCenterX = function () {\\r\\n            return this.x + 0.5 * this.width;\\r\\n        };\\r\\n        csmRect.prototype.getCenterY = function () {\\r\\n            return this.y + 0.5 * this.height;\\r\\n        };\\r\\n        csmRect.prototype.getRight = function () {\\r\\n            return this.x + this.width;\\r\\n        };\\r\\n        csmRect.prototype.getBottom = function () {\\r\\n            return this.y + this.height;\\r\\n        };\\r\\n        csmRect.prototype.setRect = function (r) {\\r\\n            this.x = r.x;\\r\\n            this.y = r.y;\\r\\n            this.width = r.width;\\r\\n            this.height = r.height;\\r\\n        };\\r\\n        csmRect.prototype.expand = function (w, h) {\\r\\n            this.x -= w;\\r\\n            this.y -= h;\\r\\n            this.width += w * 2.0;\\r\\n            this.height += h * 2.0;\\r\\n        };\\r\\n        return csmRect;\\r\\n    }());\\r\\n    Live2DCubismFramework.csmRect = csmRect;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL3R5cGUvY3NtcmVjdGYudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saXZlMmQvLi9GcmFtZXdvcmsvc3JjL3R5cGUvY3NtcmVjdGYudHM/M2M5MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodChjKSBMaXZlMkQgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IHRoZSBMaXZlMkQgT3BlbiBTb2Z0d2FyZSBsaWNlbnNlXG4gKiB0aGF0IGNhbiBiZSBmb3VuZCBhdCBodHRwczovL3d3dy5saXZlMmQuY29tL2V1bGEvbGl2ZTJkLW9wZW4tc29mdHdhcmUtbGljZW5zZS1hZ3JlZW1lbnRfZW4uaHRtbC5cbiAqL1xuXG5leHBvcnQgbmFtZXNwYWNlIExpdmUyREN1YmlzbUZyYW1ld29yayB7XG4gIC8qKlxuICAgKiDnn6nlvaLlvaLnirbvvIjluqfmqJnjg7vplbfjgZXjga9mbG9hdOWApO+8ieOCkuWumue+qeOBmeOCi+OCr+ODqeOCuVxuICAgKi9cbiAgZXhwb3J0IGNsYXNzIGNzbVJlY3Qge1xuICAgIC8qKlxuICAgICAqIOOCs+ODs+OCueODiOODqeOCr+OCv1xuICAgICAqIEBwYXJhbSB4IOW3puerr1jluqfmqJlcbiAgICAgKiBAcGFyYW0geSDkuIrnq69Z5bqn5qiZXG4gICAgICogQHBhcmFtIHcg5bmFXG4gICAgICogQHBhcmFtIGgg6auY44GVXG4gICAgICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKHg/OiBudW1iZXIsIHk/OiBudW1iZXIsIHc/OiBudW1iZXIsIGg/OiBudW1iZXIpIHtcbiAgICAgIHRoaXMueCA9IHg7XG4gICAgICB0aGlzLnkgPSB5O1xuICAgICAgdGhpcy53aWR0aCA9IHc7XG4gICAgICB0aGlzLmhlaWdodCA9IGg7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog55+p5b2i5Lit5aSu44GuWOW6p+aomeOCkuWPluW+l+OBmeOCi1xuICAgICAqL1xuICAgIHB1YmxpYyBnZXRDZW50ZXJYKCk6IG51bWJlciB7XG4gICAgICByZXR1cm4gdGhpcy54ICsgMC41ICogdGhpcy53aWR0aDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDnn6nlvaLkuK3lpK7jga5Z5bqn5qiZ44KS5Y+W5b6X44GZ44KLXG4gICAgICovXG4gICAgcHVibGljIGdldENlbnRlclkoKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiB0aGlzLnkgKyAwLjUgKiB0aGlzLmhlaWdodDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlj7PlgbTjga5Y5bqn5qiZ44KS5Y+W5b6X44GZ44KLXG4gICAgICovXG4gICAgcHVibGljIGdldFJpZ2h0KCk6IG51bWJlciB7XG4gICAgICByZXR1cm4gdGhpcy54ICsgdGhpcy53aWR0aDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDkuIvnq6/jga5Z5bqn5qiZ44KS5Y+W5b6X44GZ44KLXG4gICAgICovXG4gICAgcHVibGljIGdldEJvdHRvbSgpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMueSArIHRoaXMuaGVpZ2h0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOefqeW9ouOBq+WApOOCkuOCu+ODg+ODiOOBmeOCi1xuICAgICAqIEBwYXJhbSByIOefqeW9ouOBruOCpOODs+OCueOCv+ODs+OCuVxuICAgICAqL1xuICAgIHB1YmxpYyBzZXRSZWN0KHI6IGNzbVJlY3QpOiB2b2lkIHtcbiAgICAgIHRoaXMueCA9IHIueDtcbiAgICAgIHRoaXMueSA9IHIueTtcbiAgICAgIHRoaXMud2lkdGggPSByLndpZHRoO1xuICAgICAgdGhpcy5oZWlnaHQgPSByLmhlaWdodDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDnn6nlvaLkuK3lpK7jgpLou7jjgavjgZfjgabnuKbmqKrjgpLmi6HnuK7jgZnjgotcbiAgICAgKiBAcGFyYW0gdyDluYXmlrnlkJHjgavmi6HnuK7jgZnjgovph49cbiAgICAgKiBAcGFyYW0gaCDpq5jjgZXmlrnlkJHjgavmi6HnuK7jgZnjgovph49cbiAgICAgKi9cbiAgICBwdWJsaWMgZXhwYW5kKHc6IG51bWJlciwgaDogbnVtYmVyKSB7XG4gICAgICB0aGlzLnggLT0gdztcbiAgICAgIHRoaXMueSAtPSBoO1xuICAgICAgdGhpcy53aWR0aCArPSB3ICogMi4wO1xuICAgICAgdGhpcy5oZWlnaHQgKz0gaCAqIDIuMDtcbiAgICB9XG5cbiAgICBwdWJsaWMgeDogbnVtYmVyOyAvLyDlt6bnq69Y5bqn5qiZXG4gICAgcHVibGljIHk6IG51bWJlcjsgLy8g5LiK56uvWeW6p+aomVxuICAgIHB1YmxpYyB3aWR0aDogbnVtYmVyOyAvLyDluYVcbiAgICBwdWJsaWMgaGVpZ2h0OiBudW1iZXI7IC8vIOmrmOOBlVxuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7O0FBT0E7QUFBQTtBQUlBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFBQTtBQXRFQTtBQXVFQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./Framework/src/type/csmrectf.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/type/csmstring.ts\":\n/*!*****************************************!*\\\n  !*** ./Framework/src/type/csmstring.ts ***!\n  \\*****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var csmString = (function () {\\r\\n        function csmString(s) {\\r\\n            this.s = s;\\r\\n        }\\r\\n        csmString.prototype.append = function (c, length) {\\r\\n            this.s += length !== undefined ? c.substr(0, length) : c;\\r\\n            return this;\\r\\n        };\\r\\n        csmString.prototype.expansion = function (length, v) {\\r\\n            for (var i = 0; i < length; i++) {\\r\\n                this.append(v);\\r\\n            }\\r\\n            return this;\\r\\n        };\\r\\n        csmString.prototype.getBytes = function () {\\r\\n            return encodeURIComponent(this.s).replace(/%../g, 'x').length;\\r\\n        };\\r\\n        csmString.prototype.getLength = function () {\\r\\n            return this.s.length;\\r\\n        };\\r\\n        csmString.prototype.isLess = function (s) {\\r\\n            return this.s < s.s;\\r\\n        };\\r\\n        csmString.prototype.isGreat = function (s) {\\r\\n            return this.s > s.s;\\r\\n        };\\r\\n        csmString.prototype.isEqual = function (s) {\\r\\n            return this.s == s;\\r\\n        };\\r\\n        csmString.prototype.isEmpty = function () {\\r\\n            return this.s.length == 0;\\r\\n        };\\r\\n        return csmString;\\r\\n    }());\\r\\n    Live2DCubismFramework.csmString = csmString;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9GcmFtZXdvcmsvc3JjL3R5cGUvY3Ntc3RyaW5nLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vRnJhbWV3b3JrL3NyYy90eXBlL2NzbXN0cmluZy50cz9iNTllIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmV4cG9ydCBuYW1lc3BhY2UgTGl2ZTJEQ3ViaXNtRnJhbWV3b3JrIHtcbiAgLyoqXG4gICAqIOaWh+Wtl+WIl+OCr+ODqeOCueOAglxuICAgKi9cbiAgZXhwb3J0IGNsYXNzIGNzbVN0cmluZyB7XG4gICAgLyoqXG4gICAgICog5paH5a2X5YiX44KS5b6M5pa544Gr6L+95Yqg44GZ44KLXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYyDov73liqDjgZnjgovmloflrZfliJdcbiAgICAgKiBAcmV0dXJuIOabtOaWsOOBleOCjOOBn+aWh+Wtl+WIl1xuICAgICAqL1xuICAgIHB1YmxpYyBhcHBlbmQoYzogc3RyaW5nLCBsZW5ndGg/OiBudW1iZXIpOiBjc21TdHJpbmcge1xuICAgICAgdGhpcy5zICs9IGxlbmd0aCAhPT0gdW5kZWZpbmVkID8gYy5zdWJzdHIoMCwgbGVuZ3RoKSA6IGM7XG5cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOaWh+Wtl+OCteOCpOOCuuOCkuaLoeW8teOBl+OBpuaWh+Wtl+OCkuWfi+OCgeOCi1xuICAgICAqIEBwYXJhbSBsZW5ndGggICAg5ouh5by144GZ44KL5paH5a2X5pWwXG4gICAgICogQHBhcmFtIHYgICAgICAgICDln4vjgoHjgovmloflrZdcbiAgICAgKiBAcmV0dXJuIOabtOaWsOOBleOCjOOBn+aWh+Wtl+WIl1xuICAgICAqL1xuICAgIHB1YmxpYyBleHBhbnNpb24obGVuZ3RoOiBudW1iZXIsIHY6IHN0cmluZyk6IGNzbVN0cmluZyB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRoaXMuYXBwZW5kKHYpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDmloflrZfliJfjga7plbfjgZXjgpLjg5DjgqTjg4jmlbDjgaflj5blvpfjgZnjgotcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0Qnl0ZXMoKTogbnVtYmVyIHtcbiAgICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQodGhpcy5zKS5yZXBsYWNlKC8lLi4vZywgJ3gnKS5sZW5ndGg7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5paH5a2X5YiX44Gu6ZW344GV44KS6L+U44GZXG4gICAgICovXG4gICAgcHVibGljIGdldExlbmd0aCgpOiBudW1iZXIge1xuICAgICAgcmV0dXJuIHRoaXMucy5sZW5ndGg7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5paH5a2X5YiX5q+U6LyDIDxcbiAgICAgKiBAcGFyYW0gcyDmr5TovIPjgZnjgovmloflrZfliJdcbiAgICAgKiBAcmV0dXJuIHRydWU6ICAgIOavlOi8g+OBmeOCi+aWh+Wtl+WIl+OCiOOCiuWwj+OBleOBhFxuICAgICAqIEByZXR1cm4gZmFsc2U6ICAg5q+U6LyD44GZ44KL5paH5a2X5YiX44KI44KK5aSn44GN44GEXG4gICAgICovXG4gICAgcHVibGljIGlzTGVzcyhzOiBjc21TdHJpbmcpOiBib29sZWFuIHtcbiAgICAgIHJldHVybiB0aGlzLnMgPCBzLnM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5paH5a2X5YiX5q+U6LyDID5cbiAgICAgKiBAcGFyYW0gcyDmr5TovIPjgZnjgovmloflrZfliJdcbiAgICAgKiBAcmV0dXJuIHRydWU6ICAgIOavlOi8g+OBmeOCi+aWh+Wtl+WIl+OCiOOCiuWkp+OBjeOBhFxuICAgICAqIEByZXR1cm4gZmFsc2U6ICAg5q+U6LyD44GZ44KL5paH5a2X5YiX44KI44KK5bCP44GV44GEXG4gICAgICovXG4gICAgcHVibGljIGlzR3JlYXQoczogY3NtU3RyaW5nKTogYm9vbGVhbiB7XG4gICAgICByZXR1cm4gdGhpcy5zID4gcy5zO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOaWh+Wtl+WIl+avlOi8gyA9PVxuICAgICAqIEBwYXJhbSBzIOavlOi8g+OBmeOCi+aWh+Wtl+WIl1xuICAgICAqIEByZXR1cm4gdHJ1ZTogICAg5q+U6LyD44GZ44KL5paH5a2X5YiX44Go562J44GX44GEXG4gICAgICogQHJldHVybiBmYWxzZTogICDmr5TovIPjgZnjgovmloflrZfliJfjgajnlbDjgarjgotcbiAgICAgKi9cbiAgICBwdWJsaWMgaXNFcXVhbChzOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICAgIHJldHVybiB0aGlzLnMgPT0gcztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDmloflrZfliJfjgYznqbrjgYvjganjgYbjgYtcbiAgICAgKiBAcmV0dXJuIHRydWU6IOepuuOBruaWh+Wtl+WIl1xuICAgICAqIEByZXR1cm4gZmFsc2U6IOWApOOBjOioreWumuOBleOCjOOBpuOBhOOCi1xuICAgICAqL1xuICAgIHB1YmxpYyBpc0VtcHR5KCk6IGJvb2xlYW4ge1xuICAgICAgcmV0dXJuIHRoaXMucy5sZW5ndGggPT0gMDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlvJXmlbDku5jjgY3jgrPjg7Pjgrnjg4jjg6njgq/jgr9cbiAgICAgKi9cbiAgICBwdWJsaWMgY29uc3RydWN0b3Ioczogc3RyaW5nKSB7XG4gICAgICB0aGlzLnMgPSBzO1xuICAgIH1cblxuICAgIHM6IHN0cmluZztcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOztBQU9BO0FBQUE7QUFJQTtBQW1GQTtBQUNBO0FBQ0E7QUE5RUE7QUFDQTtBQUVBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFVQTtBQUFBO0FBeEZBO0FBeUZBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./Framework/src/type/csmstring.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/type/csmvector.ts\":\n/*!*****************************************!*\\\n  !*** ./Framework/src/type/csmvector.ts ***!\n  \\*****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var csmVector = (function () {\\r\\n        function csmVector(initialCapacity) {\\r\\n            if (initialCapacity === void 0) { initialCapacity = 0; }\\r\\n            if (initialCapacity < 1) {\\r\\n                this._ptr = [];\\r\\n                this._capacity = 0;\\r\\n                this._size = 0;\\r\\n            }\\r\\n            else {\\r\\n                this._ptr = new Array(initialCapacity);\\r\\n                this._capacity = initialCapacity;\\r\\n                this._size = 0;\\r\\n            }\\r\\n        }\\r\\n        csmVector.prototype.at = function (index) {\\r\\n            return this._ptr[index];\\r\\n        };\\r\\n        csmVector.prototype.set = function (index, value) {\\r\\n            this._ptr[index] = value;\\r\\n        };\\r\\n        csmVector.prototype.get = function (offset) {\\r\\n            if (offset === void 0) { offset = 0; }\\r\\n            var ret = new Array();\\r\\n            for (var i = offset; i < this._size; i++) {\\r\\n                ret.push(this._ptr[i]);\\r\\n            }\\r\\n            return ret;\\r\\n        };\\r\\n        csmVector.prototype.pushBack = function (value) {\\r\\n            if (this._size >= this._capacity) {\\r\\n                this.prepareCapacity(this._capacity == 0 ? csmVector.s_defaultSize : this._capacity * 2);\\r\\n            }\\r\\n            this._ptr[this._size++] = value;\\r\\n        };\\r\\n        csmVector.prototype.clear = function () {\\r\\n            this._ptr.length = 0;\\r\\n            this._size = 0;\\r\\n        };\\r\\n        csmVector.prototype.getSize = function () {\\r\\n            return this._size;\\r\\n        };\\r\\n        csmVector.prototype.assign = function (newSize, value) {\\r\\n            var curSize = this._size;\\r\\n            if (curSize < newSize) {\\r\\n                this.prepareCapacity(newSize);\\r\\n            }\\r\\n            for (var i = 0; i < newSize; i++) {\\r\\n                this._ptr[i] = value;\\r\\n            }\\r\\n            this._size = newSize;\\r\\n        };\\r\\n        csmVector.prototype.resize = function (newSize, value) {\\r\\n            if (value === void 0) { value = null; }\\r\\n            this.updateSize(newSize, value, true);\\r\\n        };\\r\\n        csmVector.prototype.updateSize = function (newSize, value, callPlacementNew) {\\r\\n            if (value === void 0) { value = null; }\\r\\n            if (callPlacementNew === void 0) { callPlacementNew = true; }\\r\\n            var curSize = this._size;\\r\\n            if (curSize < newSize) {\\r\\n                this.prepareCapacity(newSize);\\r\\n                if (callPlacementNew) {\\r\\n                    for (var i = this._size; i < newSize; i++) {\\r\\n                        if (typeof value == 'function') {\\r\\n                            this._ptr[i] = JSON.parse(JSON.stringify(new value()));\\r\\n                        }\\r\\n                        else {\\r\\n                            this._ptr[i] = value;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                else {\\r\\n                    for (var i = this._size; i < newSize; i++) {\\r\\n                        this._ptr[i] = value;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                var sub = this._size - newSize;\\r\\n                this._ptr.splice(this._size - sub, sub);\\r\\n            }\\r\\n            this._size = newSize;\\r\\n        };\\r\\n        csmVector.prototype.insert = function (position, begin, end) {\\r\\n            var dstSi = position._index;\\r\\n            var srcSi = begin._index;\\r\\n            var srcEi = end._index;\\r\\n            var addCount = srcEi - srcSi;\\r\\n            this.prepareCapacity(this._size + addCount);\\r\\n            var addSize = this._size - dstSi;\\r\\n            if (addSize > 0) {\\r\\n                for (var i = 0; i < addSize; i++) {\\r\\n                    this._ptr.splice(dstSi + i, 0, null);\\r\\n                }\\r\\n            }\\r\\n            for (var i = srcSi; i < srcEi; i++, dstSi++) {\\r\\n                this._ptr[dstSi] = begin._vector._ptr[i];\\r\\n            }\\r\\n            this._size = this._size + addCount;\\r\\n        };\\r\\n        csmVector.prototype.remove = function (index) {\\r\\n            if (index < 0 || this._size <= index) {\\r\\n                return false;\\r\\n            }\\r\\n            this._ptr.splice(index, 1);\\r\\n            --this._size;\\r\\n            return true;\\r\\n        };\\r\\n        csmVector.prototype.erase = function (ite) {\\r\\n            var index = ite._index;\\r\\n            if (index < 0 || this._size <= index) {\\r\\n                return ite;\\r\\n            }\\r\\n            this._ptr.splice(index, 1);\\r\\n            --this._size;\\r\\n            var ite2 = new iterator(this, index);\\r\\n            return ite2;\\r\\n        };\\r\\n        csmVector.prototype.prepareCapacity = function (newSize) {\\r\\n            if (newSize > this._capacity) {\\r\\n                if (this._capacity == 0) {\\r\\n                    this._ptr = new Array(newSize);\\r\\n                    this._capacity = newSize;\\r\\n                }\\r\\n                else {\\r\\n                    this._ptr.length = newSize;\\r\\n                    this._capacity = newSize;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        csmVector.prototype.begin = function () {\\r\\n            var ite = this._size == 0 ? this.end() : new iterator(this, 0);\\r\\n            return ite;\\r\\n        };\\r\\n        csmVector.prototype.end = function () {\\r\\n            var ite = new iterator(this, this._size);\\r\\n            return ite;\\r\\n        };\\r\\n        csmVector.prototype.getOffset = function (offset) {\\r\\n            var newVector = new csmVector();\\r\\n            newVector._ptr = this.get(offset);\\r\\n            newVector._size = this.get(offset).length;\\r\\n            newVector._capacity = this.get(offset).length;\\r\\n            return newVector;\\r\\n        };\\r\\n        csmVector.s_defaultSize = 10;\\r\\n        return csmVector;\\r\\n    }());\\r\\n    Live2DCubismFramework.csmVector = csmVector;\\r\\n    var iterator = (function () {\\r\\n        function iterator(v, index) {\\r\\n            this._vector = v != undefined ? v : null;\\r\\n            this._index = index != undefined ? index : 0;\\r\\n        }\\r\\n        iterator.prototype.set = function (ite) {\\r\\n            this._index = ite._index;\\r\\n            this._vector = ite._vector;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.preIncrement = function () {\\r\\n            ++this._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.preDecrement = function () {\\r\\n            --this._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.increment = function () {\\r\\n            var iteold = new iterator(this._vector, this._index++);\\r\\n            this._vector = iteold._vector;\\r\\n            this._index = iteold._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.decrement = function () {\\r\\n            var iteold = new iterator(this._vector, this._index--);\\r\\n            this._vector = iteold._vector;\\r\\n            this._index = iteold._index;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.ptr = function () {\\r\\n            return this._vector._ptr[this._index];\\r\\n        };\\r\\n        iterator.prototype.substitution = function (ite) {\\r\\n            this._index = ite._index;\\r\\n            this._vector = ite._vector;\\r\\n            return this;\\r\\n        };\\r\\n        iterator.prototype.notEqual = function (ite) {\\r\\n            return this._index != ite._index || this._vector != ite._vector;\\r\\n        };\\r\\n        return iterator;\\r\\n    }());\\r\\n    Live2DCubismFramework.iterator = iterator;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/type/csmvector.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/utils/cubismdebug.ts\":\n/*!********************************************!*\\\n  !*** ./Framework/src/utils/cubismdebug.ts ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar cubismframeworkconfig_1 = __webpack_require__(/*! ../cubismframeworkconfig */ \\\"./Framework/src/cubismframeworkconfig.ts\\\");\\r\\nexports.CubismLogPrint = function (level, fmt, args) {\\r\\n    Live2DCubismFramework.CubismDebug.print(level, '[CSM]' + fmt, args);\\r\\n};\\r\\nexports.CubismLogPrintIn = function (level, fmt, args) {\\r\\n    exports.CubismLogPrint(level, fmt + '\\\\n', args);\\r\\n};\\r\\nexports.CSM_ASSERT = function (expr) {\\r\\n    console.assert(expr);\\r\\n};\\r\\nif (cubismframeworkconfig_1.CSM_LOG_LEVEL <= cubismframeworkconfig_1.CSM_LOG_LEVEL_VERBOSE) {\\r\\n    exports.CubismLogVerbose = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Verbose, '[V]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogDebug = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Debug, '[D]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogInfo = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Info, '[I]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogWarning = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Warning, '[W]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogError = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Error, '[E]' + fmt, args);\\r\\n    };\\r\\n}\\r\\nelse if (cubismframeworkconfig_1.CSM_LOG_LEVEL == cubismframeworkconfig_1.CSM_LOG_LEVEL_DEBUG) {\\r\\n    exports.CubismLogDebug = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Debug, '[D]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogInfo = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Info, '[I]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogWarning = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Warning, '[W]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogError = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Error, '[E]' + fmt, args);\\r\\n    };\\r\\n}\\r\\nelse if (cubismframeworkconfig_1.CSM_LOG_LEVEL == cubismframeworkconfig_1.CSM_LOG_LEVEL_INFO) {\\r\\n    exports.CubismLogInfo = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Info, '[I]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogWarning = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Warning, '[W]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogError = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Error, '[E]' + fmt, args);\\r\\n    };\\r\\n}\\r\\nelse if (cubismframeworkconfig_1.CSM_LOG_LEVEL == cubismframeworkconfig_1.CSM_LOG_LEVEL_WARNING) {\\r\\n    exports.CubismLogWarning = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Warning, '[W]' + fmt, args);\\r\\n    };\\r\\n    exports.CubismLogError = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Error, '[E]' + fmt, args);\\r\\n    };\\r\\n}\\r\\nelse if (cubismframeworkconfig_1.CSM_LOG_LEVEL == cubismframeworkconfig_1.CSM_LOG_LEVEL_ERROR) {\\r\\n    exports.CubismLogError = function (fmt) {\\r\\n        var args = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            args[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        exports.CubismLogPrintIn(live2dcubismframework_1.LogLevel.LogLevel_Error, '[E]' + fmt, args);\\r\\n    };\\r\\n}\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CubismDebug = (function () {\\r\\n        function CubismDebug() {\\r\\n        }\\r\\n        CubismDebug.print = function (logLevel, format, args) {\\r\\n            if (logLevel < live2dcubismframework_1.Live2DCubismFramework.CubismFramework.getLoggingLevel()) {\\r\\n                return;\\r\\n            }\\r\\n            var logPrint = live2dcubismframework_1.Live2DCubismFramework.CubismFramework.coreLogFunction;\\r\\n            if (!logPrint)\\r\\n                return;\\r\\n            var buffer = format.replace(/\\\\{(\\\\d+)\\\\}/g, function (m, k) {\\r\\n                return args[k];\\r\\n            });\\r\\n            logPrint(buffer);\\r\\n        };\\r\\n        CubismDebug.dumpBytes = function (logLevel, data, length) {\\r\\n            for (var i = 0; i < length; i++) {\\r\\n                if (i % 16 == 0 && i > 0)\\r\\n                    this.print(logLevel, '\\\\n');\\r\\n                else if (i % 8 == 0 && i > 0)\\r\\n                    this.print(logLevel, '  ');\\r\\n                this.print(logLevel, '{0} ', [data[i] & 0xff]);\\r\\n            }\\r\\n            this.print(logLevel, '\\\\n');\\r\\n        };\\r\\n        return CubismDebug;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismDebug = CubismDebug;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/utils/cubismdebug.ts\\n\");\n\n/***/ }),\n\n/***/ \"./Framework/src/utils/cubismjson.ts\":\n/*!*******************************************!*\\\n  !*** ./Framework/src/utils/cubismjson.ts ***!\n  \\*******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar csmstring_1 = __webpack_require__(/*! ../type/csmstring */ \\\"./Framework/src/type/csmstring.ts\\\");\\r\\nvar csmmap_1 = __webpack_require__(/*! ../type/csmmap */ \\\"./Framework/src/type/csmmap.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ./cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar csmMap = csmmap_1.Live2DCubismFramework.csmMap;\\r\\nvar csmString = csmstring_1.Live2DCubismFramework.csmString;\\r\\nvar Live2DCubismFramework;\\r\\n(function (Live2DCubismFramework) {\\r\\n    var CSM_JSON_ERROR_TYPE_MISMATCH = 'Error: type mismatch';\\r\\n    var CSM_JSON_ERROR_INDEX_OF_BOUNDS = 'Error: index out of bounds';\\r\\n    var Value = (function () {\\r\\n        function Value() {\\r\\n        }\\r\\n        Value.prototype.getRawString = function (defaultValue, indent) {\\r\\n            return this.getString(defaultValue, indent);\\r\\n        };\\r\\n        Value.prototype.toInt = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = 0; }\\r\\n            return defaultValue;\\r\\n        };\\r\\n        Value.prototype.toFloat = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = 0; }\\r\\n            return defaultValue;\\r\\n        };\\r\\n        Value.prototype.toBoolean = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = false; }\\r\\n            return defaultValue;\\r\\n        };\\r\\n        Value.prototype.getSize = function () {\\r\\n            return 0;\\r\\n        };\\r\\n        Value.prototype.getArray = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = null; }\\r\\n            return defaultValue;\\r\\n        };\\r\\n        Value.prototype.getVector = function (defaultValue) {\\r\\n            return defaultValue;\\r\\n        };\\r\\n        Value.prototype.getMap = function (defaultValue) {\\r\\n            return defaultValue;\\r\\n        };\\r\\n        Value.prototype.getValueByIndex = function (index) {\\r\\n            return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\\r\\n        };\\r\\n        Value.prototype.getValueByString = function (s) {\\r\\n            return Value.nullValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\\r\\n        };\\r\\n        Value.prototype.getKeys = function () {\\r\\n            return Value.s_dummyKeys;\\r\\n        };\\r\\n        Value.prototype.isError = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.isNull = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.isBool = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.isFloat = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.isString = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.isArray = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.isMap = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.equals = function (value) {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.isStatic = function () {\\r\\n            return false;\\r\\n        };\\r\\n        Value.prototype.setErrorNotForClientCall = function (errorStr) {\\r\\n            return JsonError.errorValue;\\r\\n        };\\r\\n        Value.staticInitializeNotForClientCall = function () {\\r\\n            JsonBoolean.trueValue = new JsonBoolean(true);\\r\\n            JsonBoolean.falseValue = new JsonBoolean(false);\\r\\n            JsonError.errorValue = new JsonError('ERROR', true);\\r\\n            this.nullValue = new JsonNullvalue();\\r\\n            Value.s_dummyKeys = new csmVector();\\r\\n        };\\r\\n        Value.staticReleaseNotForClientCall = function () {\\r\\n            JsonBoolean.trueValue = null;\\r\\n            JsonBoolean.falseValue = null;\\r\\n            JsonError.errorValue = null;\\r\\n            Value.nullValue = null;\\r\\n            Value.s_dummyKeys = null;\\r\\n            JsonBoolean.trueValue = null;\\r\\n            JsonBoolean.falseValue = null;\\r\\n            JsonError.errorValue = null;\\r\\n            Value.nullValue = null;\\r\\n            Value.s_dummyKeys = null;\\r\\n        };\\r\\n        return Value;\\r\\n    }());\\r\\n    Live2DCubismFramework.Value = Value;\\r\\n    var CubismJson = (function () {\\r\\n        function CubismJson(buffer, length) {\\r\\n            this._error = null;\\r\\n            this._lineCount = 0;\\r\\n            this._root = null;\\r\\n            if (buffer != undefined) {\\r\\n                this.parseBytes(buffer, length);\\r\\n            }\\r\\n        }\\r\\n        CubismJson.create = function (buffer, size) {\\r\\n            var json = new CubismJson();\\r\\n            var succeeded = json.parseBytes(buffer, size);\\r\\n            if (!succeeded) {\\r\\n                CubismJson.delete(json);\\r\\n                return null;\\r\\n            }\\r\\n            else {\\r\\n                return json;\\r\\n            }\\r\\n        };\\r\\n        CubismJson.delete = function (instance) {\\r\\n            instance = null;\\r\\n        };\\r\\n        CubismJson.prototype.getRoot = function () {\\r\\n            return this._root;\\r\\n        };\\r\\n        CubismJson.prototype.arrayBufferToString = function (buffer) {\\r\\n            var uint8Array = new Uint8Array(buffer);\\r\\n            var str = '';\\r\\n            for (var i = 0, len = uint8Array.length; i < len; ++i) {\\r\\n                str += '%' + this.pad(uint8Array[i].toString(16));\\r\\n            }\\r\\n            str = decodeURIComponent(str);\\r\\n            return str;\\r\\n        };\\r\\n        CubismJson.prototype.pad = function (n) {\\r\\n            return n.length < 2 ? '0' + n : n;\\r\\n        };\\r\\n        CubismJson.prototype.parseBytes = function (buffer, size) {\\r\\n            var endPos = new Array(1);\\r\\n            var decodeBuffer = this.arrayBufferToString(buffer);\\r\\n            this._root = this.parseValue(decodeBuffer, size, 0, endPos);\\r\\n            if (this._error) {\\r\\n                var strbuf = '\\\\0';\\r\\n                strbuf = 'Json parse error : @line ' + (this._lineCount + 1) + '\\\\n';\\r\\n                this._root = new JsonString(strbuf);\\r\\n                cubismdebug_1.CubismLogInfo('{0}', this._root.getRawString());\\r\\n                return false;\\r\\n            }\\r\\n            else if (this._root == null) {\\r\\n                this._root = new JsonError(new csmString(this._error), false);\\r\\n                return false;\\r\\n            }\\r\\n            return true;\\r\\n        };\\r\\n        CubismJson.prototype.getParseError = function () {\\r\\n            return this._error;\\r\\n        };\\r\\n        CubismJson.prototype.checkEndOfFile = function () {\\r\\n            return this._root.getArray()[1].equals('EOF');\\r\\n        };\\r\\n        CubismJson.prototype.parseValue = function (buffer, length, begin, outEndPos) {\\r\\n            if (this._error)\\r\\n                return null;\\r\\n            var o = null;\\r\\n            var i = begin;\\r\\n            var f;\\r\\n            for (; i < length; i++) {\\r\\n                var c = buffer[i];\\r\\n                switch (c) {\\r\\n                    case '-':\\r\\n                    case '.':\\r\\n                    case '0':\\r\\n                    case '1':\\r\\n                    case '2':\\r\\n                    case '3':\\r\\n                    case '4':\\r\\n                    case '5':\\r\\n                    case '6':\\r\\n                    case '7':\\r\\n                    case '8':\\r\\n                    case '9': {\\r\\n                        var afterString = new Array(1);\\r\\n                        f = live2dcubismframework_1.strtod(buffer.slice(i), afterString);\\r\\n                        outEndPos[0] = buffer.indexOf(afterString[0]);\\r\\n                        return new JsonFloat(f);\\r\\n                    }\\r\\n                    case '\\\"':\\r\\n                        return new JsonString(this.parseString(buffer, length, i + 1, outEndPos));\\r\\n                    case '[':\\r\\n                        o = this.parseArray(buffer, length, i + 1, outEndPos);\\r\\n                        return o;\\r\\n                    case '{':\\r\\n                        o = this.parseObject(buffer, length, i + 1, outEndPos);\\r\\n                        return o;\\r\\n                    case 'n':\\r\\n                        if (i + 3 < length) {\\r\\n                            o = new JsonNullvalue();\\r\\n                            outEndPos[0] = i + 4;\\r\\n                        }\\r\\n                        else {\\r\\n                            this._error = 'parse null';\\r\\n                        }\\r\\n                        return o;\\r\\n                    case 't':\\r\\n                        if (i + 3 < length) {\\r\\n                            o = JsonBoolean.trueValue;\\r\\n                            outEndPos[0] = i + 4;\\r\\n                        }\\r\\n                        else {\\r\\n                            this._error = 'parse true';\\r\\n                        }\\r\\n                        return o;\\r\\n                    case 'f':\\r\\n                        if (i + 4 < length) {\\r\\n                            o = JsonBoolean.falseValue;\\r\\n                            outEndPos[0] = i + 5;\\r\\n                        }\\r\\n                        else {\\r\\n                            this._error = \\\"illegal ',' position\\\";\\r\\n                        }\\r\\n                        return o;\\r\\n                    case ',':\\r\\n                        this._error = \\\"illegal ',' position\\\";\\r\\n                        return null;\\r\\n                    case ']':\\r\\n                        outEndPos[0] = i;\\r\\n                        return null;\\r\\n                    case '\\\\n':\\r\\n                        this._lineCount++;\\r\\n                    case ' ':\\r\\n                    case '\\\\t':\\r\\n                    case '\\\\r':\\r\\n                    default:\\r\\n                        break;\\r\\n                }\\r\\n            }\\r\\n            this._error = 'illegal end of value';\\r\\n            return null;\\r\\n        };\\r\\n        CubismJson.prototype.parseString = function (string, length, begin, outEndPos) {\\r\\n            if (this._error)\\r\\n                return null;\\r\\n            var i = begin;\\r\\n            var c, c2;\\r\\n            var ret = new csmString('');\\r\\n            var bufStart = begin;\\r\\n            for (; i < length; i++) {\\r\\n                c = string[i];\\r\\n                switch (c) {\\r\\n                    case '\\\"': {\\r\\n                        outEndPos[0] = i + 1;\\r\\n                        ret.append(string.slice(bufStart), i - bufStart);\\r\\n                        return ret.s;\\r\\n                    }\\r\\n                    case '//': {\\r\\n                        i++;\\r\\n                        if (i - 1 > bufStart) {\\r\\n                            ret.append(string.slice(bufStart), i - bufStart);\\r\\n                        }\\r\\n                        bufStart = i + 1;\\r\\n                        if (i < length) {\\r\\n                            c2 = string[i];\\r\\n                            switch (c2) {\\r\\n                                case '\\\\\\\\':\\r\\n                                    ret.expansion(1, '\\\\\\\\');\\r\\n                                    break;\\r\\n                                case '\\\"':\\r\\n                                    ret.expansion(1, '\\\"');\\r\\n                                    break;\\r\\n                                case '/':\\r\\n                                    ret.expansion(1, '/');\\r\\n                                    break;\\r\\n                                case 'b':\\r\\n                                    ret.expansion(1, '\\\\b');\\r\\n                                    break;\\r\\n                                case 'f':\\r\\n                                    ret.expansion(1, '\\\\f');\\r\\n                                    break;\\r\\n                                case 'n':\\r\\n                                    ret.expansion(1, '\\\\n');\\r\\n                                    break;\\r\\n                                case 'r':\\r\\n                                    ret.expansion(1, '\\\\r');\\r\\n                                    break;\\r\\n                                case 't':\\r\\n                                    ret.expansion(1, '\\\\t');\\r\\n                                    break;\\r\\n                                case 'u':\\r\\n                                    this._error = 'parse string/unicord escape not supported';\\r\\n                                    break;\\r\\n                                default:\\r\\n                                    break;\\r\\n                            }\\r\\n                        }\\r\\n                        else {\\r\\n                            this._error = 'parse string/escape error';\\r\\n                        }\\r\\n                    }\\r\\n                    default: {\\r\\n                        break;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            this._error = 'parse string/illegal end';\\r\\n            return null;\\r\\n        };\\r\\n        CubismJson.prototype.parseObject = function (buffer, length, begin, outEndPos) {\\r\\n            if (this._error)\\r\\n                return null;\\r\\n            var ret = new JsonMap();\\r\\n            var key = '';\\r\\n            var i = begin;\\r\\n            var c = '';\\r\\n            var localRetEndPos2 = Array(1);\\r\\n            var ok = false;\\r\\n            for (; i < length; i++) {\\r\\n                FOR_LOOP: for (; i < length; i++) {\\r\\n                    c = buffer[i];\\r\\n                    switch (c) {\\r\\n                        case '\\\"':\\r\\n                            key = this.parseString(buffer, length, i + 1, localRetEndPos2);\\r\\n                            if (this._error) {\\r\\n                                return null;\\r\\n                            }\\r\\n                            i = localRetEndPos2[0];\\r\\n                            ok = true;\\r\\n                            break FOR_LOOP;\\r\\n                        case '}':\\r\\n                            outEndPos[0] = i + 1;\\r\\n                            return ret;\\r\\n                        case ':':\\r\\n                            this._error = \\\"illegal ':' position\\\";\\r\\n                            break;\\r\\n                        case '\\\\n':\\r\\n                            this._lineCount++;\\r\\n                        default:\\r\\n                            break;\\r\\n                    }\\r\\n                }\\r\\n                if (!ok) {\\r\\n                    this._error = 'key not found';\\r\\n                    return null;\\r\\n                }\\r\\n                ok = false;\\r\\n                FOR_LOOP2: for (; i < length; i++) {\\r\\n                    c = buffer[i];\\r\\n                    switch (c) {\\r\\n                        case ':':\\r\\n                            ok = true;\\r\\n                            i++;\\r\\n                            break FOR_LOOP2;\\r\\n                        case '}':\\r\\n                            this._error = \\\"illegal '}' position\\\";\\r\\n                            break;\\r\\n                        case '\\\\n':\\r\\n                            this._lineCount++;\\r\\n                        default:\\r\\n                            break;\\r\\n                    }\\r\\n                }\\r\\n                if (!ok) {\\r\\n                    this._error = \\\"':' not found\\\";\\r\\n                    return null;\\r\\n                }\\r\\n                var value = this.parseValue(buffer, length, i, localRetEndPos2);\\r\\n                if (this._error) {\\r\\n                    return null;\\r\\n                }\\r\\n                i = localRetEndPos2[0];\\r\\n                ret.put(key, value);\\r\\n                FOR_LOOP3: for (; i < length; i++) {\\r\\n                    c = buffer[i];\\r\\n                    switch (c) {\\r\\n                        case ',':\\r\\n                            break FOR_LOOP3;\\r\\n                        case '}':\\r\\n                            outEndPos[0] = i + 1;\\r\\n                            return ret;\\r\\n                        case '\\\\n':\\r\\n                            this._lineCount++;\\r\\n                        default:\\r\\n                            break;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            this._error = 'illegal end of perseObject';\\r\\n            return null;\\r\\n        };\\r\\n        CubismJson.prototype.parseArray = function (buffer, length, begin, outEndPos) {\\r\\n            if (this._error)\\r\\n                return null;\\r\\n            var ret = new JsonArray();\\r\\n            var i = begin;\\r\\n            var c;\\r\\n            var localRetEndpos2 = new Array(1);\\r\\n            for (; i < length; i++) {\\r\\n                var value = this.parseValue(buffer, length, i, localRetEndpos2);\\r\\n                if (this._error) {\\r\\n                    return null;\\r\\n                }\\r\\n                i = localRetEndpos2[0];\\r\\n                if (value) {\\r\\n                    ret.add(value);\\r\\n                }\\r\\n                FOR_LOOP: for (; i < length; i++) {\\r\\n                    c = buffer[i];\\r\\n                    switch (c) {\\r\\n                        case ',':\\r\\n                            break FOR_LOOP;\\r\\n                        case ']':\\r\\n                            outEndPos[0] = i + 1;\\r\\n                            return ret;\\r\\n                        case '\\\\n':\\r\\n                            ++this._lineCount;\\r\\n                        default:\\r\\n                            break;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            ret = void 0;\\r\\n            this._error = 'illegal end of parseObject';\\r\\n            return null;\\r\\n        };\\r\\n        return CubismJson;\\r\\n    }());\\r\\n    Live2DCubismFramework.CubismJson = CubismJson;\\r\\n    var JsonFloat = (function (_super) {\\r\\n        __extends(JsonFloat, _super);\\r\\n        function JsonFloat(v) {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._value = v;\\r\\n            return _this;\\r\\n        }\\r\\n        JsonFloat.prototype.isFloat = function () {\\r\\n            return true;\\r\\n        };\\r\\n        JsonFloat.prototype.getString = function (defaultValue, indent) {\\r\\n            var strbuf = '\\\\0';\\r\\n            this._value = parseFloat(strbuf);\\r\\n            this._stringBuffer = strbuf;\\r\\n            return this._stringBuffer;\\r\\n        };\\r\\n        JsonFloat.prototype.toInt = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = 0; }\\r\\n            return parseInt(this._value.toString());\\r\\n        };\\r\\n        JsonFloat.prototype.toFloat = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = 0.0; }\\r\\n            return this._value;\\r\\n        };\\r\\n        JsonFloat.prototype.equals = function (value) {\\r\\n            if ('number' === typeof value) {\\r\\n                if (Math.round(value)) {\\r\\n                    return false;\\r\\n                }\\r\\n                else {\\r\\n                    return value == this._value;\\r\\n                }\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        return JsonFloat;\\r\\n    }(Value));\\r\\n    Live2DCubismFramework.JsonFloat = JsonFloat;\\r\\n    var JsonBoolean = (function (_super) {\\r\\n        __extends(JsonBoolean, _super);\\r\\n        function JsonBoolean(v) {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._boolValue = v;\\r\\n            return _this;\\r\\n        }\\r\\n        JsonBoolean.prototype.isBool = function () {\\r\\n            return true;\\r\\n        };\\r\\n        JsonBoolean.prototype.toBoolean = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = false; }\\r\\n            return this._boolValue;\\r\\n        };\\r\\n        JsonBoolean.prototype.getString = function (defaultValue, indent) {\\r\\n            this._stringBuffer = this._boolValue ? 'true' : 'false';\\r\\n            return this._stringBuffer;\\r\\n        };\\r\\n        JsonBoolean.prototype.equals = function (value) {\\r\\n            if ('boolean' === typeof value) {\\r\\n                return value == this._boolValue;\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        JsonBoolean.prototype.isStatic = function () {\\r\\n            return true;\\r\\n        };\\r\\n        return JsonBoolean;\\r\\n    }(Value));\\r\\n    Live2DCubismFramework.JsonBoolean = JsonBoolean;\\r\\n    var JsonString = (function (_super) {\\r\\n        __extends(JsonString, _super);\\r\\n        function JsonString(s) {\\r\\n            var _this = _super.call(this) || this;\\r\\n            if ('string' === typeof s) {\\r\\n                _this._stringBuffer = s;\\r\\n            }\\r\\n            if (s instanceof csmString) {\\r\\n                _this._stringBuffer = s.s;\\r\\n            }\\r\\n            return _this;\\r\\n        }\\r\\n        JsonString.prototype.isString = function () {\\r\\n            return true;\\r\\n        };\\r\\n        JsonString.prototype.getString = function (defaultValue, indent) {\\r\\n            return this._stringBuffer;\\r\\n        };\\r\\n        JsonString.prototype.equals = function (value) {\\r\\n            if ('string' === typeof value) {\\r\\n                return this._stringBuffer == value;\\r\\n            }\\r\\n            if (value instanceof csmString) {\\r\\n                return this._stringBuffer == value.s;\\r\\n            }\\r\\n            return false;\\r\\n        };\\r\\n        return JsonString;\\r\\n    }(Value));\\r\\n    Live2DCubismFramework.JsonString = JsonString;\\r\\n    var JsonError = (function (_super) {\\r\\n        __extends(JsonError, _super);\\r\\n        function JsonError(s, isStatic) {\\r\\n            var _this = this;\\r\\n            if ('string' === typeof s) {\\r\\n                _this = _super.call(this, s) || this;\\r\\n            }\\r\\n            else {\\r\\n                _this = _super.call(this, s) || this;\\r\\n            }\\r\\n            _this._isStatic = isStatic;\\r\\n            return _this;\\r\\n        }\\r\\n        JsonError.prototype.isStatic = function () {\\r\\n            return this._isStatic;\\r\\n        };\\r\\n        JsonError.prototype.setErrorNotForClientCall = function (s) {\\r\\n            this._stringBuffer = s;\\r\\n            return this;\\r\\n        };\\r\\n        JsonError.prototype.isError = function () {\\r\\n            return true;\\r\\n        };\\r\\n        return JsonError;\\r\\n    }(JsonString));\\r\\n    Live2DCubismFramework.JsonError = JsonError;\\r\\n    var JsonNullvalue = (function (_super) {\\r\\n        __extends(JsonNullvalue, _super);\\r\\n        function JsonNullvalue() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._stringBuffer = 'NullValue';\\r\\n            return _this;\\r\\n        }\\r\\n        JsonNullvalue.prototype.isNull = function () {\\r\\n            return true;\\r\\n        };\\r\\n        JsonNullvalue.prototype.getString = function (defaultValue, indent) {\\r\\n            return this._stringBuffer;\\r\\n        };\\r\\n        JsonNullvalue.prototype.isStatic = function () {\\r\\n            return true;\\r\\n        };\\r\\n        return JsonNullvalue;\\r\\n    }(Value));\\r\\n    Live2DCubismFramework.JsonNullvalue = JsonNullvalue;\\r\\n    var JsonArray = (function (_super) {\\r\\n        __extends(JsonArray, _super);\\r\\n        function JsonArray() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._array = new csmVector();\\r\\n            return _this;\\r\\n        }\\r\\n        JsonArray.prototype.release = function () {\\r\\n            for (var ite = this._array.begin(); ite.notEqual(this._array.end()); ite.preIncrement()) {\\r\\n                var v = ite.ptr();\\r\\n                if (v && !v.isStatic()) {\\r\\n                    v = void 0;\\r\\n                    v = null;\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        JsonArray.prototype.isArray = function () {\\r\\n            return true;\\r\\n        };\\r\\n        JsonArray.prototype.getValueByIndex = function (index) {\\r\\n            if (index < 0 || this._array.getSize() <= index) {\\r\\n                return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_INDEX_OF_BOUNDS);\\r\\n            }\\r\\n            var v = this._array.at(index);\\r\\n            if (v == null) {\\r\\n                return Value.nullValue;\\r\\n            }\\r\\n            return v;\\r\\n        };\\r\\n        JsonArray.prototype.getValueByString = function (s) {\\r\\n            return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\\r\\n        };\\r\\n        JsonArray.prototype.getString = function (defaultValue, indent) {\\r\\n            var stringBuffer = indent + '[\\\\n';\\r\\n            for (var ite = this._array.begin(); ite.notEqual(this._array.end()); ite.increment()) {\\r\\n                var v = ite.ptr();\\r\\n                this._stringBuffer += indent + '' + v.getString(indent + ' ') + '\\\\n';\\r\\n            }\\r\\n            this._stringBuffer = stringBuffer + indent + ']\\\\n';\\r\\n            return this._stringBuffer;\\r\\n        };\\r\\n        JsonArray.prototype.add = function (v) {\\r\\n            this._array.pushBack(v);\\r\\n        };\\r\\n        JsonArray.prototype.getVector = function (defaultValue) {\\r\\n            if (defaultValue === void 0) { defaultValue = null; }\\r\\n            return this._array;\\r\\n        };\\r\\n        JsonArray.prototype.getSize = function () {\\r\\n            return this._array.getSize();\\r\\n        };\\r\\n        return JsonArray;\\r\\n    }(Value));\\r\\n    Live2DCubismFramework.JsonArray = JsonArray;\\r\\n    var JsonMap = (function (_super) {\\r\\n        __extends(JsonMap, _super);\\r\\n        function JsonMap() {\\r\\n            var _this = _super.call(this) || this;\\r\\n            _this._map = new csmMap();\\r\\n            return _this;\\r\\n        }\\r\\n        JsonMap.prototype.release = function () {\\r\\n            var ite = this._map.begin();\\r\\n            while (ite.notEqual(this._map.end())) {\\r\\n                var v = ite.ptr().second;\\r\\n                if (v && !v.isStatic()) {\\r\\n                    v = void 0;\\r\\n                    v = null;\\r\\n                }\\r\\n                ite.preIncrement();\\r\\n            }\\r\\n        };\\r\\n        JsonMap.prototype.isMap = function () {\\r\\n            return true;\\r\\n        };\\r\\n        JsonMap.prototype.getValueByString = function (s) {\\r\\n            if (s instanceof csmString) {\\r\\n                var ret = this._map.getValue(s.s);\\r\\n                if (ret == null) {\\r\\n                    return Value.nullValue;\\r\\n                }\\r\\n                return ret;\\r\\n            }\\r\\n            for (var iter = this._map.begin(); iter.notEqual(this._map.end()); iter.preIncrement()) {\\r\\n                if (iter.ptr().first == s) {\\r\\n                    if (iter.ptr().second == null) {\\r\\n                        return Value.nullValue;\\r\\n                    }\\r\\n                    return iter.ptr().second;\\r\\n                }\\r\\n            }\\r\\n            return Value.nullValue;\\r\\n        };\\r\\n        JsonMap.prototype.getValueByIndex = function (index) {\\r\\n            return Value.errorValue.setErrorNotForClientCall(CSM_JSON_ERROR_TYPE_MISMATCH);\\r\\n        };\\r\\n        JsonMap.prototype.getString = function (defaultValue, indent) {\\r\\n            this._stringBuffer = indent + '{\\\\n';\\r\\n            var ite = this._map.begin();\\r\\n            while (ite.notEqual(this._map.end())) {\\r\\n                var key = ite.ptr().first;\\r\\n                var v = ite.ptr().second;\\r\\n                this._stringBuffer +=\\r\\n                    indent + ' ' + key + ' : ' + v.getString(indent + '   ') + ' \\\\n';\\r\\n                ite.preIncrement();\\r\\n            }\\r\\n            this._stringBuffer += indent + '}\\\\n';\\r\\n            return this._stringBuffer;\\r\\n        };\\r\\n        JsonMap.prototype.getMap = function (defaultValue) {\\r\\n            return this._map;\\r\\n        };\\r\\n        JsonMap.prototype.put = function (key, v) {\\r\\n            this._map.setValue(key, v);\\r\\n        };\\r\\n        JsonMap.prototype.getKeys = function () {\\r\\n            if (!this._keys) {\\r\\n                this._keys = new csmVector();\\r\\n                var ite = this._map.begin();\\r\\n                while (ite.notEqual(this._map.end())) {\\r\\n                    var key = ite.ptr().first;\\r\\n                    this._keys.pushBack(key);\\r\\n                    ite.preIncrement();\\r\\n                }\\r\\n            }\\r\\n            return this._keys;\\r\\n        };\\r\\n        JsonMap.prototype.getSize = function () {\\r\\n            return this._keys.getSize();\\r\\n        };\\r\\n        return JsonMap;\\r\\n    }(Value));\\r\\n    Live2DCubismFramework.JsonMap = JsonMap;\\r\\n})(Live2DCubismFramework = exports.Live2DCubismFramework || (exports.Live2DCubismFramework = {}));\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./Framework/src/utils/cubismjson.ts\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/css-loader/dist/cjs.js!./src/asset/index.css\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/css-loader/dist/cjs.js!./src/asset/index.css ***!\n  \\*******************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \\\"./node_modules/css-loader/dist/runtime/api.js\\\");\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\\n// Imports\\n\\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\\n// Module\\n___CSS_LOADER_EXPORT___.push([module.i, \\\"@font-face {\\\\r\\\\n    font-family: 'iconfont';  /* project id 1168737 */\\\\r\\\\n    src: url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.eot');\\\\r\\\\n    src: url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.eot?#iefix') format('embedded-opentype'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.woff2') format('woff2'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.woff') format('woff'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.ttf') format('truetype'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.svg#iconfont') format('svg');\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n.iconfont{\\\\r\\\\n    font-family:\\\\\\\"iconfont\\\\\\\" !important;\\\\r\\\\n    font-size:16px;font-style:normal;\\\\r\\\\n    -webkit-font-smoothing: antialiased;\\\\r\\\\n    -webkit-text-stroke-width: 0.2px;\\\\r\\\\n    -moz-osx-font-smoothing: grayscale;\\\\r\\\\n    cursor: pointer;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n\\\", \\\"\\\",{\\\"version\\\":3,\\\"sources\\\":[\\\"webpack://src/asset/index.css\\\"],\\\"names\\\":[],\\\"mappings\\\":\\\"AAAA;IACI,uBAAuB,GAAG,uBAAuB;IACjD,yDAAyD;IACzD;;;;+EAI2E;EAC7E;;AAEF;IACI,iCAAiC;IACjC,cAAc,CAAC,iBAAiB;IAChC,mCAAmC;IACnC,gCAAgC;IAChC,kCAAkC;IAClC,eAAe;AACnB\\\",\\\"sourcesContent\\\":[\\\"@font-face {\\\\r\\\\n    font-family: 'iconfont';  /* project id 1168737 */\\\\r\\\\n    src: url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.eot');\\\\r\\\\n    src: url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.eot?#iefix') format('embedded-opentype'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.woff2') format('woff2'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.woff') format('woff'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.ttf') format('truetype'),\\\\r\\\\n    url('//at.alicdn.com/t/font_1168737_j6ahlsx1dk.svg#iconfont') format('svg');\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n.iconfont{\\\\r\\\\n    font-family:\\\\\\\"iconfont\\\\\\\" !important;\\\\r\\\\n    font-size:16px;font-style:normal;\\\\r\\\\n    -webkit-font-smoothing: antialiased;\\\\r\\\\n    -webkit-text-stroke-width: 0.2px;\\\\r\\\\n    -moz-osx-font-smoothing: grayscale;\\\\r\\\\n    cursor: pointer;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n\\\"],\\\"sourceRoot\\\":\\\"\\\"}]);\\n// Exports\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (___CSS_LOADER_EXPORT___);\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3NyYy9hc3NldC9pbmRleC5jc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saXZlMmQvLi9zcmMvYXNzZXQvaW5kZXguY3NzPzhhYWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGZvbnQtZmFjZSB7XFxyXFxuICAgIGZvbnQtZmFtaWx5OiAnaWNvbmZvbnQnOyAgLyogcHJvamVjdCBpZCAxMTY4NzM3ICovXFxyXFxuICAgIHNyYzogdXJsKCcvL2F0LmFsaWNkbi5jb20vdC9mb250XzExNjg3MzdfajZhaGxzeDFkay5lb3QnKTtcXHJcXG4gICAgc3JjOiB1cmwoJy8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfMTE2ODczN19qNmFobHN4MWRrLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXFxyXFxuICAgIHVybCgnLy9hdC5hbGljZG4uY29tL3QvZm9udF8xMTY4NzM3X2o2YWhsc3gxZGsud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXFxyXFxuICAgIHVybCgnLy9hdC5hbGljZG4uY29tL3QvZm9udF8xMTY4NzM3X2o2YWhsc3gxZGsud29mZicpIGZvcm1hdCgnd29mZicpLFxcclxcbiAgICB1cmwoJy8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfMTE2ODczN19qNmFobHN4MWRrLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcXHJcXG4gICAgdXJsKCcvL2F0LmFsaWNkbi5jb20vdC9mb250XzExNjg3MzdfajZhaGxzeDFkay5zdmcjaWNvbmZvbnQnKSBmb3JtYXQoJ3N2ZycpO1xcclxcbiAgfVxcclxcblxcclxcbi5pY29uZm9udHtcXHJcXG4gICAgZm9udC1mYW1pbHk6XFxcImljb25mb250XFxcIiAhaW1wb3J0YW50O1xcclxcbiAgICBmb250LXNpemU6MTZweDtmb250LXN0eWxlOm5vcm1hbDtcXHJcXG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XFxyXFxuICAgIC13ZWJraXQtdGV4dC1zdHJva2Utd2lkdGg6IDAuMnB4O1xcclxcbiAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly9zcmMvYXNzZXQvaW5kZXguY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksdUJBQXVCLEdBQUcsdUJBQXVCO0lBQ2pELHlEQUF5RDtJQUN6RDs7OzsrRUFJMkU7RUFDN0U7O0FBRUY7SUFDSSxpQ0FBaUM7SUFDakMsY0FBYyxDQUFDLGlCQUFpQjtJQUNoQyxtQ0FBbUM7SUFDbkMsZ0NBQWdDO0lBQ2hDLGtDQUFrQztJQUNsQyxlQUFlO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBmb250LWZhY2Uge1xcclxcbiAgICBmb250LWZhbWlseTogJ2ljb25mb250JzsgIC8qIHByb2plY3QgaWQgMTE2ODczNyAqL1xcclxcbiAgICBzcmM6IHVybCgnLy9hdC5hbGljZG4uY29tL3QvZm9udF8xMTY4NzM3X2o2YWhsc3gxZGsuZW90Jyk7XFxyXFxuICAgIHNyYzogdXJsKCcvL2F0LmFsaWNkbi5jb20vdC9mb250XzExNjg3MzdfajZhaGxzeDFkay5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxcclxcbiAgICB1cmwoJy8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfMTE2ODczN19qNmFobHN4MWRrLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxcclxcbiAgICB1cmwoJy8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfMTE2ODczN19qNmFobHN4MWRrLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcXHJcXG4gICAgdXJsKCcvL2F0LmFsaWNkbi5jb20vdC9mb250XzExNjg3MzdfajZhaGxzeDFkay50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksXFxyXFxuICAgIHVybCgnLy9hdC5hbGljZG4uY29tL3QvZm9udF8xMTY4NzM3X2o2YWhsc3gxZGsuc3ZnI2ljb25mb250JykgZm9ybWF0KCdzdmcnKTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4uaWNvbmZvbnR7XFxyXFxuICAgIGZvbnQtZmFtaWx5OlxcXCJpY29uZm9udFxcXCIgIWltcG9ydGFudDtcXHJcXG4gICAgZm9udC1zaXplOjE2cHg7Zm9udC1zdHlsZTpub3JtYWw7XFxyXFxuICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xcclxcbiAgICAtd2Via2l0LXRleHQtc3Ryb2tlLXdpZHRoOiAwLjJweDtcXHJcXG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js!./src/asset/index.css\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/css-loader/dist/runtime/api.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/css-loader/dist/runtime/api.js ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\n/*\\n  MIT License http://www.opensource.org/licenses/mit-license.php\\n  Author Tobias Koppers @sokra\\n*/\\n// css base code, injected by the css-loader\\n// eslint-disable-next-line func-names\\nmodule.exports = function (useSourceMap) {\\n  var list = []; // return the list of modules as css string\\n\\n  list.toString = function toString() {\\n    return this.map(function (item) {\\n      var content = cssWithMappingToString(item, useSourceMap);\\n\\n      if (item[2]) {\\n        return \\\"@media \\\".concat(item[2], \\\" {\\\").concat(content, \\\"}\\\");\\n      }\\n\\n      return content;\\n    }).join('');\\n  }; // import a list of modules into the list\\n  // eslint-disable-next-line func-names\\n\\n\\n  list.i = function (modules, mediaQuery, dedupe) {\\n    if (typeof modules === 'string') {\\n      // eslint-disable-next-line no-param-reassign\\n      modules = [[null, modules, '']];\\n    }\\n\\n    var alreadyImportedModules = {};\\n\\n    if (dedupe) {\\n      for (var i = 0; i < this.length; i++) {\\n        // eslint-disable-next-line prefer-destructuring\\n        var id = this[i][0];\\n\\n        if (id != null) {\\n          alreadyImportedModules[id] = true;\\n        }\\n      }\\n    }\\n\\n    for (var _i = 0; _i < modules.length; _i++) {\\n      var item = [].concat(modules[_i]);\\n\\n      if (dedupe && alreadyImportedModules[item[0]]) {\\n        // eslint-disable-next-line no-continue\\n        continue;\\n      }\\n\\n      if (mediaQuery) {\\n        if (!item[2]) {\\n          item[2] = mediaQuery;\\n        } else {\\n          item[2] = \\\"\\\".concat(mediaQuery, \\\" and \\\").concat(item[2]);\\n        }\\n      }\\n\\n      list.push(item);\\n    }\\n  };\\n\\n  return list;\\n};\\n\\nfunction cssWithMappingToString(item, useSourceMap) {\\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\\n\\n  var cssMapping = item[3];\\n\\n  if (!cssMapping) {\\n    return content;\\n  }\\n\\n  if (useSourceMap && typeof btoa === 'function') {\\n    var sourceMapping = toComment(cssMapping);\\n    var sourceURLs = cssMapping.sources.map(function (source) {\\n      return \\\"/*# sourceURL=\\\".concat(cssMapping.sourceRoot || '').concat(source, \\\" */\\\");\\n    });\\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\\\n');\\n  }\\n\\n  return [content].join('\\\\n');\\n} // Adapted from convert-source-map (MIT)\\n\\n\\nfunction toComment(sourceMap) {\\n  // eslint-disable-next-line no-undef\\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\\n  var data = \\\"sourceMappingURL=data:application/json;charset=utf-8;base64,\\\".concat(base64);\\n  return \\\"/*# \\\".concat(data, \\\" */\\\");\\n}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcz8yNGZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCAnJ11dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuXG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcblxuXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICByZXR1cm4gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/api.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\":\n/*!****************************************************************************!*\\\n  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!\n  \\****************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar isOldIE = function isOldIE() {\\n  var memo;\\n  return function memorize() {\\n    if (typeof memo === 'undefined') {\\n      // Test for IE <= 9 as proposed by Browserhacks\\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\\n      // Tests for existence of standard globals is to allow style-loader\\n      // to operate correctly into non-standard environments\\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\\n      memo = Boolean(window && document && document.all && !window.atob);\\n    }\\n\\n    return memo;\\n  };\\n}();\\n\\nvar getTarget = function getTarget() {\\n  var memo = {};\\n  return function memorize(target) {\\n    if (typeof memo[target] === 'undefined') {\\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\\n\\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\\n        try {\\n          // This will throw an exception if access to iframe is blocked\\n          // due to cross-origin restrictions\\n          styleTarget = styleTarget.contentDocument.head;\\n        } catch (e) {\\n          // istanbul ignore next\\n          styleTarget = null;\\n        }\\n      }\\n\\n      memo[target] = styleTarget;\\n    }\\n\\n    return memo[target];\\n  };\\n}();\\n\\nvar stylesInDom = [];\\n\\nfunction getIndexByIdentifier(identifier) {\\n  var result = -1;\\n\\n  for (var i = 0; i < stylesInDom.length; i++) {\\n    if (stylesInDom[i].identifier === identifier) {\\n      result = i;\\n      break;\\n    }\\n  }\\n\\n  return result;\\n}\\n\\nfunction modulesToDom(list, options) {\\n  var idCountMap = {};\\n  var identifiers = [];\\n\\n  for (var i = 0; i < list.length; i++) {\\n    var item = list[i];\\n    var id = options.base ? item[0] + options.base : item[0];\\n    var count = idCountMap[id] || 0;\\n    var identifier = \\\"\\\".concat(id, \\\" \\\").concat(count);\\n    idCountMap[id] = count + 1;\\n    var index = getIndexByIdentifier(identifier);\\n    var obj = {\\n      css: item[1],\\n      media: item[2],\\n      sourceMap: item[3]\\n    };\\n\\n    if (index !== -1) {\\n      stylesInDom[index].references++;\\n      stylesInDom[index].updater(obj);\\n    } else {\\n      stylesInDom.push({\\n        identifier: identifier,\\n        updater: addStyle(obj, options),\\n        references: 1\\n      });\\n    }\\n\\n    identifiers.push(identifier);\\n  }\\n\\n  return identifiers;\\n}\\n\\nfunction insertStyleElement(options) {\\n  var style = document.createElement('style');\\n  var attributes = options.attributes || {};\\n\\n  if (typeof attributes.nonce === 'undefined') {\\n    var nonce =  true ? __webpack_require__.nc : undefined;\\n\\n    if (nonce) {\\n      attributes.nonce = nonce;\\n    }\\n  }\\n\\n  Object.keys(attributes).forEach(function (key) {\\n    style.setAttribute(key, attributes[key]);\\n  });\\n\\n  if (typeof options.insert === 'function') {\\n    options.insert(style);\\n  } else {\\n    var target = getTarget(options.insert || 'head');\\n\\n    if (!target) {\\n      throw new Error(\\\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\\\");\\n    }\\n\\n    target.appendChild(style);\\n  }\\n\\n  return style;\\n}\\n\\nfunction removeStyleElement(style) {\\n  // istanbul ignore if\\n  if (style.parentNode === null) {\\n    return false;\\n  }\\n\\n  style.parentNode.removeChild(style);\\n}\\n/* istanbul ignore next  */\\n\\n\\nvar replaceText = function replaceText() {\\n  var textStore = [];\\n  return function replace(index, replacement) {\\n    textStore[index] = replacement;\\n    return textStore.filter(Boolean).join('\\\\n');\\n  };\\n}();\\n\\nfunction applyToSingletonTag(style, index, remove, obj) {\\n  var css = remove ? '' : obj.media ? \\\"@media \\\".concat(obj.media, \\\" {\\\").concat(obj.css, \\\"}\\\") : obj.css; // For old IE\\n\\n  /* istanbul ignore if  */\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = replaceText(index, css);\\n  } else {\\n    var cssNode = document.createTextNode(css);\\n    var childNodes = style.childNodes;\\n\\n    if (childNodes[index]) {\\n      style.removeChild(childNodes[index]);\\n    }\\n\\n    if (childNodes.length) {\\n      style.insertBefore(cssNode, childNodes[index]);\\n    } else {\\n      style.appendChild(cssNode);\\n    }\\n  }\\n}\\n\\nfunction applyToTag(style, options, obj) {\\n  var css = obj.css;\\n  var media = obj.media;\\n  var sourceMap = obj.sourceMap;\\n\\n  if (media) {\\n    style.setAttribute('media', media);\\n  } else {\\n    style.removeAttribute('media');\\n  }\\n\\n  if (sourceMap && btoa) {\\n    css += \\\"\\\\n/*# sourceMappingURL=data:application/json;base64,\\\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \\\" */\\\");\\n  } // For old IE\\n\\n  /* istanbul ignore if  */\\n\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    while (style.firstChild) {\\n      style.removeChild(style.firstChild);\\n    }\\n\\n    style.appendChild(document.createTextNode(css));\\n  }\\n}\\n\\nvar singleton = null;\\nvar singletonCounter = 0;\\n\\nfunction addStyle(obj, options) {\\n  var style;\\n  var update;\\n  var remove;\\n\\n  if (options.singleton) {\\n    var styleIndex = singletonCounter++;\\n    style = singleton || (singleton = insertStyleElement(options));\\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\\n  } else {\\n    style = insertStyleElement(options);\\n    update = applyToTag.bind(null, style, options);\\n\\n    remove = function remove() {\\n      removeStyleElement(style);\\n    };\\n  }\\n\\n  update(obj);\\n  return function updateStyle(newObj) {\\n    if (newObj) {\\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\\n        return;\\n      }\\n\\n      update(obj = newObj);\\n    } else {\\n      remove();\\n    }\\n  };\\n}\\n\\nmodule.exports = function (list, options) {\\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\\n  // tags it will allow on a page\\n\\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\\n    options.singleton = isOldIE();\\n  }\\n\\n  list = list || [];\\n  var lastIdentifiers = modulesToDom(list, options);\\n  return function update(newList) {\\n    newList = newList || [];\\n\\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\\n      return;\\n    }\\n\\n    for (var i = 0; i < lastIdentifiers.length; i++) {\\n      var identifier = lastIdentifiers[i];\\n      var index = getIndexByIdentifier(identifier);\\n      stylesInDom[index].references--;\\n    }\\n\\n    var newLastIdentifiers = modulesToDom(newList, options);\\n\\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\\n      var _identifier = lastIdentifiers[_i];\\n\\n      var _index = getIndexByIdentifier(_identifier);\\n\\n      if (stylesInDom[_index].references === 0) {\\n        stylesInDom[_index].updater();\\n\\n        stylesInDom.splice(_index, 1);\\n      }\\n    }\\n\\n    lastIdentifiers = newLastIdentifiers;\\n  };\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/whatwg-fetch/fetch.js\":\n/*!********************************************!*\\\n  !*** ./node_modules/whatwg-fetch/fetch.js ***!\n  \\********************************************/\n/*! exports provided: Headers, Request, Response, DOMException, fetch */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Headers\\\", function() { return Headers; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Request\\\", function() { return Request; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Response\\\", function() { return Response; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"DOMException\\\", function() { return DOMException; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"fetch\\\", function() { return fetch; });\\nvar support = {\\n  searchParams: 'URLSearchParams' in self,\\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\\n  blob:\\n    'FileReader' in self &&\\n    'Blob' in self &&\\n    (function() {\\n      try {\\n        new Blob()\\n        return true\\n      } catch (e) {\\n        return false\\n      }\\n    })(),\\n  formData: 'FormData' in self,\\n  arrayBuffer: 'ArrayBuffer' in self\\n}\\n\\nfunction isDataView(obj) {\\n  return obj && DataView.prototype.isPrototypeOf(obj)\\n}\\n\\nif (support.arrayBuffer) {\\n  var viewClasses = [\\n    '[object Int8Array]',\\n    '[object Uint8Array]',\\n    '[object Uint8ClampedArray]',\\n    '[object Int16Array]',\\n    '[object Uint16Array]',\\n    '[object Int32Array]',\\n    '[object Uint32Array]',\\n    '[object Float32Array]',\\n    '[object Float64Array]'\\n  ]\\n\\n  var isArrayBufferView =\\n    ArrayBuffer.isView ||\\n    function(obj) {\\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\\n    }\\n}\\n\\nfunction normalizeName(name) {\\n  if (typeof name !== 'string') {\\n    name = String(name)\\n  }\\n  if (/[^a-z0-9\\\\-#$%&'*+.^_`|~]/i.test(name)) {\\n    throw new TypeError('Invalid character in header field name')\\n  }\\n  return name.toLowerCase()\\n}\\n\\nfunction normalizeValue(value) {\\n  if (typeof value !== 'string') {\\n    value = String(value)\\n  }\\n  return value\\n}\\n\\n// Build a destructive iterator for the value list\\nfunction iteratorFor(items) {\\n  var iterator = {\\n    next: function() {\\n      var value = items.shift()\\n      return {done: value === undefined, value: value}\\n    }\\n  }\\n\\n  if (support.iterable) {\\n    iterator[Symbol.iterator] = function() {\\n      return iterator\\n    }\\n  }\\n\\n  return iterator\\n}\\n\\nfunction Headers(headers) {\\n  this.map = {}\\n\\n  if (headers instanceof Headers) {\\n    headers.forEach(function(value, name) {\\n      this.append(name, value)\\n    }, this)\\n  } else if (Array.isArray(headers)) {\\n    headers.forEach(function(header) {\\n      this.append(header[0], header[1])\\n    }, this)\\n  } else if (headers) {\\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\\n      this.append(name, headers[name])\\n    }, this)\\n  }\\n}\\n\\nHeaders.prototype.append = function(name, value) {\\n  name = normalizeName(name)\\n  value = normalizeValue(value)\\n  var oldValue = this.map[name]\\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\\n}\\n\\nHeaders.prototype['delete'] = function(name) {\\n  delete this.map[normalizeName(name)]\\n}\\n\\nHeaders.prototype.get = function(name) {\\n  name = normalizeName(name)\\n  return this.has(name) ? this.map[name] : null\\n}\\n\\nHeaders.prototype.has = function(name) {\\n  return this.map.hasOwnProperty(normalizeName(name))\\n}\\n\\nHeaders.prototype.set = function(name, value) {\\n  this.map[normalizeName(name)] = normalizeValue(value)\\n}\\n\\nHeaders.prototype.forEach = function(callback, thisArg) {\\n  for (var name in this.map) {\\n    if (this.map.hasOwnProperty(name)) {\\n      callback.call(thisArg, this.map[name], name, this)\\n    }\\n  }\\n}\\n\\nHeaders.prototype.keys = function() {\\n  var items = []\\n  this.forEach(function(value, name) {\\n    items.push(name)\\n  })\\n  return iteratorFor(items)\\n}\\n\\nHeaders.prototype.values = function() {\\n  var items = []\\n  this.forEach(function(value) {\\n    items.push(value)\\n  })\\n  return iteratorFor(items)\\n}\\n\\nHeaders.prototype.entries = function() {\\n  var items = []\\n  this.forEach(function(value, name) {\\n    items.push([name, value])\\n  })\\n  return iteratorFor(items)\\n}\\n\\nif (support.iterable) {\\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\\n}\\n\\nfunction consumed(body) {\\n  if (body.bodyUsed) {\\n    return Promise.reject(new TypeError('Already read'))\\n  }\\n  body.bodyUsed = true\\n}\\n\\nfunction fileReaderReady(reader) {\\n  return new Promise(function(resolve, reject) {\\n    reader.onload = function() {\\n      resolve(reader.result)\\n    }\\n    reader.onerror = function() {\\n      reject(reader.error)\\n    }\\n  })\\n}\\n\\nfunction readBlobAsArrayBuffer(blob) {\\n  var reader = new FileReader()\\n  var promise = fileReaderReady(reader)\\n  reader.readAsArrayBuffer(blob)\\n  return promise\\n}\\n\\nfunction readBlobAsText(blob) {\\n  var reader = new FileReader()\\n  var promise = fileReaderReady(reader)\\n  reader.readAsText(blob)\\n  return promise\\n}\\n\\nfunction readArrayBufferAsText(buf) {\\n  var view = new Uint8Array(buf)\\n  var chars = new Array(view.length)\\n\\n  for (var i = 0; i < view.length; i++) {\\n    chars[i] = String.fromCharCode(view[i])\\n  }\\n  return chars.join('')\\n}\\n\\nfunction bufferClone(buf) {\\n  if (buf.slice) {\\n    return buf.slice(0)\\n  } else {\\n    var view = new Uint8Array(buf.byteLength)\\n    view.set(new Uint8Array(buf))\\n    return view.buffer\\n  }\\n}\\n\\nfunction Body() {\\n  this.bodyUsed = false\\n\\n  this._initBody = function(body) {\\n    this._bodyInit = body\\n    if (!body) {\\n      this._bodyText = ''\\n    } else if (typeof body === 'string') {\\n      this._bodyText = body\\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\\n      this._bodyBlob = body\\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\\n      this._bodyFormData = body\\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\\n      this._bodyText = body.toString()\\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\\n      this._bodyArrayBuffer = bufferClone(body.buffer)\\n      // IE 10-11 can't handle a DataView body.\\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\\n      this._bodyArrayBuffer = bufferClone(body)\\n    } else {\\n      this._bodyText = body = Object.prototype.toString.call(body)\\n    }\\n\\n    if (!this.headers.get('content-type')) {\\n      if (typeof body === 'string') {\\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\\n      } else if (this._bodyBlob && this._bodyBlob.type) {\\n        this.headers.set('content-type', this._bodyBlob.type)\\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\\n      }\\n    }\\n  }\\n\\n  if (support.blob) {\\n    this.blob = function() {\\n      var rejected = consumed(this)\\n      if (rejected) {\\n        return rejected\\n      }\\n\\n      if (this._bodyBlob) {\\n        return Promise.resolve(this._bodyBlob)\\n      } else if (this._bodyArrayBuffer) {\\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\\n      } else if (this._bodyFormData) {\\n        throw new Error('could not read FormData body as blob')\\n      } else {\\n        return Promise.resolve(new Blob([this._bodyText]))\\n      }\\n    }\\n\\n    this.arrayBuffer = function() {\\n      if (this._bodyArrayBuffer) {\\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\\n      } else {\\n        return this.blob().then(readBlobAsArrayBuffer)\\n      }\\n    }\\n  }\\n\\n  this.text = function() {\\n    var rejected = consumed(this)\\n    if (rejected) {\\n      return rejected\\n    }\\n\\n    if (this._bodyBlob) {\\n      return readBlobAsText(this._bodyBlob)\\n    } else if (this._bodyArrayBuffer) {\\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\\n    } else if (this._bodyFormData) {\\n      throw new Error('could not read FormData body as text')\\n    } else {\\n      return Promise.resolve(this._bodyText)\\n    }\\n  }\\n\\n  if (support.formData) {\\n    this.formData = function() {\\n      return this.text().then(decode)\\n    }\\n  }\\n\\n  this.json = function() {\\n    return this.text().then(JSON.parse)\\n  }\\n\\n  return this\\n}\\n\\n// HTTP methods whose capitalization should be normalized\\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\\n\\nfunction normalizeMethod(method) {\\n  var upcased = method.toUpperCase()\\n  return methods.indexOf(upcased) > -1 ? upcased : method\\n}\\n\\nfunction Request(input, options) {\\n  options = options || {}\\n  var body = options.body\\n\\n  if (input instanceof Request) {\\n    if (input.bodyUsed) {\\n      throw new TypeError('Already read')\\n    }\\n    this.url = input.url\\n    this.credentials = input.credentials\\n    if (!options.headers) {\\n      this.headers = new Headers(input.headers)\\n    }\\n    this.method = input.method\\n    this.mode = input.mode\\n    this.signal = input.signal\\n    if (!body && input._bodyInit != null) {\\n      body = input._bodyInit\\n      input.bodyUsed = true\\n    }\\n  } else {\\n    this.url = String(input)\\n  }\\n\\n  this.credentials = options.credentials || this.credentials || 'same-origin'\\n  if (options.headers || !this.headers) {\\n    this.headers = new Headers(options.headers)\\n  }\\n  this.method = normalizeMethod(options.method || this.method || 'GET')\\n  this.mode = options.mode || this.mode || null\\n  this.signal = options.signal || this.signal\\n  this.referrer = null\\n\\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\\n    throw new TypeError('Body not allowed for GET or HEAD requests')\\n  }\\n  this._initBody(body)\\n}\\n\\nRequest.prototype.clone = function() {\\n  return new Request(this, {body: this._bodyInit})\\n}\\n\\nfunction decode(body) {\\n  var form = new FormData()\\n  body\\n    .trim()\\n    .split('&')\\n    .forEach(function(bytes) {\\n      if (bytes) {\\n        var split = bytes.split('=')\\n        var name = split.shift().replace(/\\\\+/g, ' ')\\n        var value = split.join('=').replace(/\\\\+/g, ' ')\\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\\n      }\\n    })\\n  return form\\n}\\n\\nfunction parseHeaders(rawHeaders) {\\n  var headers = new Headers()\\n  // Replace instances of \\\\r\\\\n and \\\\n followed by at least one space or horizontal tab with a space\\n  // https://tools.ietf.org/html/rfc7230#section-3.2\\n  var preProcessedHeaders = rawHeaders.replace(/\\\\r?\\\\n[\\\\t ]+/g, ' ')\\n  preProcessedHeaders.split(/\\\\r?\\\\n/).forEach(function(line) {\\n    var parts = line.split(':')\\n    var key = parts.shift().trim()\\n    if (key) {\\n      var value = parts.join(':').trim()\\n      headers.append(key, value)\\n    }\\n  })\\n  return headers\\n}\\n\\nBody.call(Request.prototype)\\n\\nfunction Response(bodyInit, options) {\\n  if (!options) {\\n    options = {}\\n  }\\n\\n  this.type = 'default'\\n  this.status = options.status === undefined ? 200 : options.status\\n  this.ok = this.status >= 200 && this.status < 300\\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\\n  this.headers = new Headers(options.headers)\\n  this.url = options.url || ''\\n  this._initBody(bodyInit)\\n}\\n\\nBody.call(Response.prototype)\\n\\nResponse.prototype.clone = function() {\\n  return new Response(this._bodyInit, {\\n    status: this.status,\\n    statusText: this.statusText,\\n    headers: new Headers(this.headers),\\n    url: this.url\\n  })\\n}\\n\\nResponse.error = function() {\\n  var response = new Response(null, {status: 0, statusText: ''})\\n  response.type = 'error'\\n  return response\\n}\\n\\nvar redirectStatuses = [301, 302, 303, 307, 308]\\n\\nResponse.redirect = function(url, status) {\\n  if (redirectStatuses.indexOf(status) === -1) {\\n    throw new RangeError('Invalid status code')\\n  }\\n\\n  return new Response(null, {status: status, headers: {location: url}})\\n}\\n\\nvar DOMException = self.DOMException\\ntry {\\n  new DOMException()\\n} catch (err) {\\n  DOMException = function(message, name) {\\n    this.message = message\\n    this.name = name\\n    var error = Error(message)\\n    this.stack = error.stack\\n  }\\n  DOMException.prototype = Object.create(Error.prototype)\\n  DOMException.prototype.constructor = DOMException\\n}\\n\\nfunction fetch(input, init) {\\n  return new Promise(function(resolve, reject) {\\n    var request = new Request(input, init)\\n\\n    if (request.signal && request.signal.aborted) {\\n      return reject(new DOMException('Aborted', 'AbortError'))\\n    }\\n\\n    var xhr = new XMLHttpRequest()\\n\\n    function abortXhr() {\\n      xhr.abort()\\n    }\\n\\n    xhr.onload = function() {\\n      var options = {\\n        status: xhr.status,\\n        statusText: xhr.statusText,\\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\\n      }\\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\\n      resolve(new Response(body, options))\\n    }\\n\\n    xhr.onerror = function() {\\n      reject(new TypeError('Network request failed'))\\n    }\\n\\n    xhr.ontimeout = function() {\\n      reject(new TypeError('Network request failed'))\\n    }\\n\\n    xhr.onabort = function() {\\n      reject(new DOMException('Aborted', 'AbortError'))\\n    }\\n\\n    xhr.open(request.method, request.url, true)\\n\\n    if (request.credentials === 'include') {\\n      xhr.withCredentials = true\\n    } else if (request.credentials === 'omit') {\\n      xhr.withCredentials = false\\n    }\\n\\n    if ('responseType' in xhr && support.blob) {\\n      xhr.responseType = 'blob'\\n    }\\n\\n    request.headers.forEach(function(value, name) {\\n      xhr.setRequestHeader(name, value)\\n    })\\n\\n    if (request.signal) {\\n      request.signal.addEventListener('abort', abortXhr)\\n\\n      xhr.onreadystatechange = function() {\\n        // DONE (success or failure)\\n        if (xhr.readyState === 4) {\\n          request.signal.removeEventListener('abort', abortXhr)\\n        }\\n      }\\n    }\\n\\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\\n  })\\n}\\n\\nfetch.polyfill = true\\n\\nif (!self.fetch) {\\n  self.fetch = fetch\\n  self.Headers = Headers\\n  self.Request = Request\\n  self.Response = Response\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./node_modules/whatwg-fetch/fetch.js\\n\");\n\n/***/ }),\n\n/***/ \"./src/asset/index.css\":\n/*!*****************************!*\\\n  !*** ./src/asset/index.css ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \\\"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\\\");\\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./index.css */ \\\"./node_modules/css-loader/dist/cjs.js!./src/asset/index.css\\\");\\n\\n            content = content.__esModule ? content.default : content;\\n\\n            if (typeof content === 'string') {\\n              content = [[module.i, content, '']];\\n            }\\n\\nvar options = {};\\n\\noptions.insert = \\\"head\\\";\\noptions.singleton = false;\\n\\nvar update = api(content, options);\\n\\n\\n\\nmodule.exports = content.locals || {};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXQvaW5kZXguY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vc3JjL2Fzc2V0L2luZGV4LmNzcz83YTQ1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./src/asset/index.css\\n\");\n\n/***/ }),\n\n/***/ \"./src/index.js\":\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _lappdelegate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lappdelegate */ \\\"./src/lappdelegate.ts\\\");\\n/* harmony import */ var _lappdelegate__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lappdelegate__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lapplive2dmanager */ \\\"./src/lapplive2dmanager.ts\\\");\\n/* harmony import */ var _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lapplive2dmanager__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _lappdefine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lappdefine */ \\\"./src/lappdefine.ts\\\");\\n/* harmony import */ var _lappdefine__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_lappdefine__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \\\"react\\\");\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\\n/* harmony import */ var _asset_index_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./asset/index.css */ \\\"./src/asset/index.css\\\");\\n/* harmony import */ var _asset_index_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_asset_index_css__WEBPACK_IMPORTED_MODULE_4__);\\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\\n\\nfunction _nonIterableRest() { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\"); }\\n\\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \\\"string\\\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \\\"Object\\\" && o.constructor) n = o.constructor.name; if (n === \\\"Map\\\" || n === \\\"Set\\\") return Array.from(o); if (n === \\\"Arguments\\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\\n\\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\\n\\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \\\"undefined\\\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"] != null) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\n\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\n\\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\\n\\n\\n\\n\\n\\n\\n\\nfunction ReactLive2d(props) {\\n  // 好看颜色列表\\n  // green: '#B4DEAE',\\n  // DeepBlue: '#5B8DBE',\\n  // LightBlue: '#C8E6FE',\\n  // pink: '#F9B8BE'\\n  // 容器样式\\n  var containerStyle = {\\n    position: 'relative',\\n    top: 'props.top' ? props.top : '',\\n    right: props.right ? props.right : '0',\\n    bottom: props.bottom ? props.bottom : '0',\\n    left: props.left ? props.left : ''\\n  }; // canvas样式\\n\\n  var canvasStyle = {\\n    position: 'relative',\\n    top: props.top ? props.top : '',\\n    right: props.right ? props.right : '0',\\n    bottom: props.bottom ? props.bottom : '0',\\n    left: props.left ? props.left : ''\\n  }; // 对话框样式\\n\\n  var printStyle = _defineProperty({\\n    position: 'absolute',\\n    width: props.width > 300 ? props.width / 2 : '150px',\\n    left: props.width > 300 ? (props.width - props.width / 2) / 2 + 'px' : (props.width - 150) / 2 + 'px',\\n    top: '0',\\n    minHeight: '20px',\\n    display: 'block',\\n    borderRadius: '5px',\\n    border: '1px dashed #ccc',\\n    padding: '5px',\\n    background: props.color ? props.color : '#C8E6FE'\\n  }, \\\"display\\\", 'none'); // 面板主题样式\\n\\n\\n  var Theme = {\\n    color: props.color ? props.color : '#C8E6FE',\\n    width: '30px',\\n    height: '30px'\\n  };\\n  var timer = null;\\n\\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\\\"useState\\\"])(false),\\n      _useState2 = _slicedToArray(_useState, 2),\\n      controllerOn = _useState2[0],\\n      setControllerOn = _useState2[1];\\n\\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\\\"useState\\\"])(false),\\n      _useState4 = _slicedToArray(_useState3, 2),\\n      controllerIn = _useState4[0],\\n      setControllerIn = _useState4[1];\\n\\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\\\"useState\\\"])(false),\\n      _useState6 = _slicedToArray(_useState5, 2),\\n      printMenu = _useState6[0],\\n      setPrintMenu = _useState6[1]; // 进入显示控制台\\n\\n\\n  function cvMouseOver() {\\n    setControllerOn(true);\\n  }\\n\\n  function cvMouseOut() {\\n    timer = setTimeout(function () {\\n      // 0.01秒内没有进入点击面板，说明已经鼠标离开\\n      if (!controllerIn) {\\n        setControllerOn(false);\\n        setControllerIn(false);\\n      }\\n    }, 10);\\n  } // 进入选择菜单\\n\\n\\n  function ctMouseOver() {\\n    setControllerIn(true);\\n    clearTimeout(timer);\\n  } // 离开选择菜单\\n\\n\\n  function ctMouseOut() {\\n    setControllerIn(false);\\n  } //切换\\n\\n\\n  function ctTab() {\\n    _lapplive2dmanager__WEBPACK_IMPORTED_MODULE_1__[\\\"LAppLive2DManager\\\"].getInstance().nextScene();\\n  } // 悬停菜单时的对白\\n\\n\\n  function talkPrint(print) {\\n    var printNow = document.getElementById('live2d-print');\\n    printNow.innerHTML = print;\\n    printNow.style.display = 'block';\\n  }\\n\\n  function cancelPrint() {\\n    var printNow = document.getElementById('live2d-print');\\n    printNow.innerHTML = '';\\n    printNow.style.display = 'none';\\n  }\\n\\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\\\"useEffect\\\"])(function () {\\n    console.log('props', props);\\n    props.ModelList ? _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setModelDir(props.ModelList) : _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setModelDir([]);\\n    props.TouchBody ? _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setHitBody(props.TouchBody) : _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setHitBody([]);\\n    props.TouchHead ? _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setHitHead(props.TouchHead) : _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setHitHead([]);\\n    props.TouchDefault ? _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setHitDefault(props.TouchDefault) : _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setHitDefault([]);\\n    props.PathFull ? _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setPathFull(props.PathFull) : _lappdefine__WEBPACK_IMPORTED_MODULE_2__[\\\"lappdefineSet\\\"].setPathFull('');\\n\\n    if (!navigator.userAgent.match(/mobile/i) || props.MobileShow == true) {\\n      if (_lappdelegate__WEBPACK_IMPORTED_MODULE_0__[\\\"LAppDelegate\\\"].getInstance().initialize() == false) {\\n        return;\\n      }\\n\\n      _lappdelegate__WEBPACK_IMPORTED_MODULE_0__[\\\"LAppDelegate\\\"].getInstance().run(); // window.onbeforeunload = () => LAppDelegate.releaseInstance();\\n    }\\n  }, []);\\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\\\"useEffect\\\"])(function () {\\n    if (props.release == true) {\\n      _lappdelegate__WEBPACK_IMPORTED_MODULE_0__[\\\"LAppDelegate\\\"].releaseInstance();\\n    }\\n  }, [props.release]);\\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\\\"div\\\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\\\"div\\\", {\\n    style: containerStyle,\\n    width: props.width ? props.width : '300',\\n    height: props.height ? props.height : '500',\\n    id: \\\"live2d-container\\\"\\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\\\"div\\\", {\\n    id: \\\"live2d-hidden\\\",\\n    style: {\\n      width: '100%',\\n      height: '100%',\\n      position: 'absolute',\\n      top: '0',\\n      left: '0',\\n      zIndex: '2'\\n    }\\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\\\"div\\\", {\\n    id: \\\"live2d-print\\\",\\n    style: printStyle\\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\\\"canvas\\\", {\\n    id: \\\"live2d\\\",\\n    style: canvasStyle,\\n    width: props.width ? props.width : '300',\\n    height: props.height ? props.height : '500',\\n    className: \\\"live2d\\\",\\n    onMouseEnter: cvMouseOver,\\n    onMouseLeave: cvMouseOut\\n  }), controllerOn && (!props.menuList || props.menuList.length > 0) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\\\"div\\\", {\\n    className: \\\"live2d-controller\\\",\\n    style: {\\n      position: 'absolute',\\n      top: '20px',\\n      left: '20px'\\n    },\\n    onMouseEnter: ctMouseOver,\\n    onMouseLeave: ctMouseOut\\n  }, (!props.menuList || props.menuList.indexOf('Mtab') > -1) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\\\"div\\\", {\\n    className: \\\"iconfont\\\",\\n    style: Theme,\\n    onClick: ctTab,\\n    onMouseEnter: function onMouseEnter() {\\n      return talkPrint('你想要换一个看板娘吗？看kan');\\n    },\\n    onMouseLeave: cancelPrint\\n  }, \\\"\\\\uE7CA\\\"))));\\n}\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (ReactLive2d);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./src/index.js\\n\");\n\n/***/ }),\n\n/***/ \"./src/lappdefine.ts\":\n/*!***************************!*\\\n  !*** ./src/lappdefine.ts ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../Framework/src/live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nexports.ViewMaxScale = 2.0;\\r\\nexports.ViewMinScale = 0.8;\\r\\nexports.ViewLogicalLeft = -1.0;\\r\\nexports.ViewLogicalRight = 1.0;\\r\\nexports.ViewLogicalMaxLeft = -2.0;\\r\\nexports.ViewLogicalMaxRight = 2.0;\\r\\nexports.ViewLogicalMaxBottom = -2.0;\\r\\nexports.ViewLogicalMaxTop = 2.0;\\r\\nexports.ResourcesPath = './Resources/';\\r\\nexports.BackImageName = 'back_class_normal.png';\\r\\nexports.GearImageName = 'icon_gear.png';\\r\\nexports.PowerImageName = 'CloseNormal.png';\\r\\nexports.ModelDir = ['Hiyori', 'Haru', 'Rice'];\\r\\nexports.MotionGroupDefault = '';\\r\\nexports.MotionGroupIdle = 'Idle';\\r\\nexports.MotionGroupTapBody = 'TapBody';\\r\\nexports.HitAreaNameHead = 'Head';\\r\\nexports.HitAreaNameBody = 'Body';\\r\\nexports.HitBodyList = ['啊呀，你的手在摸哪里嘛~', '哼，坏人'];\\r\\nexports.HitHeadList = ['讨厌~不要掐人家的脸嘛~', '希望明天也能感受到你的触摸呢'];\\r\\nexports.HitDefaultList = ['今天又是开心的一天呢~', '真是元气满满呀'];\\r\\nexports.PriorityNone = 0;\\r\\nexports.PriorityIdle = 1;\\r\\nexports.PriorityNormal = 2;\\r\\nexports.PriorityForce = 3;\\r\\nexports.DebugLogEnable = true;\\r\\nexports.DebugTouchLogEnable = false;\\r\\nexports.CubismLoggingLevel = live2dcubismframework_1.LogLevel.LogLevel_Verbose;\\r\\nexports.RenderTargetWidth = 1900;\\r\\nexports.RenderTargetHeight = 1000;\\r\\nvar lappdefineSet = (function () {\\r\\n    function lappdefineSet() {\\r\\n    }\\r\\n    lappdefineSet.setModelDir = function (modelDir) {\\r\\n        exports.ModelDir = modelDir.length > 0 ? modelDir : exports.ModelDir;\\r\\n    };\\r\\n    lappdefineSet.setHitBody = function (hitBodyList) {\\r\\n        exports.HitBodyList = hitBodyList.length > 0 ? hitBodyList : exports.HitBodyList;\\r\\n    };\\r\\n    lappdefineSet.setHitHead = function (hitHeadList) {\\r\\n        exports.HitHeadList = hitHeadList.length > 0 ? hitHeadList : exports.HitHeadList;\\r\\n    };\\r\\n    lappdefineSet.setHitDefault = function (hitDefaultList) {\\r\\n        exports.HitDefaultList = hitDefaultList.length > 0 ? hitDefaultList : exports.HitDefaultList;\\r\\n    };\\r\\n    lappdefineSet.setPathFull = function (pathfull) {\\r\\n        exports.ResourcesPath = pathfull.length > 0 ? pathfull : exports.ResourcesPath;\\r\\n    };\\r\\n    return lappdefineSet;\\r\\n}());\\r\\nexports.lappdefineSet = lappdefineSet;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGFwcGRlZmluZS50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL3NyYy9sYXBwZGVmaW5lLnRzPzFjM2IiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuaW1wb3J0IHsgTG9nTGV2ZWwgfSBmcm9tICcuLi9GcmFtZXdvcmsvc3JjL2xpdmUyZGN1YmlzbWZyYW1ld29yaydcblxuLyoqXG4gKiBTYW1wbGUgQXBw44Gn5L2/55So44GZ44KL5a6a5pWwXG4gKi9cbi8vIOeUu+mdolxuZXhwb3J0IGNvbnN0IFZpZXdNYXhTY2FsZSA9IDIuMDtcbmV4cG9ydCBjb25zdCBWaWV3TWluU2NhbGUgPSAwLjg7XG5cbmV4cG9ydCBjb25zdCBWaWV3TG9naWNhbExlZnQgPSAtMS4wO1xuZXhwb3J0IGNvbnN0IFZpZXdMb2dpY2FsUmlnaHQgPSAxLjA7XG5cbmV4cG9ydCBjb25zdCBWaWV3TG9naWNhbE1heExlZnQgPSAtMi4wO1xuZXhwb3J0IGNvbnN0IFZpZXdMb2dpY2FsTWF4UmlnaHQgPSAyLjA7XG5leHBvcnQgY29uc3QgVmlld0xvZ2ljYWxNYXhCb3R0b20gPSAtMi4wO1xuZXhwb3J0IGNvbnN0IFZpZXdMb2dpY2FsTWF4VG9wID0gMi4wO1xuXG4vLyDnm7jlr77jg5HjgrlcbmV4cG9ydCBsZXQgUmVzb3VyY2VzUGF0aCA9ICcuL1Jlc291cmNlcy8nO1xuLy8g57ud5a+56Lev5b6E77yM5o+Q5L6b57uZU1NS57G75Z6L6aG555uuXG4vLyBleHBvcnQgbGV0IFJlc291cmNlc1BhdGhGdWxsID0gJyc7XG5cbi8vIOODouODh+ODq+OBruW+jOOCjeOBq+OBguOCi+iDjOaZr+OBrueUu+WDj+ODleOCoeOCpOODq1xuZXhwb3J0IGNvbnN0IEJhY2tJbWFnZU5hbWUgPSAnYmFja19jbGFzc19ub3JtYWwucG5nJztcblxuLy8g5YiH5o2iXG5leHBvcnQgY29uc3QgR2VhckltYWdlTmFtZSA9ICdpY29uX2dlYXIucG5nJztcblxuLy8g57WC5LqG44Oc44K/44OzXG5leHBvcnQgY29uc3QgUG93ZXJJbWFnZU5hbWUgPSAnQ2xvc2VOb3JtYWwucG5nJztcblxuLy8g44Oi44OH44Or5a6a576pLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyDjg6Ljg4fjg6vjgpLphY3nva7jgZfjgZ/jg4fjgqPjg6zjgq/jg4jjg6rlkI3jga7phY3liJdcbi8vIOODh+OCo+ODrOOCr+ODiOODquWQjeOBqG1vZGVsMy5qc29u44Gu5ZCN5YmN44KS5LiA6Ie044GV44Gb44Gm44GK44GP44GT44GoXG5leHBvcnQgbGV0IE1vZGVsRGlyOiBzdHJpbmdbXSA9IFsnSGl5b3JpJywgJ0hhcnUnLCAnUmljZSddO1xuXG4vLyDlpJbpg6jlrprnvqnjg5XjgqHjgqTjg6vvvIhqc29u77yJ44Go5ZCI44KP44Gb44KLXG5leHBvcnQgY29uc3QgTW90aW9uR3JvdXBEZWZhdWx0ID0gJyc7IC8vIOm7mOiupOeahOWFtuS7luaooeWei1xuZXhwb3J0IGNvbnN0IE1vdGlvbkdyb3VwSWRsZSA9ICdJZGxlJzsgLy8g44Ki44Kk44OJ44Oq44Oz44KwXG5leHBvcnQgY29uc3QgTW90aW9uR3JvdXBUYXBCb2R5ID0gJ1RhcEJvZHknOyAvLyDkvZPjgpLjgr/jg4Pjg5fjgZfjgZ/jgajjgY1cblxuLy8g5aSW6YOo5a6a576p44OV44Kh44Kk44Or77yIanNvbu+8ieOBqOWQiOOCj+OBm+OCi1xuZXhwb3J0IGNvbnN0IEhpdEFyZWFOYW1lSGVhZCA9ICdIZWFkJztcbmV4cG9ydCBjb25zdCBIaXRBcmVhTmFtZUJvZHkgPSAnQm9keSc7XG5cbi8vIOWvueivneWGheWuuVxuZXhwb3J0IGxldCBIaXRCb2R5TGlzdDogc3RyaW5nW10gPSBbJ+WViuWRgO+8jOS9oOeahOaJi+WcqOaRuOWTqumHjOWYm34nLCflk7zvvIzlnY/kuronXTtcbmV4cG9ydCBsZXQgSGl0SGVhZExpc3Q6IHN0cmluZ1tdID0gWyforqjljox+5LiN6KaB5o6Q5Lq65a6255qE6IS45ZibficsJ+W4jOacm+aYjuWkqeS5n+iDveaEn+WPl+WIsOS9oOeahOinpuaRuOWRoiddO1xuZXhwb3J0IGxldCBIaXREZWZhdWx0TGlzdDogc3RyaW5nW10gPSBbJ+S7iuWkqeWPiOaYr+W8gOW/g+eahOS4gOWkqeWRon4nLCfnnJ/mmK/lhYPmsJTmu6Hmu6HlkYAnXTtcblxuLy8g44Oi44O844K344On44Oz44Gu5YSq5YWI5bqm5a6a5pWwXG5leHBvcnQgY29uc3QgUHJpb3JpdHlOb25lID0gMDtcbmV4cG9ydCBjb25zdCBQcmlvcml0eUlkbGUgPSAxO1xuZXhwb3J0IGNvbnN0IFByaW9yaXR5Tm9ybWFsID0gMjtcbmV4cG9ydCBjb25zdCBQcmlvcml0eUZvcmNlID0gMztcblxuLy8g44OH44OQ44OD44Kw55So44Ot44Kw44Gu6KGo56S644Kq44OX44K344On44OzXG5leHBvcnQgY29uc3QgRGVidWdMb2dFbmFibGUgPSB0cnVlO1xuZXhwb3J0IGNvbnN0IERlYnVnVG91Y2hMb2dFbmFibGUgPSBmYWxzZTtcblxuLy8gRnJhbWV3b3Jr44GL44KJ5Ye65Yqb44GZ44KL44Ot44Kw44Gu44Os44OZ44Or6Kit5a6aXG5leHBvcnQgY29uc3QgQ3ViaXNtTG9nZ2luZ0xldmVsOiBMb2dMZXZlbCA9IExvZ0xldmVsLkxvZ0xldmVsX1ZlcmJvc2U7XG5cbi8vIOODh+ODleOCqeODq+ODiOOBruODrOODs+ODgOODvOOCv+ODvOOCsuODg+ODiOOCteOCpOOCulxuZXhwb3J0IGNvbnN0IFJlbmRlclRhcmdldFdpZHRoID0gMTkwMDtcbmV4cG9ydCBjb25zdCBSZW5kZXJUYXJnZXRIZWlnaHQgPSAxMDAwO1xuXG4vLyDlpJbpg6jkvKDlhaXliqjmgIHlj4LmlbBcbmV4cG9ydCBjbGFzcyBsYXBwZGVmaW5lU2V0IHtcbiAgICAvLyDmqKHlnovliJfooahcbiAgICBwdWJsaWMgc3RhdGljIHNldE1vZGVsRGlyKG1vZGVsRGlyOkFycmF5PHN0cmluZz4pOiB2b2lkIHtcbiAgICAgICAgTW9kZWxEaXIgPSBtb2RlbERpci5sZW5ndGg+MCA/IG1vZGVsRGlyIDogTW9kZWxEaXJcbiAgICB9XG4gICAgLy8g6Lqr5L2T54K55Ye76K+t6KiAXG4gICAgcHVibGljIHN0YXRpYyBzZXRIaXRCb2R5KGhpdEJvZHlMaXN0OkFycmF5PHN0cmluZz4pOiB2b2lkIHtcbiAgICAgICAgSGl0Qm9keUxpc3QgPSBoaXRCb2R5TGlzdC5sZW5ndGg+MCA/IGhpdEJvZHlMaXN0IDogSGl0Qm9keUxpc3RcbiAgICB9XG4gICAgLy8g5aS06YOo54K55Ye76K+t6KiAXG4gICAgcHVibGljIHN0YXRpYyBzZXRIaXRIZWFkKGhpdEhlYWRMaXN0OkFycmF5PHN0cmluZz4pOiB2b2lkIHtcbiAgICAgICAgSGl0SGVhZExpc3QgPSBoaXRIZWFkTGlzdC5sZW5ndGg+MCA/IGhpdEhlYWRMaXN0IDogSGl0SGVhZExpc3RcbiAgICB9XG4gICAgLy8g6buY6K6k54K55Ye76K+t6KiAXG4gICAgcHVibGljIHN0YXRpYyBzZXRIaXREZWZhdWx0KGhpdERlZmF1bHRMaXN0OkFycmF5PHN0cmluZz4pOiB2b2lkIHtcbiAgICAgICAgSGl0RGVmYXVsdExpc3QgPSBoaXREZWZhdWx0TGlzdC5sZW5ndGg+MCA/IGhpdERlZmF1bHRMaXN0IDogSGl0RGVmYXVsdExpc3RcbiAgICB9XG4gICAgLy8g5qih5Z6L57ud5a+56Lev5b6EXG4gICAgcHVibGljIHN0YXRpYyBzZXRQYXRoRnVsbChwYXRoZnVsbDpzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgUmVzb3VyY2VzUGF0aCA9IHBhdGhmdWxsLmxlbmd0aD4wID8gcGF0aGZ1bGwgOiBSZXNvdXJjZXNQYXRoXG4gICAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOztBQU9BO0FBTUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBS0E7QUFHQTtBQUdBO0FBS0E7QUFHQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBR0E7QUFHQTtBQUNBO0FBR0E7QUFBQTtBQXFCQTtBQW5CQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBckJBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./src/lappdefine.ts\\n\");\n\n/***/ }),\n\n/***/ \"./src/lappdelegate.ts\":\n/*!*****************************!*\\\n  !*** ./src/lappdelegate.ts ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nvar __importStar = (this && this.__importStar) || function (mod) {\\r\\n    if (mod && mod.__esModule) return mod;\\r\\n    var result = {};\\r\\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\\r\\n    result[\\\"default\\\"] = mod;\\r\\n    return result;\\r\\n};\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../Framework/src/live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar Csm_CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar lappview_1 = __webpack_require__(/*! ./lappview */ \\\"./src/lappview.ts\\\");\\r\\nvar lapppal_1 = __webpack_require__(/*! ./lapppal */ \\\"./src/lapppal.ts\\\");\\r\\nvar lapptexturemanager_1 = __webpack_require__(/*! ./lapptexturemanager */ \\\"./src/lapptexturemanager.ts\\\");\\r\\nvar lapplive2dmanager_1 = __webpack_require__(/*! ./lapplive2dmanager */ \\\"./src/lapplive2dmanager.ts\\\");\\r\\nvar LAppDefine = __importStar(__webpack_require__(/*! ./lappdefine */ \\\"./src/lappdefine.ts\\\"));\\r\\nexports.canvas = null;\\r\\nexports.s_instance = null;\\r\\nexports.gl = null;\\r\\nexports.frameBuffer = null;\\r\\nvar LAppDelegate = (function () {\\r\\n    function LAppDelegate() {\\r\\n        this._captured = false;\\r\\n        this._mouseX = 0.0;\\r\\n        this._mouseY = 0.0;\\r\\n        this._isEnd = false;\\r\\n        this._cubismOption = new live2dcubismframework_1.Option();\\r\\n        this._view = new lappview_1.LAppView();\\r\\n        this._textureManager = new lapptexturemanager_1.LAppTextureManager();\\r\\n    }\\r\\n    LAppDelegate.getInstance = function () {\\r\\n        if (exports.s_instance == null) {\\r\\n            exports.s_instance = new LAppDelegate();\\r\\n        }\\r\\n        return exports.s_instance;\\r\\n    };\\r\\n    LAppDelegate.releaseInstance = function () {\\r\\n        console.log(\\\"释放实例\\\");\\r\\n        if (exports.s_instance != null) {\\r\\n            exports.s_instance.release();\\r\\n        }\\r\\n        exports.s_instance = null;\\r\\n    };\\r\\n    LAppDelegate.prototype.initialize = function () {\\r\\n        exports.canvas = document.getElementById(\\\"live2d\\\");\\r\\n        document.addEventListener(\\\"mousemove\\\", function (e) {\\r\\n            if (!LAppDelegate.getInstance()._view) {\\r\\n                lapppal_1.LAppPal.printMessage(\\\"view notfound\\\");\\r\\n                return;\\r\\n            }\\r\\n            else {\\r\\n            }\\r\\n            if (document.getElementById(\\\"live2d\\\")) {\\r\\n                var rect = document.getElementById(\\\"live2d\\\").getBoundingClientRect();\\r\\n                var posX = e.clientX - rect.left;\\r\\n                var posY = e.clientY - rect.top;\\r\\n                LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\\r\\n            }\\r\\n        }, false);\\r\\n        document.addEventListener(\\\"mouseout\\\", function (e) {\\r\\n            var live2DManager = lapplive2dmanager_1.LAppLive2DManager.getInstance();\\r\\n            live2DManager.onDrag(0.0, 0.0);\\r\\n        }, false);\\r\\n        exports.canvas.addEventListener(\\\"click\\\", function (e) {\\r\\n            if (!LAppDelegate.getInstance()._view) {\\r\\n                lapppal_1.LAppPal.printMessage(\\\"view notfound\\\");\\r\\n                return;\\r\\n            }\\r\\n            var rect = exports.canvas.getBoundingClientRect();\\r\\n            var posX = e.clientX - rect.left;\\r\\n            var posY = e.clientY - rect.top;\\r\\n            LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\\r\\n            LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\\r\\n        }, false);\\r\\n        exports.gl = exports.canvas.getContext('webgl') || exports.canvas.getContext('experimental-webgl');\\r\\n        if (!exports.gl) {\\r\\n            alert('Cannot initialize WebGL. This browser does not support.');\\r\\n            exports.gl = null;\\r\\n            document.body.innerHTML =\\r\\n                'This browser does not support the <code>&lt;canvas&gt;</code> element.';\\r\\n            return false;\\r\\n        }\\r\\n        if (!exports.frameBuffer) {\\r\\n            exports.frameBuffer = exports.gl.getParameter(exports.gl.FRAMEBUFFER_BINDING);\\r\\n        }\\r\\n        exports.gl.enable(exports.gl.BLEND);\\r\\n        exports.gl.blendFunc(exports.gl.SRC_ALPHA, exports.gl.ONE_MINUS_SRC_ALPHA);\\r\\n        var supportTouch = 'ontouchend' in exports.canvas;\\r\\n        if (supportTouch) {\\r\\n            exports.canvas.ontouchstart = onTouchBegan;\\r\\n            exports.canvas.ontouchmove = onTouchMoved;\\r\\n            exports.canvas.ontouchend = onTouchEnded;\\r\\n            exports.canvas.ontouchcancel = onTouchCancel;\\r\\n        }\\r\\n        else {\\r\\n        }\\r\\n        this._view.initialize();\\r\\n        this.initializeCubism();\\r\\n        return true;\\r\\n    };\\r\\n    LAppDelegate.prototype.release = function () {\\r\\n        this._textureManager.release();\\r\\n        this._textureManager = null;\\r\\n        this._view.release();\\r\\n        this._view = null;\\r\\n        lapplive2dmanager_1.LAppLive2DManager.releaseInstance();\\r\\n        Csm_CubismFramework.dispose();\\r\\n    };\\r\\n    LAppDelegate.prototype.run = function () {\\r\\n        var _this = this;\\r\\n        var loop = function () {\\r\\n            if (exports.s_instance == null) {\\r\\n                return;\\r\\n            }\\r\\n            lapppal_1.LAppPal.updateTime();\\r\\n            exports.gl.clearColor(0.0, 0.0, 0.0, 0.0);\\r\\n            exports.gl.enable(exports.gl.DEPTH_TEST);\\r\\n            exports.gl.depthFunc(exports.gl.LEQUAL);\\r\\n            exports.gl.clear(exports.gl.COLOR_BUFFER_BIT | exports.gl.DEPTH_BUFFER_BIT);\\r\\n            exports.gl.clearDepth(1.0);\\r\\n            exports.gl.enable(exports.gl.BLEND);\\r\\n            exports.gl.blendFunc(exports.gl.SRC_ALPHA, exports.gl.ONE_MINUS_SRC_ALPHA);\\r\\n            _this._view.render();\\r\\n            requestAnimationFrame(loop);\\r\\n        };\\r\\n        loop();\\r\\n    };\\r\\n    LAppDelegate.prototype.createShader = function () {\\r\\n        var vertexShaderId = exports.gl.createShader(exports.gl.VERTEX_SHADER);\\r\\n        if (vertexShaderId == null) {\\r\\n            lapppal_1.LAppPal.printMessage('failed to create vertexShader');\\r\\n            return null;\\r\\n        }\\r\\n        var vertexShader = 'precision mediump float;' +\\r\\n            'attribute vec3 position;' +\\r\\n            'attribute vec2 uv;' +\\r\\n            'varying vec2 vuv;' +\\r\\n            'void main(void)' +\\r\\n            '{' +\\r\\n            '   gl_Position = vec4(position, 1.0);' +\\r\\n            '   vuv = uv;' +\\r\\n            '}';\\r\\n        exports.gl.shaderSource(vertexShaderId, vertexShader);\\r\\n        exports.gl.compileShader(vertexShaderId);\\r\\n        var fragmentShaderId = exports.gl.createShader(exports.gl.FRAGMENT_SHADER);\\r\\n        if (fragmentShaderId == null) {\\r\\n            lapppal_1.LAppPal.printMessage('failed to create fragmentShader');\\r\\n            return null;\\r\\n        }\\r\\n        var fragmentShader = 'precision mediump float;' +\\r\\n            'varying vec2 vuv;' +\\r\\n            'uniform sampler2D texture;' +\\r\\n            'void main(void)' +\\r\\n            '{' +\\r\\n            '   gl_FragColor = texture2D(texture, vuv);' +\\r\\n            '}';\\r\\n        exports.gl.shaderSource(fragmentShaderId, fragmentShader);\\r\\n        exports.gl.compileShader(fragmentShaderId);\\r\\n        var programId = exports.gl.createProgram();\\r\\n        exports.gl.attachShader(programId, vertexShaderId);\\r\\n        exports.gl.attachShader(programId, fragmentShaderId);\\r\\n        exports.gl.deleteShader(vertexShaderId);\\r\\n        exports.gl.deleteShader(fragmentShaderId);\\r\\n        exports.gl.linkProgram(programId);\\r\\n        exports.gl.useProgram(programId);\\r\\n        return programId;\\r\\n    };\\r\\n    LAppDelegate.prototype.getView = function () {\\r\\n        return this._view;\\r\\n    };\\r\\n    LAppDelegate.prototype.getTextureManager = function () {\\r\\n        return this._textureManager;\\r\\n    };\\r\\n    LAppDelegate.prototype.initializeCubism = function () {\\r\\n        this._cubismOption.logFunction = lapppal_1.LAppPal.printMessage;\\r\\n        this._cubismOption.loggingLevel = LAppDefine.CubismLoggingLevel;\\r\\n        Csm_CubismFramework.startUp(this._cubismOption);\\r\\n        Csm_CubismFramework.initialize();\\r\\n        lapplive2dmanager_1.LAppLive2DManager.getInstance();\\r\\n        lapppal_1.LAppPal.updateTime();\\r\\n        this._view.initializeSprite();\\r\\n    };\\r\\n    return LAppDelegate;\\r\\n}());\\r\\nexports.LAppDelegate = LAppDelegate;\\r\\nfunction onClickBegan(e) {\\r\\n    if (!LAppDelegate.getInstance()._view) {\\r\\n        lapppal_1.LAppPal.printMessage('view notfound');\\r\\n        return;\\r\\n    }\\r\\n    LAppDelegate.getInstance()._captured = true;\\r\\n    var posX = e.pageX;\\r\\n    var posY = e.pageY;\\r\\n    LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\\r\\n}\\r\\nfunction onMouseMoved(e) {\\r\\n    if (!LAppDelegate.getInstance()._captured) {\\r\\n        return;\\r\\n    }\\r\\n    if (!LAppDelegate.getInstance()._view) {\\r\\n        lapppal_1.LAppPal.printMessage('view notfound');\\r\\n        return;\\r\\n    }\\r\\n    var rect = e.target.getBoundingClientRect();\\r\\n    var posX = e.clientX - rect.left;\\r\\n    var posY = e.clientY - rect.top;\\r\\n    LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\\r\\n}\\r\\nfunction onClickEnded(e) {\\r\\n    LAppDelegate.getInstance()._captured = false;\\r\\n    if (!LAppDelegate.getInstance()._view) {\\r\\n        lapppal_1.LAppPal.printMessage('view notfound');\\r\\n        return;\\r\\n    }\\r\\n    var rect = e.target.getBoundingClientRect();\\r\\n    var posX = e.clientX - rect.left;\\r\\n    var posY = e.clientY - rect.top;\\r\\n    LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\\r\\n}\\r\\nfunction onTouchBegan(e) {\\r\\n    if (!LAppDelegate.getInstance()._view) {\\r\\n        lapppal_1.LAppPal.printMessage('view notfound');\\r\\n        return;\\r\\n    }\\r\\n    LAppDelegate.getInstance()._captured = true;\\r\\n    var posX = e.changedTouches[0].pageX;\\r\\n    var posY = e.changedTouches[0].pageY;\\r\\n    LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\\r\\n}\\r\\nfunction onTouchMoved(e) {\\r\\n    if (!LAppDelegate.getInstance()._captured) {\\r\\n        return;\\r\\n    }\\r\\n    if (!LAppDelegate.getInstance()._view) {\\r\\n        lapppal_1.LAppPal.printMessage('view notfound');\\r\\n        return;\\r\\n    }\\r\\n    var rect = e.target.getBoundingClientRect();\\r\\n    var posX = e.changedTouches[0].clientX - rect.left;\\r\\n    var posY = e.changedTouches[0].clientY - rect.top;\\r\\n    LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\\r\\n}\\r\\nfunction onTouchEnded(e) {\\r\\n    LAppDelegate.getInstance()._captured = false;\\r\\n    if (!LAppDelegate.getInstance()._view) {\\r\\n        lapppal_1.LAppPal.printMessage('view notfound');\\r\\n        return;\\r\\n    }\\r\\n    var rect = e.target.getBoundingClientRect();\\r\\n    var posX = e.changedTouches[0].clientX - rect.left;\\r\\n    var posY = e.changedTouches[0].clientY - rect.top;\\r\\n    LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\\r\\n}\\r\\nfunction onTouchCancel(e) {\\r\\n    LAppDelegate.getInstance()._captured = false;\\r\\n    if (!LAppDelegate.getInstance()._view) {\\r\\n        lapppal_1.LAppPal.printMessage('view notfound');\\r\\n        return;\\r\\n    }\\r\\n    var rect = e.target.getBoundingClientRect();\\r\\n    var posX = e.changedTouches[0].clientX - rect.left;\\r\\n    var posY = e.changedTouches[0].clientY - rect.top;\\r\\n    LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\\r\\n}\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./src/lappdelegate.ts\\n\");\n\n/***/ }),\n\n/***/ \"./src/lapplive2dmanager.ts\":\n/*!**********************************!*\\\n  !*** ./src/lapplive2dmanager.ts ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nvar __importStar = (this && this.__importStar) || function (mod) {\\r\\n    if (mod && mod.__esModule) return mod;\\r\\n    var result = {};\\r\\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\\r\\n    result[\\\"default\\\"] = mod;\\r\\n    return result;\\r\\n};\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmatrix44_1 = __webpack_require__(/*! ../Framework/src/math/cubismmatrix44 */ \\\"./Framework/src/math/cubismmatrix44.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../Framework/src/type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar Csm_csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar Csm_CubismMatrix44 = cubismmatrix44_1.Live2DCubismFramework.CubismMatrix44;\\r\\nvar lappmodel_1 = __webpack_require__(/*! ./lappmodel */ \\\"./src/lappmodel.ts\\\");\\r\\nvar lapppal_1 = __webpack_require__(/*! ./lapppal */ \\\"./src/lapppal.ts\\\");\\r\\nvar lappdelegate_1 = __webpack_require__(/*! ./lappdelegate */ \\\"./src/lappdelegate.ts\\\");\\r\\nvar LAppDefine = __importStar(__webpack_require__(/*! ./lappdefine */ \\\"./src/lappdefine.ts\\\"));\\r\\nexports.s_instance = null;\\r\\nvar timer = null;\\r\\nvar LAppLive2DManager = (function () {\\r\\n    function LAppLive2DManager() {\\r\\n        this._finishedMotion = function (self) {\\r\\n            lapppal_1.LAppPal.printMessage('Motion Finished:');\\r\\n        };\\r\\n        this._viewMatrix = new Csm_CubismMatrix44();\\r\\n        this._models = new Csm_csmVector();\\r\\n        this._sceneIndex = 0;\\r\\n        this.changeScene(this._sceneIndex);\\r\\n    }\\r\\n    LAppLive2DManager.getInstance = function () {\\r\\n        if (exports.s_instance == null) {\\r\\n            exports.s_instance = new LAppLive2DManager();\\r\\n        }\\r\\n        return exports.s_instance;\\r\\n    };\\r\\n    LAppLive2DManager.releaseInstance = function () {\\r\\n        if (exports.s_instance != null) {\\r\\n            exports.s_instance = void 0;\\r\\n        }\\r\\n        exports.s_instance = null;\\r\\n    };\\r\\n    LAppLive2DManager.prototype.getModel = function (no) {\\r\\n        if (no < this._models.getSize()) {\\r\\n            return this._models.at(no);\\r\\n        }\\r\\n        return null;\\r\\n    };\\r\\n    LAppLive2DManager.prototype.releaseAllModel = function () {\\r\\n        for (var i = 0; i < this._models.getSize(); i++) {\\r\\n            this._models.at(i).release();\\r\\n            this._models.set(i, null);\\r\\n        }\\r\\n        this._models.clear();\\r\\n    };\\r\\n    LAppLive2DManager.prototype.onDrag = function (x, y) {\\r\\n        for (var i = 0; i < this._models.getSize(); i++) {\\r\\n            var model = this.getModel(i);\\r\\n            if (model) {\\r\\n                model.setDragging(x, y);\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    LAppLive2DManager.prototype.onTap = function (x, y) {\\r\\n        if (LAppDefine.DebugLogEnable) {\\r\\n            lapppal_1.LAppPal.printMessage(\\\"[APP]tap point: {x: \\\" + x.toFixed(2) + \\\" y: \\\" + y.toFixed(2) + \\\"}\\\");\\r\\n        }\\r\\n        for (var i = 0; i < this._models.getSize(); i++) {\\r\\n            if (this._models.at(i).hitTest(LAppDefine.HitAreaNameHead, x, y)) {\\r\\n                if (LAppDefine.DebugLogEnable) {\\r\\n                    lapppal_1.LAppPal.printMessage(\\\"[APP]hit area: [\\\" + LAppDefine.HitAreaNameHead + \\\"]\\\");\\r\\n                    this.talkPrint(LAppDefine.HitHeadList[Math.floor(Math.random() * LAppDefine.HitHeadList.length)]);\\r\\n                }\\r\\n                this._models.at(i).setRandomExpression();\\r\\n            }\\r\\n            else if (this._models.at(i).hitTest(LAppDefine.HitAreaNameBody, x, y)) {\\r\\n                if (LAppDefine.DebugLogEnable) {\\r\\n                    lapppal_1.LAppPal.printMessage(\\\"[APP]hit area: [\\\" + LAppDefine.HitAreaNameBody + \\\"]\\\");\\r\\n                    this.talkPrint(LAppDefine.HitBodyList[Math.floor(Math.random() * LAppDefine.HitBodyList.length)]);\\r\\n                }\\r\\n                this._models\\r\\n                    .at(i)\\r\\n                    .startRandomMotion(LAppDefine.MotionGroupTapBody, LAppDefine.PriorityNormal, this._finishedMotion);\\r\\n            }\\r\\n            else {\\r\\n                this._models\\r\\n                    .at(i)\\r\\n                    .startRandomMotion(LAppDefine.MotionGroupDefault, LAppDefine.PriorityNormal, this._finishedMotion);\\r\\n                this.talkPrint(LAppDefine.HitDefaultList[Math.floor(Math.random() * LAppDefine.HitDefaultList.length)]);\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    LAppLive2DManager.prototype.talkPrint = function (print) {\\r\\n        clearTimeout(timer);\\r\\n        var printNow = document.getElementById('live2d-print');\\r\\n        printNow.innerHTML = print;\\r\\n        printNow.style.display = 'block';\\r\\n        timer = setTimeout(function () {\\r\\n            printNow.innerHTML = '';\\r\\n            printNow.style.display = 'none';\\r\\n        }, 2000);\\r\\n    };\\r\\n    LAppLive2DManager.prototype.onUpdate = function () {\\r\\n        var projection = new Csm_CubismMatrix44();\\r\\n        var width = lappdelegate_1.canvas.width, height = lappdelegate_1.canvas.height;\\r\\n        projection.scale(1.0, width / height);\\r\\n        if (this._viewMatrix != null) {\\r\\n            projection.multiplyByMatrix(this._viewMatrix);\\r\\n        }\\r\\n        var saveProjection = projection.clone();\\r\\n        var modelCount = this._models.getSize();\\r\\n        for (var i = 0; i < modelCount; ++i) {\\r\\n            var model = this.getModel(i);\\r\\n            projection = saveProjection.clone();\\r\\n            model.update();\\r\\n            model.draw(projection);\\r\\n        }\\r\\n    };\\r\\n    LAppLive2DManager.prototype.nextScene = function () {\\r\\n        var no = (this._sceneIndex + 1) % LAppDefine.ModelDir.length;\\r\\n        this.changeScene(no);\\r\\n    };\\r\\n    LAppLive2DManager.prototype.changeScene = function (index) {\\r\\n        this._sceneIndex = index;\\r\\n        if (LAppDefine.DebugLogEnable) {\\r\\n            lapppal_1.LAppPal.printMessage(\\\"[APP]model index: \\\" + this._sceneIndex);\\r\\n        }\\r\\n        var model = LAppDefine.ModelDir[index];\\r\\n        var modelPath = LAppDefine.ResourcesPath + model + '/';\\r\\n        var modelJsonName = LAppDefine.ModelDir[index];\\r\\n        modelJsonName += '.model3.json';\\r\\n        this.releaseAllModel();\\r\\n        this._models.pushBack(new lappmodel_1.LAppModel());\\r\\n        this._models.at(0).loadAssets(modelPath, modelJsonName);\\r\\n    };\\r\\n    return LAppLive2DManager;\\r\\n}());\\r\\nexports.LAppLive2DManager = LAppLive2DManager;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./src/lapplive2dmanager.ts\\n\");\n\n/***/ }),\n\n/***/ \"./src/lappmodel.ts\":\n/*!**************************!*\\\n  !*** ./src/lappmodel.ts ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = function (d, b) {\\r\\n        extendStatics = Object.setPrototypeOf ||\\r\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n        return extendStatics(d, b);\\r\\n    };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nvar __importStar = (this && this.__importStar) || function (mod) {\\r\\n    if (mod && mod.__esModule) return mod;\\r\\n    var result = {};\\r\\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\\r\\n    result[\\\"default\\\"] = mod;\\r\\n    return result;\\r\\n};\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar live2dcubismframework_1 = __webpack_require__(/*! ../Framework/src/live2dcubismframework */ \\\"./Framework/src/live2dcubismframework.ts\\\");\\r\\nvar cubismusermodel_1 = __webpack_require__(/*! ../Framework/src/model/cubismusermodel */ \\\"./Framework/src/model/cubismusermodel.ts\\\");\\r\\nvar cubismmodelsettingjson_1 = __webpack_require__(/*! ../Framework/src/cubismmodelsettingjson */ \\\"./Framework/src/cubismmodelsettingjson.ts\\\");\\r\\nvar cubismdefaultparameterid_1 = __webpack_require__(/*! ../Framework/src/cubismdefaultparameterid */ \\\"./Framework/src/cubismdefaultparameterid.ts\\\");\\r\\nvar acubismmotion_1 = __webpack_require__(/*! ../Framework/src/motion/acubismmotion */ \\\"./Framework/src/motion/acubismmotion.ts\\\");\\r\\nvar cubismeyeblink_1 = __webpack_require__(/*! ../Framework/src/effect/cubismeyeblink */ \\\"./Framework/src/effect/cubismeyeblink.ts\\\");\\r\\nvar cubismbreath_1 = __webpack_require__(/*! ../Framework/src/effect/cubismbreath */ \\\"./Framework/src/effect/cubismbreath.ts\\\");\\r\\nvar csmvector_1 = __webpack_require__(/*! ../Framework/src/type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar csmmap_1 = __webpack_require__(/*! ../Framework/src/type/csmmap */ \\\"./Framework/src/type/csmmap.ts\\\");\\r\\nvar cubismmotionqueuemanager_1 = __webpack_require__(/*! ../Framework/src/motion/cubismmotionqueuemanager */ \\\"./Framework/src/motion/cubismmotionqueuemanager.ts\\\");\\r\\nvar cubismdebug_1 = __webpack_require__(/*! ../Framework/src/utils/cubismdebug */ \\\"./Framework/src/utils/cubismdebug.ts\\\");\\r\\nvar InvalidMotionQueueEntryHandleValue = cubismmotionqueuemanager_1.Live2DCubismFramework.InvalidMotionQueueEntryHandleValue;\\r\\nvar csmMap = csmmap_1.Live2DCubismFramework.csmMap;\\r\\nvar csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar CubismBreath = cubismbreath_1.Live2DCubismFramework.CubismBreath;\\r\\nvar BreathParameterData = cubismbreath_1.Live2DCubismFramework.BreathParameterData;\\r\\nvar CubismEyeBlink = cubismeyeblink_1.Live2DCubismFramework.CubismEyeBlink;\\r\\nvar ACubismMotion = acubismmotion_1.Live2DCubismFramework.ACubismMotion;\\r\\nvar CubismFramework = live2dcubismframework_1.Live2DCubismFramework.CubismFramework;\\r\\nvar CubismUserModel = cubismusermodel_1.Live2DCubismFramework.CubismUserModel;\\r\\nvar CubismModelSettingJson = cubismmodelsettingjson_1.Live2DCubismFramework.CubismModelSettingJson;\\r\\nvar CubismDefaultParameterId = cubismdefaultparameterid_1.Live2DCubismFramework;\\r\\nvar lapppal_1 = __webpack_require__(/*! ./lapppal */ \\\"./src/lapppal.ts\\\");\\r\\nvar lappdelegate_1 = __webpack_require__(/*! ./lappdelegate */ \\\"./src/lappdelegate.ts\\\");\\r\\nvar LAppDefine = __importStar(__webpack_require__(/*! ./lappdefine */ \\\"./src/lappdefine.ts\\\"));\\r\\n__webpack_require__(/*! whatwg-fetch */ \\\"./node_modules/whatwg-fetch/fetch.js\\\");\\r\\nvar LoadStep;\\r\\n(function (LoadStep) {\\r\\n    LoadStep[LoadStep[\\\"LoadAssets\\\"] = 0] = \\\"LoadAssets\\\";\\r\\n    LoadStep[LoadStep[\\\"LoadModel\\\"] = 1] = \\\"LoadModel\\\";\\r\\n    LoadStep[LoadStep[\\\"WaitLoadModel\\\"] = 2] = \\\"WaitLoadModel\\\";\\r\\n    LoadStep[LoadStep[\\\"LoadExpression\\\"] = 3] = \\\"LoadExpression\\\";\\r\\n    LoadStep[LoadStep[\\\"WaitLoadExpression\\\"] = 4] = \\\"WaitLoadExpression\\\";\\r\\n    LoadStep[LoadStep[\\\"LoadPhysics\\\"] = 5] = \\\"LoadPhysics\\\";\\r\\n    LoadStep[LoadStep[\\\"WaitLoadPhysics\\\"] = 6] = \\\"WaitLoadPhysics\\\";\\r\\n    LoadStep[LoadStep[\\\"LoadPose\\\"] = 7] = \\\"LoadPose\\\";\\r\\n    LoadStep[LoadStep[\\\"WaitLoadPose\\\"] = 8] = \\\"WaitLoadPose\\\";\\r\\n    LoadStep[LoadStep[\\\"SetupEyeBlink\\\"] = 9] = \\\"SetupEyeBlink\\\";\\r\\n    LoadStep[LoadStep[\\\"SetupBreath\\\"] = 10] = \\\"SetupBreath\\\";\\r\\n    LoadStep[LoadStep[\\\"LoadUserData\\\"] = 11] = \\\"LoadUserData\\\";\\r\\n    LoadStep[LoadStep[\\\"WaitLoadUserData\\\"] = 12] = \\\"WaitLoadUserData\\\";\\r\\n    LoadStep[LoadStep[\\\"SetupEyeBlinkIds\\\"] = 13] = \\\"SetupEyeBlinkIds\\\";\\r\\n    LoadStep[LoadStep[\\\"SetupLipSyncIds\\\"] = 14] = \\\"SetupLipSyncIds\\\";\\r\\n    LoadStep[LoadStep[\\\"SetupLayout\\\"] = 15] = \\\"SetupLayout\\\";\\r\\n    LoadStep[LoadStep[\\\"LoadMotion\\\"] = 16] = \\\"LoadMotion\\\";\\r\\n    LoadStep[LoadStep[\\\"WaitLoadMotion\\\"] = 17] = \\\"WaitLoadMotion\\\";\\r\\n    LoadStep[LoadStep[\\\"CompleteInitialize\\\"] = 18] = \\\"CompleteInitialize\\\";\\r\\n    LoadStep[LoadStep[\\\"CompleteSetupModel\\\"] = 19] = \\\"CompleteSetupModel\\\";\\r\\n    LoadStep[LoadStep[\\\"LoadTexture\\\"] = 20] = \\\"LoadTexture\\\";\\r\\n    LoadStep[LoadStep[\\\"WaitLoadTexture\\\"] = 21] = \\\"WaitLoadTexture\\\";\\r\\n    LoadStep[LoadStep[\\\"CompleteSetup\\\"] = 22] = \\\"CompleteSetup\\\";\\r\\n})(LoadStep || (LoadStep = {}));\\r\\nvar LAppModel = (function (_super) {\\r\\n    __extends(LAppModel, _super);\\r\\n    function LAppModel() {\\r\\n        var _this = _super.call(this) || this;\\r\\n        _this._modelSetting = null;\\r\\n        _this._modelHomeDir = null;\\r\\n        _this._userTimeSeconds = 0.0;\\r\\n        _this._eyeBlinkIds = new csmVector();\\r\\n        _this._lipSyncIds = new csmVector();\\r\\n        _this._motions = new csmMap();\\r\\n        _this._expressions = new csmMap();\\r\\n        _this._hitArea = new csmVector();\\r\\n        _this._userArea = new csmVector();\\r\\n        _this._idParamAngleX = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamAngleX);\\r\\n        _this._idParamAngleY = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamAngleY);\\r\\n        _this._idParamAngleZ = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamAngleZ);\\r\\n        _this._idParamEyeBallX = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamEyeBallX);\\r\\n        _this._idParamEyeBallY = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamEyeBallY);\\r\\n        _this._idParamBodyAngleX = CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamBodyAngleX);\\r\\n        _this._state = LoadStep.LoadAssets;\\r\\n        _this._expressionCount = 0;\\r\\n        _this._textureCount = 0;\\r\\n        _this._motionCount = 0;\\r\\n        _this._allMotionCount = 0;\\r\\n        return _this;\\r\\n    }\\r\\n    LAppModel.prototype.loadAssets = function (dir, fileName) {\\r\\n        var _this = this;\\r\\n        console.log('资源路径', dir);\\r\\n        this._modelHomeDir = dir;\\r\\n        fetch(\\\"\\\" + this._modelHomeDir + fileName)\\r\\n            .then(function (response) { return response.arrayBuffer(); })\\r\\n            .then(function (arrayBuffer) {\\r\\n            var setting = new CubismModelSettingJson(arrayBuffer, arrayBuffer.byteLength);\\r\\n            _this._state = LoadStep.LoadModel;\\r\\n            _this.setupModel(setting);\\r\\n        });\\r\\n    };\\r\\n    LAppModel.prototype.setupModel = function (setting) {\\r\\n        var _this = this;\\r\\n        this._updating = true;\\r\\n        this._initialized = false;\\r\\n        this._modelSetting = setting;\\r\\n        if (this._modelSetting.getModelFileName() != '') {\\r\\n            var modelFileName = this._modelSetting.getModelFileName();\\r\\n            fetch(\\\"\\\" + this._modelHomeDir + modelFileName)\\r\\n                .then(function (response) { return response.arrayBuffer(); })\\r\\n                .then(function (arrayBuffer) {\\r\\n                _this.loadModel(arrayBuffer);\\r\\n                _this._state = LoadStep.LoadExpression;\\r\\n                loadCubismExpression();\\r\\n            });\\r\\n            this._state = LoadStep.WaitLoadModel;\\r\\n        }\\r\\n        else {\\r\\n            lapppal_1.LAppPal.printMessage('Model data does not exist.');\\r\\n        }\\r\\n        var loadCubismExpression = function () {\\r\\n            if (_this._modelSetting.getExpressionCount() > 0) {\\r\\n                var count_1 = _this._modelSetting.getExpressionCount();\\r\\n                var _loop_1 = function (i) {\\r\\n                    var expressionName = _this._modelSetting.getExpressionName(i);\\r\\n                    var expressionFileName = _this._modelSetting.getExpressionFileName(i);\\r\\n                    fetch(\\\"\\\" + _this._modelHomeDir + expressionFileName)\\r\\n                        .then(function (response) { return response.arrayBuffer(); })\\r\\n                        .then(function (arrayBuffer) {\\r\\n                        var motion = _this.loadExpression(arrayBuffer, arrayBuffer.byteLength, expressionName);\\r\\n                        if (_this._expressions.getValue(expressionName) != null) {\\r\\n                            ACubismMotion.delete(_this._expressions.getValue(expressionName));\\r\\n                            _this._expressions.setValue(expressionName, null);\\r\\n                        }\\r\\n                        _this._expressions.setValue(expressionName, motion);\\r\\n                        _this._expressionCount++;\\r\\n                        if (_this._expressionCount >= count_1) {\\r\\n                            _this._state = LoadStep.LoadPhysics;\\r\\n                            loadCubismPhysics();\\r\\n                        }\\r\\n                    });\\r\\n                };\\r\\n                for (var i = 0; i < count_1; i++) {\\r\\n                    _loop_1(i);\\r\\n                }\\r\\n                _this._state = LoadStep.WaitLoadExpression;\\r\\n            }\\r\\n            else {\\r\\n                _this._state = LoadStep.LoadPhysics;\\r\\n                loadCubismPhysics();\\r\\n            }\\r\\n        };\\r\\n        var loadCubismPhysics = function () {\\r\\n            if (_this._modelSetting.getPhysicsFileName() != '') {\\r\\n                var physicsFileName = _this._modelSetting.getPhysicsFileName();\\r\\n                fetch(\\\"\\\" + _this._modelHomeDir + physicsFileName)\\r\\n                    .then(function (response) { return response.arrayBuffer(); })\\r\\n                    .then(function (arrayBuffer) {\\r\\n                    _this.loadPhysics(arrayBuffer, arrayBuffer.byteLength);\\r\\n                    _this._state = LoadStep.LoadPose;\\r\\n                    loadCubismPose();\\r\\n                });\\r\\n                _this._state = LoadStep.WaitLoadPhysics;\\r\\n            }\\r\\n            else {\\r\\n                _this._state = LoadStep.LoadPose;\\r\\n                loadCubismPose();\\r\\n            }\\r\\n        };\\r\\n        var loadCubismPose = function () {\\r\\n            if (_this._modelSetting.getPoseFileName() != '') {\\r\\n                var poseFileName = _this._modelSetting.getPoseFileName();\\r\\n                fetch(\\\"\\\" + _this._modelHomeDir + poseFileName)\\r\\n                    .then(function (response) { return response.arrayBuffer(); })\\r\\n                    .then(function (arrayBuffer) {\\r\\n                    _this.loadPose(arrayBuffer, arrayBuffer.byteLength);\\r\\n                    _this._state = LoadStep.SetupEyeBlink;\\r\\n                    setupEyeBlink();\\r\\n                });\\r\\n                _this._state = LoadStep.WaitLoadPose;\\r\\n            }\\r\\n            else {\\r\\n                _this._state = LoadStep.SetupEyeBlink;\\r\\n                setupEyeBlink();\\r\\n            }\\r\\n        };\\r\\n        var setupEyeBlink = function () {\\r\\n            if (_this._modelSetting.getEyeBlinkParameterCount() > 0) {\\r\\n                _this._eyeBlink = CubismEyeBlink.create(_this._modelSetting);\\r\\n                _this._state = LoadStep.SetupBreath;\\r\\n            }\\r\\n            setupBreath();\\r\\n        };\\r\\n        var setupBreath = function () {\\r\\n            _this._breath = CubismBreath.create();\\r\\n            var breathParameters = new csmVector();\\r\\n            breathParameters.pushBack(new BreathParameterData(_this._idParamAngleX, 0.0, 15.0, 6.5345, 0.5));\\r\\n            breathParameters.pushBack(new BreathParameterData(_this._idParamAngleY, 0.0, 8.0, 3.5345, 0.5));\\r\\n            breathParameters.pushBack(new BreathParameterData(_this._idParamAngleZ, 0.0, 10.0, 5.5345, 0.5));\\r\\n            breathParameters.pushBack(new BreathParameterData(_this._idParamBodyAngleX, 0.0, 4.0, 15.5345, 0.5));\\r\\n            breathParameters.pushBack(new BreathParameterData(CubismFramework.getIdManager().getId(CubismDefaultParameterId.ParamBreath), 0.0, 0.5, 3.2345, 0.5));\\r\\n            _this._breath.setParameters(breathParameters);\\r\\n            _this._state = LoadStep.LoadUserData;\\r\\n            loadUserData();\\r\\n        };\\r\\n        var loadUserData = function () {\\r\\n            if (_this._modelSetting.getUserDataFile() != '') {\\r\\n                var userDataFile = _this._modelSetting.getUserDataFile();\\r\\n                fetch(\\\"\\\" + _this._modelHomeDir + userDataFile)\\r\\n                    .then(function (response) { return response.arrayBuffer(); })\\r\\n                    .then(function (arrayBuffer) {\\r\\n                    _this.loadUserData(arrayBuffer, arrayBuffer.byteLength);\\r\\n                    _this._state = LoadStep.SetupEyeBlinkIds;\\r\\n                    setupEyeBlinkIds();\\r\\n                });\\r\\n                _this._state = LoadStep.WaitLoadUserData;\\r\\n            }\\r\\n            else {\\r\\n                _this._state = LoadStep.SetupEyeBlinkIds;\\r\\n                setupEyeBlinkIds();\\r\\n            }\\r\\n        };\\r\\n        var setupEyeBlinkIds = function () {\\r\\n            var eyeBlinkIdCount = _this._modelSetting.getEyeBlinkParameterCount();\\r\\n            for (var i = 0; i < eyeBlinkIdCount; ++i) {\\r\\n                _this._eyeBlinkIds.pushBack(_this._modelSetting.getEyeBlinkParameterId(i));\\r\\n            }\\r\\n            _this._state = LoadStep.SetupLipSyncIds;\\r\\n            setupLipSyncIds();\\r\\n        };\\r\\n        var setupLipSyncIds = function () {\\r\\n            var lipSyncIdCount = _this._modelSetting.getLipSyncParameterCount();\\r\\n            for (var i = 0; i < lipSyncIdCount; ++i) {\\r\\n                _this._lipSyncIds.pushBack(_this._modelSetting.getLipSyncParameterId(i));\\r\\n            }\\r\\n            _this._state = LoadStep.SetupLayout;\\r\\n            setupLayout();\\r\\n        };\\r\\n        var setupLayout = function () {\\r\\n            var layout = new csmMap();\\r\\n            _this._modelSetting.getLayoutMap(layout);\\r\\n            _this._modelMatrix.setupFromLayout(layout);\\r\\n            _this._state = LoadStep.LoadMotion;\\r\\n            loadCubismMotion();\\r\\n        };\\r\\n        var loadCubismMotion = function () {\\r\\n            document.getElementById('live2d-hidden').style.display = 'block';\\r\\n            _this._state = LoadStep.WaitLoadMotion;\\r\\n            _this._model.saveParameters();\\r\\n            _this._allMotionCount = 0;\\r\\n            _this._motionCount = 0;\\r\\n            var group = [];\\r\\n            var motionGroupCount = _this._modelSetting.getMotionGroupCount();\\r\\n            for (var i = 0; i < motionGroupCount; i++) {\\r\\n                group[i] = _this._modelSetting.getMotionGroupName(i);\\r\\n                _this._allMotionCount += _this._modelSetting.getMotionCount(group[i]);\\r\\n            }\\r\\n            for (var i = 0; i < motionGroupCount; i++) {\\r\\n                _this.preLoadMotionGroup(group[i]);\\r\\n            }\\r\\n            if (motionGroupCount == 0) {\\r\\n                _this._state = LoadStep.LoadTexture;\\r\\n                _this._motionManager.stopAllMotions();\\r\\n                _this._updating = false;\\r\\n                _this._initialized = true;\\r\\n                _this.createRenderer();\\r\\n                _this.setupTextures();\\r\\n                _this.getRenderer().startUp(lappdelegate_1.gl);\\r\\n            }\\r\\n        };\\r\\n    };\\r\\n    LAppModel.prototype.setupTextures = function () {\\r\\n        var _this = this;\\r\\n        var usePremultiply = true;\\r\\n        if (this._state == LoadStep.LoadTexture) {\\r\\n            var textureCount_1 = this._modelSetting.getTextureCount();\\r\\n            var _loop_2 = function (modelTextureNumber) {\\r\\n                if (this_1._modelSetting.getTextureFileName(modelTextureNumber) == '') {\\r\\n                    return \\\"continue\\\";\\r\\n                }\\r\\n                var texturePath = this_1._modelSetting.getTextureFileName(modelTextureNumber);\\r\\n                texturePath = this_1._modelHomeDir + texturePath;\\r\\n                var onLoad = function (textureInfo) {\\r\\n                    _this.getRenderer().bindTexture(modelTextureNumber, textureInfo.id);\\r\\n                    _this._textureCount++;\\r\\n                    if (_this._textureCount >= textureCount_1) {\\r\\n                        _this._state = LoadStep.CompleteSetup;\\r\\n                    }\\r\\n                };\\r\\n                lappdelegate_1.LAppDelegate.getInstance()\\r\\n                    .getTextureManager()\\r\\n                    .createTextureFromPngFile(texturePath, usePremultiply, onLoad);\\r\\n                this_1.getRenderer().setIsPremultipliedAlpha(usePremultiply);\\r\\n            };\\r\\n            var this_1 = this;\\r\\n            for (var modelTextureNumber = 0; modelTextureNumber < textureCount_1; modelTextureNumber++) {\\r\\n                _loop_2(modelTextureNumber);\\r\\n            }\\r\\n            this._state = LoadStep.WaitLoadTexture;\\r\\n        }\\r\\n    };\\r\\n    LAppModel.prototype.reloadRenderer = function () {\\r\\n        this.deleteRenderer();\\r\\n        this.createRenderer();\\r\\n        this.setupTextures();\\r\\n    };\\r\\n    LAppModel.prototype.update = function () {\\r\\n        if (this._state != LoadStep.CompleteSetup)\\r\\n            return;\\r\\n        var deltaTimeSeconds = lapppal_1.LAppPal.getDeltaTime();\\r\\n        this._userTimeSeconds += deltaTimeSeconds;\\r\\n        this._dragManager.update(deltaTimeSeconds);\\r\\n        this._dragX = this._dragManager.getX();\\r\\n        this._dragY = this._dragManager.getY();\\r\\n        var motionUpdated = false;\\r\\n        this._model.loadParameters();\\r\\n        if (this._motionManager.isFinished()) {\\r\\n            this.startRandomMotion(LAppDefine.MotionGroupIdle, LAppDefine.PriorityIdle);\\r\\n            var lucky = Math.floor(Math.random() * 1000 + 100);\\r\\n            if (lucky == 999) {\\r\\n                this.startRandomMotion(LAppDefine.MotionGroupIdle, LAppDefine.PriorityIdle);\\r\\n            }\\r\\n            else if (lucky == 888) {\\r\\n                this.startRandomMotion(LAppDefine.MotionGroupDefault, LAppDefine.PriorityIdle);\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            motionUpdated = this._motionManager.updateMotion(this._model, deltaTimeSeconds);\\r\\n        }\\r\\n        this._model.saveParameters();\\r\\n        if (!motionUpdated) {\\r\\n            if (this._eyeBlink != null) {\\r\\n                this._eyeBlink.updateParameters(this._model, deltaTimeSeconds);\\r\\n            }\\r\\n        }\\r\\n        if (this._expressionManager != null) {\\r\\n            this._expressionManager.updateMotion(this._model, deltaTimeSeconds);\\r\\n        }\\r\\n        this._model.addParameterValueById(this._idParamAngleX, this._dragX * 30);\\r\\n        this._model.addParameterValueById(this._idParamAngleY, this._dragY * 30);\\r\\n        this._model.addParameterValueById(this._idParamAngleZ, this._dragX * this._dragY * -30);\\r\\n        this._model.addParameterValueById(this._idParamBodyAngleX, this._dragX * 10);\\r\\n        this._model.addParameterValueById(this._idParamEyeBallX, this._dragX);\\r\\n        this._model.addParameterValueById(this._idParamEyeBallY, this._dragY);\\r\\n        if (this._breath != null) {\\r\\n            this._breath.updateParameters(this._model, deltaTimeSeconds);\\r\\n        }\\r\\n        if (this._physics != null) {\\r\\n            this._physics.evaluate(this._model, deltaTimeSeconds);\\r\\n        }\\r\\n        if (this._lipsync) {\\r\\n            var value = 0;\\r\\n            for (var i = 0; i < this._lipSyncIds.getSize(); ++i) {\\r\\n                this._model.addParameterValueById(this._lipSyncIds.at(i), value, 0.8);\\r\\n            }\\r\\n        }\\r\\n        if (this._pose != null) {\\r\\n            this._pose.updateParameters(this._model, deltaTimeSeconds);\\r\\n        }\\r\\n        this._model.update();\\r\\n    };\\r\\n    LAppModel.prototype.startMotion = function (group, no, priority, onFinishedMotionHandler) {\\r\\n        var _this = this;\\r\\n        if (priority == LAppDefine.PriorityForce) {\\r\\n            this._motionManager.setReservePriority(priority);\\r\\n        }\\r\\n        else if (!this._motionManager.reserveMotion(priority)) {\\r\\n            if (this._debugMode) {\\r\\n                lapppal_1.LAppPal.printMessage(\\\"[APP]can't start motion.\\\");\\r\\n            }\\r\\n            return InvalidMotionQueueEntryHandleValue;\\r\\n        }\\r\\n        var motionFileName = this._modelSetting.getMotionFileName(group, no);\\r\\n        var name = group + \\\"_\\\" + no;\\r\\n        var motion = this._motions.getValue(name);\\r\\n        var autoDelete = false;\\r\\n        if (motion == null) {\\r\\n            fetch(\\\"\\\" + this._modelHomeDir + motionFileName)\\r\\n                .then(function (response) { return response.arrayBuffer(); })\\r\\n                .then(function (arrayBuffer) {\\r\\n                motion = _this.loadMotion(arrayBuffer, arrayBuffer.byteLength, null, onFinishedMotionHandler);\\r\\n                var fadeTime = _this._modelSetting.getMotionFadeInTimeValue(group, no);\\r\\n                if (fadeTime >= 0.0) {\\r\\n                    motion.setFadeInTime(fadeTime);\\r\\n                }\\r\\n                fadeTime = _this._modelSetting.getMotionFadeOutTimeValue(group, no);\\r\\n                if (fadeTime >= 0.0) {\\r\\n                    motion.setFadeOutTime(fadeTime);\\r\\n                }\\r\\n                motion.setEffectIds(_this._eyeBlinkIds, _this._lipSyncIds);\\r\\n                autoDelete = true;\\r\\n            });\\r\\n        }\\r\\n        else {\\r\\n            motion.setFinishedMotionHandler(onFinishedMotionHandler);\\r\\n        }\\r\\n        if (this._debugMode) {\\r\\n            lapppal_1.LAppPal.printMessage(\\\"[APP]start motion: [\\\" + group + \\\"_\\\" + no);\\r\\n        }\\r\\n        return this._motionManager.startMotionPriority(motion, autoDelete, priority);\\r\\n    };\\r\\n    LAppModel.prototype.startRandomMotion = function (group, priority, onFinishedMotionHandler) {\\r\\n        if (this._modelSetting.getMotionCount(group) == 0) {\\r\\n            return InvalidMotionQueueEntryHandleValue;\\r\\n        }\\r\\n        var no = Math.floor(Math.random() * this._modelSetting.getMotionCount(group));\\r\\n        return this.startMotion(group, no, priority, onFinishedMotionHandler);\\r\\n    };\\r\\n    LAppModel.prototype.setExpression = function (expressionId) {\\r\\n        var motion = this._expressions.getValue(expressionId);\\r\\n        if (this._debugMode) {\\r\\n            lapppal_1.LAppPal.printMessage(\\\"[APP]expression: [\\\" + expressionId + \\\"]\\\");\\r\\n        }\\r\\n        if (motion != null) {\\r\\n            this._expressionManager.startMotionPriority(motion, false, LAppDefine.PriorityForce);\\r\\n        }\\r\\n        else {\\r\\n            if (this._debugMode) {\\r\\n                lapppal_1.LAppPal.printMessage(\\\"[APP]expression[\\\" + expressionId + \\\"] is null\\\");\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    LAppModel.prototype.setRandomExpression = function () {\\r\\n        if (this._expressions.getSize() == 0) {\\r\\n            return;\\r\\n        }\\r\\n        var no = Math.floor(Math.random() * this._expressions.getSize());\\r\\n        for (var i = 0; i < this._expressions.getSize(); i++) {\\r\\n            if (i == no) {\\r\\n                var name_1 = this._expressions._keyValues[i].first;\\r\\n                this.setExpression(name_1);\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    LAppModel.prototype.motionEventFired = function (eventValue) {\\r\\n        cubismdebug_1.CubismLogInfo('{0} is fired on LAppModel!!', eventValue.s);\\r\\n    };\\r\\n    LAppModel.prototype.hitTest = function (hitArenaName, x, y) {\\r\\n        if (this._opacity < 1) {\\r\\n            return false;\\r\\n        }\\r\\n        var count = this._modelSetting.getHitAreasCount();\\r\\n        for (var i = 0; i < count; i++) {\\r\\n            if (this._modelSetting.getHitAreaName(i) == hitArenaName) {\\r\\n                var drawId = this._modelSetting.getHitAreaId(i);\\r\\n                return this.isHit(drawId, x, y);\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    };\\r\\n    LAppModel.prototype.preLoadMotionGroup = function (group) {\\r\\n        var _this = this;\\r\\n        var _loop_3 = function (i) {\\r\\n            var motionFileName = this_2._modelSetting.getMotionFileName(group, i);\\r\\n            var name_2 = group + \\\"_\\\" + i;\\r\\n            if (this_2._debugMode) {\\r\\n                lapppal_1.LAppPal.printMessage(\\\"[APP]load motion: \\\" + motionFileName + \\\" => [\\\" + name_2 + \\\"]\\\");\\r\\n            }\\r\\n            fetch(\\\"\\\" + this_2._modelHomeDir + motionFileName)\\r\\n                .then(function (response) { return response.arrayBuffer(); })\\r\\n                .then(function (arrayBuffer) {\\r\\n                var tmpMotion = _this.loadMotion(arrayBuffer, arrayBuffer.byteLength, name_2);\\r\\n                var fadeTime = _this._modelSetting.getMotionFadeInTimeValue(group, i);\\r\\n                if (fadeTime >= 0.0) {\\r\\n                    tmpMotion.setFadeInTime(fadeTime);\\r\\n                }\\r\\n                fadeTime = _this._modelSetting.getMotionFadeOutTimeValue(group, i);\\r\\n                if (fadeTime >= 0.0) {\\r\\n                    tmpMotion.setFadeOutTime(fadeTime);\\r\\n                }\\r\\n                tmpMotion.setEffectIds(_this._eyeBlinkIds, _this._lipSyncIds);\\r\\n                if (_this._motions.getValue(name_2) != null) {\\r\\n                    ACubismMotion.delete(_this._motions.getValue(name_2));\\r\\n                }\\r\\n                _this._motions.setValue(name_2, tmpMotion);\\r\\n                _this._motionCount++;\\r\\n                if (_this._motionCount >= _this._allMotionCount) {\\r\\n                    _this._state = LoadStep.LoadTexture;\\r\\n                    document.getElementById('live2d-hidden').style.display = 'none';\\r\\n                    if (_this._motionManager) {\\r\\n                        _this._motionManager.stopAllMotions();\\r\\n                        _this.createRenderer();\\r\\n                        _this.setupTextures();\\r\\n                        _this.getRenderer().startUp(lappdelegate_1.gl);\\r\\n                    }\\r\\n                    _this._updating = false;\\r\\n                    _this._initialized = true;\\r\\n                    document.getElementById('live2d').style.visibility = 'visible';\\r\\n                }\\r\\n            });\\r\\n        };\\r\\n        var this_2 = this;\\r\\n        for (var i = 0; i < this._modelSetting.getMotionCount(group); i++) {\\r\\n            _loop_3(i);\\r\\n        }\\r\\n    };\\r\\n    LAppModel.prototype.releaseMotions = function () {\\r\\n        this._motions.clear();\\r\\n    };\\r\\n    LAppModel.prototype.releaseExpressions = function () {\\r\\n        this._expressions.clear();\\r\\n    };\\r\\n    LAppModel.prototype.doDraw = function () {\\r\\n        if (this._model == null)\\r\\n            return;\\r\\n        var viewport = [0, 0, lappdelegate_1.canvas.width, lappdelegate_1.canvas.height];\\r\\n        this.getRenderer().setRenderState(lappdelegate_1.frameBuffer, viewport);\\r\\n        this.getRenderer().drawModel();\\r\\n    };\\r\\n    LAppModel.prototype.draw = function (matrix) {\\r\\n        if (this._model == null) {\\r\\n            return;\\r\\n        }\\r\\n        if (this._state == LoadStep.CompleteSetup) {\\r\\n            matrix.multiplyByMatrix(this._modelMatrix);\\r\\n            this.getRenderer().setMvpMatrix(matrix);\\r\\n            this.doDraw();\\r\\n        }\\r\\n    };\\r\\n    return LAppModel;\\r\\n}(CubismUserModel));\\r\\nexports.LAppModel = LAppModel;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./src/lappmodel.ts\\n\");\n\n/***/ }),\n\n/***/ \"./src/lapppal.ts\":\n/*!************************!*\\\n  !*** ./src/lapppal.ts ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar LAppPal = (function () {\\r\\n    function LAppPal() {\\r\\n    }\\r\\n    LAppPal.loadFileAsBytes = function (filePath, callback) {\\r\\n        fetch(filePath)\\r\\n            .then(function (response) { return response.arrayBuffer(); })\\r\\n            .then(function (arrayBuffer) { return callback(arrayBuffer, arrayBuffer.byteLength); });\\r\\n    };\\r\\n    LAppPal.getDeltaTime = function () {\\r\\n        return this.s_deltaTime;\\r\\n    };\\r\\n    LAppPal.updateTime = function () {\\r\\n        this.s_currentFrame = Date.now();\\r\\n        this.s_deltaTime = (this.s_currentFrame - this.s_lastFrame) / 1000;\\r\\n        this.s_lastFrame = this.s_currentFrame;\\r\\n    };\\r\\n    LAppPal.printMessage = function (message) {\\r\\n        console.log(message);\\r\\n    };\\r\\n    LAppPal.lastUpdate = Date.now();\\r\\n    LAppPal.s_currentFrame = 0.0;\\r\\n    LAppPal.s_lastFrame = 0.0;\\r\\n    LAppPal.s_deltaTime = 0.0;\\r\\n    return LAppPal;\\r\\n}());\\r\\nexports.LAppPal = LAppPal;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGFwcHBhbC50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2xpdmUyZC8uL3NyYy9sYXBwcGFsLnRzP2QzNzAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQoYykgTGl2ZTJEIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSB0aGUgTGl2ZTJEIE9wZW4gU29mdHdhcmUgbGljZW5zZVxuICogdGhhdCBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cubGl2ZTJkLmNvbS9ldWxhL2xpdmUyZC1vcGVuLXNvZnR3YXJlLWxpY2Vuc2UtYWdyZWVtZW50X2VuLmh0bWwuXG4gKi9cblxuLyoqXG4gKiDjg5fjg6njg4Pjg4jjg5Xjgqnjg7zjg6Dkvp3lrZjmqZ/og73jgpLmir3osaHljJbjgZnjgosgQ3ViaXNtIFBsYXRmb3JtIEFic3RyYWN0aW9uIExheWVyLlxuICpcbiAqIOODleOCoeOCpOODq+iqreOBv+i+vOOBv+OChOaZguWIu+WPluW+l+etieOBruODl+ODqeODg+ODiOODleOCqeODvOODoOOBq+S+neWtmOOBmeOCi+mWouaVsOOCkuOBvuOBqOOCgeOCi+OAglxuICovXG5leHBvcnQgY2xhc3MgTEFwcFBhbCB7XG4gIC8qKlxuICAgKiDjg5XjgqHjgqTjg6vjgpLjg5DjgqTjg4jjg4fjg7zjgr/jgajjgZfjgaboqq3jgb/jgZPjgoBcbiAgICpcbiAgICogQHBhcmFtIGZpbGVQYXRoIOiqreOBv+i+vOOBv+WvvuixoeODleOCoeOCpOODq+OBruODkeOCuVxuICAgKiBAcmV0dXJuXG4gICAqIHtcbiAgICogICAgICBidWZmZXIsICAg6Kqt44G/6L6844KT44Gg44OQ44Kk44OI44OH44O844K/XG4gICAqICAgICAgc2l6ZSAgICAgICAg44OV44Kh44Kk44Or44K144Kk44K6XG4gICAqIH1cbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgbG9hZEZpbGVBc0J5dGVzKFxuICAgIGZpbGVQYXRoOiBzdHJpbmcsXG4gICAgY2FsbGJhY2s6IChhcnJheUJ1ZmZlcjogQXJyYXlCdWZmZXIsIHNpemU6IG51bWJlcikgPT4gdm9pZFxuICApOiB2b2lkIHtcbiAgICBmZXRjaChmaWxlUGF0aClcbiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmFycmF5QnVmZmVyKCkpXG4gICAgICAudGhlbihhcnJheUJ1ZmZlciA9PiBjYWxsYmFjayhhcnJheUJ1ZmZlciwgYXJyYXlCdWZmZXIuYnl0ZUxlbmd0aCkpO1xuICB9XG5cbiAgLyoqXG4gICAqIOODh+ODq+OCv+aZgumWk++8iOWJjeWbnuODleODrOODvOODoOOBqOOBruW3ruWIhu+8ieOCkuWPluW+l+OBmeOCi1xuICAgKiBAcmV0dXJuIOODh+ODq+OCv+aZgumWk1ttc11cbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgZ2V0RGVsdGFUaW1lKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuc19kZWx0YVRpbWU7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIHVwZGF0ZVRpbWUoKTogdm9pZCB7XG4gICAgdGhpcy5zX2N1cnJlbnRGcmFtZSA9IERhdGUubm93KCk7XG4gICAgdGhpcy5zX2RlbHRhVGltZSA9ICh0aGlzLnNfY3VycmVudEZyYW1lIC0gdGhpcy5zX2xhc3RGcmFtZSkgLyAxMDAwO1xuICAgIHRoaXMuc19sYXN0RnJhbWUgPSB0aGlzLnNfY3VycmVudEZyYW1lO1xuICB9XG5cbiAgLyoqXG4gICAqIOODoeODg+OCu+ODvOOCuOOCkuWHuuWKm+OBmeOCi1xuICAgKiBAcGFyYW0gbWVzc2FnZSDmloflrZfliJdcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgcHJpbnRNZXNzYWdlKG1lc3NhZ2U6IHN0cmluZyk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UpO1xuICB9XG5cbiAgc3RhdGljIGxhc3RVcGRhdGUgPSBEYXRlLm5vdygpO1xuXG4gIHN0YXRpYyBzX2N1cnJlbnRGcmFtZSA9IDAuMDtcbiAgc3RhdGljIHNfbGFzdEZyYW1lID0gMC4wO1xuICBzdGF0aWMgc19kZWx0YVRpbWUgPSAwLjA7XG59XG4iXSwibWFwcGluZ3MiOiI7O0FBWUE7QUFBQTtBQStDQTtBQXBDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQS9DQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./src/lapppal.ts\\n\");\n\n/***/ }),\n\n/***/ \"./src/lapptexturemanager.ts\":\n/*!***********************************!*\\\n  !*** ./src/lapptexturemanager.ts ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar csmvector_1 = __webpack_require__(/*! ../Framework/src/type/csmvector */ \\\"./Framework/src/type/csmvector.ts\\\");\\r\\nvar Csm_csmVector = csmvector_1.Live2DCubismFramework.csmVector;\\r\\nvar lappdelegate_1 = __webpack_require__(/*! ./lappdelegate */ \\\"./src/lappdelegate.ts\\\");\\r\\nvar LAppTextureManager = (function () {\\r\\n    function LAppTextureManager() {\\r\\n        this._textures = new Csm_csmVector();\\r\\n    }\\r\\n    LAppTextureManager.prototype.release = function () {\\r\\n        for (var ite = this._textures.begin(); ite.notEqual(this._textures.end()); ite.preIncrement()) {\\r\\n            lappdelegate_1.gl.deleteTexture(ite.ptr().id);\\r\\n        }\\r\\n        this._textures = null;\\r\\n    };\\r\\n    LAppTextureManager.prototype.createTextureFromPngFile = function (fileName, usePremultiply, callback) {\\r\\n        var _this = this;\\r\\n        var _loop_1 = function (ite) {\\r\\n            if (ite.ptr().fileName == fileName &&\\r\\n                ite.ptr().usePremultply == usePremultiply) {\\r\\n                ite.ptr().img = new Image();\\r\\n                ite.ptr().img.onload = function () { return callback(ite.ptr()); };\\r\\n                ite.ptr().img.src = fileName;\\r\\n                return { value: void 0 };\\r\\n            }\\r\\n        };\\r\\n        for (var ite = this._textures.begin(); ite.notEqual(this._textures.end()); ite.preIncrement()) {\\r\\n            var state_1 = _loop_1(ite);\\r\\n            if (typeof state_1 === \\\"object\\\")\\r\\n                return state_1.value;\\r\\n        }\\r\\n        var img = new Image();\\r\\n        img.onload = function () {\\r\\n            var tex = lappdelegate_1.gl.createTexture();\\r\\n            lappdelegate_1.gl.bindTexture(lappdelegate_1.gl.TEXTURE_2D, tex);\\r\\n            lappdelegate_1.gl.texParameteri(lappdelegate_1.gl.TEXTURE_2D, lappdelegate_1.gl.TEXTURE_MIN_FILTER, lappdelegate_1.gl.LINEAR_MIPMAP_LINEAR);\\r\\n            lappdelegate_1.gl.texParameteri(lappdelegate_1.gl.TEXTURE_2D, lappdelegate_1.gl.TEXTURE_MAG_FILTER, lappdelegate_1.gl.LINEAR);\\r\\n            if (usePremultiply) {\\r\\n                lappdelegate_1.gl.pixelStorei(lappdelegate_1.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\\r\\n            }\\r\\n            lappdelegate_1.gl.texImage2D(lappdelegate_1.gl.TEXTURE_2D, 0, lappdelegate_1.gl.RGBA, lappdelegate_1.gl.RGBA, lappdelegate_1.gl.UNSIGNED_BYTE, img);\\r\\n            lappdelegate_1.gl.generateMipmap(lappdelegate_1.gl.TEXTURE_2D);\\r\\n            lappdelegate_1.gl.bindTexture(lappdelegate_1.gl.TEXTURE_2D, null);\\r\\n            var textureInfo = new TextureInfo();\\r\\n            if (textureInfo != null) {\\r\\n                textureInfo.fileName = fileName;\\r\\n                textureInfo.width = img.width;\\r\\n                textureInfo.height = img.height;\\r\\n                textureInfo.id = tex;\\r\\n                textureInfo.img = img;\\r\\n                textureInfo.usePremultply = usePremultiply;\\r\\n                _this._textures.pushBack(textureInfo);\\r\\n            }\\r\\n            callback(textureInfo);\\r\\n        };\\r\\n        img.src = fileName;\\r\\n        img.crossOrigin = \\\"anonymous\\\";\\r\\n    };\\r\\n    LAppTextureManager.prototype.releaseTextures = function () {\\r\\n        for (var i = 0; i < this._textures.getSize(); i++) {\\r\\n            this._textures.set(i, null);\\r\\n        }\\r\\n        this._textures.clear();\\r\\n    };\\r\\n    LAppTextureManager.prototype.releaseTextureByTexture = function (texture) {\\r\\n        for (var i = 0; i < this._textures.getSize(); i++) {\\r\\n            if (this._textures.at(i).id != texture) {\\r\\n                continue;\\r\\n            }\\r\\n            this._textures.set(i, null);\\r\\n            this._textures.remove(i);\\r\\n            break;\\r\\n        }\\r\\n    };\\r\\n    LAppTextureManager.prototype.releaseTextureByFilePath = function (fileName) {\\r\\n        for (var i = 0; i < this._textures.getSize(); i++) {\\r\\n            if (this._textures.at(i).fileName == fileName) {\\r\\n                this._textures.set(i, null);\\r\\n                this._textures.remove(i);\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    return LAppTextureManager;\\r\\n}());\\r\\nexports.LAppTextureManager = LAppTextureManager;\\r\\nvar TextureInfo = (function () {\\r\\n    function TextureInfo() {\\r\\n        this.id = null;\\r\\n        this.width = 0;\\r\\n        this.height = 0;\\r\\n    }\\r\\n    return TextureInfo;\\r\\n}());\\r\\nexports.TextureInfo = TextureInfo;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGFwcHRleHR1cmVtYW5hZ2VyLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vc3JjL2xhcHB0ZXh0dXJlbWFuYWdlci50cz8yYzBhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmltcG9ydCB7IExpdmUyREN1YmlzbUZyYW1ld29yayBhcyBjc212ZWN0b3IgfSBmcm9tICcuLi9GcmFtZXdvcmsvc3JjL3R5cGUvY3NtdmVjdG9yJztcbmltcG9ydCBDc21fY3NtVmVjdG9yID0gY3NtdmVjdG9yLmNzbVZlY3RvcjtcbmltcG9ydCBjc21WZWN0b3JfaXRlcmF0b3IgPSBjc212ZWN0b3IuaXRlcmF0b3I7XG5pbXBvcnQgeyBnbCB9IGZyb20gJy4vbGFwcGRlbGVnYXRlJztcblxuLyoqXG4gKiDjg4bjgq/jgrnjg4Hjg6PnrqHnkIbjgq/jg6njgrlcbiAqIOeUu+WDj+iqreOBv+i+vOOBv+OAgeeuoeeQhuOCkuihjOOBhuOCr+ODqeOCueOAglxuICovXG5leHBvcnQgY2xhc3MgTEFwcFRleHR1cmVNYW5hZ2VyIHtcbiAgLyoqXG4gICAqIOOCs+ODs+OCueODiOODqeOCr+OCv1xuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5fdGV4dHVyZXMgPSBuZXcgQ3NtX2NzbVZlY3RvcjxUZXh0dXJlSW5mbz4oKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDop6PmlL7jgZnjgovjgIJcbiAgICovXG4gIHB1YmxpYyByZWxlYXNlKCk6IHZvaWQge1xuICAgIGZvciAoXG4gICAgICBsZXQgaXRlOiBjc21WZWN0b3JfaXRlcmF0b3I8VGV4dHVyZUluZm8+ID0gdGhpcy5fdGV4dHVyZXMuYmVnaW4oKTtcbiAgICAgIGl0ZS5ub3RFcXVhbCh0aGlzLl90ZXh0dXJlcy5lbmQoKSk7XG4gICAgICBpdGUucHJlSW5jcmVtZW50KClcbiAgICApIHtcbiAgICAgIGdsLmRlbGV0ZVRleHR1cmUoaXRlLnB0cigpLmlkKTtcbiAgICB9XG4gICAgdGhpcy5fdGV4dHVyZXMgPSBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqIOWbvuWDj+ivu+WPllxuICAgKlxuICAgKiBAcGFyYW0gZmlsZU5hbWUg6K+75Y+W55qE5Zu+5YOP5paH5Lu26Lev5b6E5ZCN56ewXG4gICAqIEBwYXJhbSB1c2VQcmVtdWx0aXBseSDmmK/lkKblkK/nlKhQcmVtaXVsdOWkhOeQhlxuICAgKiBAcmV0dXJuIOWbvuWDj+S/oeaBr+ivu+WPluWksei0peaXtui/lOWbnm51bGxcbiAgICovXG4gIHB1YmxpYyBjcmVhdGVUZXh0dXJlRnJvbVBuZ0ZpbGUoXG4gICAgZmlsZU5hbWU6IHN0cmluZyxcbiAgICB1c2VQcmVtdWx0aXBseTogYm9vbGVhbixcbiAgICBjYWxsYmFjazogKHRleHR1cmVJbmZvOiBUZXh0dXJlSW5mbykgPT4gdm9pZFxuICApOiB2b2lkIHtcbiAgICAvLyBzZWFyY2ggbG9hZGVkIHRleHR1cmUgYWxyZWFkeVxuICAgIGZvciAoXG4gICAgICBsZXQgaXRlOiBjc21WZWN0b3JfaXRlcmF0b3I8VGV4dHVyZUluZm8+ID0gdGhpcy5fdGV4dHVyZXMuYmVnaW4oKTtcbiAgICAgIGl0ZS5ub3RFcXVhbCh0aGlzLl90ZXh0dXJlcy5lbmQoKSk7XG4gICAgICBpdGUucHJlSW5jcmVtZW50KClcbiAgICApIHtcbiAgICAgIGlmIChcbiAgICAgICAgaXRlLnB0cigpLmZpbGVOYW1lID09IGZpbGVOYW1lICYmXG4gICAgICAgIGl0ZS5wdHIoKS51c2VQcmVtdWx0cGx5ID09IHVzZVByZW11bHRpcGx5XG4gICAgICApIHtcbiAgICAgICAgLy8g56ys5LqM5qyh5Lul5ZCO5L2/55So57yT5a2Y77yI5peg562J5b6F5pe26Ze077yJXG4gICAgICAgIC8vIOWcqFdlYktpdOS4re+8jOimgeWGjeasoeiwg+eUqOebuOWQjEltYWdl55qEb25sb2Fk77yM6ZyA6KaB5YaN5qyh5a6e5L6LXG4gICAgICAgIC8vIOips+e0sO+8mmh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS81MDI0MTgxXG4gICAgICAgIGl0ZS5wdHIoKS5pbWcgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgaXRlLnB0cigpLmltZy5vbmxvYWQgPSAoKTogdm9pZCA9PiBjYWxsYmFjayhpdGUucHRyKCkpO1xuICAgICAgICBpdGUucHRyKCkuaW1nLnNyYyA9IGZpbGVOYW1lO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8g44OH44O844K/44Gu44Kq44Oz44Ot44O844OJ44KS44OI44Oq44Ks44O844Gr44GZ44KLXG4gICAgY29uc3QgaW1nID0gbmV3IEltYWdlKCk7XG4gICAgaW1nLm9ubG9hZCA9ICgpOiB2b2lkID0+IHtcbiAgICAgIC8vIOODhuOCr+OCueODgeODo+OCquODluOCuOOCp+OCr+ODiOOBruS9nOaIkFxuICAgICAgY29uc3QgdGV4OiBXZWJHTFRleHR1cmUgPSBnbC5jcmVhdGVUZXh0dXJlKCk7XG5cbiAgICAgIC8vIOODhuOCr+OCueODgeODo+OCkumBuOaKnlxuICAgICAgZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCwgdGV4KTtcblxuICAgICAgLy8g44OG44Kv44K544OB44Oj44Gr44OU44Kv44K744Or44KS5pu444GN6L6844KAXG4gICAgICBnbC50ZXhQYXJhbWV0ZXJpKFxuICAgICAgICBnbC5URVhUVVJFXzJELFxuICAgICAgICBnbC5URVhUVVJFX01JTl9GSUxURVIsXG4gICAgICAgIGdsLkxJTkVBUl9NSVBNQVBfTElORUFSXG4gICAgICApO1xuICAgICAgZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELCBnbC5URVhUVVJFX01BR19GSUxURVIsIGdsLkxJTkVBUik7XG5cbiAgICAgIC8vIFByZW11bHTlh6bnkIbjgpLooYzjgo/jgZvjgotcbiAgICAgIGlmICh1c2VQcmVtdWx0aXBseSkge1xuICAgICAgICBnbC5waXhlbFN0b3JlaShnbC5VTlBBQ0tfUFJFTVVMVElQTFlfQUxQSEFfV0VCR0wsIDEpO1xuICAgICAgfVxuXG4gICAgICAvLyDjg4bjgq/jgrnjg4Hjg6Pjgavjg5Tjgq/jgrvjg6vjgpLmm7jjgY3ovrzjgoBcbiAgICAgIGdsLnRleEltYWdlMkQoZ2wuVEVYVFVSRV8yRCwgMCwgZ2wuUkdCQSwgZ2wuUkdCQSwgZ2wuVU5TSUdORURfQllURSwgaW1nKTtcblxuICAgICAgLy8g44Of44OD44OX44Oe44OD44OX44KS55Sf5oiQXG4gICAgICBnbC5nZW5lcmF0ZU1pcG1hcChnbC5URVhUVVJFXzJEKTtcblxuICAgICAgLy8g44OG44Kv44K544OB44Oj44KS44OQ44Kk44Oz44OJXG4gICAgICBnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELCBudWxsKTtcblxuICAgICAgY29uc3QgdGV4dHVyZUluZm86IFRleHR1cmVJbmZvID0gbmV3IFRleHR1cmVJbmZvKCk7XG4gICAgICBpZiAodGV4dHVyZUluZm8gIT0gbnVsbCkge1xuICAgICAgICB0ZXh0dXJlSW5mby5maWxlTmFtZSA9IGZpbGVOYW1lO1xuICAgICAgICB0ZXh0dXJlSW5mby53aWR0aCA9IGltZy53aWR0aDtcbiAgICAgICAgdGV4dHVyZUluZm8uaGVpZ2h0ID0gaW1nLmhlaWdodDtcbiAgICAgICAgdGV4dHVyZUluZm8uaWQgPSB0ZXg7XG4gICAgICAgIHRleHR1cmVJbmZvLmltZyA9IGltZztcbiAgICAgICAgdGV4dHVyZUluZm8udXNlUHJlbXVsdHBseSA9IHVzZVByZW11bHRpcGx5O1xuICAgICAgICB0aGlzLl90ZXh0dXJlcy5wdXNoQmFjayh0ZXh0dXJlSW5mbyk7XG4gICAgICB9XG5cbiAgICAgIGNhbGxiYWNrKHRleHR1cmVJbmZvKTtcbiAgICB9O1xuICAgIGltZy5zcmMgPSBmaWxlTmFtZTtcbiAgICAvLyAg5re75Yqg5YWB6K645Zu+54mH6LWE5rqQ6Leo5Z+f6K+35rGCXG4gICAgaW1nLmNyb3NzT3JpZ2luID0gXCJhbm9ueW1vdXNcIjtcbiAgfVxuXG4gIC8qKlxuICAgKiDnlLvlg4/jga7op6PmlL5cbiAgICpcbiAgICog6YWN5YiX44Gr5a2Y5Zyo44GZ44KL55S75YOP5YWo44Gm44KS6Kej5pS+44GZ44KL44CCXG4gICAqL1xuICBwdWJsaWMgcmVsZWFzZVRleHR1cmVzKCk6IHZvaWQge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fdGV4dHVyZXMuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgIHRoaXMuX3RleHR1cmVzLnNldChpLCBudWxsKTtcbiAgICB9XG5cbiAgICB0aGlzLl90ZXh0dXJlcy5jbGVhcigpO1xuICB9XG5cbiAgLyoqXG4gICAqIOeUu+WDj+OBruino+aUvlxuICAgKlxuICAgKiDmjIflrprjgZfjgZ/jg4bjgq/jgrnjg4Hjg6Pjga7nlLvlg4/jgpLop6PmlL7jgZnjgovjgIJcbiAgICogQHBhcmFtIHRleHR1cmUg6Kej5pS+44GZ44KL44OG44Kv44K544OB44OjXG4gICAqL1xuICBwdWJsaWMgcmVsZWFzZVRleHR1cmVCeVRleHR1cmUodGV4dHVyZTogV2ViR0xUZXh0dXJlKTogdm9pZCB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl90ZXh0dXJlcy5nZXRTaXplKCk7IGkrKykge1xuICAgICAgaWYgKHRoaXMuX3RleHR1cmVzLmF0KGkpLmlkICE9IHRleHR1cmUpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX3RleHR1cmVzLnNldChpLCBudWxsKTtcbiAgICAgIHRoaXMuX3RleHR1cmVzLnJlbW92ZShpKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDnlLvlg4/jga7op6PmlL5cbiAgICpcbiAgICog5oyH5a6a44GX44Gf5ZCN5YmN44Gu55S75YOP44KS6Kej5pS+44GZ44KL44CCXG4gICAqIEBwYXJhbSBmaWxlTmFtZSDop6PmlL7jgZnjgovnlLvlg4/jg5XjgqHjgqTjg6vjg5HjgrnlkI1cbiAgICovXG4gIHB1YmxpYyByZWxlYXNlVGV4dHVyZUJ5RmlsZVBhdGgoZmlsZU5hbWU6IHN0cmluZyk6IHZvaWQge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fdGV4dHVyZXMuZ2V0U2l6ZSgpOyBpKyspIHtcbiAgICAgIGlmICh0aGlzLl90ZXh0dXJlcy5hdChpKS5maWxlTmFtZSA9PSBmaWxlTmFtZSkge1xuICAgICAgICB0aGlzLl90ZXh0dXJlcy5zZXQoaSwgbnVsbCk7XG4gICAgICAgIHRoaXMuX3RleHR1cmVzLnJlbW92ZShpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgX3RleHR1cmVzOiBDc21fY3NtVmVjdG9yPFRleHR1cmVJbmZvPjtcbn1cblxuLyoqXG4gKiDnlLvlg4/mg4XloLHmp4vpgKDkvZNcbiAqL1xuZXhwb3J0IGNsYXNzIFRleHR1cmVJbmZvIHtcbiAgaW1nOiBIVE1MSW1hZ2VFbGVtZW50OyAvLyDnlLvlg49cbiAgaWQ6IFdlYkdMVGV4dHVyZSA9IG51bGw7IC8vIOODhuOCr+OCueODgeODo1xuICB3aWR0aCA9IDA7IC8vIOaoquW5hVxuICBoZWlnaHQgPSAwOyAvLyDpq5jjgZVcbiAgdXNlUHJlbXVsdHBseTogYm9vbGVhbjsgLy8gUHJlbXVsdOWHpueQhuOCkuacieWKueOBq+OBmeOCi+OBi1xuICBmaWxlTmFtZTogc3RyaW5nOyAvLyDjg5XjgqHjgqTjg6vlkI1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFPQTtBQUNBO0FBRUE7QUFNQTtBQUlBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQVNBO0FBQUE7QUFPQTtBQUlBO0FBRUE7QUFLQTtBQUNBO0FBQ0E7O0FBRUE7O0FBaEJBO0FBQ0E7OztBQWdCQTtBQUdBO0FBQ0E7QUFFQTtBQUdBO0FBR0E7QUFLQTtBQUdBO0FBQ0E7QUFDQTtBQUdBO0FBR0E7QUFHQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFBQTtBQXZKQTtBQTRKQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBR0E7QUFBQTtBQUFBO0FBUEE7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./src/lapptexturemanager.ts\\n\");\n\n/***/ }),\n\n/***/ \"./src/lappview.ts\":\n/*!*************************!*\\\n  !*** ./src/lappview.ts ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nvar __importStar = (this && this.__importStar) || function (mod) {\\r\\n    if (mod && mod.__esModule) return mod;\\r\\n    var result = {};\\r\\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\\r\\n    result[\\\"default\\\"] = mod;\\r\\n    return result;\\r\\n};\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar cubismmatrix44_1 = __webpack_require__(/*! ../Framework/src/math/cubismmatrix44 */ \\\"./Framework/src/math/cubismmatrix44.ts\\\");\\r\\nvar cubismviewmatrix_1 = __webpack_require__(/*! ../Framework/src/math/cubismviewmatrix */ \\\"./Framework/src/math/cubismviewmatrix.ts\\\");\\r\\nvar Csm_CubismViewMatrix = cubismviewmatrix_1.Live2DCubismFramework.CubismViewMatrix;\\r\\nvar Csm_CubismMatrix44 = cubismmatrix44_1.Live2DCubismFramework.CubismMatrix44;\\r\\nvar touchmanager_1 = __webpack_require__(/*! ./touchmanager */ \\\"./src/touchmanager.ts\\\");\\r\\nvar lapplive2dmanager_1 = __webpack_require__(/*! ./lapplive2dmanager */ \\\"./src/lapplive2dmanager.ts\\\");\\r\\nvar lappdelegate_1 = __webpack_require__(/*! ./lappdelegate */ \\\"./src/lappdelegate.ts\\\");\\r\\nvar lapppal_1 = __webpack_require__(/*! ./lapppal */ \\\"./src/lapppal.ts\\\");\\r\\nvar LAppDefine = __importStar(__webpack_require__(/*! ./lappdefine */ \\\"./src/lappdefine.ts\\\"));\\r\\nvar LAppView = (function () {\\r\\n    function LAppView() {\\r\\n        this._programId = null;\\r\\n        this._back = null;\\r\\n        this._gear = null;\\r\\n        this._touchManager = new touchmanager_1.TouchManager();\\r\\n        this._deviceToScreen = new Csm_CubismMatrix44();\\r\\n        this._viewMatrix = new Csm_CubismViewMatrix();\\r\\n    }\\r\\n    LAppView.prototype.initialize = function () {\\r\\n        var width = lappdelegate_1.canvas.width, height = lappdelegate_1.canvas.height;\\r\\n        var ratio = height / width;\\r\\n        var left = LAppDefine.ViewLogicalLeft;\\r\\n        var right = LAppDefine.ViewLogicalRight;\\r\\n        var bottom = -ratio;\\r\\n        var top = ratio;\\r\\n        this._viewMatrix.setScreenRect(left, right, bottom, top);\\r\\n        var screenW = Math.abs(left - right);\\r\\n        this._deviceToScreen.scaleRelative(screenW / width, -screenW / width);\\r\\n        this._deviceToScreen.translateRelative(-width * 0.5, -height * 0.5);\\r\\n        this._viewMatrix.setMaxScale(LAppDefine.ViewMaxScale);\\r\\n        this._viewMatrix.setMinScale(LAppDefine.ViewMinScale);\\r\\n        this._viewMatrix.setMaxScreenRect(LAppDefine.ViewLogicalMaxLeft, LAppDefine.ViewLogicalMaxRight, LAppDefine.ViewLogicalMaxBottom, LAppDefine.ViewLogicalMaxTop);\\r\\n    };\\r\\n    LAppView.prototype.release = function () {\\r\\n        this._viewMatrix = null;\\r\\n        this._touchManager = null;\\r\\n        this._deviceToScreen = null;\\r\\n        if (this._gear) {\\r\\n            this._gear.release();\\r\\n        }\\r\\n        this._gear = null;\\r\\n        if (this._back) {\\r\\n            this._back.release();\\r\\n        }\\r\\n        this._back = null;\\r\\n        lappdelegate_1.gl.deleteProgram(this._programId);\\r\\n        this._programId = null;\\r\\n    };\\r\\n    LAppView.prototype.render = function () {\\r\\n        lappdelegate_1.gl.useProgram(this._programId);\\r\\n        if (this._back) {\\r\\n            this._back.render(this._programId);\\r\\n        }\\r\\n        if (this._gear) {\\r\\n            this._gear.render(this._programId);\\r\\n        }\\r\\n        lappdelegate_1.gl.flush();\\r\\n        var live2DManager = lapplive2dmanager_1.LAppLive2DManager.getInstance();\\r\\n        live2DManager.onUpdate();\\r\\n    };\\r\\n    LAppView.prototype.initializeSprite = function () {\\r\\n        var width = lappdelegate_1.canvas.width;\\r\\n        var height = lappdelegate_1.canvas.height;\\r\\n        var textureManager = lappdelegate_1.LAppDelegate.getInstance().getTextureManager();\\r\\n        var resourcesPath = LAppDefine.ResourcesPath;\\r\\n        var imageName = '';\\r\\n    };\\r\\n    LAppView.prototype.onTouchesBegan = function (pointX, pointY) {\\r\\n        this._touchManager.touchesBegan(pointX, pointY);\\r\\n    };\\r\\n    LAppView.prototype.onTouchesMoved = function (pointX, pointY) {\\r\\n        var viewX = this.transformViewX(this._touchManager.getX());\\r\\n        var viewY = this.transformViewY(this._touchManager.getY());\\r\\n        this._touchManager.touchesMoved(pointX, pointY);\\r\\n        var live2DManager = lapplive2dmanager_1.LAppLive2DManager.getInstance();\\r\\n        live2DManager.onDrag(viewX, viewY);\\r\\n    };\\r\\n    LAppView.prototype.onTouchesEnded = function (pointX, pointY) {\\r\\n        var live2DManager = lapplive2dmanager_1.LAppLive2DManager.getInstance();\\r\\n        live2DManager.onDrag(0.0, 0.0);\\r\\n        {\\r\\n            var x = this._deviceToScreen.transformX(this._touchManager.getX());\\r\\n            var y = this._deviceToScreen.transformY(this._touchManager.getY());\\r\\n            if (LAppDefine.DebugTouchLogEnable) {\\r\\n                lapppal_1.LAppPal.printMessage(\\\"[APP]touchesEnded x: \\\" + x + \\\" y: \\\" + y);\\r\\n            }\\r\\n            live2DManager.onTap(x, y);\\r\\n        }\\r\\n    };\\r\\n    LAppView.prototype.transformViewX = function (deviceX) {\\r\\n        var screenX = this._deviceToScreen.transformX(deviceX);\\r\\n        return this._viewMatrix.invertTransformX(screenX);\\r\\n    };\\r\\n    LAppView.prototype.transformViewY = function (deviceY) {\\r\\n        var screenY = this._deviceToScreen.transformY(deviceY);\\r\\n        return this._viewMatrix.invertTransformY(screenY);\\r\\n    };\\r\\n    LAppView.prototype.transformScreenX = function (deviceX) {\\r\\n        return this._deviceToScreen.transformX(deviceX);\\r\\n    };\\r\\n    LAppView.prototype.transformScreenY = function (deviceY) {\\r\\n        return this._deviceToScreen.transformY(deviceY);\\r\\n    };\\r\\n    return LAppView;\\r\\n}());\\r\\nexports.LAppView = LAppView;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./src/lappview.ts\\n\");\n\n/***/ }),\n\n/***/ \"./src/touchmanager.ts\":\n/*!*****************************!*\\\n  !*** ./src/touchmanager.ts ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar TouchManager = (function () {\\r\\n    function TouchManager() {\\r\\n        this._startX = 0.0;\\r\\n        this._startY = 0.0;\\r\\n        this._lastX = 0.0;\\r\\n        this._lastY = 0.0;\\r\\n        this._lastX1 = 0.0;\\r\\n        this._lastY1 = 0.0;\\r\\n        this._lastX2 = 0.0;\\r\\n        this._lastY2 = 0.0;\\r\\n        this._lastTouchDistance = 0.0;\\r\\n        this._deltaX = 0.0;\\r\\n        this._deltaY = 0.0;\\r\\n        this._scale = 1.0;\\r\\n        this._touchSingle = false;\\r\\n        this._flipAvailable = false;\\r\\n    }\\r\\n    TouchManager.prototype.getCenterX = function () {\\r\\n        return this._lastX;\\r\\n    };\\r\\n    TouchManager.prototype.getCenterY = function () {\\r\\n        return this._lastY;\\r\\n    };\\r\\n    TouchManager.prototype.getDeltaX = function () {\\r\\n        return this._deltaX;\\r\\n    };\\r\\n    TouchManager.prototype.getDeltaY = function () {\\r\\n        return this._deltaY;\\r\\n    };\\r\\n    TouchManager.prototype.getStartX = function () {\\r\\n        return this._startX;\\r\\n    };\\r\\n    TouchManager.prototype.getStartY = function () {\\r\\n        return this._startY;\\r\\n    };\\r\\n    TouchManager.prototype.getScale = function () {\\r\\n        return this._scale;\\r\\n    };\\r\\n    TouchManager.prototype.getX = function () {\\r\\n        return this._lastX;\\r\\n    };\\r\\n    TouchManager.prototype.getY = function () {\\r\\n        return this._lastY;\\r\\n    };\\r\\n    TouchManager.prototype.getX1 = function () {\\r\\n        return this._lastX1;\\r\\n    };\\r\\n    TouchManager.prototype.getY1 = function () {\\r\\n        return this._lastY1;\\r\\n    };\\r\\n    TouchManager.prototype.getX2 = function () {\\r\\n        return this._lastX2;\\r\\n    };\\r\\n    TouchManager.prototype.getY2 = function () {\\r\\n        return this._lastY2;\\r\\n    };\\r\\n    TouchManager.prototype.isSingleTouch = function () {\\r\\n        return this._touchSingle;\\r\\n    };\\r\\n    TouchManager.prototype.isFlickAvailable = function () {\\r\\n        return this._flipAvailable;\\r\\n    };\\r\\n    TouchManager.prototype.disableFlick = function () {\\r\\n        this._flipAvailable = false;\\r\\n    };\\r\\n    TouchManager.prototype.touchesBegan = function (deviceX, deviceY) {\\r\\n        this._lastX = deviceX;\\r\\n        this._lastY = deviceY;\\r\\n        this._startX = deviceX;\\r\\n        this._startY = deviceY;\\r\\n        this._lastTouchDistance = -1.0;\\r\\n        this._flipAvailable = true;\\r\\n        this._touchSingle = true;\\r\\n    };\\r\\n    TouchManager.prototype.touchesMoved = function (deviceX, deviceY) {\\r\\n        this._lastX = deviceX;\\r\\n        this._lastY = deviceY;\\r\\n        this._lastTouchDistance = -1.0;\\r\\n        this._touchSingle = true;\\r\\n    };\\r\\n    TouchManager.prototype.getFlickDistance = function () {\\r\\n        return this.calculateDistance(this._startX, this._startY, this._lastX, this._lastY);\\r\\n    };\\r\\n    TouchManager.prototype.calculateDistance = function (x1, y1, x2, y2) {\\r\\n        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\\r\\n    };\\r\\n    TouchManager.prototype.calculateMovingAmount = function (v1, v2) {\\r\\n        if (v1 > 0.0 != v2 > 0.0) {\\r\\n            return 0.0;\\r\\n        }\\r\\n        var sign = v1 > 0.0 ? 1.0 : -1.0;\\r\\n        var absoluteValue1 = Math.abs(v1);\\r\\n        var absoluteValue2 = Math.abs(v2);\\r\\n        return (sign * (absoluteValue1 < absoluteValue2 ? absoluteValue1 : absoluteValue2));\\r\\n    };\\r\\n    return TouchManager;\\r\\n}());\\r\\nexports.TouchManager = TouchManager;\\r\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdG91Y2htYW5hZ2VyLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGl2ZTJkLy4vc3JjL3RvdWNobWFuYWdlci50cz9hMmVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0KGMpIExpdmUyRCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIExpdmUyRCBPcGVuIFNvZnR3YXJlIGxpY2Vuc2VcbiAqIHRoYXQgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmxpdmUyZC5jb20vZXVsYS9saXZlMmQtb3Blbi1zb2Z0d2FyZS1saWNlbnNlLWFncmVlbWVudF9lbi5odG1sLlxuICovXG5cbmV4cG9ydCBjbGFzcyBUb3VjaE1hbmFnZXIge1xuICAvKipcbiAgICog44Kz44Oz44K544OI44Op44Kv44K/XG4gICAqL1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLl9zdGFydFggPSAwLjA7XG4gICAgdGhpcy5fc3RhcnRZID0gMC4wO1xuICAgIHRoaXMuX2xhc3RYID0gMC4wO1xuICAgIHRoaXMuX2xhc3RZID0gMC4wO1xuICAgIHRoaXMuX2xhc3RYMSA9IDAuMDtcbiAgICB0aGlzLl9sYXN0WTEgPSAwLjA7XG4gICAgdGhpcy5fbGFzdFgyID0gMC4wO1xuICAgIHRoaXMuX2xhc3RZMiA9IDAuMDtcbiAgICB0aGlzLl9sYXN0VG91Y2hEaXN0YW5jZSA9IDAuMDtcbiAgICB0aGlzLl9kZWx0YVggPSAwLjA7XG4gICAgdGhpcy5fZGVsdGFZID0gMC4wO1xuICAgIHRoaXMuX3NjYWxlID0gMS4wO1xuICAgIHRoaXMuX3RvdWNoU2luZ2xlID0gZmFsc2U7XG4gICAgdGhpcy5fZmxpcEF2YWlsYWJsZSA9IGZhbHNlO1xuICB9XG5cbiAgcHVibGljIGdldENlbnRlclgoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fbGFzdFg7XG4gIH1cblxuICBwdWJsaWMgZ2V0Q2VudGVyWSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9sYXN0WTtcbiAgfVxuXG4gIHB1YmxpYyBnZXREZWx0YVgoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fZGVsdGFYO1xuICB9XG5cbiAgcHVibGljIGdldERlbHRhWSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9kZWx0YVk7XG4gIH1cblxuICBwdWJsaWMgZ2V0U3RhcnRYKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX3N0YXJ0WDtcbiAgfVxuXG4gIHB1YmxpYyBnZXRTdGFydFkoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fc3RhcnRZO1xuICB9XG5cbiAgcHVibGljIGdldFNjYWxlKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX3NjYWxlO1xuICB9XG5cbiAgcHVibGljIGdldFgoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fbGFzdFg7XG4gIH1cblxuICBwdWJsaWMgZ2V0WSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9sYXN0WTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRYMSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9sYXN0WDE7XG4gIH1cblxuICBwdWJsaWMgZ2V0WTEoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fbGFzdFkxO1xuICB9XG5cbiAgcHVibGljIGdldFgyKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX2xhc3RYMjtcbiAgfVxuXG4gIHB1YmxpYyBnZXRZMigpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9sYXN0WTI7XG4gIH1cblxuICBwdWJsaWMgaXNTaW5nbGVUb3VjaCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fdG91Y2hTaW5nbGU7XG4gIH1cblxuICBwdWJsaWMgaXNGbGlja0F2YWlsYWJsZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fZmxpcEF2YWlsYWJsZTtcbiAgfVxuXG4gIHB1YmxpYyBkaXNhYmxlRmxpY2soKTogdm9pZCB7XG4gICAgdGhpcy5fZmxpcEF2YWlsYWJsZSA9IGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqIOOCv+ODg+ODgemWi+Wni+aZguOCpOODmeODs+ODiFxuICAgKiBAcGFyYW0gZGV2aWNlWCDjgr/jg4Pjg4HjgZfjgZ/nlLvpnaLjga5444Gu5YCkXG4gICAqIEBwYXJhbSBkZXZpY2VZIOOCv+ODg+ODgeOBl+OBn+eUu+mdouOBrnnjga7lgKRcbiAgICovXG4gIHB1YmxpYyB0b3VjaGVzQmVnYW4oZGV2aWNlWDogbnVtYmVyLCBkZXZpY2VZOiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLl9sYXN0WCA9IGRldmljZVg7XG4gICAgdGhpcy5fbGFzdFkgPSBkZXZpY2VZO1xuICAgIHRoaXMuX3N0YXJ0WCA9IGRldmljZVg7XG4gICAgdGhpcy5fc3RhcnRZID0gZGV2aWNlWTtcbiAgICB0aGlzLl9sYXN0VG91Y2hEaXN0YW5jZSA9IC0xLjA7XG4gICAgdGhpcy5fZmxpcEF2YWlsYWJsZSA9IHRydWU7XG4gICAgdGhpcy5fdG91Y2hTaW5nbGUgPSB0cnVlO1xuICB9XG5cbiAgLyoqXG4gICAqIOODieODqeODg+OCsOaZguOBruOCpOODmeODs+ODiFxuICAgKiBAcGFyYW0gZGV2aWNlWCDjgr/jg4Pjg4HjgZfjgZ/nlLvpnaLjga5444Gu5YCkXG4gICAqIEBwYXJhbSBkZXZpY2VZIOOCv+ODg+ODgeOBl+OBn+eUu+mdouOBrnnjga7lgKRcbiAgICovXG4gIHB1YmxpYyB0b3VjaGVzTW92ZWQoZGV2aWNlWDogbnVtYmVyLCBkZXZpY2VZOiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLl9sYXN0WCA9IGRldmljZVg7XG4gICAgdGhpcy5fbGFzdFkgPSBkZXZpY2VZO1xuICAgIHRoaXMuX2xhc3RUb3VjaERpc3RhbmNlID0gLTEuMDtcbiAgICB0aGlzLl90b3VjaFNpbmdsZSA9IHRydWU7XG4gIH1cblxuICAvKipcbiAgICog44OV44Oq44OD44Kv44Gu6Led6Zui5ris5a6aXG4gICAqIEByZXR1cm4g44OV44Oq44OD44Kv6Led6ZuiXG4gICAqL1xuICBwdWJsaWMgZ2V0RmxpY2tEaXN0YW5jZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmNhbGN1bGF0ZURpc3RhbmNlKFxuICAgICAgdGhpcy5fc3RhcnRYLFxuICAgICAgdGhpcy5fc3RhcnRZLFxuICAgICAgdGhpcy5fbGFzdFgsXG4gICAgICB0aGlzLl9sYXN0WVxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICog54K577yR44GL44KJ54K577yS44G444Gu6Led6Zui44KS5rGC44KB44KLXG4gICAqXG4gICAqIEBwYXJhbSB4MSDvvJHjgaTnm67jga7jgr/jg4Pjg4HjgZfjgZ/nlLvpnaLjga5444Gu5YCkXG4gICAqIEBwYXJhbSB5MSDvvJHjgaTnm67jga7jgr/jg4Pjg4HjgZfjgZ/nlLvpnaLjga5544Gu5YCkXG4gICAqIEBwYXJhbSB4MiDvvJLjgaTnm67jga7jgr/jg4Pjg4HjgZfjgZ/nlLvpnaLjga5444Gu5YCkXG4gICAqIEBwYXJhbSB5MiDvvJLjgaTnm67jga7jgr/jg4Pjg4HjgZfjgZ/nlLvpnaLjga5544Gu5YCkXG4gICAqL1xuICBwdWJsaWMgY2FsY3VsYXRlRGlzdGFuY2UoXG4gICAgeDE6IG51bWJlcixcbiAgICB5MTogbnVtYmVyLFxuICAgIHgyOiBudW1iZXIsXG4gICAgeTI6IG51bWJlclxuICApOiBudW1iZXIge1xuICAgIHJldHVybiBNYXRoLnNxcnQoKHgxIC0geDIpICogKHgxIC0geDIpICsgKHkxIC0geTIpICogKHkxIC0geTIpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDvvJLjgaTnm67jga7lgKTjgYvjgonjgIHnp7vli5Xph4/jgpLmsYLjgoHjgovjgIJcbiAgICog6YGV44GG5pa55ZCR44Gu5aC05ZCI44Gv56e75YuV6YeP77yQ44CC5ZCM44GY5pa55ZCR44Gu5aC05ZCI44Gv44CB57W25a++5YCk44GM5bCP44GV44GE5pa544Gu5YCk44KS5Y+C54Wn44GZ44KL44CCXG4gICAqXG4gICAqIEBwYXJhbSB2MSDvvJHjgaTnm67jga7np7vli5Xph49cbiAgICogQHBhcmFtIHYyIO+8kuOBpOebruOBruenu+WLlemHj1xuICAgKlxuICAgKiBAcmV0dXJuIOWwj+OBleOBhOaWueOBruenu+WLlemHj1xuICAgKi9cbiAgcHVibGljIGNhbGN1bGF0ZU1vdmluZ0Ftb3VudCh2MTogbnVtYmVyLCB2MjogbnVtYmVyKTogbnVtYmVyIHtcbiAgICBpZiAodjEgPiAwLjAgIT0gdjIgPiAwLjApIHtcbiAgICAgIHJldHVybiAwLjA7XG4gICAgfVxuXG4gICAgY29uc3Qgc2lnbjogbnVtYmVyID0gdjEgPiAwLjAgPyAxLjAgOiAtMS4wO1xuICAgIGNvbnN0IGFic29sdXRlVmFsdWUxID0gTWF0aC5hYnModjEpO1xuICAgIGNvbnN0IGFic29sdXRlVmFsdWUyID0gTWF0aC5hYnModjIpO1xuICAgIHJldHVybiAoXG4gICAgICBzaWduICogKGFic29sdXRlVmFsdWUxIDwgYWJzb2x1dGVWYWx1ZTIgPyBhYnNvbHV0ZVZhbHVlMSA6IGFic29sdXRlVmFsdWUyKVxuICAgICk7XG4gIH1cblxuICBfc3RhcnRZOiBudW1iZXI7IC8vIOOCv+ODg+ODgeOCkumWi+Wni+OBl+OBn+aZguOBrnjjga7lgKRcbiAgX3N0YXJ0WDogbnVtYmVyOyAvLyDjgr/jg4Pjg4HjgpLplovlp4vjgZfjgZ/mmYLjga5544Gu5YCkXG4gIF9sYXN0WDogbnVtYmVyOyAvLyDjgrfjg7PjgrDjg6vjgr/jg4Pjg4HmmYLjga5444Gu5YCkXG4gIF9sYXN0WTogbnVtYmVyOyAvLyDjgrfjg7PjgrDjg6vjgr/jg4Pjg4HmmYLjga5544Gu5YCkXG4gIF9sYXN0WDE6IG51bWJlcjsgLy8g44OA44OW44Or44K/44OD44OB5pmC44Gu5LiA44Gk55uu44GueOOBruWApFxuICBfbGFzdFkxOiBudW1iZXI7IC8vIOODgOODluODq+OCv+ODg+ODgeaZguOBruS4gOOBpOebruOBrnnjga7lgKRcbiAgX2xhc3RYMjogbnVtYmVyOyAvLyDjg4Djg5bjg6vjgr/jg4Pjg4HmmYLjga7kuozjgaTnm67jga5444Gu5YCkXG4gIF9sYXN0WTI6IG51bWJlcjsgLy8g44OA44OW44Or44K/44OD44OB5pmC44Gu5LqM44Gk55uu44GueeOBruWApFxuICBfbGFzdFRvdWNoRGlzdGFuY2U6IG51bWJlcjsgLy8gMuacrOS7peS4iuOBp+OCv+ODg+ODgeOBl+OBn+OBqOOBjeOBruaMh+OBrui3nembolxuICBfZGVsdGFYOiBudW1iZXI7IC8vIOWJjeWbnuOBruWApOOBi+OCieS7iuWbnuOBruWApOOBuOOBrnjjga7np7vli5Xot53pm6LjgIJcbiAgX2RlbHRhWTogbnVtYmVyOyAvLyDliY3lm57jga7lgKTjgYvjgonku4rlm57jga7lgKTjgbjjga5544Gu56e75YuV6Led6Zui44CCXG4gIF9zY2FsZTogbnVtYmVyOyAvLyDjgZPjga7jg5Xjg6zjg7zjg6DjgafmjpvjgZHlkIjjgo/jgZvjgovmi6HlpKfnjofjgILmi6HlpKfmk43kvZzkuK3ku6XlpJbjga8x44CCXG4gIF90b3VjaFNpbmdsZTogYm9vbGVhbjsgLy8g44K344Oz44Kw44Or44K/44OD44OB5pmC44GvdHJ1ZVxuICBfZmxpcEF2YWlsYWJsZTogYm9vbGVhbjsgLy8g44OV44Oq44OD44OX44GM5pyJ5Yq544GL44Gp44GG44GLXG59XG4iXSwibWFwcGluZ3MiOiI7O0FBT0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFNQTtBQVVBO0FBTUE7QUFDQTtBQVdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQWdCQTtBQUFBO0FBbExBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./src/touchmanager.ts\\n\");\n\n/***/ }),\n\n/***/ \"react\":\n/*!**************************************************************************************!*\\\n  !*** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"} ***!\n  \\**************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = __WEBPACK_EXTERNAL_MODULE_react__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhY3QuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9saXZlMmQvZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifT8yNDZlIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9yZWFjdF9fOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///react\\n\");\n\n/***/ })\n\n/******/ });\n});"],"mappings":"AAAA,CAAC,SAASA,gCAAgCA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACzD,IAAG,OAAOC,OAAO,KAAK,QAAQ,IAAI,OAAOC,MAAM,KAAK,QAAQ,EAC3DA,MAAM,CAACD,OAAO,GAAGD,OAAO,CAACG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KACvC,IAAG,OAAOC,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,EACjDD,MAAM,CAAC,CAAC,OAAO,CAAC,EAAEJ,OAAO,CAAC,CAAC,KACvB,IAAG,OAAOC,OAAO,KAAK,QAAQ,EAClCA,OAAO,CAAC,QAAQ,CAAC,GAAGD,OAAO,CAACG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAE9CJ,IAAI,CAAC,QAAQ,CAAC,GAAGC,OAAO,CAACD,IAAI,CAAC,OAAO,CAAC,CAAC;AACzC,CAAC,EAAEO,MAAM,EAAE,UAASC,iCAAiC,EAAE;EACvD,OAAO,SAAU,UAASC,OAAO,EAAE;MAAE;MACrC,SAAU;MACV;MAAU,IAAIC,gBAAgB,GAAG,CAAC,CAAC;MACnC;MACA,SAAU;MACV;MAAU,SAASC,mBAAmBA,CAACC,QAAQ,EAAE;QACjD;QACA,SAAW;QACX,QAAW,IAAGF,gBAAgB,CAACE,QAAQ,CAAC,EAAE;UAC1C,QAAY,OAAOF,gBAAgB,CAACE,QAAQ,CAAC,CAACV,OAAO;UACrD;QAAW;QACX,SAAW;QACX;QAAW,IAAIC,MAAM,GAAGO,gBAAgB,CAACE,QAAQ,CAAC,GAAG;UACrD,QAAYC,CAAC,EAAED,QAAQ;UACvB,QAAYE,CAAC,EAAE,KAAK;UACpB,QAAYZ,OAAO,EAAE,CAAC;UACtB;QAAW,CAAC;QACZ;QACA,SAAW;QACX;QAAWO,OAAO,CAACG,QAAQ,CAAC,CAACG,IAAI,CAACZ,MAAM,CAACD,OAAO,EAAEC,MAAM,EAAEA,MAAM,CAACD,OAAO,EAAES,mBAAmB,CAAC;QAC9F;QACA,SAAW;QACX;QAAWR,MAAM,CAACW,CAAC,GAAG,IAAI;QAC1B;QACA,SAAW;QACX;QAAW,OAAOX,MAAM,CAACD,OAAO;QAChC;MAAU;MACV;MACA;MACA,SAAU;MACV;MAAUS,mBAAmB,CAACK,CAAC,GAAGP,OAAO;MACzC;MACA,SAAU;MACV;MAAUE,mBAAmB,CAACM,CAAC,GAAGP,gBAAgB;MAClD;MACA,SAAU;MACV;MAAUC,mBAAmB,CAACO,CAAC,GAAG,UAAShB,OAAO,EAAEiB,IAAI,EAAEC,MAAM,EAAE;QAClE,QAAW,IAAG,CAACT,mBAAmB,CAACU,CAAC,CAACnB,OAAO,EAAEiB,IAAI,CAAC,EAAE;UACrD,QAAYG,MAAM,CAACC,cAAc,CAACrB,OAAO,EAAEiB,IAAI,EAAE;YAAEK,UAAU,EAAE,IAAI;YAAEC,GAAG,EAAEL;UAAO,CAAC,CAAC;UACnF;QAAW;QACX;MAAU,CAAC;MACX;MACA,SAAU;MACV;MAAUT,mBAAmB,CAACe,CAAC,GAAG,UAASxB,OAAO,EAAE;QACpD,QAAW,IAAG,OAAOyB,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,WAAW,EAAE;UACnE,QAAYN,MAAM,CAACC,cAAc,CAACrB,OAAO,EAAEyB,MAAM,CAACC,WAAW,EAAE;YAAEC,KAAK,EAAE;UAAS,CAAC,CAAC;UACnF;QAAW;QACX;QAAWP,MAAM,CAACC,cAAc,CAACrB,OAAO,EAAE,YAAY,EAAE;UAAE2B,KAAK,EAAE;QAAK,CAAC,CAAC;QACxE;MAAU,CAAC;MACX;MACA,SAAU;MACV,SAAU;MACV,SAAU;MACV,SAAU;MACV,SAAU;MACV;MAAUlB,mBAAmB,CAACmB,CAAC,GAAG,UAASD,KAAK,EAAEE,IAAI,EAAE;QACxD,QAAW,IAAGA,IAAI,GAAG,CAAC,EAAEF,KAAK,GAAGlB,mBAAmB,CAACkB,KAAK,CAAC;QAC1D;QAAW,IAAGE,IAAI,GAAG,CAAC,EAAE,OAAOF,KAAK;QACpC;QAAW,IAAIE,IAAI,GAAG,CAAC,IAAK,OAAOF,KAAK,KAAK,QAAQ,IAAIA,KAAK,IAAIA,KAAK,CAACG,UAAU,EAAE,OAAOH,KAAK;QAChG;QAAW,IAAII,EAAE,GAAGX,MAAM,CAACY,MAAM,CAAC,IAAI,CAAC;QACvC;QAAWvB,mBAAmB,CAACe,CAAC,CAACO,EAAE,CAAC;QACpC;QAAWX,MAAM,CAACC,cAAc,CAACU,EAAE,EAAE,SAAS,EAAE;UAAET,UAAU,EAAE,IAAI;UAAEK,KAAK,EAAEA;QAAM,CAAC,CAAC;QACnF;QAAW,IAAGE,IAAI,GAAG,CAAC,IAAI,OAAOF,KAAK,IAAI,QAAQ,EAAE,KAAI,IAAIM,GAAG,IAAIN,KAAK,EAAElB,mBAAmB,CAACO,CAAC,CAACe,EAAE,EAAEE,GAAG,EAAE,UAASA,GAAG,EAAE;UAAE,OAAON,KAAK,CAACM,GAAG,CAAC;QAAE,CAAC,CAACC,IAAI,CAAC,IAAI,EAAED,GAAG,CAAC,CAAC;QAC9J;QAAW,OAAOF,EAAE;QACpB;MAAU,CAAC;MACX;MACA,SAAU;MACV;MAAUtB,mBAAmB,CAAC0B,CAAC,GAAG,UAASlC,MAAM,EAAE;QACnD,QAAW,IAAIiB,MAAM,GAAGjB,MAAM,IAAIA,MAAM,CAAC6B,UAAU,GACnD,QAAY,SAASM,UAAUA,CAAA,EAAG;UAAE,OAAOnC,MAAM,CAAC,SAAS,CAAC;QAAE,CAAC,GAC/D,QAAY,SAASoC,gBAAgBA,CAAA,EAAG;UAAE,OAAOpC,MAAM;QAAE,CAAC;QAC1D;QAAWQ,mBAAmB,CAACO,CAAC,CAACE,MAAM,EAAE,GAAG,EAAEA,MAAM,CAAC;QACrD;QAAW,OAAOA,MAAM;QACxB;MAAU,CAAC;MACX;MACA,SAAU;MACV;MAAUT,mBAAmB,CAACU,CAAC,GAAG,UAASmB,MAAM,EAAEC,QAAQ,EAAE;QAAE,OAAOnB,MAAM,CAACoB,SAAS,CAACC,cAAc,CAAC5B,IAAI,CAACyB,MAAM,EAAEC,QAAQ,CAAC;MAAE,CAAC;MAC/H;MACA,SAAU;MACV;MAAU9B,mBAAmB,CAACiC,CAAC,GAAG,EAAE;MACpC;MACA;MACA,SAAU;MACV;MAAU,OAAOjC,mBAAmB,CAACA,mBAAmB,CAACkC,CAAC,GAAG,gBAAgB,CAAC;MAC9E;IAAS;IACT;IACA,SAAU;MAEV,KAAM,6CAA6C;MACnD;AACA;AACA;MACA;MACA;MAAO,SAAAC,CAAS3C,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,ihPAAihP,CAAC;;QAEvhP;MAAM,CAAE;;MAER,KAAM,0CAA0C;MAChD;AACA;AACA;MACA;MACA;MAAO,SAAAC,CAAS7C,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,+yEAA+yE,CAAC;;QAErzE;MAAM,CAAE;;MAER,KAAM,2CAA2C;MACjD;AACA;AACA;MACA;MACA;MAAO,SAAAE,CAAS9C,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,o/3DAAo/3D,CAAC;;QAE1/3D;MAAM,CAAE;;MAER,KAAM,wCAAwC;MAC9C;AACA;AACA;MACA;MACA;MAAO,SAAAG,CAAS/C,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,wgQAAwgQ,CAAC;;QAE9gQ;MAAM,CAAE;;MAER,KAAM,0CAA0C;MAChD;AACA;AACA;MACA;MACA;MAAO,SAAAI,CAAShD,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,uxiBAAuxiB,CAAC;;QAE7xiB;MAAM,CAAE;;MAER,KAAM,sCAAsC;MAC5C;AACA;AACA;MACA;MACA;MAAO,SAAAK,CAASjD,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,yx6BAAyx6B,CAAC;;QAE/x6B;MAAM,CAAE;;MAER,KAAM,wCAAwC;MAC9C;AACA;AACA;MACA;MACA;MAAO,SAAAM,CAASlD,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,0pUAA0pU,CAAC;;QAEhqU;MAAM,CAAE;;MAER,KAAM,gCAAgC;MACtC;AACA;AACA;MACA;MACA;MAAO,SAAAO,CAASnD,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,wgKAAwgK,CAAC;;QAE9gK;MAAM,CAAE;;MAER,KAAM,uCAAuC;MAC7C;AACA;AACA;MACA;MACA;MAAO,SAAAQ,CAASpD,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,0+NAA0+N,CAAC;;QAEh/N;MAAM,CAAE;;MAER,KAAM,0CAA0C;MAChD;AACA;AACA;MACA;MACA;MAAO,SAAAS,CAASrD,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,qlmBAAqlmB,CAAC;;QAE3lmB;MAAM,CAAE;;MAER,KAAM,oCAAoC;MAC1C;AACA;AACA;MACA;MACA;MAAO,SAAAU,CAAStD,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,iqVAAiqV,CAAC;;QAEvqV;MAAM,CAAE;;MAER,KAAM,wCAAwC;MAC9C;AACA;AACA;MACA;MACA;MAAO,SAAAW,CAASvD,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,kifAAkif,CAAC;;QAExif;MAAM,CAAE;;MAER,KAAM,2CAA2C;MACjD;AACA;AACA;MACA;MACA;MAAO,SAAAY,CAASxD,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,8obAA8ob,CAAC;;QAEppb;MAAM,CAAE;;MAER,KAAM,2CAA2C;MACjD;AACA;AACA;MACA;MACA;MAAO,SAAAa,CAASzD,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,sjYAAsjY,CAAC;;QAE5jY;MAAM,CAAE;;MAER,KAAM,uCAAuC;MAC7C;AACA;AACA;MACA;MACA;MAAO,SAAAc,CAAS1D,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,6wSAA6wS,CAAC;;QAEnxS;MAAM,CAAE;;MAER,KAAM,0CAA0C;MAChD;AACA;AACA;MACA;MACA;MAAO,SAAAe,CAAS3D,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,o+pBAAo+pB,CAAC;;QAE1+pB;MAAM,CAAE;;MAER,KAAM,oCAAoC;MAC1C;AACA;AACA;MACA;MACA;MAAO,SAAAgB,CAAS5D,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,u2LAAu2L,CAAC;;QAE72L;MAAM,CAAE;;MAER,KAAM,sCAAsC;MAC5C;AACA;AACA;MACA;MACA;MAAO,SAAAiB,CAAS7D,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,830DAA830D,CAAC;;QAEp40D;MAAM,CAAE;;MAER,KAAM,8CAA8C;MACpD;AACA;AACA;MACA;MACA;MAAO,SAAAkB,CAAS9D,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,qqUAAqqU,CAAC;;QAE3qU;MAAM,CAAE;;MAER,KAAM,kDAAkD;MACxD;AACA;AACA;MACA;MACA;MAAO,SAAAmB,CAAS/D,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,07PAA07P,CAAC;;QAEh8P;MAAM,CAAE;;MAER,KAAM,0CAA0C;MAChD;AACA;AACA;MACA;MACA;MAAO,SAAAoB,CAAShE,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,26/BAA26/B,CAAC;;QAEj7/B;MAAM,CAAE;;MAER,KAAM,yCAAyC;MAC/C;AACA;AACA;MACA;MACA;MAAO,SAAAqB,CAASjE,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,wolBAAwolB,CAAC;;QAE9olB;MAAM,CAAE;;MAER,KAAM,kDAAkD;MACxD;AACA;AACA;MACA;MACA;MAAO,SAAAsB,CAASlE,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,gtiBAAgtiB,CAAC;;QAEttiB;MAAM,CAAE;;MAER,KAAM,wCAAwC;MAC9C;AACA;AACA;MACA;MACA;MAAO,SAAAuB,CAASnE,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,wt3EAAwt3E,CAAC;;QAE9t3E;MAAM,CAAE;;MAER,KAAM,gDAAgD;MACtD;AACA;AACA;MACA;MACA;MAAO,SAAAwB,CAASpE,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,4/UAA4/U,CAAC;;QAElgV;MAAM,CAAE;;MAER,KAAM,4CAA4C;MAClD;AACA;AACA;MACA;MACA;MAAO,SAAAyB,CAASrE,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,60vBAA60vB,CAAC;;QAEn1vB;MAAM,CAAE;;MAER,KAAM,+CAA+C;MACrD;AACA;AACA;MACA;MACA;MAAO,SAAA0B,CAAStE,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,stSAAstS,CAAC;;QAE5tS;MAAM,CAAE;;MAER,KAAM,kDAAkD;MACxD;AACA;AACA;MACA;MACA;MAAO,SAAA2B,CAASvE,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,8tbAA8tb,CAAC;;QAEpub;MAAM,CAAE;;MAER,KAAM,oDAAoD;MAC1D;AACA;AACA;MACA;MACA;MAAO,SAAA4B,CAASxE,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,w9wBAAw9wB,CAAC;;QAE99wB;MAAM,CAAE;;MAER,KAAM,0CAA0C;MAChD;AACA;AACA;MACA;MACA;MAAO,SAAA6B,CAASzE,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,o4sEAAo4sE,CAAC;;QAE14sE;MAAM,CAAE;;MAER,KAAM,kDAAkD;MACxD;AACA;AACA;MACA;MACA;MAAO,SAAA8B,CAAS1E,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,2lgBAA2lgB,CAAC;;QAEjmgB;MAAM,CAAE;;MAER,KAAM,8CAA8C;MACpD;AACA;AACA;MACA;MACA;MAAO,SAAA+B,CAAS3E,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,624CAA624C,CAAC;;QAEn34C;MAAM,CAAE;;MAER,KAAM,6CAA6C;MACnD;AACA;AACA;MACA;MACA;MAAO,SAAAgC,CAAS5E,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,kpgBAAkpgB,CAAC;;QAExpgB;MAAM,CAAE;;MAER,KAAM,mDAAmD;MACzD;AACA;AACA;MACA;MACA;MAAO,SAAAiC,CAAS7E,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,426KAA426K,CAAC;;QAEl36K;MAAM,CAAE;;MAER,KAAM,gCAAgC;MACtC;AACA;AACA;MACA;MACA;MAAO,SAAAkC,CAAS9E,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,qpmBAAqpmB,CAAC;;QAE3pmB;MAAM,CAAE;;MAER,KAAM,kCAAkC;MACxC;AACA;AACA;MACA;MACA;MAAO,SAAAmC,CAAS/E,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,2pJAA2pJ,CAAC;;QAEjqJ;MAAM,CAAE;;MAER,KAAM,mCAAmC;MACzC;AACA;AACA;MACA;MACA;MAAO,SAAAoC,CAAShF,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,8+KAA8+K,CAAC;;QAEp/K;MAAM,CAAE;;MAER,KAAM,mCAAmC;MACzC;AACA;AACA;MACA;MACA;MAAO,SAAAqC,CAASjF,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,6nrBAA6nrB,CAAC;;QAEnorB;MAAM,CAAE;;MAER,KAAM,sCAAsC;MAC5C;AACA;AACA;MACA;MACA;MAAO,SAAAsC,CAASlF,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,mtfAAmtf,CAAC;;QAEztf;MAAM,CAAE;;MAER,KAAM,qCAAqC;MAC3C;AACA;AACA;MACA;MACA;MAAO,SAAAuC,CAASnF,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,0r6EAA0r6E,CAAC;;QAEhs6E;MAAM,CAAE;;MAER,KAAM,6DAA6D;MACnE;AACA;AACA;MACA;MACA;MAAO,SAAAwC,CAASpF,MAAM,EAAEqF,mBAAmB,EAAE7E,mBAAmB,EAAE;QAElE,YAAY;;QACZoC,IAAI,CAAC,21MAA21M,CAAC;;QAEj2M;MAAM,CAAE;;MAER,KAAM,+CAA+C;MACrD;AACA;AACA;MACA;MACA;MAAO,SAAA0C,CAAStF,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,oiOAAoiO,CAAC;;QAE1iO;MAAM,CAAE;;MAER,KAAM,sEAAsE;MAC5E;AACA;AACA;MACA;MACA;MAAO,SAAA2C,CAASvF,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,g5kBAAg5kB,CAAC;;QAEt5kB;MAAM,CAAE;;MAER,KAAM,sCAAsC;MAC5C;AACA;AACA;MACA;MACA;MAAO,SAAA4C,CAASxF,MAAM,EAAEqF,mBAAmB,EAAE7E,mBAAmB,EAAE;QAElE,YAAY;;QACZoC,IAAI,CAAC,o1nCAAo1nC,CAAC;;QAE11nC;MAAM,CAAE;;MAER,KAAM,uBAAuB;MAC7B;AACA;AACA;MACA;MACA;MAAO,SAAA6C,CAASzF,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtDoC,IAAI,CAAC,04DAA04D,CAAC;;QAEh5D;MAAM,CAAE;;MAER,KAAM,gBAAgB;MACtB;AACA;AACA;MACA;MACA;MAAO,SAAA8C,CAAS1F,MAAM,EAAEqF,mBAAmB,EAAE7E,mBAAmB,EAAE;QAElE,YAAY;;QACZoC,IAAI,CAAC,iznBAAiznB,CAAC;;QAEvznB;MAAM,CAAE;;MAER,KAAM,qBAAqB;MAC3B;AACA;AACA;MACA;MACA;MAAO,SAAA+C,CAAS3F,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,6qPAA6qP,CAAC;;QAEnrP;MAAM,CAAE;;MAER,KAAM,uBAAuB;MAC7B;AACA;AACA;MACA;MACA;MAAO,SAAAgD,CAAS5F,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,gv9BAAgv9B,CAAC;;QAEtv9B;MAAM,CAAE;;MAER,KAAM,4BAA4B;MAClC;AACA;AACA;MACA;MACA;MAAO,SAAAiD,CAAS7F,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,0sjBAA0sjB,CAAC;;QAEhtjB;MAAM,CAAE;;MAER,KAAM,oBAAoB;MAC1B;AACA;AACA;MACA;MACA;MAAO,SAAAkD,CAAS9F,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,yuwEAAyuwE,CAAC;;QAE/uwE;MAAM,CAAE;;MAER,KAAM,kBAAkB;MACxB;AACA;AACA;MACA;MACA;MAAO,SAAAmD,CAAS/F,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,0zHAA0zH,CAAC;;QAEh0H;MAAM,CAAE;;MAER,KAAM,6BAA6B;MACnC;AACA;AACA;MACA;MACA;MAAO,SAAAoD,CAAShG,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,ulYAAulY,CAAC;;QAE7lY;MAAM,CAAE;;MAER,KAAM,mBAAmB;MACzB;AACA;AACA;MACA;MACA;MAAO,SAAAqD,CAASjG,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,u7jBAAu7jB,CAAC;;QAE77jB;MAAM,CAAE;;MAER,KAAM,uBAAuB;MAC7B;AACA;AACA;MACA;MACA;MAAO,SAAAsD,CAASlG,MAAM,EAAED,OAAO,EAAES,mBAAmB,EAAE;QAEtD,YAAY;;QACZoC,IAAI,CAAC,u8VAAu8V,CAAC;;QAE78V;MAAM,CAAE;;MAER,KAAM,OAAO;MACb;AACA;AACA;MACA;MACA;MAAO,SAAAuD,CAASnG,MAAM,EAAED,OAAO,EAAE;QAEjC6C,IAAI,CAAC,giBAAgiB,CAAC;;QAEtiB;MAAM;;MAEN;IAAS,CAAC;EAAC;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}