{"ast":null,"code":"/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\n\nimport { Live2DCubismFramework as cubismframework, LogLevel } from '../live2dcubismframework';\nimport { CSM_LOG_LEVEL, CSM_LOG_LEVEL_VERBOSE, CSM_LOG_LEVEL_DEBUG, CSM_LOG_LEVEL_INFO, CSM_LOG_LEVEL_WARNING, CSM_LOG_LEVEL_ERROR } from '../cubismframeworkconfig';\nexport const CubismLogPrint = (level, fmt, args) => {\n  Live2DCubismFramework.CubismDebug.print(level, '[CSM]' + fmt, args);\n};\n_c = CubismLogPrint;\nexport const CubismLogPrintIn = (level, fmt, args) => {\n  CubismLogPrint(level, fmt + '\\n', args);\n};\n_c2 = CubismLogPrintIn;\nexport const CSM_ASSERT = expr => {\n  console.assert(expr);\n};\n_c3 = CSM_ASSERT;\nexport let CubismLogVerbose;\nexport let CubismLogDebug;\nexport let CubismLogInfo;\nexport let CubismLogWarning;\nexport let CubismLogError;\nif (CSM_LOG_LEVEL <= CSM_LOG_LEVEL_VERBOSE) {\n  CubismLogVerbose = function (fmt) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Verbose, '[V]' + fmt, args);\n  };\n  CubismLogDebug = function (fmt) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n  };\n  CubismLogInfo = function (fmt) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n  CubismLogWarning = function (fmt) {\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n  CubismLogError = function (fmt) {\n    for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n      args[_key5 - 1] = arguments[_key5];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_DEBUG) {\n  CubismLogDebug = function (fmt) {\n    for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n      args[_key6 - 1] = arguments[_key6];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\n  };\n  CubismLogInfo = function (fmt) {\n    for (var _len7 = arguments.length, args = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n      args[_key7 - 1] = arguments[_key7];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n  CubismLogWarning = function (fmt) {\n    for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n      args[_key8 - 1] = arguments[_key8];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n  CubismLogError = function (fmt) {\n    for (var _len9 = arguments.length, args = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {\n      args[_key9 - 1] = arguments[_key9];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_INFO) {\n  CubismLogInfo = function (fmt) {\n    for (var _len10 = arguments.length, args = new Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {\n      args[_key10 - 1] = arguments[_key10];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\n  };\n  CubismLogWarning = function (fmt) {\n    for (var _len11 = arguments.length, args = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n      args[_key11 - 1] = arguments[_key11];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n  CubismLogError = function (fmt) {\n    for (var _len12 = arguments.length, args = new Array(_len12 > 1 ? _len12 - 1 : 0), _key12 = 1; _key12 < _len12; _key12++) {\n      args[_key12 - 1] = arguments[_key12];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_WARNING) {\n  CubismLogWarning = function (fmt) {\n    for (var _len13 = arguments.length, args = new Array(_len13 > 1 ? _len13 - 1 : 0), _key13 = 1; _key13 < _len13; _key13++) {\n      args[_key13 - 1] = arguments[_key13];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\n  };\n  CubismLogError = function (fmt) {\n    for (var _len14 = arguments.length, args = new Array(_len14 > 1 ? _len14 - 1 : 0), _key14 = 1; _key14 < _len14; _key14++) {\n      args[_key14 - 1] = arguments[_key14];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_ERROR) {\n  CubismLogError = function (fmt) {\n    for (var _len15 = arguments.length, args = new Array(_len15 > 1 ? _len15 - 1 : 0), _key15 = 1; _key15 < _len15; _key15++) {\n      args[_key15 - 1] = arguments[_key15];\n    }\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\n  };\n}\n\n//------------ LIVE2D NAMESPACE ------------\nexport let Live2DCubismFramework;\n\n//------------ LIVE2D NAMESPACE ------------\n(function (_Live2DCubismFramework) {\n  class CubismDebug {\n    /**\r\n     * ログを出力する。第一引数にログレベルを設定する。\r\n     * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\r\n     *\r\n     * @param logLevel ログレベルの設定\r\n     * @param format 書式付き文字列\r\n     * @param args 可変長引数\r\n     */\n    static print(logLevel, format, args) {\n      // オプションで設定されたログ出力レベルを下回る場合はログに出さない\n      if (logLevel < cubismframework.CubismFramework.getLoggingLevel()) {\n        return;\n      }\n      const logPrint = cubismframework.CubismFramework.coreLogFunction;\n      if (!logPrint) return;\n      const buffer = format.replace(/\\{(\\d+)\\}/g, (m, k) => {\n        return args[k];\n      });\n      logPrint(buffer);\n    }\n\n    /**\r\n     * データから指定した長さだけダンプ出力する。\r\n     * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\r\n     *\r\n     * @param logLevel ログレベルの設定\r\n     * @param data ダンプするデータ\r\n     * @param length ダンプする長さ\r\n     */\n    static dumpBytes(logLevel, data, length) {\n      for (let i = 0; i < length; i++) {\n        if (i % 16 == 0 && i > 0) this.print(logLevel, '\\n');else if (i % 8 == 0 && i > 0) this.print(logLevel, '  ');\n        this.print(logLevel, '{0} ', [data[i] & 0xff]);\n      }\n      this.print(logLevel, '\\n');\n    }\n\n    /**\r\n     * private コンストラクタ\r\n     */\n    constructor() {}\n  }\n  _Live2DCubismFramework.CubismDebug = CubismDebug;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CubismLogPrint\");\n$RefreshReg$(_c2, \"CubismLogPrintIn\");\n$RefreshReg$(_c3, \"CSM_ASSERT\");","map":{"version":3,"names":["Live2DCubismFramework","cubismframework","LogLevel","CSM_LOG_LEVEL","CSM_LOG_LEVEL_VERBOSE","CSM_LOG_LEVEL_DEBUG","CSM_LOG_LEVEL_INFO","CSM_LOG_LEVEL_WARNING","CSM_LOG_LEVEL_ERROR","CubismLogPrint","level","fmt","args","CubismDebug","print","_c","CubismLogPrintIn","_c2","CSM_ASSERT","expr","console","assert","_c3","CubismLogVerbose","CubismLogDebug","CubismLogInfo","CubismLogWarning","CubismLogError","_len","arguments","length","Array","_key","LogLevel_Verbose","_len2","_key2","LogLevel_Debug","_len3","_key3","LogLevel_Info","_len4","_key4","LogLevel_Warning","_len5","_key5","LogLevel_Error","_len6","_key6","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","_len11","_key11","_len12","_key12","_len13","_key13","_len14","_key14","_len15","_key15","_Live2DCubismFramework","logLevel","format","CubismFramework","getLoggingLevel","logPrint","coreLogFunction","buffer","replace","m","k","dumpBytes","data","i","constructor","$RefreshReg$"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/mylive2d/react-live2d/Samples/TypeScript/Demo/Framework/src/utils/cubismdebug.ts"],"sourcesContent":["/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport {\r\n  Live2DCubismFramework as cubismframework,\r\n  LogLevel\r\n} from '../live2dcubismframework';\r\nimport {\r\n  CSM_LOG_LEVEL,\r\n  CSM_LOG_LEVEL_VERBOSE,\r\n  CSM_LOG_LEVEL_DEBUG,\r\n  CSM_LOG_LEVEL_INFO,\r\n  CSM_LOG_LEVEL_WARNING,\r\n  CSM_LOG_LEVEL_ERROR\r\n} from '../cubismframeworkconfig';\r\n\r\nexport const CubismLogPrint = (level: LogLevel, fmt: string, args: any[]) => {\r\n  Live2DCubismFramework.CubismDebug.print(level, '[CSM]' + fmt, args);\r\n};\r\n\r\nexport const CubismLogPrintIn = (level: LogLevel, fmt: string, args: any[]) => {\r\n  CubismLogPrint(level, fmt + '\\n', args);\r\n};\r\n\r\nexport const CSM_ASSERT = (expr: any) => {\r\n  console.assert(expr);\r\n};\r\n\r\nexport let CubismLogVerbose: (fmt: string, ...args: any[]) => void;\r\nexport let CubismLogDebug: (fmt: string, ...args: any[]) => void;\r\nexport let CubismLogInfo: (fmt: string, ...args: any[]) => void;\r\nexport let CubismLogWarning: (fmt: string, ...args: any[]) => void;\r\nexport let CubismLogError: (fmt: string, ...args: any[]) => void;\r\n\r\nif (CSM_LOG_LEVEL <= CSM_LOG_LEVEL_VERBOSE) {\r\n  CubismLogVerbose = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Verbose, '[V]' + fmt, args);\r\n  };\r\n\r\n  CubismLogDebug = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\r\n  };\r\n\r\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\r\n  };\r\n\r\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\r\n  };\r\n\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_DEBUG) {\r\n  CubismLogDebug = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\r\n  };\r\n\r\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\r\n  };\r\n\r\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\r\n  };\r\n\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_INFO) {\r\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\r\n  };\r\n\r\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\r\n  };\r\n\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_WARNING) {\r\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\r\n  };\r\n\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_ERROR) {\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n}\r\n\r\n//------------ LIVE2D NAMESPACE ------------\r\nexport namespace Live2DCubismFramework {\r\n  /**\r\n   * デバッグ用のユーティリティクラス。\r\n   * ログの出力、バイトのダンプなど\r\n   */\r\n  export class CubismDebug {\r\n    /**\r\n     * ログを出力する。第一引数にログレベルを設定する。\r\n     * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\r\n     *\r\n     * @param logLevel ログレベルの設定\r\n     * @param format 書式付き文字列\r\n     * @param args 可変長引数\r\n     */\r\n    public static print(\r\n      logLevel: LogLevel,\r\n      format: string,\r\n      args?: any[]\r\n    ): void {\r\n      // オプションで設定されたログ出力レベルを下回る場合はログに出さない\r\n      if (logLevel < cubismframework.CubismFramework.getLoggingLevel()) {\r\n        return;\r\n      }\r\n\r\n      const logPrint: Live2DCubismCore.csmLogFunction =\r\n        cubismframework.CubismFramework.coreLogFunction;\r\n\r\n      if (!logPrint) return;\r\n\r\n      const buffer: string = format.replace(/\\{(\\d+)\\}/g, (m, k) => {\r\n        return args[k];\r\n      });\r\n      logPrint(buffer);\r\n    }\r\n\r\n    /**\r\n     * データから指定した長さだけダンプ出力する。\r\n     * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\r\n     *\r\n     * @param logLevel ログレベルの設定\r\n     * @param data ダンプするデータ\r\n     * @param length ダンプする長さ\r\n     */\r\n    public static dumpBytes(\r\n      logLevel: LogLevel,\r\n      data: Uint8Array,\r\n      length: number\r\n    ): void {\r\n      for (let i = 0; i < length; i++) {\r\n        if (i % 16 == 0 && i > 0) this.print(logLevel, '\\n');\r\n        else if (i % 8 == 0 && i > 0) this.print(logLevel, '  ');\r\n        this.print(logLevel, '{0} ', [data[i] & 0xff]);\r\n      }\r\n\r\n      this.print(logLevel, '\\n');\r\n    }\r\n\r\n    /**\r\n     * private コンストラクタ\r\n     */\r\n    private constructor() {}\r\n  }\r\n}\r\n\r\n//------------ LIVE2D NAMESPACE ------------\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}