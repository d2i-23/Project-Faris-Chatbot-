{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismFramework } from '../live2dcubismframework';\nimport { CubismJson } from '../utils/cubismjson';\nconst Meta = 'Meta';\nconst UserDataCount = 'UserDataCount';\nconst TotalUserDataSize = 'TotalUserDataSize';\nconst UserData = 'UserData';\nconst Target = 'Target';\nconst Id = 'Id';\nconst Value = 'Value';\nexport class CubismModelUserDataJson {\n  /**\n   * コンストラクタ\n   * @param buffer    userdata3.jsonが読み込まれているバッファ\n   * @param size      バッファのサイズ\n   */\n  constructor(buffer, size) {\n    this._json = void 0;\n    this._json = CubismJson.create(buffer, size);\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  release() {\n    CubismJson.delete(this._json);\n  }\n\n  /**\n   * ユーザーデータ個数の取得\n   * @return ユーザーデータの個数\n   */\n  getUserDataCount() {\n    return this._json.getRoot().getValueByString(Meta).getValueByString(UserDataCount).toInt();\n  }\n\n  /**\n   * ユーザーデータ総文字列数の取得\n   *\n   * @return ユーザーデータ総文字列数\n   */\n  getTotalUserDataSize() {\n    return this._json.getRoot().getValueByString(Meta).getValueByString(TotalUserDataSize).toInt();\n  }\n\n  /**\n   * ユーザーデータのタイプの取得\n   *\n   * @return ユーザーデータのタイプ\n   */\n  getUserDataTargetType(i) {\n    return this._json.getRoot().getValueByString(UserData).getValueByIndex(i).getValueByString(Target).getRawString();\n  }\n\n  /**\n   * ユーザーデータのターゲットIDの取得\n   *\n   * @param i インデックス\n   * @return ユーザーデータターゲットID\n   */\n  getUserDataId(i) {\n    return CubismFramework.getIdManager().getId(this._json.getRoot().getValueByString(UserData).getValueByIndex(i).getValueByString(Id).getRawString());\n  }\n\n  /**\n   * ユーザーデータの文字列の取得\n   *\n   * @param i インデックス\n   * @return ユーザーデータ\n   */\n  getUserDataValue(i) {\n    return this._json.getRoot().getValueByString(UserData).getValueByIndex(i).getValueByString(Value).getRawString();\n  }\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismmodeluserdatajson';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport let Live2DCubismFramework;\n(function (_Live2DCubismFramework) {\n  const CubismModelUserDataJson = _Live2DCubismFramework.CubismModelUserDataJson = $.CubismModelUserDataJson;\n})(Live2DCubismFramework || (Live2DCubismFramework = {}));","map":{"version":3,"names":["CubismFramework","CubismJson","Meta","UserDataCount","TotalUserDataSize","UserData","Target","Id","Value","CubismModelUserDataJson","constructor","buffer","size","_json","create","release","delete","getUserDataCount","getRoot","getValueByString","toInt","getTotalUserDataSize","getUserDataTargetType","i","getValueByIndex","getRawString","getUserDataId","getIdManager","getId","getUserDataValue","$","Live2DCubismFramework","_Live2DCubismFramework"],"sources":["D:/Personal/PythonStuff/RR/RRWebsiteRenewed/my-app/src/Framework/src/model/cubismmodeluserdatajson.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { CubismIdHandle } from '../id/cubismid';\nimport { CubismFramework } from '../live2dcubismframework';\nimport { CubismJson } from '../utils/cubismjson';\n\nconst Meta = 'Meta';\nconst UserDataCount = 'UserDataCount';\nconst TotalUserDataSize = 'TotalUserDataSize';\nconst UserData = 'UserData';\nconst Target = 'Target';\nconst Id = 'Id';\nconst Value = 'Value';\n\nexport class CubismModelUserDataJson {\n  /**\n   * コンストラクタ\n   * @param buffer    userdata3.jsonが読み込まれているバッファ\n   * @param size      バッファのサイズ\n   */\n  public constructor(buffer: ArrayBuffer, size: number) {\n    this._json = CubismJson.create(buffer, size);\n  }\n\n  /**\n   * デストラクタ相当の処理\n   */\n  public release(): void {\n    CubismJson.delete(this._json);\n  }\n\n  /**\n   * ユーザーデータ個数の取得\n   * @return ユーザーデータの個数\n   */\n  public getUserDataCount(): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Meta)\n      .getValueByString(UserDataCount)\n      .toInt();\n  }\n\n  /**\n   * ユーザーデータ総文字列数の取得\n   *\n   * @return ユーザーデータ総文字列数\n   */\n  public getTotalUserDataSize(): number {\n    return this._json\n      .getRoot()\n      .getValueByString(Meta)\n      .getValueByString(TotalUserDataSize)\n      .toInt();\n  }\n\n  /**\n   * ユーザーデータのタイプの取得\n   *\n   * @return ユーザーデータのタイプ\n   */\n  public getUserDataTargetType(i: number): string {\n    return this._json\n      .getRoot()\n      .getValueByString(UserData)\n      .getValueByIndex(i)\n      .getValueByString(Target)\n      .getRawString();\n  }\n\n  /**\n   * ユーザーデータのターゲットIDの取得\n   *\n   * @param i インデックス\n   * @return ユーザーデータターゲットID\n   */\n  public getUserDataId(i: number): CubismIdHandle {\n    return CubismFramework.getIdManager().getId(\n      this._json\n        .getRoot()\n        .getValueByString(UserData)\n        .getValueByIndex(i)\n        .getValueByString(Id)\n        .getRawString()\n    );\n  }\n\n  /**\n   * ユーザーデータの文字列の取得\n   *\n   * @param i インデックス\n   * @return ユーザーデータ\n   */\n  public getUserDataValue(i: number): string {\n    return this._json\n      .getRoot()\n      .getValueByString(UserData)\n      .getValueByIndex(i)\n      .getValueByString(Value)\n      .getRawString();\n  }\n\n  private _json: CubismJson;\n}\n\n// Namespace definition for compatibility.\nimport * as $ from './cubismmodeluserdatajson';\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Live2DCubismFramework {\n  export const CubismModelUserDataJson = $.CubismModelUserDataJson;\n  export type CubismModelUserDataJson = $.CubismModelUserDataJson;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,MAAMC,IAAI,GAAG,MAAM;AACnB,MAAMC,aAAa,GAAG,eAAe;AACrC,MAAMC,iBAAiB,GAAG,mBAAmB;AAC7C,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,MAAM,GAAG,QAAQ;AACvB,MAAMC,EAAE,GAAG,IAAI;AACf,MAAMC,KAAK,GAAG,OAAO;AAErB,OAAO,MAAMC,uBAAuB,CAAC;EACnC;AACF;AACA;AACA;AACA;EACSC,WAAWA,CAACC,MAAmB,EAAEC,IAAY,EAAE;IAAA,KAkF9CC,KAAK;IAjFX,IAAI,CAACA,KAAK,GAAGZ,UAAU,CAACa,MAAM,CAACH,MAAM,EAAEC,IAAI,CAAC;EAC9C;;EAEA;AACF;AACA;EACSG,OAAOA,CAAA,EAAS;IACrBd,UAAU,CAACe,MAAM,CAAC,IAAI,CAACH,KAAK,CAAC;EAC/B;;EAEA;AACF;AACA;AACA;EACSI,gBAAgBA,CAAA,EAAW;IAChC,OAAO,IAAI,CAACJ,KAAK,CACdK,OAAO,CAAC,CAAC,CACTC,gBAAgB,CAACjB,IAAI,CAAC,CACtBiB,gBAAgB,CAAChB,aAAa,CAAC,CAC/BiB,KAAK,CAAC,CAAC;EACZ;;EAEA;AACF;AACA;AACA;AACA;EACSC,oBAAoBA,CAAA,EAAW;IACpC,OAAO,IAAI,CAACR,KAAK,CACdK,OAAO,CAAC,CAAC,CACTC,gBAAgB,CAACjB,IAAI,CAAC,CACtBiB,gBAAgB,CAACf,iBAAiB,CAAC,CACnCgB,KAAK,CAAC,CAAC;EACZ;;EAEA;AACF;AACA;AACA;AACA;EACSE,qBAAqBA,CAACC,CAAS,EAAU;IAC9C,OAAO,IAAI,CAACV,KAAK,CACdK,OAAO,CAAC,CAAC,CACTC,gBAAgB,CAACd,QAAQ,CAAC,CAC1BmB,eAAe,CAACD,CAAC,CAAC,CAClBJ,gBAAgB,CAACb,MAAM,CAAC,CACxBmB,YAAY,CAAC,CAAC;EACnB;;EAEA;AACF;AACA;AACA;AACA;AACA;EACSC,aAAaA,CAACH,CAAS,EAAkB;IAC9C,OAAOvB,eAAe,CAAC2B,YAAY,CAAC,CAAC,CAACC,KAAK,CACzC,IAAI,CAACf,KAAK,CACPK,OAAO,CAAC,CAAC,CACTC,gBAAgB,CAACd,QAAQ,CAAC,CAC1BmB,eAAe,CAACD,CAAC,CAAC,CAClBJ,gBAAgB,CAACZ,EAAE,CAAC,CACpBkB,YAAY,CAAC,CAClB,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACSI,gBAAgBA,CAACN,CAAS,EAAU;IACzC,OAAO,IAAI,CAACV,KAAK,CACdK,OAAO,CAAC,CAAC,CACTC,gBAAgB,CAACd,QAAQ,CAAC,CAC1BmB,eAAe,CAACD,CAAC,CAAC,CAClBJ,gBAAgB,CAACX,KAAK,CAAC,CACvBiB,YAAY,CAAC,CAAC;EACnB;AAGF;;AAEA;AACA,OAAO,KAAKK,CAAC,MAAM,2BAA2B;AAC9C;AACA,WAAAC,qBAAA;AAGC,WAAAC,sBAAA;EAFQ,MAAMvB,uBAAuB,GAAAuB,sBAAA,CAAAvB,uBAAA,GAAGqB,CAAC,CAACrB,uBAAuB;AAAC,GADlDsB,qBAAqB,KAArBA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}