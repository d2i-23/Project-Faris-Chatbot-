{"ast":null,"code":"/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { gl, canvas } from './lappdelegate';\n\n/**\n * スプライトを実装するクラス\n *\n * テクスチャＩＤ、Rectの管理\n */\nexport class LAppSprite {\n  /**\n   * コンストラクタ\n   * @param x            x座標\n   * @param y            y座標\n   * @param width        横幅\n   * @param height       高さ\n   * @param textureId    テクスチャ\n   */\n  constructor(x, y, width, height, textureId) {\n    this._texture = void 0;\n    // テクスチャ\n    this._vertexBuffer = void 0;\n    // 頂点バッファ\n    this._uvBuffer = void 0;\n    // uv頂点バッファ\n    this._indexBuffer = void 0;\n    // 頂点インデックスバッファ\n    this._rect = void 0;\n    // 矩形\n    this._positionLocation = void 0;\n    this._uvLocation = void 0;\n    this._textureLocation = void 0;\n    this._positionArray = void 0;\n    this._uvArray = void 0;\n    this._indexArray = void 0;\n    this._firstDraw = void 0;\n    this._rect = new Rect();\n    this._rect.left = x - width * 0.5;\n    this._rect.right = x + width * 0.5;\n    this._rect.up = y + height * 0.5;\n    this._rect.down = y - height * 0.5;\n    this._texture = textureId;\n    this._vertexBuffer = null;\n    this._uvBuffer = null;\n    this._indexBuffer = null;\n    this._positionLocation = null;\n    this._uvLocation = null;\n    this._textureLocation = null;\n    this._positionArray = null;\n    this._uvArray = null;\n    this._indexArray = null;\n    this._firstDraw = true;\n  }\n\n  /**\n   * 解放する。\n   */\n  release() {\n    this._rect = null;\n    gl.deleteTexture(this._texture);\n    this._texture = null;\n    gl.deleteBuffer(this._uvBuffer);\n    this._uvBuffer = null;\n    gl.deleteBuffer(this._vertexBuffer);\n    this._vertexBuffer = null;\n    gl.deleteBuffer(this._indexBuffer);\n    this._indexBuffer = null;\n  }\n\n  /**\n   * テクスチャを返す\n   */\n  getTexture() {\n    return this._texture;\n  }\n\n  /**\n   * 描画する。\n   * @param programId シェーダープログラム\n   * @param canvas 描画するキャンパス情報\n   */\n  render(programId) {\n    if (this._texture == null) {\n      // ロードが完了していない\n      return;\n    }\n\n    // 初回描画時\n    if (this._firstDraw) {\n      // 何番目のattribute変数か取得\n      this._positionLocation = gl.getAttribLocation(programId, 'position');\n      gl.enableVertexAttribArray(this._positionLocation);\n      this._uvLocation = gl.getAttribLocation(programId, 'uv');\n      gl.enableVertexAttribArray(this._uvLocation);\n\n      // 何番目のuniform変数か取得\n      this._textureLocation = gl.getUniformLocation(programId, 'texture');\n\n      // uniform属性の登録\n      gl.uniform1i(this._textureLocation, 0);\n\n      // uvバッファ、座標初期化\n      {\n        this._uvArray = new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0]);\n\n        // uvバッファを作成\n        this._uvBuffer = gl.createBuffer();\n      }\n\n      // 頂点バッファ、座標初期化\n      {\n        const maxWidth = canvas.width;\n        const maxHeight = canvas.height;\n\n        // 頂点データ\n        this._positionArray = new Float32Array([(this._rect.right - maxWidth * 0.5) / (maxWidth * 0.5), (this._rect.up - maxHeight * 0.5) / (maxHeight * 0.5), (this._rect.left - maxWidth * 0.5) / (maxWidth * 0.5), (this._rect.up - maxHeight * 0.5) / (maxHeight * 0.5), (this._rect.left - maxWidth * 0.5) / (maxWidth * 0.5), (this._rect.down - maxHeight * 0.5) / (maxHeight * 0.5), (this._rect.right - maxWidth * 0.5) / (maxWidth * 0.5), (this._rect.down - maxHeight * 0.5) / (maxHeight * 0.5)]);\n\n        // 頂点バッファを作成\n        this._vertexBuffer = gl.createBuffer();\n      }\n\n      // 頂点インデックスバッファ、初期化\n      {\n        // インデックスデータ\n        this._indexArray = new Uint16Array([0, 1, 2, 3, 2, 0]);\n\n        // インデックスバッファを作成\n        this._indexBuffer = gl.createBuffer();\n      }\n      this._firstDraw = false;\n    }\n\n    // UV座標登録\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._uvBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._uvArray, gl.STATIC_DRAW);\n\n    // attribute属性を登録\n    gl.vertexAttribPointer(this._uvLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // 頂点座標を登録\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._positionArray, gl.STATIC_DRAW);\n\n    // attribute属性を登録\n    gl.vertexAttribPointer(this._positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // 頂点インデックスを作成\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this._indexArray, gl.DYNAMIC_DRAW);\n\n    // モデルの描画\n    gl.bindTexture(gl.TEXTURE_2D, this._texture);\n    gl.drawElements(gl.TRIANGLES, this._indexArray.length, gl.UNSIGNED_SHORT, 0);\n  }\n\n  /**\n   * 当たり判定\n   * @param pointX x座標\n   * @param pointY y座標\n   */\n  isHit(pointX, pointY) {\n    // 画面サイズを取得する。\n    const {\n      height\n    } = canvas;\n\n    // Y座標は変換する必要あり\n    const y = height - pointY;\n    return pointX >= this._rect.left && pointX <= this._rect.right && y <= this._rect.up && y >= this._rect.down;\n  }\n}\nexport class Rect {\n  constructor() {\n    this.left = void 0;\n    // 左辺\n    this.right = void 0;\n    // 右辺\n    this.up = void 0;\n    // 上辺\n    this.down = void 0;\n  } // 下辺\n}","map":{"version":3,"names":["gl","canvas","LAppSprite","constructor","x","y","width","height","textureId","_texture","_vertexBuffer","_uvBuffer","_indexBuffer","_rect","_positionLocation","_uvLocation","_textureLocation","_positionArray","_uvArray","_indexArray","_firstDraw","Rect","left","right","up","down","release","deleteTexture","deleteBuffer","getTexture","render","programId","getAttribLocation","enableVertexAttribArray","getUniformLocation","uniform1i","Float32Array","createBuffer","maxWidth","maxHeight","Uint16Array","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","vertexAttribPointer","FLOAT","ELEMENT_ARRAY_BUFFER","DYNAMIC_DRAW","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","length","UNSIGNED_SHORT","isHit","pointX","pointY"],"sources":["C:/Users/cleyc/OneDrive/Documents/RR/RRWebsiteRenewed/my-app/src/src/lappsprite.ts"],"sourcesContent":["/**\n * Copyright(c) Live2D Inc. All rights reserved.\n *\n * Use of this source code is governed by the Live2D Open Software license\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\n */\n\nimport { gl, canvas } from './lappdelegate';\n\n/**\n * スプライトを実装するクラス\n *\n * テクスチャＩＤ、Rectの管理\n */\nexport class LAppSprite {\n  /**\n   * コンストラクタ\n   * @param x            x座標\n   * @param y            y座標\n   * @param width        横幅\n   * @param height       高さ\n   * @param textureId    テクスチャ\n   */\n  constructor(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    textureId: WebGLTexture\n  ) {\n    this._rect = new Rect();\n    this._rect.left = x - width * 0.5;\n    this._rect.right = x + width * 0.5;\n    this._rect.up = y + height * 0.5;\n    this._rect.down = y - height * 0.5;\n    this._texture = textureId;\n    this._vertexBuffer = null;\n    this._uvBuffer = null;\n    this._indexBuffer = null;\n\n    this._positionLocation = null;\n    this._uvLocation = null;\n    this._textureLocation = null;\n\n    this._positionArray = null;\n    this._uvArray = null;\n    this._indexArray = null;\n\n    this._firstDraw = true;\n  }\n\n  /**\n   * 解放する。\n   */\n  public release(): void {\n    this._rect = null;\n\n    gl.deleteTexture(this._texture);\n    this._texture = null;\n\n    gl.deleteBuffer(this._uvBuffer);\n    this._uvBuffer = null;\n\n    gl.deleteBuffer(this._vertexBuffer);\n    this._vertexBuffer = null;\n\n    gl.deleteBuffer(this._indexBuffer);\n    this._indexBuffer = null;\n  }\n\n  /**\n   * テクスチャを返す\n   */\n  public getTexture(): WebGLTexture {\n    return this._texture;\n  }\n\n  /**\n   * 描画する。\n   * @param programId シェーダープログラム\n   * @param canvas 描画するキャンパス情報\n   */\n  public render(programId: WebGLProgram): void {\n    if (this._texture == null) {\n      // ロードが完了していない\n      return;\n    }\n\n    // 初回描画時\n    if (this._firstDraw) {\n      // 何番目のattribute変数か取得\n      this._positionLocation = gl.getAttribLocation(programId, 'position');\n      gl.enableVertexAttribArray(this._positionLocation);\n\n      this._uvLocation = gl.getAttribLocation(programId, 'uv');\n      gl.enableVertexAttribArray(this._uvLocation);\n\n      // 何番目のuniform変数か取得\n      this._textureLocation = gl.getUniformLocation(programId, 'texture');\n\n      // uniform属性の登録\n      gl.uniform1i(this._textureLocation, 0);\n\n      // uvバッファ、座標初期化\n      {\n        this._uvArray = new Float32Array([\n          1.0,\n          0.0,\n          0.0,\n          0.0,\n          0.0,\n          1.0,\n          1.0,\n          1.0\n        ]);\n\n        // uvバッファを作成\n        this._uvBuffer = gl.createBuffer();\n      }\n\n      // 頂点バッファ、座標初期化\n      {\n        const maxWidth = canvas.width;\n        const maxHeight = canvas.height;\n\n        // 頂点データ\n        this._positionArray = new Float32Array([\n          (this._rect.right - maxWidth * 0.5) / (maxWidth * 0.5),\n          (this._rect.up - maxHeight * 0.5) / (maxHeight * 0.5),\n          (this._rect.left - maxWidth * 0.5) / (maxWidth * 0.5),\n          (this._rect.up - maxHeight * 0.5) / (maxHeight * 0.5),\n          (this._rect.left - maxWidth * 0.5) / (maxWidth * 0.5),\n          (this._rect.down - maxHeight * 0.5) / (maxHeight * 0.5),\n          (this._rect.right - maxWidth * 0.5) / (maxWidth * 0.5),\n          (this._rect.down - maxHeight * 0.5) / (maxHeight * 0.5)\n        ]);\n\n        // 頂点バッファを作成\n        this._vertexBuffer = gl.createBuffer();\n      }\n\n      // 頂点インデックスバッファ、初期化\n      {\n        // インデックスデータ\n        this._indexArray = new Uint16Array([0, 1, 2, 3, 2, 0]);\n\n        // インデックスバッファを作成\n        this._indexBuffer = gl.createBuffer();\n      }\n\n      this._firstDraw = false;\n    }\n\n    // UV座標登録\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._uvBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._uvArray, gl.STATIC_DRAW);\n\n    // attribute属性を登録\n    gl.vertexAttribPointer(this._uvLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // 頂点座標を登録\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._positionArray, gl.STATIC_DRAW);\n\n    // attribute属性を登録\n    gl.vertexAttribPointer(this._positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // 頂点インデックスを作成\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this._indexArray, gl.DYNAMIC_DRAW);\n\n    // モデルの描画\n    gl.bindTexture(gl.TEXTURE_2D, this._texture);\n    gl.drawElements(\n      gl.TRIANGLES,\n      this._indexArray.length,\n      gl.UNSIGNED_SHORT,\n      0\n    );\n  }\n\n  /**\n   * 当たり判定\n   * @param pointX x座標\n   * @param pointY y座標\n   */\n  public isHit(pointX: number, pointY: number): boolean {\n    // 画面サイズを取得する。\n    const { height } = canvas;\n\n    // Y座標は変換する必要あり\n    const y = height - pointY;\n\n    return (\n      pointX >= this._rect.left &&\n      pointX <= this._rect.right &&\n      y <= this._rect.up &&\n      y >= this._rect.down\n    );\n  }\n\n  _texture: WebGLTexture; // テクスチャ\n  _vertexBuffer: WebGLBuffer; // 頂点バッファ\n  _uvBuffer: WebGLBuffer; // uv頂点バッファ\n  _indexBuffer: WebGLBuffer; // 頂点インデックスバッファ\n  _rect: Rect; // 矩形\n\n  _positionLocation: number;\n  _uvLocation: number;\n  _textureLocation: WebGLUniformLocation;\n\n  _positionArray: Float32Array;\n  _uvArray: Float32Array;\n  _indexArray: Uint16Array;\n\n  _firstDraw: boolean;\n}\n\nexport class Rect {\n  public left: number; // 左辺\n  public right: number; // 右辺\n  public up: number; // 上辺\n  public down: number; // 下辺\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}